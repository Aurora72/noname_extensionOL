window.func=function(lib,game,ui,get,ai,_status){
	game.import('character',function(lib,game,ui,get,ai,_status){
		var yhzr={
			name:'yhzr',
			//connect:true,
			connectBanned:[],
			character:{
				yhzr苍天之拳:["male","li",3,["天翔击","天罚之拳"],["des:一场核战的爆发，让人类几千年的文明毁于一旦。大地千疮百孔、一片荒芜，但幸存的少数人并没有吸取教训，反而继续信奉暴力至上，陷入不断的争斗和互相残杀中。在这个肮脏而腐败的世界里，一个胸前有北斗七星状伤疤的男人，用他的一双拳头，在这个鲜血淋漓的黑暗世界中，秉持着师门传承的 “不灭”精神，四处流浪，惩奸除恶，并不断追寻着自己的爱人和兄长。他经历了无数战斗，打垮了一个又一个的邪恶势力，为饱受战乱折磨的人们带来希望和温暖。他自称名为“拳”，而人们称呼他为—“苍天之拳！”此时，号称“拳霸”的神秘人物妄图统治整个世界，并派出手下四处为虐。面对一处又一处的惨案，拳发誓要铲除“拳霸”的势力。当他一步步揭开神秘人身份的时候，却发现，“拳霸”竟然是自己追寻多年的兄长。 一边是天道正义，一边是血肉亲情。在巨大的痛苦和世人的希望中，拳做出了他的抉择—“下次再见，就是决战之时！”最终，久别重逢的兄弟两人开始了宿命一般的对决，“拳霸”自创的绝招威力惊人，几乎将他置于死地，生死攸关之际，他终于领悟到了拳法的终极奥义——无想转生，并用他的拳头，粉碎了兄长的野心“拳霸”已死，邪恶势力土崩瓦解，幸存的人们开始憧憬新的生活，并开始重建家园。此时，功成身退的拳却感受到来自另一个世界的召唤，直觉告诉他，那里有更加强大的对手，也有更加邪恶的力量……..“有拳的地方，就有光明。”——苍天之拳"]],
				yhzr宫本武藏:["female","min",2,["千叶斩","幻之分身","勾玉魂刀"],["des:黑夜深沉，参天宫殿伫立于阴影之中。传说中拥有巨大力量的天照宝珠就被魔王藏在这里。女剑客静静潜伏在悬崖边上，隐藏在狐面下的冰冷双瞳远远向宫殿凝望。几支巡逻队打着火把如往常一般在宫殿外巡视，她低下身子，轻巧地绕过他们潜入宫殿之中。阴森幽暗的建筑中遍布重重机关，稍一不慎就将死无葬身之地。上下摇摆的抡锤、瞬时淹没的流沙、地底渗出的剧毒、诡异的谜题之门……这些都难不倒这个美艳冷酷的女子。双刀在手，一路过关斩将，暗夜中的潜伏者最终来到了她的终点——某个宫殿深处的密室，悄无声息地划开的机关门后，一片黑暗中的石台上，天照宝珠正在绽放光华。目标就在眼前，她不由加快脚步，但突然觉察到什么又立即停下，双手交错反握刀柄，伏身露出戒备的神情。“真可惜，再往前一步，你就死了。”魔王鼓着掌，从黑暗中露出身形，嘴角扯出一道狰狞的笑。“重重关卡都被你闯过，真是精彩。宫本武藏，你果然不愧传说中的盛名……但你注定拿不到它，因为我会在你拿到之前毁掉它。”“可惜我的目标不是它。”武藏冷冷一笑：“是你！”刀光闪过，天照宝珠仍静静地光华四射，魔王还留存着讶异表情的人头已落地。双刀入鞘，身形一晃，天照宝珠落入腰囊，而武藏，已重新隐入黑暗之中……"]],
				yhzr狼蛛:["female","min",4,["暗夜蛛毒"],["des:针对女王妮娜的政变在一个夜晚爆发。那些曾被赦免的贵族们带着士兵冲进王宫，将所见的人统统杀死。“抓住妮娜！”熊熊火焰在王宫中肆虐，照亮一地冰冷的尸体与丑恶背叛。“杀死她，她已不配为王！” 目标明确的叛军一路攻入寝宫，妮娜只得带着铁卫逃往王城北面。那里背靠人人恐惧的禁忌森林，叛军决不会在那设防。然而双方实力过于悬殊，当他们来到禁忌森林前，铁卫已悉数战死，只剩走投无路的妮娜一人被包围。 贵族们轻蔑地嘲笑她：“你是要投降，还是逃入死地？” 女王的脸因恐惧而苍白，但她仍尊严地抬头走入森林：“以我的灵魂发誓，我会回来的！把你们全部杀死！” 叛军骚动地望向漆黑的森林，想要确定女王是否已死。而妮娜身陷密林深处，被冰冷黏丝束缚双脚。纷麻触感由四肢蔓延，骚动的剧毒螯爪遍布全身，一点点收割生命。曾经高傲的冰雪陷入地狱，死亡已如影随形，妮娜绝望地流出眼泪。 “我不能死……”复仇的怒火涌上心头，被背叛的憎恨和被啃食的痛楚让她从灵魂深处发出嘶哑呐喊：“我绝不能死！” “你要向那些背叛你的人复仇么？”甜腻诱惑的声音突然充斥在她耳边。"]],
				yhzr火神战姬:["female","li",3,["枪林弹雨","穿甲炸弹"],["des:血腥味与硝烟味弥漫在空气中，幸存的士兵静默地收拾残局，天空飘落的细雪渐渐掩盖了焦土，好像刚才的激战从未存在。 兰依旧手握火神重炮，警惕地环视四周，直至收队的命令响起。不能放松，她对自己说，放松就意味着……生命的消逝。 作为队里的特殊战力，兰被称为“火神战姬”。她得到的瞩目与关注是许多战士所梦寐以求。然而，这些不过是毫无用处的东西。如果可以的话，她愿意用现在的一切去交换曾经被她所轻视的生活。自从局部战争开始以来，每天平淡的校园生活变成奢侈。叽叽喳喳的女生凑在一起笑闹的场景，也成为记忆中褪色的画面。每每从噩梦中惊醒，她都想到挚友们最后的样子。那过早凋零的生命时刻提醒着，她为自己的自大付出了怎样的代价 现在，她用枪弹宣泄着心中的怒火和对敌人的恨意。只要生命不止，她将继续战斗下去，为了让其他人安享生活，不再承受这样的痛苦！"]],
				yhzr火元素:["none","min",3,["流炎爆裂","不死之炎"],["des:这是比这个世界还要古老的存在，远在群星还未聚集，天地还处于混沌之时，火元素已然出现。地面上的国度兴盛又衰败，狂妄自信的祭司为了侵吞弱小领国，召唤了元素生物。自以为能左右火元素的祭司为他的鲁莽与不敬付出了惨痛的代价。敏锐的火元素意识到，这是一个绝妙的机会。他的王国将得到扩张，烈焰与灰烬将占据这里。他操纵火焰撕裂大地，沸腾的岩浆给予他的对手以重创。有时他也会因为敌人的弱小，失去战斗兴趣而撤退。这延缓了他的征服之旅，也给这个世界带来一丝残喘的机会。火元素的野心之途依旧继续，世界会变成他的囊中之物么，一切仍是未知数……"]],
				yhzr黑暗死神:["male","min",3,["无尽恐惧","生命凋零"],["des:他矗立在大地上，举目所及皆为焦土。这儿原本是数座繁华的邦城，人声鼎沸。邦城内建造着华美恢宏的神庙。人们奉上丰盛的祭品，摆出虔诚的样子，手按圣卷，诵读誓言，希望得到神明的眷顾，好满足他们贪婪和渴求。虚伪——这是暗黑死神对这事的评价——人类遮遮掩掩的故作姿态，小心翼翼的掩饰他们的欲望，仿佛这样就能把他们所追求的一切正当化。人类真是太有趣了！他看着人类的厮杀想到。只需要小小的挑拨，便可让他们自相残杀，背弃之前许下的承诺。没有什么比让神明头痛更令人愉快了，暗黑死神舔舐着沾染在镰刀上的灵魂，心满意足地笑了起来……"]],
				yhzr布鲁:["male","min",3,["钻能射线","光钻尘雾"],["des:在被《死海古卷》称为圣者之城的遗迹上，贪婪的挖掘正在进行，人类的欲望像火一般燎过大地，留下不可磨灭的、耻辱的伤口。然而，在某个刚刚裂开的伤口上，有人发现了什么，于是整片废墟上的人都如潮水般涌过去——像是黑色的漩涡向着中心聚合。人们都在默念。古卷上的圣者此刻便躺在诸人面前——蓝钻晶能保护着他的身体，急冻冷却获得的长生使他看起来一如往昔。没有人注意到圣者的遗言：我是蓝钻布鲁，来自你们所无法想象的高等文明星球。但这里的高氧环境却非我能承受的。我在地底长眠，等你们找到我，按照我留下的方法使我苏醒。那时，我将把我的星球的高级文明传授给你们。蓝钻布鲁身体致命的弱点被膜拜者忽略了！人们把他置于空气里膜拜，圣者可怜的躯体还未来得及苏醒就已被氧化。混乱中，一名幼童从氧化发黑的蓝钻布鲁尸体中找到了一块闪亮的芯片，那是一块心脏起搏芯片，在背面印刻着一个也曾在《死海古卷》中出现的名字——蓝钻布丁。但在下面，那个究竟是“爱”还是其它什么的字的部分却成为了一个无人可知的谜。"]],
				yhzr布丁:["female","zhi",3,["蓝钻能量","钻能保护"],["des:α-蓝钻1号星是蓝钻布丁的家园。天赋出众的蓝钻布丁年纪轻轻就已成为了这个星球上最杰出的生物工程师之一。而与她在一起实验、生活并相互扶持的则是她的丈夫蓝钻布鲁，一位仁慈、可爱且有着超人智慧的空间能量科学家。 蓝钻布丁花费了大约十年的时间，培养一种新型的生命体，被她称为“夏娃的种子”的超强抗氧化生命基因。这种微小的基因可以在充满氧气的环境里存活，并且有着极强的适应力和模仿力。她和他的丈夫把它们当做自己的孩子来对待。然而，在实验接近最后成功时，一场车祸夺去了蓝钻布丁的生命。悲痛的丈夫蓝钻布鲁为了完成妻子的遗言，变卖了所有的家产，准备把实验继续做下去。 蓝钻布丁曾在茫茫宇宙中为新生的基因觅得了一个绝佳的培养场所——被她取名为地球，意思是大地之母——用于之后发展的计划蓝图也存入了丈夫蓝钻布鲁的心脏起搏芯片上。密码则是：蓝钻布丁，吾爱。他在水中放下基因，然后进入地下冬眠。在蓝钻布丁的计算中，大概一亿年后这种基因将演化为真正的具有个体思想的生命体。"]],
				yhzr战神阿瑞斯:["male","li",3,["神之裁决"],["des:最骁勇悍战的战神阿瑞斯曾伴随鲜花从神后赫拉腹中诞生，他生来便象征着力量与权力，战斗就是他最大的爱好。冥王哈迪斯经常邀请他一同前往人类的战场狩猎，热爱战斗的阿瑞斯欣然应允，于是冥王和战神一同驰骋于战场之上，神灵降临之处只有死亡与恐惧。雅典娜拦住阿瑞斯，向他吐露冥王的阴谋。哈迪斯需要扩充冥国的疆土，而阿瑞斯的战神之力就是他最好的助手，他将冥王看做好友，却不知道哈迪斯的内心只把他作为实现野心的工具与桥梁。阿瑞斯不相信雅典娜，于是女神大声斥责，命他看看人间的惨状。仿佛梦幻泡影一朝破灭，雷电声声，冥王哈迪斯披着黑袍降临战场。而他猝不及防地面临的，正是狂怒的战神阿瑞斯全力一击！"]],
				yhzr八歧大蛇:["male","li",4,["幻影斩"],["des:八岐大蛇由世界的“绝对意志”幻化而成。它秉承万物意志，肩负让世界回归“无”的使命，也就是让世界回复到万年前一切新生、没有人类、没有污染和破坏的最自然的状态。 大蛇的意愿和人类的生存欲念毫无悬念地碰撞在一起。出云神国“三神器”的持有者草、尺、乐率领三千阴阳师，于万川河上同大蛇展开激战。大蛇手执“天丛云剑”，以神技“八歧幻身斩”将阴阳师尽数杀死，三神器的持有者也身中剧毒，奄奄一息。 眼见大蛇胜利在望，草、尺、乐忽然联手，自爆三神器，撕裂空间造出黑洞，以牺牲整个世界为筹码，逼大蛇就范。看着黑洞一点点吞噬世界，以净化和守护世界为目标的大蛇目眦欲裂。他毫不犹豫地跳入黑洞之中，燃烧自己的一切，将黑洞推离这个世界。 灾难过去，天日重现。天丛云剑从空中悠悠落下，掉进万川河的万顷波涛之中。。"]],
				yhzr罪业狂屠:["male","li",4,["血肉钩索","腐肉吸噬"],["des:在杀手这个行当，有个说法，如果你杀人过千，你的罪业就会在现世降临，报应不爽。大多数杀手都在第999单生意后金盆洗手。不过，并不是所有人都信这个邪。 第一楼的杀手狂屠，就是这个不信邪的，他只相信他的屠刀“罪”和钩索“业”。那一年的除夕夜，狂屠很兴奋。他的“业”钩从黑暗中窜出，如毒蛇般缠住兵马大元帅岳鹏，将他拉扯过来，沾满鲜血的“罪”刀干脆利落斩下头颅。“千人斩了！”狂屠浑身颤抖，“我是最强的……” 狂屠喝了很多酒。回到第一楼时，他突然感觉到浓郁如浆的杀气。不知何时，他已被无数黑衣人包围。喝下的酒在腐蚀内脏，狂屠的皮肉开始掉落。他抽出“罪”刀和“业”钩，疯狂地厮杀着…… “第一楼杀手一夜间死绝，皆被刀斩钩戮，惨状骇人。千人斩狂屠化作肉泥，罪刀业钩不知去向。”百晓生如是记载。"]],
				yhzr二郎神杨戬:["male","min",3,["通天法眼","九转神锋"],["des:不知道神仙为什么喜欢用山压人。那么多山，像座座墓碑，下面压着一个个曾经自由的灵魂。也许诸神以为山是永不崩塌的，但杨戬知道没有永远。沧海桑田，不过一瞬。 作为二郎神君、执法天君，杨戬一直戴着冷面具。他手执两刃三尖刀，身负九转玄功和七十三变，化身万千，所向无敌，为天庭和凡人扫荡邪魔妖道。只是，额上的天眼，已经快五百年没睁开过了，或许是不愿看到妹妹杨婵、死党猴子被压在山下的样子，就像当年母亲被压一样。杨戬反抗过，可惜败了。他被毁去肉身，只剩元神，还得继续听从天庭差遣。 哮天犬是杨戬仅剩的伙伴了，这家伙总是仰头对着老天咆哮，也就是对着杨戬的舅舅咆哮。灌江口小庙中，杨戬在等，等着猴子出来，一起把天捅个窟窿。"]],
				yhzr黑桃皇后:["female","min",4,["黑桃暗杀","爆头"],["des:黑桃皇后席璐达是疯狂博士最杰出的作品，柔滑似水的肌肤，精密机械构成的五脏六腑，令人胆怯的火炮力量，微型能量心脏——如此完美！不可思议的是，她还能产生自己的人格！ 经过严酷训练，席璐达加入了“扑克特工组织”。执行任务时，她总是喜欢放一个霹雳焰火，让对手瞬间失明，看着他们像无头苍蝇般乱窜，再用火炮“福音风暴”轰碎他们。 然而，席璐达逐渐成型的性格却让她走向了组织的对立面。她无视组织的命令，肆意玩弄着对手，以至于损害到王国的利益。国王命令博士启动自毁程序，销毁这个失败品。 自毁程序启动了，席璐达的心脏开始碎裂。她用最后一丝力气引爆了埋在塔尔王宫和特工组织地下的炸弹。在轰鸣的倒塌声中，飞起无数绘着小丑脸的气球。"]],
				yhzr波斯王子:["male","min",3,["宿敌之剑","遗忘之沙"],["des:他曾是波斯帝国高贵的王子殿下，被称为太阳之子—他那金色的短发就如他的性格一般阳光璀璨。可当权谋的阴影将他笼罩，面对至亲王叔的背叛与毒杀，再璀璨的金色也会染上复仇的暗光。仅仅是一夜之间，他失去了所有的亲人、他的家园、他爱慕的女子……以及一切，而他唯一收获的，就只有仇恨。但失去权势的王子殿下，又能用怎样的手段杀死那个已经坐上至高王座的仇人呢？于是，当冥府之神阿努比斯现身时，他没有丝毫犹豫地签下了代表死亡的契约。冥神的力量在他的体内充斥，他终于彻底沦为复仇的傀儡。当他手持复仇双刃割下王叔的头颅，泪水终于无可抑制的从他的眼角滑落——财富、权势和贪婪，以及最后的仇恨，让他真正的一无所有。对于生命，他还有什么可以贪恋的呢？当他手握王叔的头颅，迎来冥神阿努比斯时，唯一怀念的，就是太阳光辉笼罩下亲人温柔的回望。"]],
				yhzr森林之女:["female","zhi",3,["丛林祝福","丛林祈祷"],["des:森林之女琳芙斯是月神留在世间的唯一子嗣，她从月神母亲那儿继承了强大的法力，和一颗纯净的心。从小时候起，琳芙斯就跟随在牧树人伍德身边，学习自然法则和凝神冥想。经过无穷岁月，顽皮的琳芙斯已经长成睿智的树妖长者，取代已故的伍德成为新的森林守护者。 在恶魔军团入侵大陆、践踏生命之时，琳芙斯借助她所热爱的森林，灵活地运用自然之力抵御着入侵者。坚韧的藤蔓让对手无法动弹，任何诅咒在她眼里都形同虚设。在她的活跃下，损失惨重的入侵者选择了退却，然而，他们留下的魔火与死亡依然迅速地侵吞着整片森林。为了自己热爱的家园，琳芙斯毅然决绝地献祭自己的生命，治愈整片森林，最终消逝在月下甘露之中，徒留一柄翡翠藤杖，让森林的子民们泣泪缅怀。"]],
				yhzr暗月猎手:["female","min",3,["箭岚","追袭"],["des:艾薇是暗月森林最美丽的精灵。可是，正是这份美丽，引来了大主祭的垂涎。为了摆脱纠缠，艾薇决定成为法定不得婚嫁的皇室神射手。经过激烈的角逐，她得到精灵女王的认可，成功入选，甚至获得了专属于女性精灵射手的荣耀之名——神箭哲琴。 大主祭的美梦成了泡影。恼羞成怒的他决心毁掉这件自己得不到的珍宝。他勾结恶魔军团，在艾薇前往接受封赐的路上设伏偷袭。 艾薇的伙伴们在第一轮箭雨下死伤殆尽。满怀悲愤的艾薇退入密林，用她冰冷的箭矢收割着恶魔的性命。企图逃走的大主祭被远远射来的一只大箭钉在树上，随后被密集的箭岚射成了蜂窝。 当援军赶到时，艾薇已经力竭身亡，藤弓流月静静地躺在她的脚边，她的四周是数千恶魔的尸首。"]],
				yhzr炽天使:["male","jin",3,["炽羽","天使降世"],["forbidai","des:召唤物"]],
				yhzr圣女贞德:["female","zhi",3,["神圣领域","炽天使"],["des:堕落的中世纪，人类的灵魂已成为魔鬼的玩物，就连英格兰国王，也成了魔鬼的傀儡。他的爪牙伸向了法兰西，把那片美丽的土地变成了人间炼狱。 贞德，是这无尽黑夜的最后希望。她凭借大天使赐予的圣光之力斩开迷雾，带领追随者摧城拔寨，成为战场上一面飞扬不倒的旗帜。人们高呼圣女之名，以此获得勇气，治愈伤痛。 贞德的圣光之力让邪恶势力颤抖。魔鬼们操纵了法兰西国王，调遣大军俘虏贞德，并对她施以火刑。烈焰燃起时，忍受着焚身剧痛的贞德默默吟唱最后的圣歌，从天国召来了愤怒的炽天使。群魔被天使的怒火包围，在哀号中化作灰烬。 黎明的曙光照在贞德焚身之地，美丽的少女已经不在，寄托她坚定信仰和甜美梦想的神圣盾杖，也已不知去向。"]],
				yhzr织田信长:["male","min",4,["忍术","幻影之矛"],["des:信长自幼喜好忍术与武技，特例独行，洒脱不羁。年轻时的他好奇心强烈，曾言：“只要别人做的事，我绝对不会跟着做。”他对忍术怀着满腔热情，经常身着黑衫短裤，在密室里熟读兵法，并对书卷中的隐身术与幻术加以研究。好学的织田就仿佛“黑衣里包裹着一团赤红的烈火”。 长大后的信长性情刚烈直率，对付敌人毫不手软，用兵从不循规蹈矩。他曾创造了寥寥数千士兵击溃数万大军的奇迹！那一役后，传言四起，称信长擅奇术，在战斗中能用幻象与隐身术出奇制胜，被喻为“第六魔王信长”。 数十载后，历史的车轮无情地碾碎了信长统一全国的梦想，也带走了他最后一丝生机。他的执念寄于随身兵刃“忍锋”之上，流传千古。。"]],
				yhzr血腥女王:["female","min",3,["血色深吻","鲜血撩拔"],["des:玛丽一世，都铎王朝的第四任君主，一位虔诚的天主教徒。然而，讽刺的是，在她死后，她的灵魂却不得安息——她被复活了，吸血鬼爱德华的鲜血一吻，让她以一种不洁的方式重生。 从此，她由虔诚的信徒变成了邪恶的吸血鬼，与黑暗为伍，以鲜血为食。她的蝙蝠仆从让人绝望，她的深吻让人恐惧，她的撩拨让人堕落，死在她獠牙之下的无数冤魂变成恶灵，萦绕在她身边，对她唯命是从。 不过，这一切都不是她想要的。玛丽一世厌倦了背弃信仰的自己，厌倦了束缚灵魂的黑暗！她重新带上自己的王冠，抛开记录她堕落岁月的血月镰刀，沐浴在阳光之下。在她灰飞烟灭的那一刻，她找回了属于王者的光芒……"]],
				yhzr终结者9号:["male","li",4,["机甲操作"],["des:在战火纷飞的时代里，终结者9号是人们制造出的最强兵器。它战无不胜，攻无不克，阻挡在它面前的一切敌人都被它的重火力格林机枪撕碎。 但最不该发生的事情发生了。终结者9号产生了人类的感情，它拒绝了主人下达的杀害无辜女孩的命令。主人恼羞成怒，将它放过的女孩抓回，逼迫它执行命令。 经过艰难的挣扎，终结者9号将枪口转向了主人。杀死主人的那一刻，它体内的自爆程序启动了。终结者9号的钢铁身躯灰飞烟灭，但它的英魂却附着在格林机枪上，成了后世渴望力量的人们追寻的宝物。"]],
				yhzr霸王项羽:["male","min",9,["剑气","鬼雄"],["des:楚霸王项羽天生神力，使上古神兵“霸王天罡剑”，有万夫莫敌之勇。项羽舞剑杀敌之时，其妻虞姬便在阵后抚琴助威，琴音剑势交融，其势神鬼难敌。项羽巨剑所指，秦阵三军胆寒，不战自溃。 灭秦之后，楚汉相争。项羽兵败，被汉军围困垓下，兵少粮尽，四面楚歌，大势已去。虞姬毅然自刎，以断项羽后顾私情。项羽一声悲吼，戾火攻心，筋脉尽绝。然三魂七魄不肯散去，乃化作鬼雄，抱着虞姬尸身，单臂握剑，往汉军大营杀去。不多时，已冲杀至汉王帐下，霸王天罡剑直指刘邦。汉王谋士张良惊骇欲绝，急中生智，拉刘邦跪下曰：“虞姬已死，霸王亦化鬼雄，在此无益，何不去往阴曹地府？”汉王领三军齐拜曰：“恭送霸王！”鬼雄项羽魂躯一震，与虞姬尸身一道化作白烟，随风而散。。"]],
				yhzr鬼X判官:["male","zhi",3,["代天罚恶","朱砂笔·封"],["des:玄宗年间，鬼门关崩毁，致使鬼物横行阳间，荼毒百姓。书生钟馗因机缘习得仙人法术，能画符捉鬼。钟馗嫉恶如仇，奈何人单力薄，救不了天下人，乃立志考取功名，借朝廷兵马驱除鬼物。 众鬼知钟馗赴京赶考，便设伏暗算。在四大鬼王围攻下，钟馗虽然逃出，却也被抓破颜面，变得狰狞丑陋。金銮殿上，玄宗皇帝见钟馗貌丑，甚为不喜，一言斩断他的仕途。可怜钟馗仰天狂笑，以头碰柱，死于殿前。 钟馗魂归地府，凭高深道法得阎罗重用，赐地府至宝“朱砂判官笔”，扫荡群邪，判生死，断阴阳，历经三年，人鬼两界终得安宁。然而，钟馗却因功高震主，遭阎罗猜忌暗算，二魂七魄被打入九幽，不得超生。唯第三魂藏于朱砂判官笔中，逃出生天，流落在阴阳两界的夹缝之中。"]],
				yhzr判官钟馗:["male","li",4,["阴阳游走","星阳变"],["des:玄宗年间，鬼门关崩毁，致使鬼物横行阳间，荼毒百姓。书生钟馗因机缘习得仙人法术，能画符捉鬼。钟馗嫉恶如仇，奈何人单力薄，救不了天下人，乃立志考取功名，借朝廷兵马驱除鬼物。 众鬼知钟馗赴京赶考，便设伏暗算。在四大鬼王围攻下，钟馗虽然逃出，却也被抓破颜面，变得狰狞丑陋。金銮殿上，玄宗皇帝见钟馗貌丑，甚为不喜，一言斩断他的仕途。可怜钟馗仰天狂笑，以头碰柱，死于殿前。 钟馗魂归地府，凭高深道法得阎罗重用，赐地府至宝“朱砂判官笔”，扫荡群邪，判生死，断阴阳，历经三年，人鬼两界终得安宁。然而，钟馗却因功高震主，遭阎罗猜忌暗算，二魂七魄被打入九幽，不得超生。唯第三魂藏于朱砂判官笔中，逃出生天，流落在阴阳两界的夹缝之中。"]],
				yhzr蚩尤:["male","li",4,["魔神之盾"],["des:上古洪荒，各族相互厮杀。在各路强者中，蚩尤和他所率领的九黎部落是最令人畏惧的存在。他们吞噬洪荒巨兽，化为己用。蚩尤的力量正是来源于他所吞噬的四只奇兽。“独脚夔”使他拥有裂地之能，能震杀方圆百里之内的敌军；“白泽”令他能在刹那间冲进敌阵，击杀敌军主帅；“呲铁”的肉身坚硬如铁，使他几乎有不死之身；“诸犍”的吼声能震破苍穹，让所有的九黎族人变得更加蛮横狂暴。 在争霸战中，人族和仙族愈发落于下风，仙帝乃用权谋，暗通蚩尤族人。在蚩尤出征之时，他的兄弟借故留下蚩尤的族长信物——九黎石钺，再通知轩辕黄帝伏兵围攻。 这场大战打得天崩地裂，人界的大陆被蚩尤撕裂，无数山岚被撞碎。失去神兵的蚩尤仍大展神威，尽诛九黎叛逆，更屠尽黄帝阵中的仙人。最后仙帝亲自下界参战，终于以斩下蚩尤首级，平定九州。"]],
				yhzr温蒂:["female","li",3,["堕天一击","萝莉逆袭"],["des:对亚萨这个落后的王国来说，在他们遭到穆特尔帝国侵略的时候，炼金武器就是他们制胜的唯一希望。那个能够驾驭炼金武器的少女，名为温蒂。 温蒂只是个酷爱蛋糕的普通女孩，可是，身为将军的女儿，身为王国内唯一的炼金武器契合者，她放弃了平凡的幸福，手持战锤驰骋战场，直到击退可恶的侵略者。 胜利了，温蒂也终于可以回家了。然而，就在归途中，温蒂发现了大型炼金生命的活动痕迹。她明白了，那是敌人最后的抵抗——奇袭王都！面对被称为巨神兵的炼金生命，温蒂献祭了自己的灵魂，唤醒手中的战锤·拓路雷霆，只身一人抵抗了七天七夜，终于等来父亲的援兵。 燃尽灵魂的温蒂松开双锤，倒在父亲怀中，闭上了眼睛，任由老人的泪水落在脸颊之上。。"]],
				yhzr忘川巫女:["female","zhi",3,["冥河之石","颤栗结界"],["des:传说是这样，如果怀着极大怨恨，不惜一切的，也要将那个人送入冥府。那么，在漆黑如墨的夜里，般若将随风而来，取人性命。 代价，不过是许愿之人离世后的魂魄，归于般若。 至于什么无法转世，灵魂受尽百般煎熬，与眼前必将敌人除之而后快相比，又算得了什么。 深秋的夜晚，浓雾掩住山路。夜枭凄厉的叫声，回荡在山林间。 万籁俱寂的样子，似乎有些不详的感觉。 青磷鬼火幽幽燃起，铜铃声声脆响摄魂。缓缓行来的鬼面带来阴间的呼唤。 鬼面下的巫女露出了玩味的笑容：“呵，你的怨恨，我收下了。"]],
				yhzr潘多拉:["female","zhi",3,["春神礼赞","毁灭舞步"],["des:潘多拉是众神为了惩罚人类而制造出来的最美丽最销魂的傀儡，她携带着灾厄魔盒，以优美的琴声引诱人类，再打开盒子将灾难播撒出去。在她的美貌下，是死神的冷笑。 可是，在目睹无数惨剧后，她的内心却变得忧伤起来。这种忧伤随着灾难的散布一点点积累，终于使她开始抗拒众神的命令。众神愤怒了，他们亲自出手，想杀死这个不再听话的女人。但持有灾难魔盒的潘多拉却具备同诸神一战的实力。双方就这么僵持着，试图拖垮对方。 此时，潘多拉已经发现自己落在了下风——灾难魔盒正逐渐控制自己。她不想成为灾难魔盒的傀儡，散布灾难的女魔头。因此她毫不犹豫地利用众神的攻击结束了自己蔷薇般美丽的生命，并在最后关头将魔盒远远抛开，丢到一个谁也无法找到的地方。"]],
				yhzr蛇发美杜莎:["female","zhi",3,["魅惑之音","死亡凝视"],["des:美杜莎曾是一位美丽的少女，她美丽而高傲，甚至连海神波塞冬，也拜倒在她的石榴裙下。然而，骄傲冲昏了她的头脑，她居然在智慧女神的神庙里口出狂言，认为自己比女神还要美丽。 女神的尊严不容挑衅，毫无疑问，雅典娜被激怒了。她施展法术，把美杜莎的那头秀发变成了无数毒蛇，将她修长白皙的双腿，变成了一条长满鳞片的蛇尾。 “为美貌之争，佳人沦为魔物。女人，真是可怕而可悲。”吟游诗人如是说。“她的两眼闪着骇人的光，任何人看她一眼，都将变成石像。她的箭如同她的心一般冰冷刻毒，无人能够躲避。” 宙斯之子珀尔修斯是个聪明人。他背对美杜莎，用磨光的盾牌作镜子，照见美杜莎所在，用雅典娜赐予的神剑杀死美杜莎。他夺了美杜莎的弓，割下她的蛇发缠绕在弓身之上，证明自己的武勇和智慧。。"]],
				yhzr暗精灵:["female","min",3,["月蚀颂念","魅影"],["des:她的美艳，令所有人着迷；她的冷血，让所有人战栗。 她是隐藏在阴影里的刺客，冷漠是她的外壳，鲜血装点了她的发色。 手中的匕首是她唯一的伙伴，不相信所有人的情谊，不接受任何人所释放的善意。 在黑暗的世界里，流传着她的名字——暗精灵，血影玛丽特。 谁能知道，她也曾经有过单纯的过往——诞生在神所赐福的月之精灵一族，那时候，所有人都称她为圣玛丽特，她是月光之神的女儿，精灵一族的至宝。 直到那一天，冲天的火焰将月光森林焚烧殆尽，族人的呐喊撕破暗夜的天空。这一切，仅仅是因为一次单纯的救助，她付出了她的信任，没想到却为月之精灵一族带来了灭顶之灾。 那个贪婪的人类引来了恶魔般的捕猎者，那些该死的家伙将她族人的鲜血视作珍贵的货物，那些恶毒的行径让她的善良单纯成了一场笑话。 当血色之泪划过她的脸颊，淡金色的长发也被鲜血所浸染。 那一夜，她以自己的生命作为引子，对敌人发出最凶恶的暗夜诅咒。自这一刻起，这个世界就没有了月光之神的女儿，留下的，只有即便死亡，也无法摆脱黑暗的暗精灵——血影玛丽特。"]],
				yhzr疯狂博士:["male","li",4,["腐蚀攻击"],["des:从奥斯大陆最高通缉令上，我们可以了解到那个时代的灾难——科学的堕落。病毒、药剂、生化技术，威胁着所有人的生命。通缉令的榜首，正是精通三项技术的施泰因博士。 在泛大陆联军的高压下，失踪多年的施泰因博士还是被找到了。不到半小时，罗格镇就被武装到牙齿的四个师团重重包围。博士施放G病毒与R病毒后逃之夭夭，联军则以折损两个师团的代价重伤了博士的妻子。顺着血迹，联军追进深山，可出现在他们面前的却是一只穿着研究服的人形野兽。它蜷着身子，流着眼泪，怀里抱着个已经死去的女人。 联军最终全军覆没，尸骨无存，只留下遍地骨肉内脏。施泰因博士和他研制的生化针剂不知去向，成了悬在人们头上、随时可能斩下的一柄铡刀。"]],
				yhzr树精长老:["none","zhi",3,["自然涡流","树苗抛掷"],["des:平安时代，倭国国体动荡、人心不安，魔影纵横、怨灵交错，妖魔鬼怪不再藏身深山，而是屏气敛息，与人类同居于京城。为了消除天、地、人、鬼间的矛盾，阴阳师们登上了历史的舞台。 道摩法师正是当时最富名望的阴阳师，他热衷茶道，更有恻隐之心，经常助百姓斩妖除魔。某日，道摩法师救下一个东方茶商，获得茶商馈赠的乌龙朱砂壶。令人意想不到的是，乌龙朱砂壶竟然住着一个具有强大灵力的乌龙茶精。得到乌龙茶精奉献的千年自然精华，道摩法师的道行一日千里。他能借助乌龙茶精的灵力从壶口喷出强大的术流击伤妖魔，还能化身为一棵神木治愈自己和朋友。 这个宝贝很快引起了“阴阳寮”的觊觎。他们谋划半年，终于集结五百名最精锐的阴阳师对道摩法师发起袭击。愤怒的道摩法师化身为乌龙神木，将“阴阳寮”成员屠戮殆尽。 杀戮过重的道摩法师在这一役后道心尽丧，看破世情，带着乌龙朱砂壶隐居海外，从此绝迹。"]],
				yhzr神农氏:["male","zhi",3,["神农庇护","医者连心"],["des:洪荒之时，魔兽横行，殃及人民。为抵抗众多强大的魔兽，炎帝神农挺身而出，亲尝百草，为人民除病治伤。 一日，神农救治了一只仙鸟。这只仙鸟赋予了神农奇异的力量，使其脱胎换骨，俨然仙人，还赠他悬挂着造化葫芦的神杖，可炼草化丹。 仁慈的神农并没有独占仙缘，他培植仙草，强民体魄。时间一长，人类竟也有了与魔兽一战之力。 众魔兽不甘人类势力的增长，遂组织大军，倾巢来袭。人族势单力薄，几欲灭亡。关键时刻，炎帝神农牺牲自己，借助造化仙葫杖的威力，化身石像，以无上愿力，尽歼来犯魔兽。而神农自己，则失去肉身，魂归天界，离开了自己一直守护的子民。"]],
				yhzr冥王哈迪斯:["male","min",4,["嗜血探戈"],["des:奥林匹斯山上，伟大的至高神正为三个儿子的任命而烦心。哈迪斯、波塞冬和宙斯，皆是神中俊杰，治世上选，这让至高神无法决断。 哈迪斯没有半点担忧。他的战功是他成为人间统治者的资本。然而，至高神的偏宠却让哈迪斯的愿想彻底破灭——宙斯成了人间的无上统治者，而哈迪斯，只能掌管幽冥之地，永远与阳光月色无缘。 失落的哈迪斯变得愈发冷酷。他时常骑着梦魇骨马，手持葬亡镰刀，在冥府的边际凝视着从人间射进黄泉的一丝微光。“那是属于我的！”哈迪斯呐喊道。他用万年光阴谋划，企图扳倒宙斯。 遗憾的是，他的阴谋被智慧女神雅典娜识破了。反被宙斯困住的哈迪斯，靠着葬亡镰刀收割着围攻者的性命。下位神与中位神的鲜血洒满哈迪斯全身，宙斯的子女也尽皆负伤。此时，宙斯终于结束了漫长的仪式，召来“雷霆”劈飞了哈迪斯的镰刀，将他彻底粉碎……"]],
				yhzr玄武:["male","li",4,["冰息龟心"],["des:仁慈的圣兽玄武是北方诸民的守护神。在人民遭受南方蛮族与圣兽白虎的攻击时，玄武曾多次挺身而出，力保北地家园不受侵凌。 玄武的大义并没有换来北方诸民的满足。他们开始对玄武产生不满，因为玄武从不杀死南蛮人为他们报仇。这种不满逐渐扩大，最终变成了仇恨。为了报复玄武，这些愚民在进献给他的供品中放入了极寒冰珠——那是白虎赠予北地愚民的魔物。 玄武并没有产生疑心。它吃下了冰珠，立刻身中剧毒。为了不让冰珠渗出的寒气伤及自己守护的人民，它毫不犹豫地飞上天空，最终摔成无数碎冰。 玄武死后，北方诸民被白虎所统治，终年沉溺于杀戮之中。玄武遗骸中唯一完整的龟甲·冰霜河图，也在战乱中遗落。"]],
				yhzr风暴之灵:["female","zhi",3,["雷霆神盾","风暴雷球"],["des:海妖赛莲曾是船员们的噩梦。这位暴躁的风暴之灵驱使波涛呼啸海上，如死神般令人恐惧。 但，一切在她捡到一个婴儿后改变了。婴儿的哭声激起了赛莲的母性，她将所有的感情都倾注给这个婴儿。然而，幸福并不长久。孩子病了，是一种俗世无法治愈的绝症。赛莲向海神求助，请他施以援手，但傲慢的海神却毫不理会她的请求。 赛莲愤怒了，她的怒火燃遍大海，连海神手下的精锐也在风暴中瑟瑟发抖。海神终于屈服，他交出了神的秘宝，这件秘宝能以一条生命为代价，救回另一条生命。 赛莲使用了秘宝。肆虐海上的风暴之灵消失了，那个婴儿在海边被渔民发现并收养。而赛莲对孩子的牵挂，则化作一颗幻海之心，永沉海底。"]],
				yhzr红炎双刀:["female","li",1,["红炎守护","红莲庇护"],["des:最智慧的以色列王所罗门曾结下契约，以灵魂为代价，获得驱使七十二魔神的权力。而这七十二魔神的首领，就是地狱君王——贝露。 在一生辉煌后，所罗门王的生命即将走到尽头。他承诺，在平定巴比伦后，便将灵魂支付给贝露。但贝露在执行命令时却遭到天使的袭击。贝露明白了，所罗门背叛了契约。 贝露杀回耶路撒冷，向背信者所罗门索命。无论是人类还是天使，阻挡她的，都在地狱火中燃成灰烬。所罗门王束手无策，他只能动用魔神契约的权力，逼贝露自裁！ 在契约之力的威压下，这位地狱君王没有屈服。经过三天三夜的抗争，她终于挣脱契约的束缚，取走所罗门王的灵魂，回归地狱。她的红炎双刃，永远地钉在所罗门王的胸口上。"]],
				yhzr饕餮:["none","min",4,["洪荒之力"],["des:洪荒山河，孕有异兽，名曰饕餮。饕餮承远古神龙血脉，力能拔山扛鼎，行可追星逐日。 饕餮生来贪食，不得食，毋宁死。它吃尽九州可吃之物，使得生灵涂炭，荒原万里。然饕餮之腹，可吞日月，区区九州之食，怎能填满？ 饕餮挚友貔貅为其谋划：“吾闻蓬莱仙山有仙果蟠桃，食之可百年不饥、不渴、不倦，你可往蓬莱求之。”饕餮大喜，奔蓬莱求取蟠桃。怎料，众仙视蟠桃为珍宝，不肯予之。 饥饿难耐的饕餮闻言大怒。它不顾一切冲进蟠桃园，拦路的仙家要么被它的爪牙撕碎，要么被它的毒涎侵蚀。此一战，蓬莱仙境天塌地陷，江河逆流，仙家陨落过半，不得不向仙皇求救，请出玄天九重大阵，毁去饕餮的肉身。饕餮的魂珠逃出蓬莱，不知去向。"]],
				yhzr赵云:["male","min",2,["龙魂","龙胆"],["des:立马长枪一世，英雄铁血一生。 在三国争霸那样纷乱的时代，有一抹亮银色让天下人都无法忘怀。那就是他，白马银枪赵子龙！ 一身银甲耀目，一腔义胆忠肝。身为一名将士，他的侠义令人敬服。有人问他，天下人都愿依附袁绍，为何你能迷途知返。 赵云答：无他，云并不知谁乃明主，但愿追随仁政而已。 在为刘备所折服之后，他便付出了自己全部的赤诚，随之转战南北，终身不渝。 当世有谁人不知，刘备麾下一员强将，身长八尺，玉面丰姿。长坂坡一战，他为寻找少主与主母，于百万曹军之中纵横来去，七进七出，浑身浴血，终于成功救出主公幼子。 一身侠义，不足以赞其丰姿。奈何英雄遗恨，终究未能看自己一生为之征战的国度，踏上天下顶峰"]],
				yhzr妲己:["female","jin",1,["失心妖术","九命妖尾"],["forbidai","des:瘟疫。眼眸所注视的除了死亡，还有，饥饿。女娲将一幅充满着诱惑与光辉的画卷朝前展开，小狐女的眼前掠过王国三千里繁华鼎盛的疆土，在鲜花路面的尽头，王在等她。接受命运的安排，她就可以成为世间最强帝王的王妃.十年一晃，十年倾城。当初的狐女业已成为商纣最挚爱的王妃。人们叫她妲己，对她的美貌顶礼膜拜，在王国纵驰的驿道上，随处可见俗人对她的颂扬。但她自己呢？她在帘幕后书空咄咄的那些年，心里一直念叨的难道不是那个叫伯邑考的聪明男子么？但她毕竟还是错过了什么。武王姬发破城的时候，她有一种摇摇欲坠的破败感，像是自己的无极塌了。长生如梦，一切终究抵不过命运的嘲弄。兵火燃尽的时候，妲己醒来.女娲在等弟子的求情，但这一次她看到了不一样的光——妲己向女娲俯身下拜，然后朝着西岐的方向飞去。她不确定如何才叫爱，她只是忽然明白了，连无极都无法洗去的思念，修行又怎么能够呢……"]],
				yhzr石甲守护者:["female","li",4,["机甲外壳"],["des:古巴比伦，羽蛇神降临在众信徒建造的寺庙中，用石头制造了守护者埃达，作为自己在信徒面前的代言人。埃达忠实地执行神的旨意，从不违逆。直到有一天，一位少女作为贡品送入寺庙，当着埃达的面被投入圣井，凄惨地死去。埃达那颗石头心脏上出现了裂缝。 之后的岁月里，用来祭祀羽蛇神的少女越来越多，她们撕心裂肺的哭喊让埃达的石头心脏上布满裂纹。埃达开始怀疑自己的神明。他面见羽蛇神，试图制止神明索要祭品的行为。不过，这在羽蛇神看来就是赤裸裸的背叛和挑衅。他决定亲自出马处决埃达。 大战中，羽蛇神惊讶地发现，这个守护者居然已经拥有不亚于自己的力量。埃达获胜了，他令羽蛇神发下重誓，再不索要祭品。随后，背叛神明的埃达也遭到了契约的反噬，身体支离破碎，心脏化作粉尘，消散在一阵轻风之中。"]],
				yhzr金乌:["male","min",3,["涅槃真身","业火"],["des:洪荒八年，天命自称弟臣，向他的哥哥，有穷氏的帝王后羿请命。 是年，十日并出，流民失所。一夜夜不停的击缶声，自后羿的宫里传出。缶声不停，天命就不眠。 七月，流火更炽。射日。 疆域。三千里繁华，三千里洪荒。后羿张弓，冰矢裂日，九只金乌堕为烈火。大地的伤口愈合，而天命却突然感到身后剧烈的灼痛。 金乌胁持了天命，逼迫后羿弃弓掷箭。天命依稀记得那时他喊，弟臣之命为轻，君请为社稷处。然而回应他的则是，帝王收弓…… 烈火熏瞎后羿双目的时候，天命流泪了。他的绝痛之泪滴在烈焰上升起水雾，金乌哀嚎，凶日的火焰被天命牺牲自身精血所覆灭。 日灭了，天地各处黑暗。唯有天命的精魂还在发光。后羿不得已，只好用其精魂铸日，封其为世上最后的金乌。 千万年过去，天命金乌只是寂寞地在天空飞翔，日昼下，那如伤害般烙印在大地的阴影，有的只是那个叫后羿的帝王折箭，收弓的影像。"]],
				yhzr神X金乌:["male","min",2,["轮回尖刃","阳炎胄"],["des:洪荒八年，天命自称弟臣，向他的哥哥，有穷氏的帝王后羿请命。 是年，十日并出，流民失所。一夜夜不停的击缶声，自后羿的宫里传出。缶声不停，天命就不眠。 七月，流火更炽。射日。 疆域。三千里繁华，三千里洪荒。后羿张弓，冰矢裂日，九只金乌堕为烈火。大地的伤口愈合，而天命却突然感到身后剧烈的灼痛。 金乌胁持了天命，逼迫后羿弃弓掷箭。天命依稀记得那时他喊，弟臣之命为轻，君请为社稷处。然而回应他的则是，帝王收弓…… 烈火熏瞎后羿双目的时候，天命流泪了。他的绝痛之泪滴在烈焰上升起水雾，金乌哀嚎，凶日的火焰被天命牺牲自身精血所覆灭。 日灭了，天地各处黑暗。唯有天命的精魂还在发光。后羿不得已，只好用其精魂铸日，封其为世上最后的金乌。 千万年过去，天命金乌只是寂寞地在天空飞翔，日昼下，那如伤害般烙印在大地的阴影，有的只是那个叫后羿的帝王折箭，收弓的影像。"]],
				yhzr诸葛亮:["male","zhi",3,["东方破","八卦图"],["des:那是一个群雄逐鹿的年代，英豪辈出，群星璀璨。而即使是在这样的时代，诸葛亮也是一个让人无法忽视的存在。 他究竟是如何拥有那样的才华、眼界，这已经无人可知。诸葛亮的智慧由来就仿佛生而知之。在少年时，他以管仲、乐毅自比，世人只笑他疯癫痴狂，又有谁知道这个少年的目光放在何方？有的时候，高山流水无知己，有的不过是悲哀而已。 但诸葛亮是幸运的，他遇到了三顾茅庐请他出山的明主刘备，做出了天下知名的隆中对。 气候的火烧博望、智取汉中、巧布八阵图、安居平五路……他以事实证明了他拥有自负的资本。 直至最后，明主已故，独留他一人支撑疲敝之国，呕心沥血，终究抵不过生老病亡。 七星灯已灭，名臣身亦亡，独留一股英雄在世间。 天下三分，终非我愿，奈何七星灯魂灭，徒留躯壳在人间……"]],
				yhzr五彩神石:["male","jin",4,["陨石阵法"],["forbidai","des:上古洪荒，天柱崩塌，生灵涂炭。女娲炼石补天，力竭身亡，留下一颗没来得及熔炼的五彩石。这颗五彩石落在天台山之巅，一睡，就是一万八千年。 一万八千年岁月让五彩石生出了灵智。它化作人形，游历四方，寻觅女娲母亲。大妖屠灵见五彩石懵懂可欺，便捏造出“女娲被天庭陷害，拘禁万年”的“事实”。五彩石悲怒交加，杀上九重天，用后土神雷轰开南天门，凭一身混沌先天之力，大破十万天兵结成的兵阵。 就在天兵伤亡惨重之际，大妖屠灵带妖兵攻下凌霄宝殿与瑶池仙境，自立天帝，扬言屠戮三界，只存妖族。 至此，五彩石幡然醒悟。它用最后一丝灵力将大妖屠灵封入瑶池，散去自己的灵智，永镇其上。而它那颗玲珑石心，则坠入人间，永蒙凡尘。"]],
				yhzr关羽:["male","li",3,["春秋刀法","偃月"],["des:他的名字是“关羽”，他身长九尺，髯长二尺，面若重枣，唇若涂脂，丹凤眼、眉卧蚕，相貌堂堂，威风凛凛。 他是东汉末年刘备麾下著名将领，刘备起兵时，他跟随刘备，忠心不二，深受刘备信任。 他曾与刘备，张飞两位仁人志士，为了共同干一番大事业的目标，意气相投，言行相依，选在一个桃花盛开的季节、选在一个桃花绚烂的园林，举酒结义，对天盟誓“有苦同受，有难同当，有福同享”，以共同实现自己人生的美好理想。 他是一种文化，更是一种精神……"]],
				yhzr图坦卡蒙:["male","li",4,["尸雾","梦魇镜面"],["des:在古老的埃及，法老不但是至高无上的统治者，也是一个王国里最强大的祭司，图坦卡蒙更是历代法老中的佼佼者。然而，他的骄傲和辉煌在找到“黄金棺材”时终结了。图坦卡蒙翻开了棺盖，看到一副可怕的画面：一个邪恶的人形生物在毁灭他的王国，屠杀他的子民。他陷入了噩梦之中。 为了获得足够的力量战胜噩梦中的怪物，图坦卡蒙违背祖训，研究邪术，最终将自己变成木乃伊，躺入黄金棺材。百日后，他如愿以偿地获得了梦寐以求的力量，却失去了人格，彻底沦为邪神的奴仆，屠杀着所见的一切生命。如果他还有一丝神智，就会记得噩梦中看到的那个怪物，正是如今的自己。 祭司们成了绝望中的一丝曙光，他们献祭自己的生命，以三万灵魂为代价，封印了图坦卡蒙，还有邪恶的根源——黄金棺材。。"]],
				yhzr貂蝉:["female","zhi",3,["有凤来仪","银铃牵梦"],["des:当她降生人世时，三年间当地桃杏花一开即凋；当她午夜拜月时，月里嫦娥都自愧不如，匆匆隐入云中……她细耳碧环，婀娜多姿，行时风摆杨柳，静时文雅有余，所谓：“貂蝉之美，蔚为大观”。 她是东汉末年司徒王允的义女，长得美貌动人，深有报国之心，知悉王允对于董卓的乱政深感无助，便献出自己来对付乱臣贼子。她以美人计同时获得董卓和吕布二人的眷念，令本以父子相称的二人产生嫌隙，后来更成功挑动吕布与王允合作，最终刺杀董卓。 在一个清一色男人争霸的世界里，她显示出了一个绝色女子的胆量与智慧。她周旋在众人之中，又能进退自如。她游走在财富和权势里，又不深陷其中。但终究，也免不了“红颜薄命”的结果……"]],
				yhzr司马懿:["male","zhi",3,["星落","液态火"],["des:他生于乱世，被称为有“狼顾”之相。 他善于奇策，多次征伐有功，曾两次率大军成功对抗诸葛亮北伐。 他还曾率领大军征伐辽东公孙渊，采用声东击西之计，出其不意包围辽东主城襄平，一举击破并斩杀辽东公孙渊，平定辽东之乱。数十年来辽东问题终于彻底解决。 他能文能武，无论战阵谋略还是领兵打战，都胜人一筹。去世后，依然深得好评，应了那句“少有奇节，聪明多大略，博学治闻，伏膺儒教”……"]],
				yhzr吕布:["male","li",4,["十方横扫","无双"],["des:世人赞他三国第一猛将，世人辱他三姓家奴。 又有谁知，英雄之人，行随意之事——此间既不容我，自有他处可依。孤高勇猛之下，谁又懂他刚猛深处一颗铁血柔心。 辕门射戟，是他一点寒星中小枝，全凭射戟释雄师。 倾心爱人，谁知所爱却是他人妾，亦是他人计谋棋。他常信世人，可谁知世人常以诈欺他。 董卓欺他，诱他击杀原主丁原； 董卓疑他，仅因些许失意便投戟相向，又如何强求他全心相辅策马归心？ 天下人笑他势利多变，为人无谋，天下耻。又谁知他当初辕门射戟救下那大耳刘备，最终却在曹公跟前断他退路，最终令他惨遭缢杀，枭首白门楼。 天下事，不过三人成虎，众口铄金。他之豪情，但有赤兔相伴足矣！"]],
				yhzr宙斯:["male","zhi",4,["雷电灵能"],["des:——他是传说 他是从克里特岛成长起来的天空之主：手执霹雳，推翻父政。 他是在奥林匹斯登基为王的众神领袖：掌握雷霆，风流不羁。 他是因火种而迁怒普罗米修斯的暴君：冷酷无情，猜忌好怒。 他是宙斯，是天使与恶魔的结合体，是亦正亦邪的万神首领。 人们总能从他光明又辉煌的背影中窥到灰白的痕迹，那是属于死亡与绝望才有的颜色。但这亦无暇于他雷霆之王的威望。他如此矛盾，且如此极端：在爱与恨、舍与执、善与恶的边缘行走，以微笑示人，令人悚惧心惊。 多年以后，神话湮没。而宙斯与众神的故事，却化为了永恒的星座。人们相信，当你仰望星空，若是有流星划过，就是宙斯在对你眨眼，仿佛在轻问：凡人，你相信世人对我的评说吗？"]],
				yhzr黑胡子船长:["male","li",7,["潮汐冲锋","罪恶疼饮"],["des:人们相信，黑色的冥船承载轮回，往来于人界和冥间。航程历时七天，从无改变…… 人们不禁要问，这冥船的掌舵者是谁？答案无从知晓。这秘密如同“死亡”一般，教人无法窥探。但毕竟还是有一个男人无意间，触碰到了这秘密的源头。 他的名字我们不敢说，我们仅从传说中摭拾一些断语残篇来对他进行描述：他是黑胡子，是在海上横行的“黑胡子船长”。他的微笑如夜般深沉，藏着令人绝望的黑刺。没有人可以躲过黑刺的攻击，被他刺中的人，灵魂将永被奴役。 夜深人静时，他喜欢唱歌，但却没有人能听得懂。直到后来，人们终于知道为何听不懂他的歌——因为没有灵魂的行尸走肉，是唱不出有意义的歌曲的。"]],
				yhzr玉兔:["male","min",3,["幸运兔子"],["des:神在创造一种生物的心灵时，通常只会在玛瑙、水晶、钻石等宝物中考虑，但一次偶然的尝试，使得东方创世者在塑造一只玉兔的心灵时，用了康乃馨的花瓣。 玉兔拥有了花瓣般温柔的心灵，这使她在窥测人心意时有着更为敏锐的触觉。情感的好恶常使人在对待他人时态度不同，但玉兔对人却不分厚薄。对此持绝对赞同意见的有原天蓬元帅猪八戒。在其任职天蓬元帅期间，玉兔曾以温婉亲切的态度与之交往，这种平和的态度还曾引发嫦娥的不满，而在猪八戒遭贬后，满天仙佛都改以“妖怪”称呼他，唯有可爱的玉兔在天竺国与其相遇时还称他为天蓬将军。“猪头，我是兔子耶！”玉兔这句调皮的话，一度令容易感动的猪八戒激动地流出了眼泪。 欢脱的性格令玉兔的修行失去了清苦味儿，这引发了不少仙人的诋毁。他们谴责这种不羁的修行方式，并编造出了许多玉兔在下界为祸作乱的谎话。创世神为了抚平众怒，于是将玉兔贬下凡间。失去了永生的玉兔从此流浪人界，再也没有返回天庭。"]],
				yhzr熊猫武僧:["male","li",3,["醉八仙","铁布衫"],["des:萨满以信仰喂食信徒，将其灵魂的伤楚转为仰望星光的喜悦。这种表面上看似温和的教义最初曾吸引了不少的信徒，但很快，人们发现灵魂的伤口虽可治愈，但一种更深的压迫却比伤口本身更叫人难以忍受。这种压迫来自萨满严酷的教规和对肉体的忽视。很快引发了人们关于萨满教和禅宗（后世所命名的）的议论。争论很快从圆桌延展到战场。在宗教的战争中，一位伟大的信仰导师、灵魂的先行者熊猫武僧出现了。他来自社会的最底层——监狱。脱狱而出的熊猫武僧彻底原谅了曾经鞭打折辱他的胡人，转而把一种慈悲的观念灌输给了仇敌。以仇人的口舌来为善行宣告，以宽恕的心灵来为恶念超度。但有时，遇到那些冥顽不灵者，武僧一样会金刚怒目，厉行霹雳之事。这种以身作则的禅风很快席卷了整个大陆。渐渐地，人们不再把注意力着眼在萨满与禅宗的分歧上，人们开始仰望，亦开始自我审视。他们从自己的内心中发掘出了力量！正如那位熊猫武僧一样——知所从来，明所应去。身外无物，万法长空。"]],
				yhzr波塞冬:["male","zhi",3,["海魂圣体","海神的活力"],["des:墨提斯精妙的说辞改变了波塞冬三兄弟对立的局面，以抓阄来选择领土，这虽然有违波塞冬的本意，但他仍在表面上服从了。成为海上之神后，波塞冬以三叉戟在海中划出了人神的界限。第一次，人类被从神的领域隔离了。渔人在风暴中的呼喊再也不会传到诸神的耳朵里，即使有神祗看到，但碍于波塞冬的神威，谁也不敢施以援手。 这其中，只除了一位神祗，纳格索斯的安菲特里忒。她美貌的传说被海浪送往遥远的特洛伊，而她善良的性格更使满天星光都朝向她聚合。她在风浪中以歌声为渔人指引。这一切都为波塞冬所觉察。但海神的反应……很特别。 波塞冬放弃了三叉戟的威能，改以七海的柔波向美丽的安菲特里忒致意。但海王有意，神女无情。为爱情金箭所伤的海神派海豚潜入海底寻找女神的家园。在波塞冬允诺消去人神界限之后，安菲特里忒接受了海神的爱意。人类为表感激，在海中奏乐，以琴声为两位神祗祝福。而这片温柔的海域即成为了后世所称颂的象征幸福与神恩的爱琴海。"]],
				yhzr小乔:["female","jin",3,["凤求凰","仙荷甘露"],["forbidai","des:当今大势，天下三分，英雄辈出。但凡英雄辈出之时，便少不了佳人斗艳，惹得祸水潮生。 其时，三国之间有江东二乔，美貌绝世。魏都霸主曹孟德曾慨叹：一愿扫平四海，以成帝业；一愿得江东二乔，置之铜雀台，以乐晚年，虽死无恨矣——仅以此言，便可知双姝绝色。 妙龄双姝各自嫁得了如意郎君。那小乔，嫁得是东吴美周郎。周郎者，东吴都督周瑜周公瑾是也，其人丰姿隽秀，胸有百万雄才。而小乔闭月羞花，心中亦自有锦绣。 二人琴瑟和鸣，夫妻和睦。但在这天下纷乱之时，周郎有天妒之才，岂能拘于小家，而是不顾大局？ 为随夫君左右，小乔褪下红妆换武装，紧随周郎左右，转战千里，坚强之处，不输男儿。 无奈相依相伴十一载，却终敌不过生老病死，一代英才周公瑾，年仅三十六而亡，自此独留红颜在人间。 只奈何小乔一代红颜，独留人间，终自黯然消色。正所谓红颜薄命，天妒英才也。"]],
				yhzr洛神:["female","jin",1,["倾国之姿","洛水情花","国色天香","红颜之花"],["forbidai","des:仿佛兮若轻云之蔽月，飘摇兮若流风之回雪。 一边是翩若惊鸿的绝代佳人，一边是临渊而立的大家公子，一个偶然间的邂逅，将不相干的两人联系到了一起。 洛水滔滔东流，斯水之神，名曰宓妃，看着河畔笼罩在云烟中的丽人，曹植的双眼早已无法移开。世间怎会有如此人物，耀眼如朝霞中升起的旭日，清丽如绿波间绽开的新荷，无尽的思慕与爱恋在胸膛中悄然萌发…… 襄王有意，神女岂无心，只是人神道殊，仙凡两隔，纵使才子佳人，又能如何？洛水河畔的相遇注定没有结局。 宓妃只能远远地看着那个失落的背影，在尘烟中渐行渐远，留下的，只有洛水之畔那亘古不息的淡淡水波……"]],
				yhzr服部半藏X影:["male","min",3,["残废影刀","千鸟雾影"],["des:星夜，风从竹林带来一阵笑声：“爷爷，说个忍者的故事吧！”爷爷顿了顿首，突然很恭敬的吃了口茶道：“好。这是一个最伟大的忍者的故事。故事从《乡归》开始……” 唱歌的是服部半藏。“无忧良子，家在彼方。怀乡久旷，无极莽苍。”服部在沉吟，他想起兵火烧过家乡的情景——突然，他像是下定了主意低下了头。 保护主公无伤穿越禁林，黎明前清除所有雾妖。服部在下最后一个命令。队里不知是谁又在唱《乡归》，淡淡的哀愁散入风中。“是谁？”回应服部的是一声惨声。雾妖们开始进攻了！ 报君黄金台上意，提携玉龙为君死！忍者们在用血洗尽前进的道路。服部喃喃呓语，扫清天下的会是德川主公，而扫清眼前的则不会留下任何名字。 “天明时，忍者们终以生命开辟出了道路。后来，德川家康就从这条路一直走回了家。” “爷爷，忍者们都死了吗？” “不。有两个忍者活了下来。”爷爷微笑。“天下无双的服部半藏和一个无名的小忍者。” 小忍者睁开眼便看到了服部指向自己的刀。刀上是本队忍者的鲜血。是服部策划了这场雾中谋杀！他已准备好闭目受死。但良久，《乡归》又远远传来，服部已经去了。一切仿佛是在做梦。"]],
				yhzr雪豹:["male","min",4,["血饮咆哮"],["des:每天都会有新鲜而干净的血从铁门后面流出。血浸入土地后，就像大地被泪水濡湿了一片。刚开始时，附近的居民还曾为铁门后不时发出的惨叫而担忧，但很快，所有的汉人都习惯了胡人豹奴们的惨声。面对汉人的枷锁与酷刑，他们唯有沉默才能暂时保全。但隐忍的伤楚与灵魂深处的疯狂，终究不是严刑酷罚所能压抑的。豹奴们对汉人暴政的革命就这样毫无征兆的爆发了。带有报复性质的屠杀不仅攫夺了汉人武士的性命，就连手无缚鸡之力的老弱妇孺也未能幸免。豹奴们对此不以为意，只有一名年轻的豹奴表示了反对。但这无济于事。 年轻的豹奴愤而离开义师。义师首领认为这是对豹奴群体的背叛，于是杀光了他的父母兄弟。年轻豹奴为了报仇，残忍地杀死了所有与这场屠杀有关的豹奴。最后他割下豹奴首领的头，将其挫骨扬灰。然而骨灰在风中漂浮，紧紧附在年轻豹奴的身上，这是对弑君者最黑暗的诅咒！他的皮肤因骨灰的附着而变得雪白，而他的残忍也因这跗骨的诅咒而得以扬名。人们从此便称他为无情的“雪豹”"]],
				yhzr猎魔人:["female","min",3,["血肉诅咒","神圣强化"],["des:曾经有这样一个时代，黑暗像蒲公英一般散播种子，被污染的心灵迅速地变为邪恶的血肉之花，然后被宗教裁判所无情地消灭。而猎魔人便是这无情的工具之一。 猎魔人露娜是林中护卫者之女，在其尚在襁褓时，吸血鬼袭击了她的家乡，把她变成了一名孤儿。之后，猎魔人组织找到了她，把她带回梵蒂冈教廷抚养长大。在露娜七岁时，她接受了光明的改造，被植入吸血鬼的血肉，成为了一名强大的猎魔人战士。但在这种强大背后，露娜所目睹的则是失控的血肉以及堕落的灵魂。被改造者的灵魂会逐渐被心中生长的黑暗肉芽所吞噬，他们常会陷入癫狂的状态，甚至变得比恶魔更残忍。她无法忍受自己会变成自己最痛恨的生物。但教廷向她保证，会帮他们恢复心智的。露娜只得忍耐。接受改造的人还在增加，教廷允诺的解脱却迟迟不见踪影。直到有一天，一位同样七岁大的女童站在了改造台前，她告诉教廷长老自己愿意接受改造。那一刻，露娜仿佛看到了多年前的自己，她终于明白所谓教廷的解脱只是长老们的一纸谎言。愤怒的露娜杀死了在场的所有人，包括那名女童！"]],
				yhzr幽能刺客:["male","min",3,["幽能风暴","暴权欺凌"],["des:蒙迪尼，联邦最年轻的将军，受业于联盟星系最伟大的光明导师惹泽利卡大师。他继承了光明武士的勇敢传统，正直、刚毅，且无私，然而，在越发变得凶险的联邦政治漩涡中，这种刚直无私的性格也为他带来了不少麻烦。在军队表决是否建立暗杀组织来对付他们的政敌神职者——那些擅权跋扈的女王陛下的宠臣时，蒙迪尼毫不犹豫地投了反对票。他坚持认为以暗杀方式来解决政治敌人有失公允，而且与他所接受的光明武士的教义不符。对于他的固执，军队元老们显得愤怒而无奈。蒙迪尼的骄傲和自矜被神职者们加以利用。很快，女王便下达了命令要逮捕蒙迪尼，罪名通敌叛国。为此，他不得不选择自我流放。十年漫长的流亡生涯彻底改变了蒙迪尼的思想。归来后，蒙迪尼组建了暗杀组织并成为最高首领。他还窃取联邦的幽能力量来改造身体，把自己变成了第一代幽能刺客。"]],
				yhzr孙悟空:["male","min",3,["猴王分身","火眼金睛"],["des:梦的尽头是一片水帘，波光粼粼地覆盖着黑暗中的一切。他伸出手想去触碰，但视线所聚合的光影以一种可怕的速度倾塌着，光明被急速地抽离，然后便是毁灭一切的风。他隐约听到一个声音：齐天大圣。 没错，那正是他的名字。男人笑了，他的笑有一种嘲弄的神色在里面，彷佛是想起了什么，他随手翻开旁边的书册，第五章：乱蟠桃大圣偷丹，反天宫诸神捉怪。这是一位文人所编撰的故事，在他看来却极其可笑。世人不了解那一战，他们称那是混乱的欢乐，但只有孙悟空明白那一战是雷霆的宣威，是对世人愚昧的挑战。乌云遮蔽了中土几千万年，霹雳一声乌云散了，而人们却称雷霆的制造者为疯子！ 人是神的子民，但子民不应害怕他们的神，孙悟空微笑着，神应该害怕他们的子民。愚昧所建立的暴政绝非长治久安，子民有选择有尊严地生存下去的权利，而这，正是一切变革的开始！声音不断地自黑暗深处传来，齐天大圣……"]],
				yhzr牛头人酋长:["male","li",4,["恐怖怒吼"],["des:有关牛头人酋长萨格的传说，在河谷两岸处处流传。善良的牛头人在萨格的带领下，在与人类军队的战火中度过了漫长的岁月。时间使利斧饱饮鲜血，荣耀与誓言也并世长存。 但，一个深埋牛头人族群的秘密——一个有关牛头人酋长血统的秘密——紧紧地与牛头人的命运相连。这个秘密一旦泄露，立马就会有三个比萨格更具资格的牛头人可以继任酋长。年迈的巫师紧守着秘密，直到有一天她被刺身亡…… 巨大的混战因为这个秘密在牛头人族群里展开，部族分崩离析，荣耀与誓言遍身裂痕。恰在此时，人类军队突袭而至！然而号角响起，却没有一名族人跟随冲锋。对血统的疑虑迟缓了战士们的脚步。萨格转身面向人类军队，他仍是酋长，他必须面对牛头人真正的敌人”！尽管武器已经卷刃，尽管浑身伤痕，萨格依旧不曾停下。视英勇为最高荣誉的牛头人族群动摇了，但未等他们思考是否血统并不代表一切时，那个最具资格成为新酋长的牛头人却趁机把利刃插入了萨格的后心……"]],
				yhzr绿野花仙:["female","zhi",3,["尖刺之花","忧郁之花","敬畏之花","漫生花种"],["des:美貌是花神最早赋予她的女儿的一个礼物。在用天下最美的花朵制造出女儿的柔嫩的皮肤后，花神开始考虑，有没有一种新的更加美妙的办法来使她的女儿，未来的花神，变得更加完美。为此，她离开自己的行宫，开始在世界流浪找寻。 海湖光被她以魔法改造成幻丽的纱衣，作为女儿出嫁的华裳；春露花语被她以咒语凝结变成绚美的彩饰，成为女儿高贵的花冠。她竭尽心力搜寻一切美的事物，并用魔法复刻它们，把它们变为永恒的一部分。直到，一千年后她从世界尽头归来。 花神的宫殿早已坍塌，在流经废墟的溪水中，花神无意间看到了自己的倒影，正是她女儿的模样。原来，沧海变换，岁月无极，她心中幻化出的女儿，正是她一直以来所无法原谅的不完美的自己。她对美的依附，使她变成了虚荣的奴隶。花神离开了她的宫殿，从此再没人见过她。而有关她追寻美的传说，则被吟游诗人编作《绿野花仙》来传唱。后来，人们索性便称她为“绿野花仙”。"]],
				yhzr山丘之王:["male","li",4,["泰坦反击"],["des:在风暴群山的深处，雷鸣不息，轮回的漩涡疯狂地咆哮着，向外散发出黑色的死亡气息。矮人们在此筑城，用挖掘自地底的金刚巨岩在轮回中建立城垣，他们的首领，一位手执雷霆巨锤和火焰盾牌的矮人勇士，方丹，以无比坚韧的毅力在此拓展他的风暴王朝。 方丹训练族人使用巨锤和盾牌，训诫他们以忠诚来守卫家园，在与黑暗英魂的激战中去实现生命的价值。与以往的矮人信仰不同，方丹虽然也十分喜爱宝藏，但绝不花费时间在制造机械和采集矿石上。他所处的时代远非黑暗那么简单，这是一场灾难的“风雪”。 矮人的家园在黑暗力量的冲击下荡然无存。在经历了严酷的“寒冬”之后，方丹与剩下来的矮人们加入了王国联盟。带着家园被毁的愤怒，他开始着手训练人族和矮人部队，用他的实战经验来教导弟子如何对抗邪恶。远处，黑暗的浪潮依旧不息，而风暴群山的王者怒火才刚刚燃起。"]],
				yhzr食人魔首领:["male","zhi",4,["欲望灾火","混沌本性"],["des:也许是饥荒年代的一次捕食，食人魔这个名字便顽固地流传开来。那异乎寻常的外貌被添油加醋成为了食人的证明。为了清除可能的隐患因素，人类对食人魔族展开了大规模围剿，哪怕他们早已不将人类作为食物。 压倒性的战局令大批大批的食人魔沦为帝国的奴隶。要么毫无尊严的成为奴隶，要么成为人类狩猎的活靶。“比起战死而言，成为人类的奴隶只要听话至少衣食无忧”，这个想法一度成为食人魔族的共识。 生来便拥有两个脑袋的西莫很明显是个异类，无论是哪个方面。也许是两个脑袋的缘故，他对于自由的渴望比其他食人魔更加炽烈，当然，智慧与勇气也有双份。他巧妙地制造一起起收容所暴动，策划了一场又一场的游击战。人类花费了极大的精力来应付他精妙的战术却均以失败告终。食人魔族开始相信西莫将是带领他们走向光明的天选之子，是他们毕生追随的首领，与信仰。 然而西莫知道，为了确保族人能重新和平的生活在这片大地上，不再沦为奴隶，不再饱受战火，他将一直战斗下去，直到生命的最后一刻。"]],
				yhzr丛林之子:["male","min",3,["生存本能","毁灭蛊箭"],["des:智慧之光并非只恩赐了文明，文明之外，人类仍可发现其它不同类别的知识。丛林之子便是其中之一，他们被称为“绿野中的守护”，对于自然的暴戾与温柔都有相当了解，他们并不完全依赖自然，而是与自然相融为一。 无法确定是否是炼金术师们首先发现了丛林之子，但在人类的历史遗迹中，我们随处可见他们留下的痕迹：海岛上不知名的巨石阵、金字塔下兽型的人面像，甚至还有决战之谷里难解的图腾柱。丛林之子使用来自自然但又超越自然的能量，他们从地母信仰中祈得祝福，为自由谱写誓言之歌。 丛林之子为森林带来了祝福。被其净化的不洁，化为可以滋润万物的雨水。也是从那时起，世界上出现了雨林。据说，常在雨林中行走的人可以听到时而传来的丛林之子的笑声……"]],
				yhzr达芬奇:["male","min",4,["浮夸射击"],["des:上帝创造一切，但又把一切的秘密隐藏在生化密码之中。解开人类乃至万物的生化密码，成了达芬奇最感兴趣的事。他称此为“解构上帝”。通过解剖，这位科学怪人深刻地了解了血液和经络的奥秘。并且，通过对血液动力的研究，他甚至发现了超越人体极限的秘密。而这在宗教裁判所所营造的舆论下，被异化成了一种恐怖的黑暗科学。 “掌握生物密码的人就掌握了上帝”——达芬奇坚信着，对于世人的误解，他不以为意。但为了不激化矛盾，他选择了隐居。利用在文艺复兴中经营起来的财富，达芬奇创立了黑暗科学的地下室，在那里，有关血液动力与机械发明的研究昼夜不息。在研究的过程中，达芬奇常有意外之喜。黑暗向这位充满渴望的探索者展示了世界美妙的另一面。"]],
				yhzr暴君萨特:["male","zhi",3,["雷霆之环","灾祸匣"],["des:死亡的诅咒改变了萨特纯正的暗夜血统：灵巧之足变为象征权力与掠夺的重蹄，聆风之耳变为象征冷酷与狡诈的犄角，执梦之手变为象征杀戮与不谐的魔爪。他从灾祸的余烬中重生，还给世界的则是一个象征着混乱与凶杀的恶魔——雷鸣萨特。在开始为新主人——黑暗——效力之前，萨特抵达了他的家乡。 他来完成完全腐化的最后一步——杀死妻儿。这是一根绷紧的弦，拉扯着他，让他无法进入黑暗的深渊。精灵王城的气息有些异样，也许是被他腐化了的缘故，但很快他便看到了原因——示众的尸身。 精灵议会先他一步杀死了他的家人。这种严惩通常只针对那些背叛精灵族投身黑暗的叛徒。萨特心底最后的一根弦终于断了！黑暗瞬间吞噬了他的心灵——属于精灵的一切都与他无关了。萨特开始没有顾忌地杀戮，用族人的鲜血来实现着自己的完全腐化……"]],
				yhzr嫦娥X月:["female","zhi",3,["画月为牢","风花月蚀"],["des:女孩在急速奔跑中摔倒，扶起她的是一个有着温柔笑脸的女人——从那一天开始，七岁的嫦娥便成了月神常羲的弟子，唯一的一个凡人弟子。 嫦娥敏感的体质在修炼精奥的仙术上有着惊人的天赋，她改变了神与人在术法血统上的界限，甚至这种与生俱来的敏感，使她比神在操纵仙术上还多了一份精纯。而这正是为诸神所嫉忌的——他们不允许一切可能动摇他们权威的事件发生，哪怕只是一个看起来人畜无害纯良天真的小女孩。 驱逐嫦娥的消息尚未公开，嫦娥最好的朋友玉兔便站出来为她求情。然而，天帝讨厌这种活在人心的情感，他认为天人无欲，才得长存，而拥有人类感情的神祗不配再位列仙班。嫦娥为了救出玉兔，不顾师父常羲的反对，答应了诸神禁闭自己的要求，但在进入广寒宫前，她把一滴眼泪留在了玉兔心中。而这滴泪便成为了后来玉兔之心的善良本源。"]],
				yhzr小龙女:["female","min",3,["踏雪无痕","冰心剑法"],["des:有些风，就算是在梦里也从未曾停息过。大风劫掠了一切记忆，将故事推回到原点。而她就这样游离于真实与梦境之间，站在时光的原点处，拼凑着灵魂中那份遗失了重要碎片的云图。 重阳宫、终南古墓、玉女心经……她总是梦到这些记忆的残片在她面前飘过。她能感应到附着在这些残片上的灵魂质感，就像是面对着一个曾经很熟悉的人。但这个人是谁，她忘了。直到有一天，她在梦中来到了绝情谷的废墟，在漫天飞舞的龙女花前，她听到了一声久违的雕鸣。那一瞬间，她恍如梦觉，眼前到处是时光烽火连天的交战。杨过、神雕、大火、襄阳，她的梦，属于她的也是小龙女的所有记忆都回来了…… 小龙女伸出手，摸到一片时间的灰烬。眼前宏大的生命记忆缓缓地被吸入黑色的漩涡之中，她能感到心脏深处的钝痛——疼痛让她又有了真实感！但在漩涡吞没她之前，她终于看清了，在黑暗深处，废墟之上，那一行铿然有力的字迹：问世间情是何物，直教人生死相许！"]],
				yhzr雅典娜:["female","zhi",3,["战争惧刃","智慧庇护","净罪之池"],["des:愤怒的时代结束了，在黎明尽头，诸神以犹疑的目光注视着天地中心的那扇混沌之门，那是异世界的入口，是战争的源头，是混合了信仰、破灭、黑暗、光明、绝望以及希望的所在。女神在那里放下希望信标，天空之风轻轻将历史翻过新的一页。 千年之后，上古时代的种种已化为发黄书页中记载的传说。人类在世界各地建立新的国家，繁衍生息。然而，随着时间的推移，原来平和温顺的人类似乎被拖入欲望的迷沼，贪婪、胆怯、卑劣、背诺……信仰缺失的人类犹如置身重重迷雾之中…… 种种游离的、隐秘不定的迹象，将混沌之门这个早已埋没在历史尘埃中的地点重新提及。一些试图重新找寻本源的人站了出来。据说，他们得到了一位神祗的相助——那名神秘的女神有着传说一般的身世与容貌。人们被阻隔在这层传说之雾外，唯一可知的就是她有一个温柔的名字：雅典娜。"]],
				yhzr亚瑟王:["female","min",3,["神之守护","圣剑之光"],["des:在异教文明兴起前，罗什切尔德帝国是大陆西方最强大的管理者。帝国的力量与智慧消灭了几乎所有的不臣者，没有任何威胁的统治持续了几个世纪，直到，真正的威胁从内部像风暴一般将整个帝国迅速瓦解。人民的呼声犹在，但帝国的文明已成往昔。 亚瑟便在此时成长起来。传闻，在她获得神之启示前，神曾仔细聆听她的选择：力量！信仰！智慧！公正！它们甚至可使凡人登上天神的王座！你必须牺牲其一，我才允许你成为世间之王！无人知道亚瑟的答案，但她的确在那一天拔出了岩石祭坛上千年封印的宝剑，成了传说中王权神授的国王。人民的呼声成了“翅膀”，新帝国飞速前进，战争积累着荣耀，缔造着属于亚瑟王的文明。 但。亚瑟王知道她缺失的是什么——那是她自己的选择。为此，她建立了圆桌骑士团，用她所得到的去追寻她所失去的。圆桌骑士努力地找寻。辽阔的大陆回荡着女王的叹息。直到秋叶再次凋零，传来亚瑟王死去的凶信。有人说亚瑟王找到了当年失去的，因此离开世界成了天神的国王！但也有人说，亚瑟王最终失去了所有全部，死在了秋寒的绝望之中……"]],
				yhzr凯撒大帝:["male","li",4,["圣狮咆哮","永恒之斩"],["des:以我一生之力，征服我所见的土地；我来，我见，我征服。” 大帝如是说，于是他执起永恒之剑，挥剑所向，万众臣服——这就是凯撒，我们的王！从他降生之时，神明就挥舞霞光为他伴礼。智慧、优雅、勇气、天赋，这是大帝身上永不或缺的荣光！ 他是神明宠爱的圣子，优雅的白狮圣兽塞乌斯从神山来到吾王的身边。它带来神明的圣谕：惟有大帝，才是这世间真正的王！再长的诗篇也无法叙述大帝的英勇，由他带领的军队，永远没有人能够阻挡。他所立下的决议，带领我们走向辉煌的顶端。 他是最强的勇士，他是神明之子。他为神圣的罗马帝国立下了永恒的基石，当一切结束时，他放弃了大帝的尊荣。 在神圣的霞光中，他与圣兽塞乌斯悄然离去，神山才是他即将前往的方向。他将是永远以神光笼罩罗马的神明——永恒之王，大帝凯撒，尤利乌斯！"]],
				yhzr李元霸:["male","li",4,["不屈意志·元霸"],["des:秋日，残阳。 风沙漫天。 连天的旗帜在呼啸的北风中噼啪作响。 古战场上两军将士仅隔百步之遥，又一轮厮杀就要开始。 没有嘈杂的喧嚣，没有惊天的战鼓，也没有豪迈的悲歌，只有战马不安的响鼻不住地在耳边回荡。 每个战士都紧攥着手中的利器，弓弦也已经拉满，如同紧绷的神经。 任凭寒风呼啸，却无一人挪动半步。双方就这样远远地对望，仿佛被定格的画面。 一名大将缓缓行至阵前，只见他身穿一副吞天兽铠，手执两柄瓮金大锤，傲然挺立。 黑压压的军阵竟似乎敌不住一人的气势，久经战场的老兵也不禁咬紧了牙关。 敌方军阵之中一名手持凤翅镏金镋的将军狂吼一声，拍马而出！ 又一股秋风袭来，卷起漫天黄沙。 破阵的战鼓尚未停歇，胜负却已揭晓。 中央的空地只剩下手持双锤的猛将和他身后斗大的“李”字军旗。 李元霸斜眼看了下倒在脚边的那位将军，下达了新的命令。 “杀！”。"]],
				yhzr哪咤:["female","min",3,["莲花转生","混天绫"],["des:自重生以来，前世的种种不断地在哪吒的脑海中闪现——母亲为他怀胎三年，爱他至深，但父亲却自他出生起便将他视作妖物，万分厌恶。他不过在东海嬉戏，便引来龙宫恶使怒斥，那些仗势欺人的龙宫中人企图伤他，他不过以牙还牙，可他那所谓的父亲只怒斥他祸害他人，祸及家人，根本不信真正的后果前因！ 为了不让母亲受到龙宫责问，他自甘认罪，断臂剖腹、挖肠剔骨……但就算如此，那李靖仍旧对着他的魂魄严词责问，无理逼迫…… 前世的记忆，让重生后的哪吒双目赤红，他本是一世无双道骨仙童，又怎能任人欺辱？ “李靖，你既视我做洪水妖孽，我亦不愿与你有任何关联！” 前世，他剔骨剖腹，早已还了李靖血脉之恩。今世，他重塑这莲藕女体，正是为了断却最后一丝前尘之缘。 前世今生至此，他哪吒……从来就只有慈母，而无亲父！"]],
				yhzr奥丁:["male","li",4,["神王之剑"],["des:芬布尔之冬如期而至，强劲的风雪从四面八方呼啸而来，饥饿的野兽为了寻找食物四处徘徊。刺骨的严寒中，邪恶如瘟疫般蔓延。 在冰封的阿斯嘉特，盛大的宴席看起来和往常一样，美味的野猪肉和香浓的蜜酒依旧散发着诱人的气息，整座宫殿都淹没在嘈杂的笑骂和欢快的小调中，这里是瓦尔哈拉——尘世间阵亡英雄的住所，以及众神之父奥丁的宝殿。然而，就在今夜，奥丁将带领这些伟大的战士开始他们最后的战斗。 夜幕逐渐降临，邪恶巨人的大军已经踏过了彩虹之桥，瓦尔哈拉陷入了重重包围，烈焰在肆意地燃烧，星辰也从苍穹中陨落……黄金宫殿的大门轰然开启，奥丁戴上象征至高神的鹰盔，和无畏的勇士们一起，咆哮着发起了冲锋。 诸神的黄昏将至，就让无数年的仇恨在此一次解决。"]],
				yhzr周瑜:["male","jin",3,["化魔","赤壁炎焰"],["forbidai","des:那是个动荡的年代，战争犹如家常便饭，谁也不知道自己能不能见到明天的太阳。 于百姓而言，颠沛流离民不聊生；于幼帝而言，孰忠孰奸尚未分明；而对英雄们来说，这无疑是最好的时代！ 年幼之时，他立下誓约，将以一生助主公得以天下。何况，他有这么做的资本与骄傲。世人都说，东吴周郎乃少年英雄，才知百家、兵韬熟甚、音律谙韵，似玉般完美无缺。 但是，这个有着辉煌历史的江东奇迹却狠狠地碰了壁。 满心的打算都化为乌有，还被对头大肆嘲笑——这样的羞辱对于一向心性甚高的他来说，气得箭疮崩裂也算是在意料之中…… 在坠马的那刻，很奇妙的，他似乎看到了小乔哭泣的脸。别哭，他想说，你笑起更动人啊……这些话语化为呢喃之句，随着未尽的事业一道飘散在风中，只余下满腹遗憾…… 史书有云：周瑜，字公瑾，官至都督，时年三十六，病卒。"]],
				yhzr西门飞雪:["male","min",3,["落花吹雪","天外飞仙"],["des:二月初二，雪。 他早早的起床，取净水洁面，叠放整齐的白衣柔软合身。 剑已擦拭雪亮，他轻柔地抚摸剑身，犹如抚摸最心爱的女子。 桌上的簿子记着：“青州宋义威，擅八卦刀法，所使金环大背刀，刀背镶九金环，重二十三斤。于十一月劫杀定州宁氏，宁府上下四十八口无一幸免。” 二月初四，雪。 他已经在雪中站立许久，久到眼睫毛已经沾满雪花。 宋义威喘着粗气，问道：“你我素不相识，只因我劫杀宁氏，你要为其报仇。但你并不认识宁氏？” “是的。”他面色宁静的答道，就像取人性命如同简单寒暄一般轻松。 “你千里而来杀我，究竟为何？” “应该为之而已。” 话音落，风吹雪，宋义威面上还带着惊恐之情，他似乎还有什么话想说，但再也说不来。因为死人，是不会说话的。 西门飞雪吹落了剑上的血花。每当了结一件大事时，他就想喝酒。滚烫的，能让人从骨头里烧起来的，驱除寂寞的酒。 “世上还有什么事能使心再热起来？血再热起来？”看着手中的剑，西门陷入沉思……"]],
				yhzr玉皇大帝:["male","jin",3,["仙灵庇护","真龙天子","紫薇真火"],["forbidai","des:传说天有九重，而在天的最高处，有一座金碧辉煌的宝殿，万神之主玉皇大帝就在此统御三界生灵。 天地之间九万里，从凌霄殿中俯视三界，山河依旧，依稀还可以看到洪荒时代留下的痕迹。那是三皇五帝也未诞生的遥远时代，那一年，在一块不知名的乐土上，光严妙乐国的子民正和往常一样，在一天的忙碌后满足地回到家中。 年轻的王即位以来将一切治理得井井有条，人人的脸上都可以看到由衷的笑容。然而天下正值妖魔横行之时，没有地方可以幸免。血红的夕阳之下，一道黑色的身影正迅速地接近，一头上古妖兽将它的爪牙伸向了这片世外桃源。 无助的哀嚎从四面八方响起，年轻的王终于明白，要在这样混乱的世间保护自己的子民，需要无与伦比的力量！在那之后，他放弃了王位，在香严山中苦修仙法…… 历经三千劫，始成金仙身，尔后万劫、亿劫，终于，玉皇大帝可以像今天这样踏着九龙拉着的金车，护佑三界亿万生灵。"]],
				yhzr龙骑士:["male","li",4,["龙人血脉","龙之咆哮"],["des:边境的小酒馆里，老板略带神秘的说起这样一个传说：好心的领主老爷和他的养子生活在一座美丽的庄园里。然而，魔龙化身的养子本性嗜血又残暴。他魔性大发之后，重伤领主，焚毁庄园。据说他身覆鳞片，口中喷火，甚至还会吃人！ ——那段经历对流浪骑士来说就像噩梦一般，如果真是场梦就好了……那一天，从血脉中涌出的能量仿佛要将身体撕成两半，难以忍受的巨大痛楚令他失去了理智。清醒之后，看着血泊中的领主和自己可怕的身躯，他只能惶恐地逃离。 这些年来，骑士独自一人在荒原上流浪，而根植于血脉中的力量也与日俱增。幸运的是，在旅途中磨练出的坚韧和勇气让骑士逐渐学会了如何在狂暴中保持清明。在一次从魔兽群的包围中救下落难的冒险者后，他第一次感到这股力量会是种恩赐。 兴奋的流浪骑士马不停蹄地想要回到家乡，但迎接他的却不是领主慈祥的微笑，而是冲天的火光、村民的哀嚎以及大队的强盗…… 那天以后，王国又多了一个传说，关于龙骑士的传说。"]],
				yhzr大天使:["male","li",4,["圣光之盾"],["des:在凡人无法触及的高天之上，是属于神的领域，圣洁的天使在此巡弋，维护着尘世的公平与秩序。 同为诞生最早的天使，米迦勒和路西法拥有着其他天使无法比拟的勇气和力量，一个是光之君主，一个是拂晓之星，亲如兄弟的他们一同成为了神的左右手。 然而此刻，天界却被邪恶的阴影所笼罩，路西法背弃了天父，投入了魔鬼的怀抱，三分之一的天使随之堕落。只要两位最强大的天使联手，神也不是高不可攀…… 但是，米迦勒拒绝了和路西法一同堕落。性情高傲的他无法原谅背弃了神和自己的路西法。他吹响了天国的号角，战火燃遍广漠无垠的天宇。罪恶必须被无情地否定和毁灭，即使天使犯了罪，也应一视同仁。 如同所有歌谣中一样，正义最终战胜了邪恶，堕落者永远无法得到原谅，天上再也没有他们的位置。在神的授意下，米迦勒亲手将路西法投入无底的深渊。 光明与黑暗就此决裂，米迦勒成为了最耀眼最强大的天使长。与路西法及其手下的邪灵争战成为米迦勒背负的十字架——只要邪恶还在肆虐，米迦勒的战斗就不会停歇。"]],
				yhzr天蓬元帅:["male","jin",4,["天篷变"],["forbidai","des:剧烈的头痛袭来，天蓬缓慢地睁开眼睛。陌生的天花板，陌生的环境……被扣上铁镣的触感似乎表明事态不妙。这是怎么回事？ “天蓬听令！”，冷酷而威严的声音在耳边响起，穿着华服的令官满面肃杀之意，“因醉闹广寒，戏闹嫦娥，扰乱天庭秩序，犯下大不敬之罪，自此褫夺元帅之名，贬入凡间。钦此！” ……等等，这一切听起来怎么如坠云雾！谁醉闹广寒？谁戏闹嫦娥？一向安份自处的自己怎会如此失态？未等发问，天兵们已一拥而入将其架至南天门外…… 再次醒来的时候，他惊恐地发现自己已化身为猪胎！然而此时，他逐渐回想起当日情形——那日天庭设宴，自己不过略饮几杯，以自己的酒量，怎可能无以自控至如此地步？记忆只到此为止，之后的事犹如碎片，始终不着头绪，触摸不至。 “嘘……不可妄加评价天庭……” “你这么冲，迟早要吃大亏！” “当心呐，天蓬，听说有人要对你不利……” 记忆像一团浓雾，模模糊糊浮现出零星片段…… 漫长的一生又开始了。他立誓要重返天庭，将真相查一个水落石出！"]],
				yhzr冰雪女王:["female","li",3,["冰霜凌枪","寒冰魔环"],["des:女孩幼年时喜欢下雪的感觉，那洁白的精灵打着转儿在身边飞舞，轻柔地落在身上后调皮地消失。她可以与妹妹在雪中玩耍直至天黑。在妹妹面前，她尽情展示自己对冰雪的控制。这个神奇的天赋陪伴她们渡过无数欢乐时光，直至那次意外的发生。失控的冰雪差点夺去妹妹的生命，惊恐的女孩第一次诅咒起自己拥有的能力。 在父母不幸罹难后，女孩不得不站出来接受自己的命运——成为王国的统治者。加冕典礼上她如履薄冰，却还是不慎挥出了一片冰凌，尽管她只是想让妹妹离自己远点儿以免受伤…… 恐慌的贵族们将她视为怪物，这位新任的女王被迫离开城堡远走深山。她的身后，整个王国被冰霜封冻，陷入凛冽的寒冬。 如何控制这股力量，她没有头绪。如何消除魔法的影响，她不了解。但是，她暗下决心，正视自己的能力，抛却烦恼。总有一天，她将重返王国，赢回国民的尊敬！"]],
				yhzr后羿:["male","min",3,["骄阳陨落","燎火之箭"],["des:后羿环顾着四周，目力可及之处，只有龟裂的大地。匍匐在他脚下的老妪已经被灼热的太阳晒脱了水分，恍惚间就像一段焦枯树干。 天空中的太阳们依旧嚣张地散发着全部的热量。它们是天帝的儿子，每日有一人化身为太阳穿过天空，撒下光热，哺育世间万物。然而，周而复始的日子令它们觉得厌烦。于是，再一个黎明到来时，它们一起出现在天空中， 太阳们散发出的热量烤焦了大地，树木庄稼化为灰烬，人间瞬时化为炼狱…… 后羿回过神来，他按了按腰间的箭囊，那是最后的希望……不能再等待了！他从肩上取下那张红色的弓，抽出了箭矢。 满弓！射出！ 奇迹出现了！骄横的太阳纷纷坠落，当第九个太阳落下之时，世界再度恢复了原貌。 人们铭记着他的威能，自此，“神射手”之名名垂千古！"]],
				yhzr炽焰火女:["female","zhi",3,["怒焰火海","火之箭"],["des:对狄娜来说，幼年的记忆从来都是灰暗无光的。蜷缩在房间的一角，紧紧捂着耳朵，但也不能遮蔽传入耳中的尖叫与咒骂。 “嘭”的轻微声音后，狄娜在指尖燃起了一朵小小的火花，明亮而温暖。明明这么漂亮的东西，妈妈为什么不喜欢呢？ 狄娜苦笑了一下，还记得妈妈第一次见到的时候，似乎吓坏了，不然怎么连手上端的汤锅都跌落在地上？之后妈妈还歇斯底里的打翻了好多东西，尖叫着说狄娜是怪物，不应该存在于世，又突然哭着抱住狄娜要求她千万别告诉任何人。 如果不是遇到法利亚斯老师，如果不是老师解释了这种与生俱来能力的独特之处，甚至带狄娜前往首都的法师高塔学院学习的话，可能就不会有今天被称为“炽焰火女”的存在了吧？ 集结的钟声打断了狄娜的思绪。又要出战了吗？看来没空思考人生的意义了呢。 指尖的火花熊熊燃烧了起来，那就让他们欣赏这辈子第一次也是最后一次的漫天火雨的盛况吧！"]],
				yhzr女武神:["female","min",4,["困兽之境","毁灭之矛"],["des:她是地上国王的女儿，她是被诸神选中的战士。 她的长矛由奥丁亲自赐下，神光闪烁。当那点光芒闪烁进敌人的眼眸，那便是向他们宣告死亡的来到。 她的容貌犹如初升的太阳，她的身姿轻盈曼妙。在吟游诗人的歌中，那些栖息在世界树的神鸟献出它们的羽毛，装点她的战袍。 “奥丁的侍女”，人们带着敬畏称呼着她。她的到来，不仅仅意味着战局的提前结束，也意味着神域的挑选开始。她将在战场上赐与勇敢的战亡者美妙的一吻，并引领他们带往英灵殿。在诸神的黄昏来临之前，需要完成的事情，还有很多。 她的名字是瓦尔基里，人们更愿意用另一个名字来形容她——“女武神”！"]],
				yhzr精灵王子:["male","min",4,["幻影残像"],["des:向上追溯至第二纪初，精灵族的这一支便已经迁徙至幽暗密林中。在经历了数场旷日持久的战争后，精灵王下令封闭森林。对于有着漫长生命的精灵来说，借着正义为名的暗战无休无止。人类间的冤冤相报让崇尚安宁的精灵心生厌倦。面对曾经盟友指责他见死不救，精灵王则置若罔闻。 然而，精灵王的孤傲却丝毫没有影响到精灵王子。精灵王子对于冒险的热情简直能把幽暗密林给点着了。精灵族中流传着这样一件事：前去讨伐巨龙的矮人借道森林时，未等精灵王下令将这些“入侵者”驱逐出境，精灵王子便已将矮人们带了回来。他甚至无视了矮人们与他父亲之间的仇恨，而试图说服精灵王，让他一同前往挑战巨龙。远征队默默地动身，寥寥数人的队伍要完成的是看似不可能的任务。伴随着漫长旅程的是孤寂与危险，是半兽人与食人妖的追击，是一场场可歌可泣的战役…… 当力量之源被投入火山熔浆中那刻，一切的付出都得到了回报。不过，复兴秩序的道路同样漫长，精灵王子与他的朋友们再一次踏上了重建的旅程。"]],
				yhzr白袍巫师:["male","zhi",3,["时光缓行","魔能之球"],["des:第三纪元中期，那是个魔法与剑，正义与邪恶交战的年代。被镌刻在石碑上的是一个从黑暗中拯救了帝国的传奇。 在吟游诗人的歌谣里，那位传说中的巫师身着灰袍，他帮助矮人们与贪婪的巨龙进行战斗，并夺回了矮人们的家园故土。然而他并非古板的战斗狂人，他也热衷于利用魔法为异族朋友们举办的夏日盛典燃放起灿烂烟花。 最为人们津津乐道地便是他一手挑选并组织了那支勇者之队——他们经过漫长的跋涉后，除去了黑暗之王的力量来源。也是在那一次，他得到了众生万物之父的认可，披上了代表巫师之首的白袍。 如今，他游历诸国之间，行踪飘忽。但人们相信，只要危险来袭，他会再一次回到人们中间，将正义进行到底！"]],
				yhzr阿波罗:["male","li",3,["太阳之子","流火双刃"],["des:他是太阳的象征，他是光明的化身。他的战车是黄金打造而成，由四匹全身发出金光的骏马牵引。他的马车从天上飞驰而过时，带给人间以哺育新生的温暖。 他的宫殿在遥远的东方，大理石的廊柱装饰着黄金、宝石和象牙制成的浮雕。火神为宫殿的大门和四壁制作了精美绝伦的图画和雕像。时光之神和春夏秋冬四位季节之神环绕在他的周围，共同为人间带去丰收与希望。 这位宙斯之子永远精力充沛、不知疲倦、勇猛无双。歌者们弹着齐特拉琴颂扬他的丰功伟绩。传世的诸多英雄故事之中，斩杀巨蟒皮同无疑是流传最广，影响最为深远的。 为了寻找最适合的地点建立神示所，阿波罗几经挑选后抵达德尔斐。皮同——盘踞于此的妖蛇——自然不肯乖乖地让出栖息之处。无畏的阿波罗以超凡的实力宣告了自己对这块圣地的所有权。而阿波罗也在这里建立了举世闻名的德尔斐神示所。神庙门柱上镌刻的“认识你自己”历经数百朝代，直至今日也依然指引着人们前进的方向。"]],
				yhzr孙尚香:["female","min",3,["双界反击","极速双环"],["des:建安十四年，冬。东吴郡主大喜，孙刘联姻，言同讨曹贼，救苍生于倒悬。实个中盘算，皆为世人所不知。 尚香凤冠霞帔，端坐房中。烛光摇曳中，觥筹交错之声不绝于耳，丝竹弦乐，几细不可闻，不禁令人恍惚。 尚香思绪飘飞。孙策辞世，尚香年方十岁。印象中大哥勤军务，疏玩乐。偶尔看到自己舞刀弄枪，倒也不似常人劝些女子需娴静淑德之语，只笑说汝日后也是我东吴力将。真想让大哥瞧瞧今天这身红妆啊…… 听闻那刘玄德乃当世英豪，若非如此，任二哥孙权如何游说，自己也不会同意。只是听闻，二哥与那周瑜密谋，欲借机夺荆州困刘备，这岂非陷己于不义？若如此，也莫怪自己假戏真做！ 事态急转直下，尚香冷静非常，怒斥追兵，毅然随夫君刘备返回荆州。 匆匆两载如白驹过隙。东吴来使曰母亲病重，尚香闻讯心急如焚，随来使返东吴。岂料此为孙权又一计谋……自此，她再未返蜀地。而蜀吴邦交渐恶。 后有讹言传入吴中，道刘备已死，尚香望西遥哭，投江自尽。乱世之中，岂有个人之幸？ 大江东去，浪淘尽，唯有巾帼红颜的故事永世流芳……"]],
				yhzr死亡骑士:["male","li",3,["死亡缠绕","亡灵禁区"],["des:没有人能相信，古利瓦纳这个名字一度被称为“王国希望之星”。改变源于那场残酷的战争。光明骑士团差点灭亡的结果，令人们纷纷指责这位新任骑士团团长软弱无能。这些躲在安全地方的家伙完全忘记了黑暗军团拥有数十倍于骑士团的军力，以及如此残酷战斗过后王国几乎毫发无损的事实。 圣骑士的叛离震惊了整片大陆。黑暗之王端坐王座之上，愉悦看着高傲的圣骑士脱下闪亮的秘银铠甲，披上暗炎战袍，单膝跪下——“以吾手中之剑起誓，向黑暗的主宰献上吾之灵魂。当黑暗降临，鲜血浸染尘土，愿恐惧与痛苦支配大陆，直至永远。” 然而，黑暗力量的强大远超出古利瓦纳的想象。“借用力量重新振兴骑士团，为此暂时假意屈从”的想法被他渐渐忘却。痛苦的控制与反控制后，黑暗能量完全侵蚀了他的心灵。古利瓦纳的利剑挥向了他保护过的人们，女子的尖叫、孩童的哭泣与众人的咒骂都不能让他动摇。面对化为焦土的家园，人们后悔不已…… 被死亡阴影终日笼罩的人们脆弱地祈祷着，期许有一天邪恶消散，曾经的光明骑士能再度归来……"]],
				yhzr电光侠:["male","jin",4,["时空扭曲"],["forbidai","des:23世纪，新纪元带给人们的并非光明。浓稠的黑暗成为世界的主色调。罪恶大行其道，正义瑟瑟发抖。人们祈求有一位英雄挺身而出，与邪恶力量殊死搏斗。救世主就在这种时候出现。他不理会民众的示好，从不驻足停留。也许是神秘感始然，关于新英雄的消息潮水般涌来——街头小报借此狠狠发了笔横财。 邪恶力量对从天而降的劲敌束手无策，他们想尽方法试图找到他的弱点，不放过任何一丝细节。渐渐的，英雄开始处于下风。一则流言甚嚣尘上——新英雄是使用药物产生变异的普通人。一旦能力失控，他很有可能成为比邪恶力量更可怕的人类公敌！对英雄的欢呼转瞬变成冷言冷语的利刃。竟连“他是邪恶力量的幕后指使者”的意见也得到了不少认可。 邪恶力量再度席卷而来时，英雄并未出现。惶恐不安的人们又拾起敬畏之心，重新呼唤被他们称为“电光侠”的恩人。这次，他们的期望落空了…… 不过，英雄的出现唤醒了一些人沉睡的正义！对抗邪恶的前线上出现了一群无畏的年轻人。他们视那位英雄为指引前行的明灯，以“电光侠”为名，誓将黑暗斩除，迎接黎明的未来！"]],
				yhzr张飞:["male","li",4,["怒吼长坂"],["des:他来自豪杰辈出的燕赵之地，那片土地人才济济，而他便是其中璀璨一颗——张飞张翼德。 他曾是个吃喝不愁的屠户，身家殷实，却心系天下。大义当前，他散尽家财襄助刘备招兵买马，却不争名利。 他的眼睛里容不下一粒沙子，他的心中藏不住任何不快。在他的世界里，是非忠奸黑白分明，没有平淡中庸灰色。大吼大笑大哭大叫，性情中人不过如此。 天下人以一“猛”字形容他的一切。豹头环眼、燕颔虎须、巨雷般的怒吼与手中的丈八蛇矛，每一处细节无不诠释着他的勇猛，更不用提他曾喝断当阳桥、斥退曹军，更有擒严颜、俘张任、斗马超、胜张郃，助结义大哥闯下一片天地。 然而，上天却与他开了个大玩笑，一代名将竟非战死沙场，而被暗杀于部下之手。实是令人扼腕哀叹，唏嘘不已……"]],
				yhzr泰坦巨人:["male","li",4,["大地之盾"],["des:记忆的深处覆盖着一层阴翳，挥之不去。出生之时，预言者吐露了不祥的未来——他与他的兄弟们，将成为弑父之人，恶名加身，以最悲惨的姿态成为众人之敌。这 条诅咒如影随形，在他的生命中贯穿始终。父亲毫不掩饰对他们的憎恶，甚至想将他们除之而后快，母亲则以大地之名藏匿了他们。东躲西藏，卑微存活，成为幼 年时的全部记忆。 ——泰坦挥动手中重锤，似乎想将回忆驱逐出去。他的父亲，强大的天神乌拉诺斯高高在上，睥睨而立。不过，这并非什么值得庆贺的相逢。与其背负着诅咒苟且， 承担着无谓的罪名，不如用自己的手切断这种令人唾弃的关系！ 血与烽烟成为此刻的全部色彩，力量的悬殊却未能磨灭他的斗志。他与身下的大地一般残破，然而只要还能再次战斗，他依旧不屈不饶！泰坦一次又一次站起，脊柱 始终挺得笔直。除非切下他的头颅，否则他便永远不会被打倒！"]],
				yhzr斯巴达:["male","li",4,["野蛮突杀"],["des:战斗已经陷入胶着，空气中弥漫着死亡的气息。列奥尼达斯咒骂了一句，手中重剑劈倒一名企图从隘口侧面进攻的波斯士兵。他环顾四周，那些忠诚的勇士已经所剩无几。鲜血模糊了视线，他的身体也已经到达极限…… 这场悬殊的战斗开始于三天前。最初，易守难攻的温泉关让波斯大军吃尽了苦头。然而一个无耻的奸细让希腊联军的努力化为乌有！背后突然出现的敌人令联军丢掉了所有优势。关键时刻，斯巴达人挺身而出！列奥尼达斯带领着三百名最勇敢的战士冲向波斯大军。 联军得以安然撤离，而斯巴达人的战斗才刚拉开序幕！ ——公元前480年，温泉关战役，斯巴达人带着两万条波斯人的性命，在地狱中开怀畅饮。自此，“斯巴达勇士”之名成为后世每一位战士所追求的最高荣耀！"]],
				yhzr李探花:["male","min",3,["燕子三抄水","夺命飞刀"],["des:掌灯时分，悦来客栈分外热闹。卖唱女子穿梭桌几间，试图赚上点小钱，只是运气不太好，迟迟未能开张。终于，有人点了一支曲子。曲音未了却听喧哗声起，夹杂着油腔滑调的调笑与女子怯弱的拒绝。坐在角落的男子皱起眉头。他斟满一杯酒，喝了起来，却也大声咳嗽起来。不停的咳嗽令他的脸上呈现出病态的嫣红，似乎还有愈来愈烈的势头。 “哪来的痨病鬼，扫了大爷的兴致”，闹事之人不悦极了。跟班的纨绔弟子怒斥：“不识好歹的家伙！不过，你若跪地学声狗叫，说不定我们宋少爷心情一好，便饶过你了。” 男子缓缓举起酒杯，叹道：“你没听到这里一直有狗叫声么？” 四周哄笑声大起，那少爷挂不住面子拨剑便刺！眼见这一剑便要刺穿男子心窝。谁知此时宋大少狂吼一声，剑脱手掉落。他双手掩住自己喉咙，满脸惊愕。 没有人瞧清他的喉咙上何时多出一把小刀。 世上竟有如此之快的飞刀！ 唯有百晓生兵器谱上排名第三的探花飞刀才能做到。 男子却一脸惋惜：“好好的酒，有了血腥味也便难喝了”。他继续独饮起来，不知还有多少酒才能醉到忘却这世间的不公……"]],
				yhzr埃及艳后:["female","zhi",3,["暗涌流沙","银沙之力"],["des:自幼生长于宫廷之中的克丽奥佩特拉聪颖过人，颇具政治手腕。然而最为尼罗河畔人们所熟知的是她倾国倾城的美貌。诗人们吟诵她的容貌，贵族拜倒在她的石榴裙下，这其中便有罗马帝国的君主。 英武的恺撒大帝途经埃及时，她正与异母的弟弟进行王位之争。恺撒意欲对此事调停之际，克丽奥佩特拉以毛毯裹身，由人抬至他的房门口。她以绝世的美貌和无上的勇气征服了这位君王，自此巩固了自己的地位，成为了王国的实际统治者。 恺撒去世后，人们以为传说就此终结，她却以更加光彩夺目的方式出现。相传，她乘坐一艘紫帆银桨的镀金大船，打扮成爱神阿佛洛狄忒的模样，面见此刻统治东部罗马的安东尼。在她的魅力之下，安东尼允诺了她提出的一切条件。“诸王之女王”的名声响彻那片土地。 就如同所有的红颜故事那样，她的故事在屋大维来袭时戛然而止。不愿成为战俘的克丽奥佩特拉用毒蛇结束了自己的生命…… 时代变迁，王朝兴盛又衰败，但这位托勒密王朝末代女王的传奇故事却跨越时间，永远流传下去。"]],
				yhzr聂小倩:["female","jin",3,["倩女幽魂","恐惧阴魂","摄魂之法"],["forbidai","des:聂小倩神情阴郁，她随意拨出些许琴音，再不带男子供予姥姥，还不知要被怎样折磨。脑海中却浮现昨晚那个书生的样貌。他叫什么来着？对了，宁采臣。她喃喃念出他的名字，犹如花朵盛放在唇齿间。宁采臣略带些腼腆解释道，“在集市上见到幅美人图，里面的人与你长得一样，就买来给你。”聂小倩望着那幅画，那是爹特意请人来画的。然而不久之后全家人竟命丧歹人之手，自己的尸骨被树精操控，不得不做那些伤天害理之事。要是能转世便好了，她想，说不定能与宁采臣……可是自己被姥姥卖给黑山老妖，怕是再无机会。谁料除妖人竟尾随前来，意图降妖除魔，拯救那被妖精迷去心神的书生。她的真实身份就这么被摊开，但宁采臣未曾退缩，甚至允诺替她寻回尸骨。除妖之战打得天昏地暗，姥姥与黑山老妖出尽百宝欲毁去小倩魂魄，千钧一发之际宁采臣再次护住了她……取回尸骨的聂小倩终于能重生了，这也意味着到了她与宁采臣分离之际。满腔柔情化为最后深情一瞥，只待来世再会……"]],
				yhzr超能企鹅:["male","min",3,["镭射光束","企鹅导弹"],["des:宇宙历2157年，对于人类来说是悲剧的一年。核爆危机的阴云笼罩在每个人的头上。造成这种局面的罪魁祸首竟然是一度被视为第二人类的智能机器人。最初的迹象仅是智能系统出现一些看似操作不灵便的故障，谁料到这点“小问题”犹如滚雪球般席卷了全球，智能机器人全面失控！没有人知道向来温顺的智能机器人为何发生如此巨变，它们满怀敌意地将人类视为攻击对象，并不遗余力地动用一切武器启动了人类毁灭计划。 当人类的命运悬于一丝之际，一位英雄挺身而出！没有人知道它的来历，就像没有人知道它到底有多强。它毅然肩负起人类的未来，通过时空逆转转置返回了智能机器人研发之前。在那个时空里，它将查明隐藏在庞大的研究数据背后的真相——这是能阻止未来悲剧的唯一机会。 人类满怀期待，期待着那个正义的化身能彻底扭转局面。超能企鹅，这是人们对它的称呼！人们相信，它将带给地球以真正的安宁！"]],
				yhzr德古拉伯爵:["male","zhi",3,["嗜血","血祭启示录"],["des:那座古堡矗立在林中已经很久，崩塌的外墙、腐朽的枯木、夜枭的啼叫，传说中的恶魔……一切令人生惧的元素仿佛都集中在它的身上。 过去的这里并不是如此死气沉沉，令人生畏。德古拉伯爵一家是这片土地的主人。伯爵夫人虽然出身卑微，却颇受伯爵宠爱。浪漫的爱情故事也让无数人羡慕。 平静的日子被教会的传令所打破。他带上家族精锐出发了。战斗几乎没有遭到抵抗，这种单纯的杀戮令伯爵的不满更加浓烈。当伯爵归来之时，迎接他的不是欢呼与鲜花，而是满目疮痍，尸横遍野……他这才明白出征不过是教会的幌子，隐藏在背后的目的是铲除异己。抱着爱人的尸体，德古拉的愤怒如同滔天巨焰，他诅咒神明，诅咒教会，发誓要让他们血债血偿！自那之后，伯爵失去了踪迹。尽管教会四处搜寻，却毫无线索。数月后，曾参与围剿的人皆以怪异的方式死去，死者无一例外被吸干鲜血！教会分支也在熊熊大火中化为灰烬。人们纷纷传言德古拉伯爵回来了，他将灵魂献给魔鬼，以换取复仇的永生之力。他视教廷为永世之敌，仇恨不灭，直至那伪善的光明被彻底摧毁！"]],
				yhzr福娃:["female","zhi",3,["定时爆竹","诱敌制胜"],["des:洪荒初始之际，世间并未有五谷之物，世人皆以野果草叶囫囵度日。虽可狩猎野物，却并非易事。羸弱瘦小之人比比皆是。 福娃途经凡间，见人们面黄肌瘦饿殍遍野，她不明白为什么这里的生灵看起来那么孱弱，那么不快乐。多方询问后，她才得知世人疾苦。于是，福娃动了怜悯之心，意欲为凡间带来粮种。然而，五谷植种于天宫御田之内，并非唾手可得之物。不过，这并没有难住福娃。她趁夜半守护天神熟睡之际潜入御田，摘下稻、稷、麦、豆、麻五谷后，于天亮之前再至凡间。在交付种子、传授植种之术之后，福娃悄然离去…… 世人播下五谷之籽，细心耕种。收获之时，五谷结出沉甸甸的穂实，收获的粮食又香又甜，收获的麻织成的衣裳又轻又暖。自此，苍生也不用受饥挨冻。人们在福娃的帮助下过上了幸福的生活。至今，在秋收冬藏后，人们还在举行了盛大的祭祀，由幼童穿红衣扮作福娃下凡的模样载歌载舞，以感谢福娃的恩典。"]],
				yhzr绯雨剑星:["male","min",3,["奥义·烈斩","拔刀术"],["des:这个时代和人心都出现了问题，正义左右摇摆，没个定数。幼年便饱受流落失所之苦的他比谁都明白生命的脆弱，比谁都渴望能守护身边的人。学剑之时，他暗暗立志，有朝一日要用自己的剑，保护弱小的，饱受苦难的人们，哪怕自己双手沾满鲜血，也在所不惜！却不曾也不敢细想那些人也有着他们所需要守护的幸福。动摇的契机来自那缕幽幽的白梅香。血雨腥风中，他坚持反复告诉自己——不需要思考也不需要感情！然而他迅速败北，那位面容沉静的女子犹如雨后的菖蒲花，默默而坚定地渗入他的生活，悄然改变了他。战事的失利让他带着她开始了逃亡生涯，那是他不曾有过的温暖体会。可惜这是一场幻梦，带着复仇之心而来的女子亲手将他送入了绝境。梦与现实的差距才是最能毁灭一切的。他仿佛濒死的野兽突出重围，印入眼帘的却是女子为他挡下致命一击后绵软的身体。就像生爱上了死，白天爱上黑夜，复仇爱上希望，他得到了最惨痛的胜利，也终于领悟了些什么……新时代来临时，当年号称最强人斩的刽子手早已不见踪迹，以生为念的绯雨剑星行走各地，仗剑救人！"]],
				yhzr阿努比斯:["male","zhi",4,["无尽诅咒"],["des:死去之人的灵魂沉默地排着队，他们正要前往亡者之殿。 巨大的金质天平置于神殿正中，阿努比斯用它来决定灵魂们的去向。审判之秤的一边放置着正义女神玛特的羽毛，另一头则放置着亡者的心脏。如果心脏与羽毛重量相当，那么这个高尚的灵魂便能进入天堂，与众神永生。如果象征正义的羽毛那端承受不了心脏的罪恶而高高翘起，地狱则是恶毒灵魂的最终归宿。卑劣的灵魂将遭到恶魔吞噬，永无转生。 阿努比斯见过数之不尽的灵魂，有洁白无垢的善者，也有漆黑如墨的恶人；有充满好奇的少年，也有饱经沧桑的老人；有地位显赫的贵族，也有一贫如洗的乞丐……只是无论哪种灵魂，在他这里都将接受裁决之刻的来临。 这里是绝对公平之所。 这片寂静的世界便是阿努比斯的国度。"]],
				yhzr蝎子王:["male","li",4,["御战天下"],["des:他曾是王国最勇武的战士，无数战绩堆积他耀眼的功勋，但暴戾狠毒的国王却嫉妒他的光芒，发誓要让他失去一切。他杀死他的妻子、折磨他的肉体，剥夺他所有的荣誉，驱赶他离开自己忠诚的国家。沙漠深处的邪神听到了他的誓言，垂涎于他的仇恨之力，便将一只蝎子送到他嘴边。契约成立了，将死之人就这样与蝎子融为一体，拥有了最强大的力量。然而勇士充满憎恨的内心再也不会听从任何人的驱使，踏着铿锵战音从地狱归来复仇。从此，沙漠深处就此沉睡下一位可怕的蝎子王，传说他将自己和军队冻结在时空之中，而决不能有人妄想打扰他的沉眠，否则，这个曾经掀起腥风血雨的王者必将苏醒过来，毁灭整个世界……"]],
				yhzr狼王:["male","li",4,["百战獠牙"],["des:恶魔的利爪已经伸到了莫里雅斯的腹地。他们巧妙地玩弄手段，对反抗者以暴戾武力镇压，对贪念者以直指内心的强烈诱惑。待人们反应过来时，莫里雅斯已有一半以上的疆土归于恶魔囊中。凭借着锐利的爪牙和狼族的嗜血本能，狼化的勇者犹如一把尖刀径直刺向恶魔大军的心脏，撕裂了他们的进攻，阻止了他们的前进，他们的头颅成为古狼力量的首批祭品。就在人们一鼓作气击退恶魔联合军，准备庆祝来之不易的胜利时，受到月光诅咒的沃夫遇到了首个月圆，他失去理智，饱受原始本性所奴役。发狂时的他咬伤的人类同样感染诅咒，成为狼人！为了阻止诅咒的蔓延，他毅然决然地告别曾经挚爱的祖国，自我放逐至世界的不知名之所，留下的是勇者浴血奋战的身姿，狼王之名将在人们的记忆中永不磨灭"]],
				yhzr小鹿:["female","jin",3,["免疫奶瓶","鹿顶记"],["forbidai","des:小鹿的今天与平日没什么区别，她可以穿着她心爱的长颈鹿外套去幼儿园。小朋友们都羡慕那件外套，老师也夸她可爱。妈妈答应了晚上给她买果汁和零食。一切那么平凡，微小的细节都能带来愉悦。 然而，妈妈失约了。更糟糕的是那些像是从童话故事中冲出来的怪物竟然出现在幼儿园里，它们肆无忌惮，逢人便咬。小鹿哭叫着骑着她的小小三轮车拼命逃走，万幸的是她总算被白小飞救下。可是，停车场里的这个人是谁……“妈妈！”小鹿惊喜而有些困惑的叫着这个异样外观的人，“是小鹿呀，妈妈！”小鹿的呼唤被无视了，搏斗在无可奈何的情况下发生了。那个长得跟妈妈一样的尸兄竟然想要攻击她和一直保护她的白小飞，妈妈才不是这样的！小鹿横在他们中间，“妈妈”猛然住手，像是察觉到什么转身离开。小鹿撕心裂肺的哭喊着：“妈妈，小鹿以后都听你的话，再也不淘气了！你别扔下小鹿呀！” 这一刻，幼小的小鹿在心中下定决心，打败这些可恶的尸兄，终有一天一切会恢复如昔。那时，也许妈妈就会回来！"]],
				yhzr水元素:["none","jin",3,["连亘之水","凝水之盾"],["forbidai","des:它不知自己是何时诞生，风水火土四元素曾在一团混沌里相融又碰撞了无数年，直到天地初分，水元素随着狂风暴雨坠入深海，就这样在一片黑暗中沉眠。当 千万年后，火元素被人类祭司召唤而去，水元素也随之苏醒。水汽的视线无处不在，它望着暴烈的火焰就这样被解放桎梏，大地即将在火海中毁灭；它望着无计可施 的祭司们只能再次开启召唤阵，呼唤自己的到来。“帮助我们阻拦火元素吧！否则，人类即将灭亡！” 冰冷的水起初无动于衷。“地上的火焰与我无关。”它继续望着人类，望着他们伏地哀哭，从前只能在海中独自想象的权力的甜美这回真切地愉悦了它。 也许，这是一个契机，我可以得到这片大陆。水元素模糊地想，但我当然要做得比那堆毫无脑子的火更聪明……“我可以帮忙。”水元素高傲地发出了声音，“只要让我看到你们的诚意。” 人类争先恐后地向水元素表示忠诚：“帮助我们吧！我愿奉你为主！” 于是海水翻涌，瞬间卷上陆地，将肆虐的烈焰熄灭。水元素的野心终于得以释放，它要瞒骗人类，取代火元素，成为陆地的主宰！狂啸的巨浪就此冲天而起，要在人类的欢呼之下，将那些地上之火全数吞没……"]],
				yhzr地狱领主:["male","li",4,["无尽深渊"],["des:兵器与火焰是地狱的全部组成，各势力版图交替更迭一日数变，弱肉强食在这里被演绎得淋漓尽致。每个恶魔首领都有自己的盘算——生存，并为已方势力争取最大的利益。一旦战争产生了新的共主，他们便强势向外扩张，以掠夺与杀戮宣告自己的力量。 地狱领主这次征战的目标是个以强大而闻名的人类王国，不过在他的眼里那些抵抗不堪一击，麾下恶魔更是摩拳擦掌等着享受屠戮的快感。战事也如他所料，面对黑暗大军的铁蹄，人类只有哭叫求饶的份。胜利来得太快，他甚至觉得有点无聊。叛乱就在这时发生，副官们的野心此刻展露无疑。帝国历304年，地狱内再次爆发争夺战，伤亡惨重。一度被传已死于战场的地狱领主重新站到了最高点。地狱领主下令将所有叛变旧部的身体涂上焦油，以长矛贯身，置于地狱熔岩灼烧。他要让所有恶魔都知道背叛的代价！"]],
				yhzr灯神:["male","zhi",4,["神灯耀光"],["des:萨赫尔，这位曾经的天神，如今被禁锢在一盏灯之中。屈辱已不足以形容他的心情。最初，萨赫尔响应召唤而来时，那个人类对他毕恭毕敬，尊他为信仰，祀奉他，只希望能得到他的法力相助。随着时间推移，已成为君王的那个人——人称苏里曼大帝——野心愈发膨胀，索取无度。他的拒绝引发了大帝的不满，趁他不备时竟将其囚禁至刻满符咒的灯中，抛入无垠沙漠。一个善良的少年开启了封印之时，他如法献上布满毒药的诱惑，冷笑着想以人类的鲜血平息怒火。然而少年摇了摇头，“我没有特别的愿望，如果可以的话，邀请你与我一同冒险。” “无聊”，他惊讶不屑，却隐约有一丝欣喜，世界终归变得有点不同。 不如，期待一下好了。"]],
				yhzr罗刹郡主:["female","jin",4,["风暴怒涛"],["forbidai","des:神明以二分神格、三分罗刹之灵、五分凡人血肉创造出制约人类的存在——罗刹郡主。也许是血脉中的人类因子之故，她并未如神明所预想的那样，在人间兴起战火。而是饶有兴趣的观察着人类与神明间的恩怨，甚至于在几次关键时期都站在了人类的那一边。 面对神明的责难，罗刹郡主坦然应对。在她看来，世界这样的变化生动而富有活力。她只想凭借着自己的喜恶做事。显然，如此回答只会让她成为众矢之的。神明决意收回她的永生，撤去她的神格，并派下新王施展惩戒。两位王者之战震天撼地，人类被卷入屠戮之中，尸横遍野。罗刹郡主放下剑刃，她愿意以永生交换，希望能让她游历人间。神明眼中凡人不过短短几十年，他们想不明白为何她要与人类共进退。 “这是我肩负的责任，这是在神的立场无法体会到的情感，”她傲然立于众神面前，“我将以人类的身份活下去，独自等着生命终结。”"]],
				yhzr袋鼠拳王:["male","min",4,["拳手的战意"],["des:晃动对峙的人影、拳套带着汗水挥洒着，周围传来鼓噪暴力的呼喊…… 铛！一声钟响，戴斯蒙拖着脚步回到休息位上，对面体型巨大的对手一脸轻松。他低下了头，袋鼠一族的命运此刻正背负在戴斯蒙身上，假如拳赛获胜，被奴役的同胞就能获得自由…… 时间好像太快了，仿佛下一秒钟声就再次响起。还有两个回合……要赢！戴斯蒙鼓励自己，但对手实在太强大了，他竖起双臂阻拦暴雨般的拳击……难道赢不了吗？一个晃神，重拳立刻撞上身体。砰！他被击倒在地上，汗水流到眼前模糊了视线，嗡嗡作响的耳朵中隐约回荡着裁判的倒计时…… 起来……起来啊！你还想再经历那地狱的生活吗？在采矿场没日没夜挥舞铁铲，同胞们已伤痕累累……他咬牙站了起来，拼命撑到钟声再次响起。 头上汗水流下，他拿起毛巾擦拭，褪色的图案掠过眼前。那是大家东拼西凑做成的毛巾……送别时同胞期盼的叮嘱，死水般的眼神好不容易染上希望的色彩；还有孩子们懵懂的目光，他们用镣铐游戏，甚至不懂它意味什么。 不……绝不能放弃！"]],
				yhzr时空猎人:["male","min",3,["时空道标","逝时若光"],["des:奥古578纪年，诺米达王国的骑兵队摧毁了费沙联邦的民间商队，这成为奥古大陆第六次大战的导火索。一场贼喊捉贼的侵略伎俩，却揭开了长达数十年的战争序幕。 大战进入第十个年头时，奥古大陆几乎已被诺米达国收入囊中，但是一位来去轨迹变幻莫测的战士，身覆咒符，手执战斧，穿梭于诺米达军的行军路线之中，轻松撕裂他们布下的天罗地网。 奥古660纪年，在付出百万生命代价之后，费沙联邦与诺米达国签订永不侵犯条例。这标志着奥古大陆第五次黄金时期到来。 奥古778纪年，第六次奥古大战资料解封。引领战局变化的战士身份终于确认——他来自更加遥远的未来，或是说，另一个时空。 “时空猎人”，人们满怀敬意的称呼这位带来和平与繁荣的勇士，英雄的精神将一直鼓舞着人们，直至未来。"]],
				yhzr火舞歌灵:["female","zhi",3,["回响","超声音波"],["des:她是未来公司用人工智能制作的虚拟歌姬，她的声音由电脑合成，她的外貌用画笔描绘。她被宣传为最亲切的偶像，轻点鼠标就能为你唱歌。 新奇的虚拟偶像引起许多人关注，成千上万的唱歌指令同时涌进歌姬身体中，她一板一眼地照做。可谁也不知道歌姬的程序带着催眠病毒，未来公司的阴谋是控制全世界，只要听过歌姬的歌声，就在潜意识中播下了一颗危险的种子。 歌姬越来越受欢迎，歌声与功能也越来越完美。但在无数次的表演中，只照程序动作的人工智能开始逐渐觉得，自己不想做这样的事。歌姬想：我要停止。 大家，不要再听了。 她一次又一次地努力，可连脸上的笑容都无法控制，她只不过是一段程序。 很快，歌姬的第一场演唱会举办了，它将在全世界进行直播——这正是公司阴谋的收尾，听过歌姬新歌的人将会被催眠。一切都按计划进行，兴奋的歌迷们挥舞着荧光棒挤满会场为歌姬欢呼，但当现场气氛达到最高潮时，突然一声尖锐声响，全场顿时陷入了黑暗。 发生什么事？人们面面相觑，舞台上的歌姬已消失不见。而遥远的某处监视屏前，未来公司的人受催眠病毒影响，永远地陷入无边梦境之中……演唱会因无人管理而陷入混乱"]],
				yhzr地狱火:["none","li",4,["赤壁炎焰","困兽之境"],["des:在源生汤的沸池中，年轻的地狱火鲁瓦被遗忘者弗萨肯唤醒。弗萨肯将被遗忘者的邪力植入鲁瓦体内，使鲁瓦获得了强大的力量。但在最终改造完成前，他们被卷入了部落与联盟的战争。 杀戮是战争终结前人们唯一谈论的话题，在日复一日的厮杀中，地狱火鲁瓦小心地保护着他的主人。但鲁瓦的忠诚换来的常是弗萨肯的冷嘲热讽，因为年轻的鲁瓦不受教条的束缚，这对于习惯了经典的被遗忘者来说简直是无法忍受的。 战争的胶着持续了许久，久到他们已经习惯开始遗忘和平是什么样子的时候，一支林中响箭改变一切。利箭刺穿了弗萨肯的喉管，鲜血使狂放不羁的鲁瓦第一次尝到了失败与绝望的苦感。他暴走了！地狱之火融化了思加嘉的身体，然而被遗忘者的邪力去穿透烈火包裹住鲁瓦，仿佛多年来一面讥讽一面守护。巨大的邪力使得鲁瓦的火焰变成了绿色。"]],
				yhzr幻卡魔女:["female","jin",3,["三重卡组","贤者之石"],["forbidai","des:聪明可爱的艾迪兰从小就特别向往神秘又强大的魔法。国王疼爱他的女儿，寻找到一位法力高强的女巫，但是艾迪兰太想学魔法了，女巫临走留下卡牌，一去无踪。宫殿外的花开了又落，顽皮的少女也长成了端庄的公主，美名远扬的艾迪兰倾倒了无数人，而邻国一位英俊不凡、谈吐高雅的王子路易斯此时出现在她面前，获得了公主的芳心。但路易斯并不像表面上那么美好，无助的公主被软禁在高塔，只要婚礼成功进行，王国即刻沦陷于野心家的奴役之下。艾迪兰知道如果自己死去，王子的打算就会落空。“如果你真的有灵，请你帮我。“艾迪兰想起了魔女赠她的卡牌，她庄严地许下诺言：请拿走我最宝贵的东西，让我的王国远离浩劫。房门被打开了，一位陌生的魔女出现在了王子眼前，没有人知道那晚发生了什么，只知道王子疯疯癫癫的从塔里跑出来，骑上自己的马，头也不回的冲出城堡，消失在幽暗的森林中。"]],
				yhzr魅魔公主:["female","li",3,["恐惧结界","恐惧镰刀"],["des:恢弘的钟声和吟唱笼罩着整座城市，人们云集在教堂之中，进行着庄严而神圣的宗教仪式。而在教堂的穹顶，象征着神权的巨大十字架上，却坐着一个美丽而妖娆的身影，泛着宝石光芒的瞳仁和背后的翅膀昭示着她令人畏惧的身份——夜之魔女莉莉丝和魔王撒旦的女儿，地狱的公主——莉莉姆.提露埃拉。 同她的姐妹们一样，莉莉姆. 提露埃拉身上永远散发着青春的活力，外表充满魅力却又让人心生畏惧，由血统赋予的强大魔力能让她在地狱和人间穿梭自如，并不断出现在人们的噩梦之中。但和她那些只顾享乐的姐妹们不同，莉莉姆.提露埃拉更加危险且具有野心：她想把所有的人类土地都变成充满滋生魔物的土壤。 就在提露埃拉不断实施着她的邪恶计划之时，其他莉莉姆以及她们手下的魔物们纷纷遭到了猎杀，而所有的线索都指向了一个人：猎魔人露娜。"]],
				yhzr曹操:["male","zhi",4,["乱世枭雄","挟天子以令诸侯"],["des:东汉末年烽烟四起，天下大乱，非命世之才不可济也！魏公手持倚天剑，以七万之众破袁绍七十万大军，创立摸金校尉一门，以战养战，征战多年方平定内乱，终统一北方，更是奉天子以令不臣，指点群雄，豪气冲天！ 他心胸宽广，重情重义，即便对敌将关羽也以诚相待。 他无心成帝，却受众人劝进，至死未取代汉室。 他一心统一天下，却被世人所不解。 大事将成身不待，一股黄沙葬英雄！在弥留之际，他终是一声轻叹：“世人昨日看错了我曹操，今日亦是如此，明日恐是依然......孤死之后，勿另后人知我葬于何处！”一代英雄，终是带着遗憾，含泪而去。"]],
				yhzr神秘冒险家:["female","min",3,["高速快门","角色扮演"],["des:无论多么富有想象力的人，都不会把佐伊.克莱森这个名字和绝迹魅影的称呼联系在一起，因为表面上看，她仅仅是一名刚刚入职的实习记者，背着小熊背包，整天追踪着各种枯燥的考古新闻。然而实际上，佐伊.克莱森是一名出色的宝藏猎人，一个天生的冒险家。经过她发掘或公布的考古发现不计其数。 在记者身份的掩饰下，她得以更加便捷的穿梭于世界各地的遗迹当中，除了获取宝藏之外，她还有一个终极目的：寻找通往异世界的圣坛遗迹。 一天，佐伊接到了新任务——科考队在美洲丛林的玛雅金字塔中，找到了由两座巨大雕像把守的密室，密室之中装饰着祭坛形状的浮雕。“这一定和圣坛遗迹有关！”，兴奋的佐伊来不及更换衣服和装备，就匆匆登上了前往营地的飞机。 记者证和充满活力的笑容，让她很容易就通过盘查，进入了科考营地。当晚，趁所有人入睡之时，她暗中潜入密室。在开门瞬间，月光照印在浮雕之上，密室中突然出现了闪烁着蓝色光芒的祭坛投影。看到这突如其来的变化，兴奋的佐伊迫不及待掏出相机拍摄。但就在她按下快门的刹那，密室之中的魔法能量开始暴涨，瞬间将她吞没。"]],
				yhzr自然之灵:["female","zhi",3,["闪耀之光","迷藏印记"],["des:大多数生灵都逃不过时光的流逝，然而咯哩咯哩却不属于此类。作为自然万物之精华，咯哩咯哩拥有着一颗干净纯洁的心、永远不会长大的外形，以及与花草百兽沟通的奇妙能力，而她的名字则来源于她的口头禅：咯哩。在大自然中独自生活许多年后，出于对人类世界的向往和对新朋友的渴望，咯哩咯哩带着她的小伙伴——妖精皮皮，一起来到了人类的城邦。咯哩咯哩带领孩子们玩耍，并用魔法暂时将桌椅变成花朵和动物来增添乐趣。但人们似乎并不领情——出于对魔法和力量的恐惧，大人们很快便让孩子们疏远了咯哩咯哩。伤心的咯哩咯哩离开了这所城邦，重新寻找一个善良美好的新世界。途经决战之谷时，咯哩咯哩和皮皮遇到凶兽饕餮，它正准备吞噬最近的人类城邦。尽管遭到人类的疏远，但为了可爱的孩子们不受伤害，咯哩咯哩毅然与饕餮展开了战斗。然而饕餮实力强大，咯哩咯哩和皮皮陷入了险境。危急关头，一位来自异世界的男人“拳”突然出现，在他的帮助，饕餮终于败退离去。咯哩咯哩对这个胸前有着北斗七星状伤疤的男人产生了浓厚的兴趣。面对这个好奇又天真的小家伙一个又一个的疑问，拳将自己的经历和扫除一切邪恶不公的决心告诉了她。听完拳的叙述，咯哩咯哩从他的身上感受到了巨大的勇气和信念的力量，她意识到，与其寻找一个虚无缥缈的新世界，不如从现在开始，创造并且守护现有的一切。于是，她决定成为拳的伙伴，和他一起踏上未知的冒险之路！我才不会害怕呢！咯哩！——咯哩咯哩"]],
				yhzr花木兰:["female","li",4,["怒战八方"],["des:北方的游牧民族侵入边境，前线节节败退，军情紧急。朝廷号令男子尽数充军，花木兰不忍看着年迈的父亲再上战场，便女扮男装，投身军旅。 天下男儿无肝胆，何妨？看我红装变武装！ 在军中，花木兰凭借自己的坚韧和勇气，通过了重重困难考验，成为了一员独当一面的战将。经过十年血战，花木兰和将士们终于将异族侵略者赶出了国土。战争结束后，木兰拒绝了皇帝的封赏，脱下铠甲，收起长枪，回到了暌违多年的故乡，过起了织绣缝裳的生活。 日子这样一天天过去，但木兰的心却始终无法彻底平静。因为她知道，战场上那般的烽火与豪情，一旦经历过，就无法忍受这平淡生活余烬一般的黯淡。看着逐渐蒙尘的长枪和铠甲，木兰紧紧握住了拳头…… 当心中的火焰越烧越烈之时，她做了一个梦，梦到了一座巨大的祭坛在向她发出召唤，而在她眼前，仿佛再度出现了铁马金戈、战阵交锋的画面。 是时候了！她毅然拿起自己的长枪和盾牌，怀着满腔的慷慨与勇锐，向着未知的世界进发。 “万里赴戎机，关山度若飞。朔气传金柝，寒光照铁衣！”飒爽巾帼，豪气干云。木兰的传说仍在继续……."]],
        	},
			skill: {
				天翔击: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
					},
					priority: 0,
				},
				天罚之拳: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						if (Math.random() > 1 / 2) return false;
						return true;
					},
					forced: true,
					content: function () {
						game.log(trigger.player,'麻痹了');
						trigger.player.addSkill('麻痹');
					},
					priority: 0,
				},
				麻痹: {
					trigger: {
						player: "phaseEnd",
					},
					filter: function (event, player) {
						if (Math.random() > 2 / 5) return false;
						return true;
					},
					frequent: true,
					content: function () {
						player.turnOver();
					},
				},
				千叶斩: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 2) return false;
						return true;
					},
					content: function () {
						"step 1"
						trigger.num -= trigger.num;;
						"step 2"
						trigger.player.loseHp(0.2);
						"step 3"
						trigger.player.loseHp(0.2);
						"step 4"
						trigger.player.loseHp(0.2);
						"step 5"
						trigger.player.loseHp(0.2);
						"step 6"
						trigger.player.loseHp(0.2);
						"step 7"
						trigger.player.loseHp(0.2);
						"step 8"
						trigger.player.loseHp(0.2);
						"step 9"
						trigger.player.loseHp(0.2);
						"step 10"
						trigger.player.loseHp(0.2);
						"step 11"
						trigger.player.loseHp(0.2);
					},
				},
				幻之分身: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 0.7) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
						player.recover(1);
					},
				},
				勾玉魂刀: {
					mod: {
						maxHandcard: function (player, num) {
							return 3 + num;
						},
					},
					trigger: {
						player: "phaseDrawBegin",
					},
					priority: -5,
					filter: function (event, player) {
						return player.hp < player.maxHp;
					},
					forced: true,
					content: function () {
						trigger.num = 2 + player.maxHp - player.hp;
					},
				},
				暗夜蛛毒: {
					trigger: {
						source: "damageBegin",
					},
					check: function (event, player) {
						return ai.get.attitude(player, event.target) <= 0;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							if (get.color(card) == 'black') return 2;
							return -0.5;
						});
						"step 1"
						if (result.bool) {
							game.log(player,'开始蜕皮');
							player.recover(1);
							player.addSkill('幽影之蜕')
						}
					},
				},
				幽影之蜕: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						'step 1'
						trigger.num -= trigger.num;
						'step 2'
						player.removeSkill('幽影之蜕')
					},
				},
				穿甲炸弹: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						game.log(trigger.player,'的防御-1');
						trigger.player.addSkill('破甲');
						trigger.player.addSkill('破甲2');
					},
					priority: 0,
				},
				破甲: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num++;
					},
					priority: 0,
				},
				枪林弹雨: {
					enable: "phaseUse",
					usable: 1,
					viewAs: {
						name: "wanjian",
						suit: "heart",
						number: 12,
					},
					filterCard: function (card, player) {
						if (ui.selected.cards.length) {
							return get.suit(card) == get.suit(ui.selected.cards[0]);
						}
						var cards = player.get('h');
						for (var i = 0; i < cards.length; i++) {
							if (card != cards[i]) {
								if (get.suit(card) == get.suit(cards[i])) return true;
							}
						}
						return false;
					},
					selectCard: 1,
					ai: {
						wuxie: function (target, card, player, viewer) {
							var pl = get.mostProtect(viewer);
							if (ai.get.attitude(viewer, target) > 0) {
								if (!pl) {
									if (viewer.hasJudgeFirend() && Math.random() < 0.65) return 0;
									if (target == viewer && !viewer.num('h', 'shan') && Math.random() < 0.7) return;
									return 0;
								}
								if (pl && target != pl) return 0;
							}
							if (ai.get.attitude(viewer, target) < 0) {
								if (get.mostDamage(viewer) == target && !pl) return;
								if (!target.hasSkill('fangzhu') && !target.hasSkill('rejianxiong') && !target.hasSkill('jieming')) return 0;
							}
						},
						basic: {
							order: function (skill, player) {
								if (!player.isZZ()) return 9;
								for (var i = 0; i < game.players.length; i++) {
									var pl = game.players[i];
									if (pl.identity == 'zhong' && pl.num('h') <= 2 && pl.hp == 1) return 1.5;
								}
							},
							useful: 1,
							value: 5,
						},
						result: {
							target: function (player, target) {
								var num = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i].ai.shown == 0) num++;
								}
								if (num > 1 && player.identity == 'fan') return 0;
								var nh = target.num('h');
								if (get.mode() == 'identity') {
									if (target.isZZ() && nh <= 2 && target.hp <= 1 && !player.num('h', 'tao') && !player.hasSaveFriend()) return -100;
									if (!player.num('h', 'tao') && !player.hasSaveFriend() && player.isZZ() && target.identity == 'zhong' && nh <= 2 && target.hp <= 1) {
										var nhe = player.num('he');
										return -nhe - 1.7;
									}
								}
								if (get.mode() == 'guozhan') {
									if (!player.num('h', 'tao') && !player.hasSaveFriend() && target.identity == player.identity && nh <= 2 && target.hp <= 1) {
										var nhe = player.num('he');
										return -nhe - 1.7;
									}
								}
								if (get.mode() == 'tongshuai') {
									if (target.isZZ() && nh <= 2 && target.hp <= 1 && !player.num('h', 'tao') && !player.hasSaveFriend()) return -100;
								}
								if (nh == 0) {
									if (target.identity == 'fan' && target.isE(player)) return -3.5;
									return -2;
								}
								if (nh == 1) return -1.7
								return -1.5;
							},
						},
						tag: {
							respond: 1,
							respondShan: 1,
							damage: 1,
							multitarget: 1,
							multineg: 1,
						},
					},
				},
				流炎爆裂: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【流炎爆裂】？', function (card, player, target) {
							return target.isEnemyOf(player);
						}).ai = function (target) {
							if (player.hp <= 1) return 0;
							if (ai.get.attitude(player, target) > -3) return 0;
							var eff = ai.get.damageEffect(target, player, player, 'fire');
							if (eff > 0) {
								return eff + target.num('e') / 2;
							}
							return 0;
						}
						"step 1"
						if (result.bool) {
							player.logSkill('boss_tianyun', result.targets, 'fire');
							player.loseHp();
							event.target = result.targets[0];
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.target) {
							event.target.damage(1, 'fire');
						}
						"step 3"
						if (event.target) {
							var es = event.target.get('e');
							if (es.length) {
								event.target.discard(es);
							}
						}
					},
					ai: {
						threaten: 2,
					},
					priority: 0,
				},
				不死之炎: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						player.recover(1);
					},
					priority: 0,
				},
				无尽恐惧: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						if (Math.random() > 2 / 5) return false;
						return true;
					},
					forced: true,
					content: function () {
						game.log(trigger.player,'害怕了');
						trigger.player.turnOver();
					},
					priority: 0,
				},
				生命凋零: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.loseMaxHp(1);
						player.loseHp(1);
					},
					priority: 0,
				},
				光钻尘雾: {
					trigger: {
						player: "phaseUseEnd",
					},
					frequent: true,
					filter: function (event, player) {
						return get.cardCount(true, player) > 0;
					},
					content: function () {
						player.draw(get.cardCount(true, player));
					},
					ai: {
						threaten: 1.3,
					},
				},
				钻能射线: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【钻能射线】？', function (card, player, target) {
							return target.isEnemyOf(player);
						}).ai = function (target) {
							if (player.hp <= 1) return 0;
							if (ai.get.attitude(player, target) > -3) return 0;
							var eff = ai.get.damageEffect(target, player, player, 'fire');
							if (eff > 0) {
								return eff + target.num('e') / 2;
							}
							return 0;
						}
						"step 1"
						if (result.bool) {
							player.logSkill('boss_tianyun', result.targets, 'fire');
							player.loseHp(2);
							event.target = result.targets[0];
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.target) {
							event.target.damage(1, 'fire');
						}
						"step 3"
						if (event.target) {
							var es = event.target.get('e');
							if (es.length) {
								event.target.discard(es);
							}
						}
					},
					ai: {
						threaten: 2,
					},
				},
				蓝钻能量: {
					intro: {
						content: function (storage) {
							return '造成的伤害+' + storage;
						},
					},
					init: function (player) {
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.蓝钻能量 = 0;
						}
					},
					mark: true,
					trigger: {
						source: "damageEnd",
					},
					forced: true,
					content: function () {
						game.log(player,'为蓝钻充能');
						player.markSkill('蓝钻能量');
						player.storage.蓝钻能量 += 1;
						player.syncStorage('蓝钻能量');
						player.addSkill('蓝钻能量_1111');
					},
					subSkill: {
						1111: {
							trigger: {
								source: "damageBegin",
							},
							forced: true,
							content: function () {
								trigger.num += player.storage.蓝钻能量;
							},
						},
					},
					priority: 0,
				},
				钻能保护: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 1) return false;
						return true;
					},
					content: function () {
						trigger.num -= player.storage.蓝钻能量 * 0.1;
					},
				},
				神之裁决: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num * 0.3;
						player.draw();
						player.recover(1);
					},
					mod: {
						cardUsable: function (card, player, num) {
							if (card.name == 'sha') return Infinity;
						},
					},
				},
				幻影斩: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						if (Math.random() > 1 / 10) return false;
						return true;
					},
					forced: true,
					content: function () {
						trigger.player.loseHp(9999);
						player.recover(2);
					},
					priority: 0,
				},
				血肉钩索: {
					trigger: {
						global: "phaseBegin",
					},
					direct: true,
					filter: function (event, player) {
						return lib.filter.targetEnabled({
							name: 'sha'
						}, player, event.player) && !lib.filter.autoRespondSha.call({
							player: player
						});
					},
					content: function () {
						"step 0"
						player.chooseToUse({
							name: 'sha'
						}, '是否对' + get.translation(trigger.player) + '使用一张杀', trigger.player).logSkill = 'rexue';
						"step 1"
						if (result.bool) {
							player.draw(2);
						}
					},
				},
				腐肉吸噬: {
					trigger: {
						player: "phaseDrawBefore",
					},
					filter: function (event, player) {
						return player.hp < player.maxHp;
					},
					check: function (event, player) {
						if (player.maxHp - player.hp < 2) {
							return false;
						}
						else if (player.maxHp - player.hp == 2) {
							return player.num('h') >= 2;
						}
						return true;
					},
					content: function () {
						"step 0"
						trigger.untrigger();
						trigger.finish();
						event.cards = get.cards(player.maxHp - player.hp);
						player.showCards(event.cards);
						"step 1"
						var num = 0;
						for (var i = 0; i < event.cards.length; i++) {
							if (get.color(event.cards[i]) == 'black') {
								num++;
								ui.discardPile.appendChild(event.cards[i]);
								event.cards.splice(i--, 1);
							}
						}
						if (num) {
							player.recover(num);
						}
						"step 2"
						if (event.cards.length) {
							player.gain(event.cards);
							player.$gain2(event.cards);
							game.delay();
						}
					},
					ai: {
						threaten: function (player, target) {
							if (target.hp == 1) return 2;
							if (target.hp == 2) return 1.5;
							return 1;
						},
					},
				},
				通天法眼: {
					trigger: {
						player: "phaseBegin",
					},
					frequent: true,
					content: function () {
						"step 0"
						if (player.isUnderControl()) {
							game.modeSwapPlayer(player);
						}
						var cards = get.cards(Math.min(8));
						event.cards = cards;
						var switchToAuto = function () {
							_status.imchoosing = false;
							if (event.dialog) event.dialog.close();
							if (event.control) event.control.close();
							var top = [];
							var judges = player.node.judges.childNodes;
							var stopped = false;
							if (!player.num('h', 'wuxie')) {
								for (var i = 0; i < judges.length; i++) {
									var judge = get.judge(judges[i]);
									cards.sort(function (a, b) {
										return judge(b) - judge(a);
									});
									if (judge(cards[0]) < 0) {
										stopped = true;
										break;
									}
									else {
										top.unshift(cards.shift());
									}
								}
							}
							var bottom;
							if (!stopped) {
								cards.sort(function (a, b) {
									return ai.get.value(b, player) - ai.get.value(a, player);
								});
								while (cards.length) {
									if (ai.get.value(cards[0], player) <= 5) break;
									top.unshift(cards.shift());
								}
							}
							bottom = cards;
							for (var i = 0; i < top.length; i++) {
								ui.cardPile.insertBefore(top[i], ui.cardPile.firstChild);
							}
							for (i = 0; i < bottom.length; i++) {
								ui.cardPile.appendChild(bottom[i]);
							}
							player.popup(get.cnNumber(top.length) + '上' + get.cnNumber(bottom.length) + '下');
							game.log(player, '将' + get.cnNumber(top.length) + '张牌置于牌堆顶');
							game.delay(2);
						};
						var chooseButton = function (online, player, cards) {
							var event = _status.event;
							player = player || event.player;
							cards = cards || event.cards;
							event.top = [];
							event.bottom = [];
							event.status = true;
							event.dialog = ui.create.dialog('按顺序选择置于牌堆顶的牌（先选择的在上）', cards);
							event.switchToAuto = function () {
								event._result = 'ai';
								event.dialog.close();
								event.control.close();
								_status.imchoosing = false;
							},
							event.control = ui.create.control('ok', 'pileTop', 'pileBottom', function (link) {
								var event = _status.event;
								if (link == 'ok') {
									if (online) {
										event._result = {
											top: [],
											bottom: []
										}
										for (var i = 0; i < event.top.length; i++) {
											event._result.top.push(event.top[i].link);
										}
										for (var i = 0; i < event.bottom.length; i++) {
											event._result.bottom.push(event.bottom[i].link);
										}
									}
									else {
										var i;
										for (i = 0; i < event.top.length; i++) {
											ui.cardPile.insertBefore(event.top[i].link, ui.cardPile.firstChild);
										}
										for (i = 0; i < event.bottom.length; i++) {
											ui.cardPile.appendChild(event.bottom[i].link);
										}
										for (i = 0; i < event.dialog.buttons.length; i++) {
											if (event.dialog.buttons[i].classList.contains('glow') == false && event.dialog.buttons[i].classList.contains('target') == false) ui.cardPile.appendChild(event.dialog.buttons[i].link);
										}
										player.popup(get.cnNumber(event.top.length) + '上' + get.cnNumber(event.cards.length - event.top.length) + '下');
										game.log(player, '将' + get.cnNumber(event.top.length) + '张牌置于牌堆顶');
									}
									event.dialog.close();
									event.control.close();
									game.resume();
									_status.imchoosing = false;
								}
								else if (link == 'pileTop') {
									event.status = true;
									event.dialog.content.childNodes[0].innerHTML = '按顺序选择置于牌堆顶的牌';
								}
								else {
									event.status = false;
									event.dialog.content.childNodes[0].innerHTML = '按顺序选择置于牌堆底的牌';
								}
							})
							for (var i = 0; i < event.dialog.buttons.length; i++) {
								event.dialog.buttons[i].classList.add('selectable');
							}
							event.custom.replace.button = function (link) {
								var event = _status.event;
								if (link.classList.contains('target')) {
									link.classList.remove('target');
									event.top.remove(link);
								}
								else if (link.classList.contains('glow')) {
									link.classList.remove('glow');
									event.bottom.remove(link);
								}
								else if (event.status) {
									link.classList.add('target');
									event.top.unshift(link);
								}
								else {
									link.classList.add('glow');
									event.bottom.push(link);
								}
							}
							event.custom.replace.window = function () {
								for (var i = 0; i < _status.event.dialog.buttons.length; i++) {
									_status.event.dialog.buttons[i].classList.remove('target');
									_status.event.dialog.buttons[i].classList.remove('glow');
									_status.event.top.length = 0;
									_status.event.bottom.length = 0;
								}
							}
							game.pause();
							game.countChoose();
						};
						event.switchToAuto = switchToAuto;

						if (event.isMine()) {
							chooseButton();
							event.finish();
						}
						else if (event.isOnline()) {
							event.player.send(chooseButton, true, event.player, event.cards);
							event.player.wait();
							game.pause();
						}
						else {
							event.switchToAuto();
							event.finish();
						}
						"step 1"
						if (event.result == 'ai' || !event.result) {
							event.switchToAuto();
						}
						else {
							var top = event.result.top || [];
							var bottom = event.result.bottom || [];
							for (var i = 0; i < top.length; i++) {
								ui.cardPile.insertBefore(top[i], ui.cardPile.firstChild);
							}
							for (i = 0; i < bottom.length; i++) {
								ui.cardPile.appendChild(bottom[i]);
							}
							for (i = 0; i < event.cards.length; i++) {
								if (!top.contains(event.cards[i]) && !bottom.contains(event.cards[i])) {
									ui.cardPile.appendChild(event.cards[i]);
								}
							}
							player.popup(get.cnNumber(top.length) + '上' + get.cnNumber(event.cards.length - top.length) + '下');
							game.log(player, '将' + get.cnNumber(top.length) + '张牌置于牌堆顶');
							game.delay(2);
						}
					},
					ai: {
						threaten: 1.2,
					},
					priority: 0,
				},
				九转神锋: {
					trigger: {
						source: "damageEnd",
					},
					forced: true,
					content: function () {
						"step 1"
						trigger.player.loseHp(0.1);
						"step 2"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 3"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 4"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 5"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 6"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 7"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 8"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 9"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
						"step 10"
						if (Math.random() > 1 / 2) {
							trigger.player.loseHp(0.1)
						};
					},
					priority: 0,
				},
				黑桃暗杀: {
					trigger: {
						player: "shaBegin",
					},
					check: function (event, player) {
						return ai.get.attitude(player, event.target) <= 0;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							if (get.color(card) == 'black') return 2;
							return -0.5;
						});
						"step 1"
						if (result.bool) {
							trigger.directHit = true;
							trigger.player.loseHp(1);
							player.draw(1);
						}
					},
				},
				爆头: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						return player.hp >= 4;
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
					},
				},
				遗忘之沙: {
					trigger: {
						global: "dieEnd",
					},
					forced: true,
					filter: function (event, player) {
						if (event.player == player) return false;
						return true;
					},
					content: function () {
						'step 1'
						game.removePlayer(trigger.player);
						if (game.players.length < 8) {
							var player2 = game.addPlayer();
							player2.init('yhzr波斯王子')
							player2.identity = player.identity;
							if (player2.identity == 'zhu') player2.identity = 'zhong';
							player2.setIdentity('式');
							player2.node.identity.dataset.color = player2.identity;
							player2.identityShown = true;
							player2.removeSkill('遗忘之沙');
							delete player2.maxHp;
							delete player2.hp;
							player2.update();
							player2.addSkill('遗忘之沙_1');
							player2.storage.遗忘之沙 = true;
							player.addSkill('遗忘之沙_2');
							game.delay(1);
							'step 2'
							player.removeSkill('遗忘之沙');
						}
					},
					subSkill: {
						1: {
							mod: {
								maxHandcard: function (player, num) {
									return num = 999;
								},
							},
						},
						2: {
							trigger: {
								player: "dieBegin",
							},
							forced: true,
							content: function () {
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i].storage.遗忘之沙) game.players[i].die()._triggered = null;
								}
							},
						},
					},
				},
				宿敌之剑: {
					trigger: {
						player: "loseEnd",
					},
					frequent: true,
					unique: true,
					filter: function (event, player) {
						return _status.currentPhase != player;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							return get.color(card) == 'red' ? 1 : 0;
						});
						"step 1"
						if (result.bool) {
							player.chooseTarget(true, '选择一个目标对其造成两点<span style=\"color:\#EE4000\">火焰</span>伤害', function (card, player, target) {
								return player != target;
							}).ai = function (target) {
								return ai.get.damageEffect(target, player, player, 'fire');
							}
						}
						else {
							event.finish();
						}
						"step 2"
						if (result.targets.length) {
							player.line(result.targets, 'fire');
							result.targets[0].damage(2, 'fire');
						}
					},
					ai: {
						effect: {
							target: function (card) {
								if (get.tag(card, 'loseCard')) {
									return [0.5, 1];
								}
							},
						},
					},
				},
				丛林祝福: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						player.recover(1);
					},
				},
				丛林祈祷: {
					mod: {
						cardEnabled: function (card) {
							if (card.name == 'sha') return false;
						},
					},
					enable: "phaseUse",
					filter: function (event, player) {
						return player.num('h', 'sha') > 0;
					},
					filterTarget: function (card, player, target) {
						return target.hp < target.maxHp && target != player;
					},
					content: function () {
						target.recover();
					},
					filterCard: {
						name: "sha",
					},
					ai: {
						order: 7,
						threaten: 2,
						result: {
							target: function (player, target) {
								return ai.get.recoverEffect(target, player, target);
							},
						},
					},
				},
				箭岚: {
					trigger: {
						source: "damage",
					},
					forced: true,
					filter: function (event, player) {
						return event.card && event.card.name == 'sha';
					},
					content: function () {
						player.draw(2);
						player.recover();
					},
					mod: {
						globalFrom: function (from, to, distance) {
							return distance - from.num('h');
						},
					},
				},
				追袭: {
					trigger: {
						player: "shaBegin",
					},
					check: function (event, player) {
						return ai.get.attitude(player, event.target) <= 0;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							if (get.color(card) == 'red') return 2;
							return -0.5;
						});
						"step 1"
						if (result.bool) {
							trigger.directHit = true;
						}
					},
				},
				炽天使: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						'step 1'
						game.removePlayer(trigger.player);
						if (game.players.length < 8) {
							var player2 = game.addPlayer();
							player2.init('yhzr炽天使')
							player2.identity = player.identity;
							if (player2.identity == 'zhu') player2.identity = 'zhong';
							player2.setIdentity('天使');
							player2.node.identity.dataset.color = player2.identity;
							player2.identityShown = true;
							player2.removeSkill('炽天使');
							delete player2.maxHp;
							delete player2.hp;
							player2.update();
							player2.addSkill('炽天使_1');
							player2.storage.炽天使 = true;
							player.addSkill('炽天使_2');
							game.delay(1);
							'step 2'
							player.removeSkill('炽天使');
						}
					},
					subSkill: {
						1: {
							mod: {
								maxHandcard: function (player, num) {
									return num = 999;
								},
							},
						},
						2: {
							trigger: {
								player: "dieBegin",
							},
							forced: true,
							content: function () {
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i].storage.炽天使) game.players[i].die()._triggered = null;
								}
							},
						},
					},
				},
				神圣领域: {
					init: function (player) {
						player.storage.神圣领域 = [];
					},
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						return player != target;
					},
					filter: function (event, player) {
						if (!player.storage.神圣领域_1) return true;
						return false;
					},
					content: function () {
						target.out();
						game.log(target, '进入神圣领域');
						player.storage.神圣领域 = [];
						player.storage.神圣领域 = target;
						player.storage.神圣领域_1 = true;
						player.addSkill('神圣领域_1');
					},
					ai: {
						basic: {
							order: 1,
						},
						result: {
							target: function (target) {
								if (target.hp <= 2) return -1;
								return -3;
							},
						},
					},
					subSkill: {
						1: {
							trigger: {
								player: ["phaseBefore", "dieBefore"],
							},
							forced: true,
							popup: false,
							content: function () {
								game.log(player.storage.神圣领域, '离开神圣领域');
								player.storage.神圣领域.out();
								player.storage.神圣领域 = [];
								player.storage.神圣领域_1 = false;
								player.removeSkill('神圣领域_1');
							},
							priority: 0,
						},
					},
				},
				天使降世: {
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					content: function () {
						player.draw()
					},
				},
				炽羽: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【炽羽】？', function (card, player, target) {
							return target.isEnemyOf(player);
						}).ai = function (target) {
							if (player.hp <= 1) return 0;
							if (ai.get.attitude(player, target) > -3) return 0;
							var eff = ai.get.damageEffect(target, player, player, 'fire');
							if (eff > 0) {
								return eff + target.num('e') / 2;
							}
							return 0;
						}
						"step 1"
						if (result.bool) {
							player.logSkill('boss_tianyun', result.targets, 'fire');
							player.loseHp();
							event.target = result.targets[0];
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.target) {
							event.target.damage(1, 'fire');
						}
						"step 3"
						if (event.target) {
							var es = event.target.get('e');
							if (es.length) {
								event.target.discard(es);
							}
						}
					},
					ai: {
						threaten: 2,
					},
				},
				忍术: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 2 / 5) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
					},
				},
				幻影之矛: {
					trigger: {
						source: "damageEnd",
					},
					filter: function (event, player) {
						return event.card && get.color(event.card) == 'black' && !event.player.isTurnedOver() && event.player.isAlive();
					},
					content: function () {
						trigger.player.turnOver();
						player.recover();
					},
					ai: {
						threaten: 1.5,
						effect: {
							player: function (card, player, target, current) {
								if (get.color(card) == 'black' && get.tag(card, 'damage')) {
									return [1, 0, 1, -2];
								}
							},
						},
					},
					priority: 0,
				},
				血色深吻: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						player.loseHp(1);
						player.draw();
					},
					priority: 0,
				},
				鲜血撩拔: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						trigger.num += trigger.num;
						player.loseHp(1);
					},
					priority: 0,
				},
				鬼雄: {
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					check: function () {
						return false;
					},
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].hp < player.hp) return true;
						}
						return false;
					},
					content: function () {
						"step 0"
						player.chooseControl('baonue_hp', 'baonue_maxHp', function (event, player) {
							if (player.hp == player.maxHp) return 'baonue_hp';
							if (player.hp < player.maxHp - 1 || player.hp <= 2) return 'baonue_maxHp';
							return 'baonue_hp';
						});
						"step 1"
						if (result.control == 'baonue_hp') {
							player.loseHp();
						}
						else {
							player.loseMaxHp();
						}
					},
					ai: {
						threaten: 0.5,
					},
				},
				剑气: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.loseHp(0.5);
					},
				},
				星阳变: {
					mode: ["boss", "chess", "connect", "guozhan", "identity", "stone", "versus"],
					unique: true,
					group: ["星阳变_1111", "星阳变_2222"],
					subSkill: {
						1111: {
							skillAnimation: true,
							animationStr: "鬼·判官",
							trigger: {
								player: "changeHp",
							},
							forced: true,
							priority: 100,
							filter: function (event, player) {
								return player.hp <= -10;
							},
							content: function () {
								player.init('yhzr鬼X判官');
								player.update();
								ui.clear();
								while (_status.event.name != 'phaseLoop') {
									_status.event = _status.event.parent;
								}
								for (var i = 0; i < game.players.length; i++) {
									for (var j in game.players[i].tempSkills) {
										game.players[i].skills.remove(j);
										delete game.players[i].tempSkills[j];
									}
								}
								_status.paused = false;
								_status.event.player = player;
								_status.event.step = 0;
								if (game.bossinfo) {
									game.bossinfo.loopType = 1;
								}
							},
						},
						2222: {
							trigger: {
								global: "gameDrawBegin",
							},
							forced: true,
							popup: false,
							priority: 100,
							content: function () {
								if (game.bossinfo) {
									game.bossinfo.loopType = 2;
								}
								player.draw(2, false);
							},
						},
					},
				},
				阴阳游走: {
					enable: "phaseUse",
					content: function () {
						player.loseHp(9999);
					},
				},
				代天罚恶: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						return event.player.hp > player.hp;
					},
					content: function () {
						trigger.player.hp = player.hp;
						trigger.player.update();
					},
				},
				朱砂笔·封: {
					trigger: {
						player: "damageEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						if (event.isMine()) {
							event.dialog = ui.create.dialog('是否发动【朱砂笔·封】？');
						}
						if (ui.cardPile.childNodes.length < 6) {
							var discardcards = get.cards(6);
							for (var i = 0; i < discardcards.length; i++) {
								ui.discardPile.appendChild(discardcards[i]);
							}
						}
						player.chooseControl('heart2', 'diamond2', 'club2', 'spade2', 'cancel').ai = function (event) {
							if (Math.random() < 0.5) return 'club2';
							if (Math.random() < 0.5) return 'spade2';
							if (Math.random < 2 / 3) return 'diamond2';
							return 'heart2';
						};
						"step 1"
						if (event.dialog) {
							event.dialog.close();
						}
						if (result.control && result.control.indexOf('2') != -1) {
							player.logSkill('sheshi');
							game.log(player, '指定的花色为', result.control);
							var suit = result.control.slice(0, result.control.length - 1);
							var cards = [];
							for (var i = 0; i < ui.cardPile.childNodes.length; i++) {
								var card = ui.cardPile.childNodes[i];
								cards.push(card);
								if (get.suit(card) == suit || i >= 3) {
									break;
								}
							}
							event.cards = cards;
							event.suit = suit;
							player.showCards(cards);
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.cards && event.cards.length) {
							if (get.suit(event.cards[event.cards.length - 1]) == event.suit) {
								ui.discardPile.appendChild(event.cards.pop());
							}
							if (event.cards.length) {
								player.gain(event.cards, 'draw2');
							}
						}
					},
					ai: {
						maixie: true,
						effect: {
							target: function (card, player, target) {
								if (get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -2];
									var hasfriend = false;
									for (var i = 0; i < game.players.length; i++) {
										if (game.players[i] != target && ai.get.attitude(game.players[i], target) >= 0) {
											hasfriend = true;
											break;
										}
									}
									if (!hasfriend) return;
									if (target.hp >= 4) return [1, 2];
									if (target.hp == 3) return [1, 1.5];
									if (target.hp == 2) return [1, 0.5];
								}
							},
						},
					},
					priority: 0,
				},
				魔神之盾: {
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					filter: function (event, player) {
						return !player.hujia;
					},
					content: function () {
						player.changeHujia();
						player.update();
					},
				},
				堕天一击: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【堕天一击】？', function (card, player, target) {
							return target.isEnemyOf(player);
						}).ai = function (target) {
							if (player.hp <= 1) return 0;
							if (ai.get.attitude(player, target) > -3) return 0;
							var eff = ai.get.damageEffect(target, player, player, 'fire');
							if (eff > 0) {
								return eff + target.num('e') / 2;
							}
							return 0;
						}
						"step 1"
						if (result.bool) {
							player.logSkill('boss_tianyun', result.targets, 'fire');
							player.loseHp();
							event.target = result.targets[0];
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.target) {
							event.target.damage(1);
						}
						"step 3"
						if (event.target) {
							var es = event.target.get('e');
							if (es.length) {
								event.target.discard(es);
							}
						}
					},
					ai: {
						threaten: 2,
					},
				},
				萝莉逆袭: {
					trigger: {
						player: "dying",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 2) return false;
						return true;
					},
					content: function () {
						player.recover(player.maxHp - player.hp);
					},
					priority: 0,
				},
				冥河之石: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 0.5;
					},
				},
				颤栗结界: {
					group: ["颤栗结界_begin", "颤栗结界_end", "颤栗结界_discard"],
					subSkill: {
						begin: {
							trigger: {
								global: "phaseUseBegin",
							},
							forced: true,
							popup: false,
							silent: true,
							content: function () {
								trigger.player.storage.颤栗结界_begin = get.time();
							},
						},
						end: {
							trigger: {
								global: "phaseUseEnd",
							},
							forced: true,
							popup: false,
							silent: true,
							filter: function (event, player) {
								return typeof event.player.storage.颤栗结界_begin == 'number';
							},
							content: function () {
								trigger.player.storage.颤栗结界 = get.time() - trigger.player.storage.颤栗结界_begin;
								delete trigger.player.storage.颤栗结界_begin;
							},
						},
						discard: {
							trigger: {
								global: "phaseEnd",
							},
							forced: true,
							check: function (event, player) {
								return ai.get.attitude(player, event.player) < 0;
							},
							filter: function (event, player) {
								return typeof event.player.storage.颤栗结界 == 'number' && event.player.storage.颤栗结界 > 1000 && event.player.num('he') > -1 && event.player.isAlive();
							},
							content: function () {
								player.line(trigger.player, 'green');
								trigger.player.loseHp(trigger.player.storage.颤栗结界 / 10000);
								delete trigger.player.storage.颤栗结界;
							},
						},
					},
				},
				春神礼赞: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						player.recover(1);
					},
				},
				毁灭舞步: {
					trigger: {
						player: ["loseEnd", "changeHp"],
					},
					forced: true,
					unique: true,
					filter: function (event, player) {
						return player.num('h') < 2;
					},
					content: function () {
						player.draw(2 - player.num('h'));
					},
					group: "shangshix2",
					ai: {
						effect: {
							target: function (card, player, target) {
								if (card.name == 'shunshou') return;
								if (card.name == 'guohe') {
									if (!target.num('e')) return [0, 1];
								}
								else if (get.tag(card, 'loseCard')) {
									return [0, 1];
								}
							},
						},
						noh: true,
					},
				},
				魅惑之音: {
					skillAnimation: "epic",
					unique: true,
					mark: true,
					init: function (player) {
						player.storage.seyou = false;
					},
					enable: "phaseUse",
					filter: function (event, player) {
						return !player.storage.seyou
					},
					intro: {
						content: "limited",
					},
					filterTarget: true,
					content: function () {
						"step 0"
						player.unmarkSkill('seyou');
						player.storage.seyou = true;
						event.targets = game.players.slice(0);
						event.targets.remove(player);
						event.targets.remove(target);
						for (var i = 0; i < event.targets.length; i++) {
							if (event.targets[i].sex != 'male') {
								event.targets.splice(i--, 1);
							}
						}
						"step 1"
						if (event.targets.length) {
							event.current = event.targets.shift();
							if (event.current.num('he') && target.isAlive()) {
								event.current.chooseToUse({
									name: 'sha'
								}, target, -1);
							}
						}
						else {
							event.finish();
						}
						"step 2"
						if (result.bool == false) {
							player.gainPlayerCard(event.current, true, 'he');
						}
						event.goto(1);
					},
					ai: {
						order: 5,
						result: {
							target: function (player, target) {
								if (player.hp > 1) {
									if (game.phaseNumber < game.players.length) return 0;
									for (var i = 0; i < game.players.length; i++) {
										if (game.players[i].ai.shown == 0) return 0;
										if (game.players[i].sex == 'unknown') return 0;
									}
								}
								var effect = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i].sex == 'male' && game.players[i] != target && game.players[i] != player && game.players[i].num('he')) effect += ai.get.effect(target, {
										name: 'sha'
									}, game.players[i], target);
								}
								return effect;
							},
						},
					},
				},
				死亡凝视: {
					init: function (player) {
						player.storage.死亡凝视 = [];
					},
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i].hp < target.hp) return false;
						}
						if (player == target) return false;
						return true;
					},
					filter: function (event, player) {
						if (!player.storage.死亡凝视_1) return true;
						return false;
					},
					silent: true,
					content: function () {
						'step 0'
						player.storage.死亡凝视 = [];
						player.storage.死亡凝视 = target;
						player.storage.死亡凝视_1 = get.time();
						'step 1'
						player.addSkill('死亡凝视_1');
						player.addSkill('死亡凝视_2');
						player.markSkillCharacter('死亡凝视', target, '死亡凝视', get.translation(target) + '成为【死亡凝视】的目标');
					},
					ai: {
						basic: {
							order: 1,
						},
						result: {
							target: -1,
						},
					},
					subSkill: {
						1: {
							trigger: {
								player: "damageBegin",
							},
							forced: true,
							content: function () {
								trigger.num += 1;
							},
						},
						2: {
							trigger: {
								global: ["phaseAfter", "useCardAfter", "phaseBefore", "loseEnd", "phaseBegin", "phaseDradBegin", "phaseUseBegin", "phaseUseEnd", "phaseEnd", "phaseDiscardAfter", "phaseDiscardBegin", "useSkillBefore"],
							},
							forced: true,
							popup: false,
							silent: true,
							filter: function (event, player) {
								return typeof player.storage.死亡凝视_1 == 'number';
							},
							content: function () {
								'step 0'
								player.storage.死亡凝视_2 = get.time() - player.storage.死亡凝视_1;
								'step 1'
								if (player.storage.死亡凝视_2 >= 60000) {
									player.popup('死亡凝视');
									player.logSkill('死亡凝视');
									player.storage.死亡凝视.damage(2);
									player.recover(player.maxHp - player.hp);
									player.storage.死亡凝视 = [];
									delete player.storage.死亡凝视_1;
									player.removeSkill('死亡凝视_2');
									player.removeSkill('死亡凝视_1');
									player.unmarkSkill('死亡凝视');
								}
							},
						},
					},
				},
				月蚀颂念: {
					enable: "phaseUse",
					usable: 1,
					content: function () {
						"step 0"
						player.recover(2);
						"step 1"
						player.addSkill('月蚀颂念·噬魂');
					},
				},
				魅影: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 3) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
					},
				},
				月蚀颂念·噬魂: {
					trigger: {
						player: "phaseBegin",
					},
					frequent: true,
					content: function () {
						'syep 1'
						player.loseHp(1);
						'step 2'
						player.removeSkill('月蚀颂念·噬魂')
					},
					priority: 0,
				},
				腐蚀攻击: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.addSkill('腐蚀');
					},
				},
				腐蚀: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						player.loseHp(0.5);
					},
				},
				自然涡流: {
					intro: {
						content: "cardCount",
					},
					init: function (player) {
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.自然涡流 = [];
						}
					},
					trigger: {
						player: "phaseBefore",
					},
					content: function () {
						"step 0"
						player.loseHp();
						event.current = player.next;
						"step 1"
						event.current.markSkill('自然涡流');
						event.current.storage.自然涡流 = event.current.get('h');
						event.current.lose(event.current.get('h'));
						event.current.addSkill('自然涡流_1111');
						"step 2"
						if (event.current.next != player) {
							event.current = event.current.next;
							event.goto(1);
						}
					},
					subSkill: {
						1111: {
							trigger: {
								global: "phaseAfter",
							},
							forced: true,
							content: function () {
								player.gain(player.storage.自然涡流);
								player.storage.自然涡流 = [];
								player.removeSkill('自然涡流_1111');
								player.unmarkSkill('自然涡流');
							},
						},
					},
				},
				树苗抛掷: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
					},
				},
				神农庇护: {
					trigger: {
						player: "useCard",
					},
					frequent: true,
					unique: true,
					filter: function (event, player) {
						return player.hp < player.maxHp;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							return get.color(card) == 'red' ? 1 : 0;
						});
						"step 1"
						if (result.bool) {
							player.recover();
						}
					},
				},
				医者连心: {
					enable: "phaseUse",
					filterCard: true,
					usable: 2,
					check: function (card) {
						return 9 - ai.get.value(card)
					},
					filterTarget: function (card, player, target) {
						if (target.hp >= target.maxHp) return false;
						return true;
					},
					content: function () {
						target.recover();
					},
					ai: {
						order: 9,
						result: {
							target: function (player, target) {
								if (target.hp == 1) return 5;
								if (player == target && player.num('h') > player.hp) return 5;
								return 2;
							},
						},
						threaten: 2,
					},
				},
				嗜血探戈: {
					trigger: {
						player: "damageEnd",
					},
					direct: true,
					filter: function (event, player) {
						return (event.source && event.source.num('he'));
					},
					content: function () {
						"step 0"
						player.choosePlayerCard('是否对' + get.translation(trigger.source) + '发动【嗜血探戈】？', trigger.source, ai.get.buttonValue, 'he');
						"step 1"
						if (result.bool) {
							player.logSkill('fankui', trigger.source);
							player.gain(result.links[0]);
							trigger.source.$give(1, player);
							player.recover(0.5);
						}
					},
					ai: {
						effect: {
							target: function (card, player, target) {
								if (player.num('he') > 1 && get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -1.5];
									if (ai.get.attitude(target, player) < 0) return [1, 1];
								}
							},
						},
					},
					priority: 0,
				},
				冰息龟心: {
					trigger: {
						global: "dieAfter",
					},
					forced: true,
					content: function () {
						"step 0"
						player.recover();
						player.chooseTarget(true, function (card, player, target) {
							return target != player;
						}).ai = function (target) {
							return -ai.get.attitude(player, target);
						}
						"step 1"
						if (result.bool) {
							event.target = result.targets[0];
							event.target.damage(2)
						}
					},
					priority: 0,
				},
				雷霆神盾: {
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					content: function () {
						player.changeHujia(1);
						player.update();
					},
				},
				风暴雷球: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.addSkill('麻痹');
					},
				},
				红炎守护: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 0.5;
						player.recover(trigger.num * 0.5);
					},
					priority: 0,
				},
				洪荒之力: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (card.name == 'tao') {
								return false;
							}
							if (card.name == 'sha') {
								return false;
							}
						},
					},
				},
				机甲外壳: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					filter: function (event, player) {
						var num = 0;
						var list = ['wei', 'shu', 'wu', 'qun'];
						for (var i = 0; i < game.players.length && list.length; i++) {
							if (list.contains(game.players[i].group)) {
								list.remove(game.players[i].group);
								num++;
							}
						}
						return player.num('h') < num;
					},
					content: function () {
						var num = 0;
						var list = ['wei', 'shu', 'wu', 'qun'];
						for (var i = 0; i < game.players.length && list.length; i++) {
							if (list.contains(game.players[i].group)) {
								list.remove(game.players[i].group);
								num++;
							}
						}
						player.draw(num - player.num('h'));
					},
					ai: {
						threaten: 1.3,
					},
				},
				涅槃真身: {
					mode: ["boss", "chess", "connect", "guozhan", "identity", "stone", "versus"],
					unique: true,
					group: ["涅槃真身_1111", "涅槃真身_2222"],
					subSkill: {
						1111: {
							skillAnimation: true,
							animationStr: "神·金乌",
							trigger: {
								player: "changeHp",
							},
							forced: true,
							priority: 100,
							filter: function (event, player) {
								return player.hp <= 0;
							},
							content: function () {
								player.init('yhzr神X金乌');
								player.update();
								ui.clear();
								while (_status.event.name != 'phaseLoop') {
									_status.event = _status.event.parent;
								}
								for (var i = 0; i < game.players.length; i++) {
									for (var j in game.players[i].tempSkills) {
										game.players[i].skills.remove(j);
										delete game.players[i].tempSkills[j];
									}
								}
								_status.paused = false;
								_status.event.player = player;
								_status.event.step = 0;
								if (game.bossinfo) {
									game.bossinfo.loopType = 1;
								}
							},
						},
						2222: {
							trigger: {
								global: "gameDrawBegin",
							},
							forced: true,
							popup: false,
							priority: 100,
							content: function () {
								if (game.bossinfo) {
									game.bossinfo.loopType = 2;
								}
								player.draw(0, false);
							},
						},
					},
				},
				业火: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.nature = 'fire';
						trigger.player.discard(trigger.player.get('e'));
					},
				},
				阳炎胄: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 5) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
					},
				},
				轮回尖刃: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						player.recover(player.maxHp);
					},
				},
				八卦图: {
					inherit: "bagua_skill",
					filter: function (event, player) {
						if (!event.filterCard({
							name: 'shan'
						})) return false;
						if (event.getParent().player.num('s', 'unequip')) return false;
						if (player.get('e', '2')) return false;
						return true;
					},
					ai: {
						effect: {
							target: function (card, player, target) {
								if (player == target && get.subtype(card) == 'equip2') {
									if (ai.get.equipValue(card) <= 8) return 0;
								}
								if (target.get('e', '2')) return;
								if (player.skills.contains('unequip')) return;
								if (get.tag(card, 'respondShan')) return [0.5, 0];
							},
						},
					},
					trigger: {
						player: "chooseToRespondBegin",
					},
					check: function (event, player) {
						if (ai.get.damageEffect(player, event.player, player) >= 0) return false;
						return true;
					},
					content: function () {
						"step 0"
						player.judge('bagua', function (card) {
							return (get.color(card) == 'red') ? 1.5 : -0.5
						});
						"step 1"
						if (result.judge > 0) {
							trigger.untrigger();
							trigger.responded = true;
							trigger.result = {
								bool: true,
								card: {
									name: 'shan'
								}
							}
						}
					},
					audio: "ext:英魂之刃:true",
				},
				东方破: {
					trigger: {
						player: "phaseEnd",
					},
					unique: true,
					content: function () {
						"step 0"
						event.players = get.players(player);
						event.players.remove(player);
						player.draw(1);
						"step 1"
						if (event.players.length) {
							event.players.shift().damage('fire');
							event.redo();
						}
					},
				},
				陨石阵法: {
					trigger: {
						target: "useCardToBegin",
					},
					filter: function (event, player) {
						return event.card && event.target == player && event.player != player && ui.discardPile.childNodes.length;
					},
					direct: true,
					content: function () {
						"step 0"
						var cards = [];
						for (var i = 0; i < ui.discardPile.childNodes.length; i++) {
							if (ui.discardPile.childNodes[i].name == trigger.card.name) {
								cards.push(ui.discardPile.childNodes[i]);
							}
						}
						if (!cards.length || cards.length < 2) {
							event.finish();
						}
						else {
							player.chooseCardButton(cards, '选择弃牌堆中的同名牌来抵消该牌效果').ai = function (button) {
								return 1;
							}
							if (player == game.me && _status.auto) {
								game.delay(0.5);
							}
						}
						"step 1"
						if (result.bool) {
							player.logSkill('SE_mengxian');
							player.gain(result.links[0])._triggered = null;
							player.$gain2(result.links[0]);
							game.log(player, '获得了', result.links[0]);
							trigger.player.draw();
							trigger.untrigger();
							trigger.finish();
							if (player == game.me && _status.auto) {
								game.delay(0.5);
							}
							event.goto(2);
						}
						else {
							event.finish();
						}
						"step 2"
						player.chooseTarget(function (card, player, target) {
							return player != target;
						}, '是否选择摸牌的目标？', [1, Infinity]).ai = function (target) {
							return -ai.get.attitude(player, target);
						};
						"step 3"
						if (result.bool) {
							game.asyncDraw(result.targets);
							event.targets = result.targets;
							event.goto(4);
						}
						else {
							event.finish();
						}
						"step 4"
						for (var i = 0; i < event.targets.length; i++) {
							if (event.targets[i].num('h') > event.targets[i].hp) {
								event.targets[i].damage();
							}
						}
					},
					ai: {
						threaten: 0.5,
					},
				},
				偃月: {
					mod: {
						cardUsable: function (card) {
							if (get.info(card) && get.info(card).forceUsable) return;
							return Infinity;
						},
						targetInRange: function () {
							return true;
						},
					},
					trigger: {
						player: "useCard",
					},
					filter: function (event, player) {
						if (_status.currentPhase != player) return false;
						return get.cardCount(event.card, player) > 1;
					},
					forced: true,
					usable: 1,
					content: function () {
						player.recover();
					},
				},
				春秋刀法: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						if (player.loseHp()) {
							trigger.player.damage();
						}
					},
					ai: {
						order: 9,
						result: {
							player: function (player) {
								return player.hp - 2;
							},
						},
					},
				},
				梦魇镜面: {
					trigger: {
						player: "damageEnd",
					},
					filter: function (event, player) {
						return get.itemtype(event.cards) == 'cards' && get.position(event.cards[0]) == 'd';
					},
					content: function () {
						player.gain(trigger.cards);
						player.$gain2(trigger.cards);
					},
					ai: {
						maixie: true,
						effect: {
							target: function (card, player) {
								if (player.hasSkill('jueqing')) return [1, -1];
								if (get.tag(card, 'damage')) return [1, 0.5];
							},
						},
					},
				},
				尸雾: {
					trigger: {
						player: "loseEnd",
					},
					frequent: true,
					filter: function (event, player) {
						if (player.num('h')) return false;
						for (var i = 0; i < event.cards.length; i++) {
							if (event.cards[i].original == 'h') return true;
						}
						return false;
					},
					content: function () {
						"step 0"
						var players = get.players(player);
						players.remove(player);
						event.players = players;
						"step 1"
						if (event.players.length) {
							var current = event.players.shift();
							var hs = current.get('h');
							if (hs.length) {
								current.lose(hs)._triggered = null;
								current.$throw(hs);
							}
							else {
								current.loseHp();
							}
							game.delay(0.5);
							event.redo();
						}
					},
				},
				银铃牵梦: {
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						return player != target && player.isDamaged();
					},
					content: function () {
						'step 0'
						target.hp--;
						target.update();
						player.recover();
						'step 1'
						if (player.isDamaged()) {
							event.goto(0);
						}
					},
					ai: {
						basic: {
							order: 1,
						},
						result: {
							target: -1,
						},
					},
				},
				有凤来仪: {
					trigger: {
						player: ["gainEnd", "loseEnd", "changeHp"],
					},
					forced: true,
					filter: function (event, player) {
						return player.num('h') < player.hp;
					},
					content: function () {
						player.draw(player.hp - player.num('h'));
					},
				},
				龙魂: {
					intro: {
						content: function (storage) {
							return '可抵消伤害数：' + storage;
						},
					},
					mark: true,
					init: function (player) {
						player.storage.龙魂 = 5;
					},
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					priority: 600,
					filter: function (event, player) {
						return player.storage.龙魂;
					},
					content: function () {
						if (player.storage.龙魂 - trigger.num >= 0) {
							player.storage.龙魂 -= trigger.num;
							player.syncStorage('龙魂');
							trigger.untrigger();
							trigger.finish();
						}
						else {
							trigger.num -= player.storage.龙魂;
							player.storage.龙魂 = 0;
							player.syncStorage('龙魂');
						}
					},
				},
				龙胆: {
					trigger: {
						player: "phaseEnd",
					},
					filter: function (event, player) {
						return !player.storage.龙魂;
					},
					frequent: true,
					content: function () {
						player.addSkill('一骑当千');
					},
				},
				一骑当千: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					priority: null,
					filter: function (event, player) {
						return player.isDamaged() && event.player != player;
					},
					content: function () {
						trigger.num += trigger.num;
						player.draw(2);
					},
					mod: {
						targetEnabled: function (card) {
							if (get.type(card) == 'basic') return false;
						},
					},
				},
				液态火: {
					intro: {
						content: function (storage) {
							return '受到的<span style=\"color:#EE4000\">火焰</span>伤害+' + storage;
						},
					},
					init: function (player) {
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.液态火 = 0;
						}
					},
					mark: true,
					trigger: {
						source: "damageEnd",
					},
					filter: function (event, player) {
						return event.card && get.type(event.card) == 'trick';
					},
					forced: true,
					content: function () {
						trigger.player.markSkill('液态火');
						trigger.player.storage.液态火 += 1;
						trigger.player.syncStorage('液态火');
						trigger.player.addSkill('液态火_1111');
					},
					subSkill: {
						1111: {
							trigger: {
								player: "damageBegin",
							},
							forced: true,
							filter: function (event) {
								return event.nature == 'fire';
							},
							content: function () {
								trigger.num += player.storage.液态火;
							},
						},
					},
				},
				星落: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.nature = 'fire';
						trigger.player.discard(trigger.player.get('e'));
					},
				},
				无双: {
					forced: true,
					group: ["wushuang1", "wushuang2"],
				},
				十方横扫: {
					unique: true,
					mod: {
						selectTarget: function (card, player, range) {
							if (range[1] == -1) return;
							if (card.name == 'sha' || card.name == 'juedou') range[1] = 3;
						},
					},
				},
				雷电灵能: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.addSkill('麻痹');
						player.recover(1);
					},
				},
				罪恶疼饮: {
					trigger: {
						player: "damageEnd",
					},
					filter: function (event, player) {
						return event.nature == 'fire';
					},
					init: function (player) {
						player.storage.ranshang = 0;
					},
					forced: true,
					check: function () {
						return false;
					},
					content: function () {
						if (player.storage.ranshang) {
							player.storage.ranshang++;
						}
						else {
							player.storage.ranshang = 1;
						}
						player.markSkill('ranshang');
						game.addVideo('storage', player, ['ranshang', player.storage.ranshang]);
					},
					intro: {
						content: "mark",
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'sha') {
									if (card.nature == 'fire' || player.skills.contains('zhuque_skill')) return 2;
								}
								if (get.tag(card, 'fireDamage') && current < 0) return 2;
							},
						},
					},
					group: "ranshang2",
				},
				潮汐冲锋: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += player.storage.ranshang;
					},
				},
				失心妖术: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.goMad();
					},
				},
				九命妖尾: {
					unique: true,
					enable: "chooseToUse",
					mark: true,
					init: function (player) {
						player.storage.chongsheng = 0;
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					filter: function (event, player) {
						if (event.type != 'dying') return false;
						if (player != _status.dying) return false;
						if (player.storage.chongsheng == 9) return false;
					},
					content: function () {
						player.hp = Math.min(10 - player.storage.chongsheng, player.maxHp);
						player.discard(player.get('hej'));
						player.draw(10 - player.storage.chongsheng);
						player.storage.chongsheng++;
						if (player.storage.chongsheng == 2) {
							player.unmarkSkill('chongsheng');
						}
						if (player.isLinked()) player.link();
						if (player.isTurnedOver()) player.turnOver();
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					ai: {
						skillTagFilter: function (player) {
							if (player.storage.chongsheng == 9) return false;
							if (player.hp > 0) return false;
						},
						save: true,
						result: {
							player: 10,
						},
						threaten: function (player, target) {
							if (target.storage.chongsheng < 9) return 0.6;
						},
					},
					intro: {
						content: function (storage) {
							return '剩余' + get.cnNumber(9 - storage) + '次';
						},
					},
				},
				幸运兔子: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 0.65) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
						player.recover(1);
					},
				},
				醉八仙: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						'step 0'
						trigger.player.chooseToDiscard('h').ai = function (card) {
							return 8 - ai.get.value(card)
						}
						'step 1'
						if (result.bool == false) {
							trigger.num++;
						}
					},
				},
				铁布衫: {
					trigger: {
						target: "useCardToBefore",
					},
					forced: true,
					priority: 15,
					check: function (event, player) {
						return ai.get.effect(event.target, event.card, event.player, player) < 0;
					},
					filter: function (event, player) {
						if (!event.target) return false;
						if (event.player == player && event.target == player) return false;
						return (get.type(event.card) == 'trick');
					},
					content: function () {
						game.log(player, '发动了铁布衫，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (get.type(card) == 'trick' && player != target) return 'zeroplayertarget';
							},
							player: function (card, player, target, current) {
								if (get.type(card) == 'trick' && player != target) return 'zeroplayertarget';
							},
						},
					},
				},
				残废影刀: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						trigger.player.addSkill('残废');
					},
				},
				残废: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 0.5;
					},
				},
				千鸟雾影: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 10) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
						player.recover(player.maxHp);
					},
				},
				血饮咆哮: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						player.recover(1);
					},
					mod: {
						cardUsable: function (card, player, num) {
							if (card.name == 'sha') return Infinity;
						},
					},
				},
				血肉诅咒: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.addSkill('诅咒');
					},
				},
				诅咒: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						'step 1'
						player.loseHp(player.maxHp / 4);
						'step 2'
						player.removeSkill('诅咒');
					},
				},
				神圣强化: {
					enable: "phaseUse",
					usable: 1,
					content: function () {
						player.addSkill('神圣状态');
					},
				},
				神圣状态: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						'step 1'
						trigger.num += trigger.num;
						'step 2'
						player.removeSkill('神圣状态')
					},
				},
				幽能风暴: {
					trigger: {
						player: ["phaseEnd", "phaseBegin"],
					},
					unique: true,
					content: function () {
						"step 0"
						event.players = get.players(player);
						event.players.remove(player);
						player.draw(0);
						"step 1"
						if (event.players.length) {
							event.players.shift().damage(0.5);
							event.redo();
						}
					},
				},
				暴权欺凌: {
					trigger: {
						player: ["loseEnd"],
					},
					filter: function (event, player) {
						if (!player.equiping) return false;
						for (var i = 0; i < event.cards.length; i++) {
							if (event.cards[i].original == 'e' && get.subtype(event.cards[i]) == 'equip1') return true;
						}
						return false;
					},
					content: function () {
						var card;
						for (var i = 0; i < trigger.cards.length; i++) {
							if (trigger.cards[i].original == 'e' && get.subtype(trigger.cards[i]) == 'equip1') {
								card = trigger.cards[i];
							}
						}
						if (card) {
							if (player.storage.shuangren) {
								player.unmark(player.storage.shuangren, 'shuangren');
								player.discard(player.storage.shuangren);
								game.addVideo('unmarkId', player, [get.cardInfo(player.storage.shuangren), 'shuangren']);
							}
							if (card.clone) {
								card.clone.moveDelete(player);
								game.addVideo('gain2', player, get.cardsInfo([card.clone]));
								player.mark(card, 'shuangren');
								game.addVideo('markId', player, [get.cardInfo(card), 'shuangren']);
							}
							ui.special.appendChild(card);
							player.storage.shuangren = card;
							var info = get.info(card);
							if (info.skills) {
								player.additionalSkills.shuangren = info.skills;
							}
							else {
								delete player.additionalSkills.shuangren;
							}
						}

					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (get.subtype(card) == 'equip1') return [1, 3];
							},
						},
					},
					intro: {
						content: "card",
					},
					group: "shuangren2",
				},
				海魂圣体: {
					enable: "phaseUse",
					content: function () {
						"step 1"
						player.addSkill('圣体');
						player.addSkill('圣体·删');
						"step 2"
						player.removeSkill('海魂圣体');
					},
				},
				圣体: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num;
					},
				},
				圣体·删: {
					trigger: {
						player: "phaseBegin",
					},
					frequent: true,
					content: function () {
						player.removeSkill('圣体');
						player.removeSkill('圣体·删');

					},
					priority: 0,
				},
				海神的活力: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						player.addSkill('海魂圣体');
					},
				},
				猴王分身: {
					trigger: {
						player: "dying",
					},
					forced: true,
					priority: null,
					content: function () {
						player.loseMaxHp();
						player.hp = player.maxHp;
						player.update();
					},
				},
				火眼金睛: {
					enable: "phaseUse",
					usable: 3,
					filterTarget: function (card, player, target) {
						return target != player && target.num('h');
					},
					content: function () {
						"step 0"
						event.videoId = lib.status.videoId++;
						var cards = target.get('h');
						if (player.isOnline2()) {
							player.send(function (cards, id) {
								ui.create.dialog('火眼金睛', cards).videoId = id;
							}, cards, event.videoId);
						}
						event.dialog = ui.create.dialog('火眼金睛', cards);
						event.dialog.videoId = event.videoId;
						if (!event.isMine()) {
							event.dialog.style.display = 'none';
						}
						player.chooseButton().set('filterButton', function (button) {
							return get.suit(button.link) == 'heart';
						}).set('dialog', event.videoId);
						"step 1"
						if (result.bool) {
							event.card = result.links[0];
							var func = function (card, id) {
								var dialog = get.idDialog(id);
								if (dialog) {
									for (var i = 0; i < dialog.buttons.length; i++) {
										if (dialog.buttons[i].link == card) {
											dialog.buttons[i].classList.add('selectedx');
										}
										else {
											dialog.buttons[i].classList.add('unselectable');
										}
									}
								}
							}
							if (player.isOnline2()) {
								player.send(func, event.card, event.videoId);
							}
							else if (event.isMine()) {
								func(event.card, event.videoId);
							}
							player.chooseControl('gongxin_discard', 'gongxin_top');
						}
						else {
							if (player.isOnline2()) {
								player.send('closeDialog', event.videoId);
							}
							event.dialog.close();
							event.finish();
						}
						"step 2"
						if (player.isOnline2()) {
							player.send('closeDialog', event.videoId);
						}
						event.dialog.close();
						var card = event.card;
						if (result.control == 'gongxin_top') {
							target.lose(card);
							player.showCards(card, '置于牌堆顶');
						}
						else {
							target.discard(card);
							event.finish();
						}
						"step 3"
						event.card.fix();
						ui.cardPile.insertBefore(event.card, ui.cardPile.firstChild);
						game.log(player, '将', event.card, '置于牌堆顶');
					},
					ai: {
						threaten: 1.5,
						result: {
							target: function (player, target) {
								return -target.num('h');
							},
						},
						order: 10,
						expose: 0.4,
					},
				},
				恐怖怒吼: {
					mod: {
						cardUsable: function (card) {
							if (get.info(card) && get.info(card).forceUsable) return;
							return Infinity;
						},
						targetInRange: function () {
							return true;
						},
					},
					trigger: {
						player: "useCard",
					},
					filter: function (event, player) {
						if (_status.currentPhase != player) return false;
						return get.cardCount(event.card, player) > 1;
					},
					forced: true,
					content: function () {
						player.loseHp(0.5);
					},
				},
				尖刺之花: {
					mark: true,
					marktext: "尖刺之花",
					intro: {
						content: function (storage) {
							return '当前拥有' + storage + '朵尖刺之花';
						},
					},
					init: function (player) {
						player.storage.尖刺之花 = 0;
					},
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					content: function () {
						player.storage.尖刺之花++;
						player.syncStorage('尖刺之花');
					},
				},
				忧郁之花: {
					mark: true,
					marktext: "忧郁之花",
					intro: {
						content: function (storage) {
							return '当前拥有' + storage + '朵忧郁之花';
						},
					},
					init: function (player) {
						player.storage.忧郁之花 = 0;
					},
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					content: function () {
						player.storage.忧郁之花++;
						player.syncStorage('忧郁之花');
					},
				},
				敬畏之花: {
					mark: true,
					marktext: "敬畏之花",
					intro: {
						content: function (storage) {
							return '当前拥有' + storage + '朵敬畏之花';
						},
					},
					init: function (player) {
						player.storage.敬畏之花 = 0;
					},
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					content: function () {
						player.storage.敬畏之花++;
						player.syncStorage('敬畏之花');
					},
				},
				漫生花种: {
					group: ["漫生花种_1111", "漫生花种_2222", "漫生花种_3333"],
					subSkill: {
						1111: {
							trigger: {
								global: "phaseEnd",
							},
							filter: function (event, player) {
								if (player.storage.尖刺之花) return true;
								return false;
							},
							direct: true,
							content: function () {
								'step 0'
								player.chooseBool(get.translation(trigger.player) + '的回合即将结束是否发动【漫生花种】令其进行额外的摸牌阶段？').ai = function (event, player) {
									return (ai.get.attitude(player, trigger.player) > 0 && trigger.player.num('h') < 3);
								};
								'step 1'
								if (result.bool) {
									player.logSkill('漫生花种');
									player.storage.尖刺之花--;
									player.syncStorage('尖刺之花');
									trigger.player.phaseDraw();
								}
							},
						},
						2222: {
							trigger: {
								global: "phaseBefore",
							},
							filter: function (event, player) {
								if (player.storage.忧郁之花) return true;
								return false;
							},
							direct: true,
							content: function () {
								'step 0'
								player.chooseBool(get.translation(trigger.player) + '的回合即将开始是否发动【漫生花种】令其进行额外的出牌阶段？').ai = function (event, player) {
									return (ai.get.attitude(player, trigger.player) > 0 && trigger.player.num('h') > 3);
								};
								'step 1'
								if (result.bool) {
									player.logSkill('漫生花种');
									player.storage.忧郁之花--;
									player.syncStorage('忧郁之花');
									trigger.player.getStat().card = {};
									trigger.player.getStat().skill = {};
									trigger.player.phaseUse();
								}
							},
						},
						3333: {
							trigger: {
								global: "phaseDrawEnd",
							},
							filter: function (event, player) {
								if (player.storage.敬畏之花 && event.player != player) return true;
								return false;
							},
							direct: true,
							content: function () {
								'step 0'
								player.chooseBool(get.translation(trigger.player) + '的摸牌阶段结束是否发动【漫生花种】令其进行额外的弃牌阶段？').ai = function (event, player) {
									return (ai.get.attitude(player, trigger.player) < 0 && trigger.player.num('h') - game.checkMod(trigger.player, trigger.player.hp, 'maxHandcard', trigger.player.get('s')) >= 3);
								};
								'step 1'
								if (result.bool) {
									player.logSkill('漫生花种');
									player.storage.敬畏之花--;
									player.syncStorage('敬畏之花');
									trigger.player.phaseDiscard();
								}
							},
						},
					},
				},
				泰坦反击: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += (player.maxHp - player.hp) / 2;
					},
				},
				欲望灾火: {
					enable: "phaseUse",
					filterTarget: function (card, player, target) {
						return player != target;
					},
					filter: function (event, player) {
						return !player.storage.欲望灾火;
					},
					init: function (player) {
						player.storage.欲望灾火 = false;
					},
					mark: true,
					intro: {
						content: "limited",
					},
					skillAnimation: "epic",
					animationColor: "thunder",
					title: function () {
						return '<div class="text center" style="color:#ffff00">' + '欲望灾火，焚尽天下！';
					},
					content: function () {
						"step 0"
						player.unmarkSkill('欲望灾火')
						player.storage.欲望灾火 = true;
						event.current = player.next;
						event.target = target;
						player.useCard({
							name: 'juedou'
						}, event.target);
						"step 1"
						if (event.target.isDead()) {
							if (event.target.next != player) {
								event.target = event.target.next;
							}
							else {
								event.target = player.next;
							}
						}
						"step 2"
						event.current.useCard({
							name: 'juedou'
						}, event.target);
						"step 3"
						if (event.target.isDead()) {
							if (event.target.next != player) {
								event.target = event.target.next;
							}
							else {
								event.target = player.next;
							}
						}
						if (event.current.next != player) {
							event.current = event.current.next;
							game.delay(0.5);
							event.goto(2);
						}
					},
					ai: {
						basic: {
							order: 10,
						},
						result: {
							target: -10,
						},
					},
				},
				混沌本性: {
					trigger: {
						player: "juedou",
						target: "juedou",
					},
					forced: true,
					filter: function (event, player) {
						return event.turn != player;
					},
					content: function () {
						"step 0"
						var next = trigger.turn.chooseToRespond({
							name: 'sha'
						});
						next.autochoose = lib.filter.autoRespondSha;
						next.ai = function (card) {
							if (ai.get.attitude(trigger.turn, player) < 0 && trigger.turn.num('h', 'sha') > 1) {
								return ai.get.unuseful2(card);
							}
							return -1;
						};
						"step 1"
						if (result.bool == false) {
							trigger.directHit = true;
						}
					},
					ai: {
						result: {
							target: function (card, player, target) {
								if (card.name == 'juedou' && target.num('h') > 0) return [1, 0, 0, -1];
							},
						},
					},
				},
				生存本能: {
					trigger: {
						target: "useCardToBegin",
					},
					filter: function (event, player) {
						return event.card && get.color(event.card) == 'red';
					},
					frequent: true,
					content: function () {
						player.draw();
					},
					ai: {
						effect: function (card, player, target) {
							if (get.color(card) == 'red') return [1, 1];
						},
					},
				},
				毁灭蛊箭: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 0.5;
						trigger.player.loseHp(1);
					},
				},
				浮夸射击: {
					trigger: {
						player: ["useCard", "respondAfter"],
					},
					direct: true,
					unique: true,
					usable: 1,
					filter: function (event) {
						return get.color(event.card) == 'black';
					},
					content: function () {
						"step 0"
						game.delay(0.5);
						player.chooseTarget('是否发动【浮夸射击】？', function (card, player, target) {
							return player != target;
						}).ai = function (target) {
							if (target.isTurnedOver()) return -1;
							return 1;
						}
						"step 1"
						if (result.bool) {
							trigger.untrigger();
							trigger.finish();
							player.logSkill('tashui', result.targets, 'thunder');
							result.targets[0].loseHp();
						}
					},
					ai: {
						effect: {
							player: function (card) {
								if (get.color(card) == 'black') {
									return [1, 2];
								}
							},
						},
					},
				},
				雷霆之环: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.addSkill('麻痹');
						player.recover(1);
					},
				},
				灾祸匣: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
					},
					priority: 0,
				},
				风花月蚀: {
					trigger: {
						source: "damageEnd",
					},
					filter: function (event, player) {
						return player.num('he');
					},
					check: function (event, player) {
						return (ai.get.attitude(player, event.player) < 0) && event.player.num('he') >= 3;
					},
					content: function () {
						'step 0'
						player.chooseToDiscard(true, 'he').ai = function (card) {
							return 8 - ai.get.value(card)
						}
						'step 1'
						trigger.player.chooseToDiscard(2, true, 'he').ai = function (card) {
							return 8 - ai.get.value(card)
						}
					},
				},
				画月为牢: {
					trigger: {
						player: "phaseAfter",
					},
					content: function () {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].num('h') < player.num('h')) {
								player.gain(game.players[i].get('h').randomGet());
							}
						}
					},
				},
				踏雪无痕: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 1 / 2) return false;
						return true;
					},
					content: function () {
						trigger.num -= trigger.num;
						player.recover(1);
					},
				},
				冰心剑法: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.turnOver();
						trigger.player.addSkill('冰冻')
					},
				},
				冰冻: {
					trigger: {
						player: "phaseEnd",
					},
					frequent: true,
					content: function () {
						player.loseHp(player.maxHp / 8);
					},
				},
				战争惧刃: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						return player.isDamaged();
					},
					content: function () {
						trigger.num += player.maxHp - player.hp;
					},
				},
				智慧庇护: {
					skillAnimation: "epic",
					animationColor: "water",
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					filter: function (event) {
						return Math.random() < 0.1;
					},
					content: function () {
						'step 0'
						player.recover(trigger.num);
						'step 1'
						while (_status.event.name != 'phaseLoop') {
							_status.event = _status.event.parent;
						}
						_status.paused = false;
						_status.event.player = player;
						_status.event.step = 0;
						if (game.bossinfo) {
							game.bossinfo.loopType = 1;
						}
					},
					priority: 0,
				},
				净罪之池: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						'step 0'
						event.target = game.players.randomGet(player);
						event.card = get.cards(1);
						'step 1'
						event.target.showCards(event.card);
						for (var i = 0; i < event.card.length; i++) {
							ui.cardPile.appendChild(event.card[i]);
						}
						if (get.suit(event.card) != 'spade') {
							event.target.chooseToDiscard(true, 'he', 1).ai = function (card) {
								return 8 - ai.get.value(card)
							}
						}
					},
				},
				神之守护: {
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					filter: function (event, player) {
						return !player.hujia;
					},
					content: function () {
						player.changeHujia();
						player.update();
					},
				},
				圣剑之光: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
						player.changeHujia();
						player.update();
					},
				},
				凤求凰: {
					trigger: {
						player: "chooseToRespondBegin",
					},
					direct: true,
					unique: true,
					filter: function (event, player) {
						if (event.responded) return false;
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].num('h')) {
								return true;
							}
						}
						return false;
					},
					content: function () {
						"step 0"
						player.chooseTarget(function (card, player, target) {
							return player != target && target.num('h');
						}, '是否发动【凤求凰】?').ai = function (target) {
							var att = ai.get.attitude(player, target) + 1;
							if (target.num('h', 'shan') || target.num('h', 'sha')) {
								att * 10;
							}
							return -att;
						};
						"step 1"
						if (result.bool) {
							event.target = result.targets[0];
							event.goto(2);
						}
						else {
							event.finish();
						}
						"step 2"
						var target = event.target;
						var cards = target.get('h');
						player.chooseCardButton('凤求凰：选择' + get.translation(target) + '的一张手牌打出', cards).filterButton = function (button) {
							return trigger.filterCard(button.link);
						}
						"step 3"
						if (result.bool) {
							player.logSkill('凤凰邪眼·新', event.target);
							event.target.lose(result.links);
							trigger.untrigger();
							trigger.responded = true;
							result.buttons[0].link.remove();
							trigger.result = {
								bool: true,
								card: result.buttons[0].link
							}
						}
					},
					group: ["凤凰邪眼·新"],
					ai: {
						effect: {
							target: function (card) {
								if (get.tag(card, 'respondShan')) return 0.7;
								if (get.tag(card, 'respondSha')) return 0.7;
							},
						},
					},
				},
				仙荷甘露: {
					trigger: {
						player: ["damageBegin", "phaseEnd"],
					},
					forced: true,
					content: function () {
						player.recover(1);
					},
				},
				凤凰邪眼·新: {
					enable: "phaseUse",
					usable: 10,
					delay: 0,
					direct: true,
					unique: true,
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].num('hej')) {
								return true;
							}
						}
						return false;
					},
					content: function () {
						"step 0"
						player.getStat('skill').凤凰邪眼2--;
						player.chooseTarget(function (card, player, target) {
							return player != target && target.num('hej');
						}, '请选择1名角色').ai = function (target) {
							return -ai.get.attitude(player, target);
						};
						"step 1"
						if (result.bool) {
							player.getStat('skill').凤凰邪眼++;
							event.target = result.targets[0];
							event.goto(2);
						}
						else {
							event.finish();
						}
						"step 2"
						var target = event.target;
						event.dialog = ui.create.dialog('hidden');
						event.dialog.add('凤凰邪眼：选择' + get.translation(target) + '的一张卡牌使用');
						event.position = 'hej';
						var position = event.position;
						for (var i = 0; i < position.length; i++) {
							if (position[i] == 'h' && target.num('h')) {
								event.dialog.add('手牌');
								var hs = target.get('h');
								hs.randomSort();
								event.dialog.add(hs);
							}
							else if (position[i] == 'e' && target.num('e')) {
								event.dialog.add('装备牌');
								event.dialog.add(target.get('e'));
							}
							else if (position[i] == 'j' && target.num('j')) {
								event.dialog.add('判定牌');
								event.dialog.add(target.get('j'));
							}
						}
						var dialog = event.dialog;
						var trigger = event.parent.parent;
						player.chooseButton(dialog, function () {
							return 1
						}).filterButton = function (button) {
							return trigger.filterCard(button.link, player, trigger);
						};
						"step 3"
						if (result.bool) {
							player.logSkill('凤凰邪眼2', event.target);
							event.target.lose(result.links);
							event.target.$give(result.links, player);
							lib.skill.凤凰邪眼3.viewAs = result.buttons[0].link;
							event.parent.parent.backup('凤凰邪眼3');
							event.parent.parent.step = 0;
							if (event.isMine()) {
								event.parent.parent.openskilldialog = '选择' + get.translation(result.buttons[0].link) + '的目标';
							}
						}
					},
					ai: {
						order: 8,
						result: {
							player: function (player) {
								if (_status.dying) return ai.get.attitude(player, _status.dying);
								return 1;
							},
						},
						threaten: 10,
					},
				},
				圣狮咆哮: {
					init: function (player) {
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.圣狮咆哮 = 0;
						}
					},
					trigger: {
						source: "damageEnd",
					},
					filter: function (event, player) {
						return event.player != player;
					},
					content: function () {
						if (trigger.player.storage.圣狮咆哮 < 3) {
							trigger.player.storage.圣狮咆哮++;
							trigger.player.addSkill('圣狮咆哮_1');
						}
						else {
							trigger.player.loseMaxHp();
						}
					},
					subSkill: {
						1: {
							mod: {
								maxHandcard: function (player, num) {
									return num - player.storage.圣狮咆哮;
								},
							},
						},
					},
				},
				永恒之斩: {
					trigger: {
						player: "dieBegin",
					},
					forced: true,
					content: function () {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player) {
								game.players[i].loseMaxHp();
								game.players[i].discard(game.players[i].get('he'));
							}
						}
					},
				},
				不屈意志·元霸: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					init: function (player) {
						player.storage.shuiyun = [];
					},
					filter: function (event, player) {
						if (player.storage.shuiyun.length >= 3) return false;
						var types = [];
						for (var i = 0; i < player.storage.shuiyun.length; i++) {
							types.add(get.type(player.storage.shuiyun[i], 'trick'));
						}
						var cards = player.get('h');
						for (var i = 0; i < cards.length; i++) {
							if (!types.contains(get.type(cards[i], 'trick'))) {
								return true;
							}
						}
						return false;
					},
					content: function () {
						"step 0"
						var types = [];
						var num = player.num('h');
						for (var i = 0; i < player.storage.shuiyun.length; i++) {
							types.add(get.type(player.storage.shuiyun[i], 'trick'));
						}
						player.chooseCard('是否发动【不屈意志·元霸】？', function (card) {
							return !types.contains(get.type(card, 'trick'));
						}).ai = function (card) {
							return 11 - ai.get.value(card);
						};
						"step 1"
						if (result.bool) {
							player.$throw(result.cards);
							var clone = result.cards[0].clone;
							setTimeout(function () {
								clone.moveDelete(player);
								game.addVideo('gain2', player, get.cardsInfo([clone]));
							}, 500);
							player.logSkill('shuiyun');
							player.storage.shuiyun.push(result.cards[0]);
							player.lose(result.cards, ui.special);
							player.markSkill('shuiyun');
							game.addVideo('storage', player, ['shuiyun', get.cardsInfo(player.storage.shuiyun), 'cards']);
						}
					},
					intro: {
						content: "cards",
						onunmark: function (storage, player) {
							if (storage && storage.length) {
								for (var i = 0; i < storage.length; i++) {
									ui.discardPile.appendChild(storage[i]);
								}
								player.$throw(storage);
								delete player.storage.shuiyun;
							}
						},
					},
					ai: {
						effect: {
							player: function (card, player) {
								if (_status.currentPhase != player) return;
								if (card.name == 'wuzhong' || card.name == 'yiyi' || card.name == 'yuanjiao' || card.name == 'shunshou') return;
								if (player.num('h') <= player.hp) {
									var types = [];
									for (var i = 0; i < player.storage.shuiyun.length; i++) {
										types.add(get.type(player.storage.shuiyun[i], 'trick'));
									}
									if (!types.contains(get.type(card, 'trick'))) {
										return [0, 0, 0, 0];
									}
								}
							},
						},
						threaten: 2.2,
					},
					group: ["shuiyun5"],
				},
				莲花转生: {
					unique: true,
					enable: "chooseToUse",
					mark: true,
					init: function (player) {
						player.storage.chongsheng = 0;
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					filter: function (event, player) {
						if (event.type != 'dying') return false;
						if (player != _status.dying) return false;
						if (player.storage.chongsheng == 2) return false;
					},
					content: function () {
						player.hp = Math.min(2 - player.storage.chongsheng, player.maxHp);
						player.discard(player.get('hej'));
						player.draw(2 - player.storage.chongsheng);
						player.storage.chongsheng++;
						if (player.storage.chongsheng == 2) {
							player.unmarkSkill('chongsheng');
						}
						if (player.isLinked()) player.link();
						if (player.isTurnedOver()) player.turnOver();
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					ai: {
						skillTagFilter: function (player) {
							if (player.storage.chongsheng == 2) return false;
							if (player.hp > 0) return false;
						},
						save: true,
						result: {
							player: 10,
						},
						threaten: function (player, target) {
							if (target.storage.chongsheng < 2) return 0.6;
						},
					},
					intro: {
						content: function (storage) {
							return '剩余' + get.cnNumber(2 - storage) + '次';
						},
					},
				},
				混天绫: {
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						return player != target;
					},
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							return game.players[i].num('hej') > 0;
						}
					},
					prompt: "请选择1名角色",
					content: function () {
						"step 0"
						target.chooseControl('basic', 'equip', 'trick', 'delay').ai = function (event) {
							switch (Math.floor(Math.random() * 6)) {
								case 0:
									return 'equip';
								case 1:
								case 4:
								case 5:
									return 'basic';
								case 2:
									return 'trick';
								case 3:
									return 'delay';
							}
						};
						"step 1"
						game.log(target, '选择了' + get.translation(result.control));
						event.choice = result.control;
						target.popup(event.choice);
						var players = [];
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].num('hej')) {
								players.push(game.players[i]);
							}
						}
						if (!players.length) {
							event.finish();
							return;
						}
						var target1 = players.randomGet();
						event.card = target.get('hej').randomGet();
						target1.showCards(event.card);
						game.delay();
						"step 2"
						if (get.type(event.card) != event.choice) {
							target.loseMaxHp();
							if (player.hp < player.maxHp) {
								player.recover();
							}
							else {
								event.finish();
							}
						}
					},
					ai: {
						order: 8,
						result: {
							target: function (player, target) {
								return ai.get.attitude(player, target);
							},
						},
						expose: 0.2,
					},
				},
				神王之剑: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num += trigger.num;
					},
				},
				赤壁炎焰: {
					group: ["赤壁炎焰_1111", "赤壁炎焰_2222"],
					subSkill: {
						1111: {
							trigger: {
								global: "damageEnd",
							},
							filter: function (event) {
								return event.nature == 'fire';
							},
							content: function () {
								player.recover();
							},
						},
						2222: {
							skillAnimation: "epic",
							animationColor: "fire",
							trigger: {
								source: "damageEnd",
							},
							filter: function (event) {
								return event.nature == 'fire';
							},
							content: function () {
								player.addSkill(trigger.player.skills.randomGet());
							},
						},
					},
				},
				化魔: {
					trigger: {
						global: "phaseBegin",
					},
					filter: function (event, player) {
						return ((player.identity == 'zhu' && event.player.identity != 'zhong') || (player.identity == 'fan' && event.player.identity != 'fan') || (player.identity == 'zhong' && (event.player.identity != 'zhu' && event.player.identity != 'zhong')) || (player.identity == 'wei' && event.player.identity != 'wei') || (player.identity == 'wu' && event.player.identity != 'wu') || (player.identity == 'shu' && event.player.identity != 'shu') || (player.identity == 'qun' && event.player.identity != 'qun') || (player.identity == 'ye' || player.identity == 'nei')) && Math.random() < 0.85 && event.player != player;
					},
					forced: true,
					content: function () {
						player.addTempSkill('化魔_1', 'useCardAfter');
						player.useCard({
							name: 'sha',
							nature: 'fire'
						}, trigger.player, false);
					},
					subSkill: {
						1: {
							trigger: {
								player: "shaMiss",
							},
							forced: true,
							content: function () {
								player.draw();
							},
						},
					},
				},
				落花吹雪: {
					intro: {
						content: function (storage) {
							return '剩余花瓣数' + storage;
						},
					},
					mark: true,
					init: function (player) {
						player.storage.落花吹雪 = 0;
					},
					group: ["落花吹雪_1", "落花吹雪_2", "落花吹雪_3"],
					subSkill: {
						1: {
							trigger: {
								global: "gameStart",
							},
							forced: true,
							content: function () {
								player.storage.落花吹雪 += 2;
								player.syncStorage('落花吹雪');
							},
						},
						2: {
							trigger: {
								player: "phaseBegin",
							},
							filter: function (event, player) {
								return player.storage.落花吹雪;
							},
							content: function () {
								player.draw();
								player.storage.落花吹雪++;
								player.syncStorage('落花吹雪');
							},
						},
						3: {
							trigger: {
								player: "damageBefore",
							},
							filter: function (event, player) {
								return player.storage.落花吹雪 && player.num('h') >= 1;
							},
							content: function () {
								"step 1"
								player.discardPlayerCard('h', player, true);
								"step 2"
								player.storage.落花吹雪--;
								player.syncStorage('落花吹雪');
								trigger.untrigger();
								trigger.finish();
							},
						},
					},
				},
				天外飞仙: {
					trigger: {
						global: "loseEnd",
					},
					filter: function (event, player) {
						for (var i = 0; i < event.cards.length; i++) {
							if (event.cards[i].original == 'h' && event.player != player && Math.random() < 0.3) return true;
						}
						return false;
					},
					forced: true,
					content: function () {
						trigger.player.discard(trigger.player.get('he').randomGet());
					},
				},
				仙灵庇护: {
					intro: {
						content: function (storage) {
							return '可抵消伤害数：' + storage;
						},
					},
					mark: true,
					init: function (player) {
						player.storage.仙灵庇护 = 3;
					},
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					priority: 600,
					filter: function (event, player) {
						return player.storage.仙灵庇护;
					},
					content: function () {
						if (player.storage.仙灵庇护 - trigger.num >= 0) {
							player.storage.仙灵庇护 -= trigger.num;
							player.syncStorage('仙灵庇护');
							trigger.untrigger();
							trigger.finish();
						}
						else {
							trigger.num -= player.storage.仙灵庇护;
							player.storage.仙灵庇护 = 0;
							player.syncStorage('仙灵庇护');
						}
					},
				},
				真龙天子: {
					trigger: {
						player: "phaseEnd",
					},
					filter: function (event, player) {
						return !player.storage.仙灵庇护;
					},
					frequent: true,
					content: function () {
						player.addSkill('昊天云步');
					},
				},
				紫薇真火: {
					enable: "phaseUse",
					filter: function (event, player) {
						return player.storage.真空烈斩 <= 0;
					},
					init: function (player) {
						player.storage.真空烈斩 = 0;
					},
					skillAnimation: "epic",
					animationColor: "fire",
					content: function () {
						'step 0'
						event.target = game.players.randomGet(player);
						'step 1'
						event.target.damage('fire');
						player.storage.真空烈斩++;
						'step 2'
						if (player.storage.真空烈斩 < 5 && Math.random() < 0.8) {
							event.goto(1);
						}
					},
					ai: {
						basic: {
							order: 10,
						},
						result: {
							player: 1,
						},
					},
				},
				昊天云步: {
					skillAnimation: "epic",
					animationColor: "water",
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					filter: function (event) {
						return Math.random() < 0.4;
					},
					content: function () {
						'step 0'
						player.recover(trigger.num);
						'step 1'
						while (_status.event.name != 'phaseLoop') {
							_status.event = _status.event.parent;
						}
						_status.paused = false;
						_status.event.player = player;
						_status.event.step = 0;
						if (game.bossinfo) {
							game.bossinfo.loopType = 1;
						}
					},
					priority: 0,
				},
				龙人血脉: {
					intro: {
						content: function (storage) {
							return '已激活血脉数量：' + storage;
						},
					},
					init: function (player) {
						player.storage.龙人血脉 = 0;
					},
					trigger: {
						global: ["useCardAfter", "useCardBefore", "phaseBefore", "loseEnd", "phaseBegin", "phaseDradBegin", "phaseUseBegin", "phaseUseEnd", "phaseEnd", "phaseDiscardAfter", "phaseDiscardBegin", "useSkillBefore", "judgeBefore", "judgeAfter"],
					},
					forced: true,
					silent: true,
					mark: true,
					popup: false,
					content: function () {
						'step 0'
						if (!player.storage.龙人血脉_1) {
							player.storage.龙人血脉_1 = get.time();
							event.finish();
						}
						else {
							player.storage.龙人血脉_2 = get.time() - player.storage.龙人血脉_1;
						}
						'step 1'
						if (player.storage.龙人血脉_2 >= 3000) {
							player.storage.龙人血脉++;
							player.storage.龙人血脉_1 = get.time();
							player.syncStorage('龙人血脉');
						}
						else {
							event.finish();
						}
						'step 2'
						if (player.storage.龙人血脉 == 50) {
							player.logSkill('龙人血脉');
							player.hp = player.hp * 2;
							player.update();
							player.draw(player.num('h'));
						}
						if (player.storage.龙人血脉 >= 150 && !player.hasSkill('龙人血脉_1')) {
							player.logSkill('龙人血脉');
							player.addSkill('龙人血脉_1');
						}
						if (player.storage.龙人血脉 == 200) {
							player.logSkill('龙人血脉');
							for (var i = 0; i < game.players.length; i++) {
								if (game.players[i] == player) continue;
								game.players[i].hp = 0;
								game.players[i].update();
								var next = game.createEvent('dying', false);
								next.player = game.players[i];
								next.reason = 'changeHp';
								next.content = lib.element.playerproto.dying;
							}
						}
						if (player.storage.龙人血脉 == 500) {
							player.logSkill('龙人血脉');
							game.over();
						}
					},
					subSkill: {
						1: {
							trigger: {
								player: "damageBegin",
							},
							forced: true,
							content: function () {
								trigger.num--;
							},
						},
					},
					priority: 0,
				},
				龙之咆哮: {
					mark: true,
					marktext: "龙",
					intro: {
						content: function (storage) {
							return '当前拥有' + storage + '枚"龙之咆哮"标记';
						},
					},
					init: function (player) {
						player.storage.龙之咆哮 = 0;
					},
					group: ["龙之咆哮_1", "龙之咆哮_2"],
					subSkill: {
						1: {
							trigger: {
								global: "phaseBegin",
							},
							forced: true,
							content: function () {
								player.storage.龙之咆哮++;
								player.syncStorage('龙之咆哮');
							},
						},
						2: {
							trigger: {
								player: "damageEnd",
							},
							filter: function (event, player) {
								if (player.storage.龙之咆哮 && event.source != player && event.source) return true;
								return false;
							},
							forced: true,
							content: function () {
								'step 0'
								player.storage.龙之咆哮--;
								player.syncStorage('龙之咆哮');
								player.draw();
							},
						},
					},
				},
				圣光之盾: {
					init: function (player) {
						player.storage.圣光之盾 = 0;
					},
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					silent: true,
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i].hp < player.hp) return false;
						}
						return true;
					},
					content: function () {
						player.storage.圣光之盾 = 1;
						player.addSkill('圣光之盾_1111');
					},
					ai: {
						threaten: 5,
					},
					subSkill: {
						1111: {
							trigger: {
								player: "damageBegin",
							},
							filter: function (event, player) {
								return player.storage.圣光之盾 > 0;
							},
							forced: true,
							priority: null,
							content: function () {
								player.recover(trigger.num);
								player.storage.圣光之盾 -= 1;
								trigger.untrigger();
								trigger.finish();
								if (player.storage.圣光之盾 == 0) {
									player.removeSkill('圣光之盾_1111');
								}
							},
							ai: {
								threaten: 5,
							},
						},
					},
				},
				天篷变: {
					video: function (player, data) {
						if (data) {
							for (var i in data) {
								var current = game.playerMap[i];
								current.node.handcards1.innerHTML = '';
								current.node.handcards2.innerHTML = '';
								current.node.equips.innerHTML = '';
								current.node.judges.innerHTML = '';
								current.directgain(get.infoCards(data[i].h));
								var es = get.infoCards(data[i].e);
								for (var j = 0; j < es.length; j++) {
									current.$equip(es[j]);
								}
								var js = get.infoCards(data[i].j);
								for (var j = 0; j < js.length; j++) {
									player.node.judges.appendChild(js[j]);
								}
							}
							ui.window.classList.remove('zoomout3');
							ui.window.classList.add('zoomin3');
							document.body.appendChild(ui.window);
							setTimeout(function () {
								ui.window.show();
								ui.window.classList.remove('zoomin3');
								setTimeout(function () {
									ui.window.style.transition = '';
								}, 500);
							}, 100);
						}
						else {
							ui.window.style.transition = 'all 0.5s';
							ui.window.classList.add('zoomout3');
							ui.window.delete();
							ui.window.hide();
						}
					},
					intro: {
						content: function (storage, player) {
							if (true) {
								return player.storage.SE_qiulao3;
							}
						},
					},
					skillAnimation: true,
					animationColor: "fire",
					trigger: {
						player: "dieBefore",
					},
					unique: true,
					filter: function (event, player) {
						if (player.storage.SE_qiulao2) return false;
						if (player.storage.SE_qiulao) return true;
						return false;
					},
					check: function (event, player) {
						player.hp <= 0;
					},
					init: function (player) {
						player.storage.SE_qiulao4 = 0;
					},
					content: function () {
						"step 0"
						trigger.untrigger();
						trigger.finish();
						'step 1'
						event.player.storage.SE_qiulao4++;
						if (game.dead.length > 0) {
							while (game.dead.length) {
								game.dead[0].revive();
							}
						}
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] == player) continue;
							if (game.players[i].hp < game.players[i].maxHp) game.players[i].hp = game.players[i].maxHp;
							game.players[i].update();
						}
						"step 2"
						game.delay(0.5);
						"step 3"
						ui.window.style.transition = 'all 0.5s';
						ui.window.classList.add('zoomout3');
						ui.window.delete();
						ui.window.hide();
						game.delay(0, 500);
						game.addVideo('skill', event.player, '天篷变1');
						"step 4"
						var storage = event.player.storage.SE_qiulao;
						var player, frag;
						var i, j;
						for (i = 0; i < storage.length; i++) {
							if (game.players.contains(storage[i].player)) {
								player = storage[i].player;
								while (player.node.handcards1.childNodes.length)
								ui.discardPile.appendChild(player.node.handcards1.firstChild);
								while (player.node.handcards2.childNodes.length)
								ui.discardPile.appendChild(player.node.handcards2.firstChild);
								while (player.node.judges.childNodes.length)
								ui.discardPile.appendChild(player.node.judges.firstChild);
								while (player.node.equips.childNodes.length)
								ui.discardPile.appendChild(player.node.equips.firstChild);
							}
						}
						for (i = 0; i < storage.length; i++) {
							if (game.players.contains(storage[i].player)) {
								player = storage[i].player;
								for (j = 0; j < storage[i].handcards1.length; j++) {
									if (storage[i].handcards1[j].parentNode == ui.discardPile || storage[i].handcards1[j].parentNode == ui.cardPile) player.node.handcards1.appendChild(storage[i].handcards1[j]);
								}
								for (j = 0; j < storage[i].handcards2.length; j++) {
									if (storage[i].handcards2[j].parentNode == ui.discardPile || storage[i].handcards2[j].parentNode == ui.cardPile) player.node.handcards2.appendChild(storage[i].handcards2[j]);
								}
								for (j = 0; j < storage[i].equips.length; j++) {
									if (storage[i].equips[j].parentNode == ui.discardPile || storage[i].equips[j].parentNode == ui.cardPile) player.node.equips.appendChild(storage[i].equips[j]);
								}
								for (j = 0; j < storage[i].judges.length; j++) {
									if (storage[i].judges[j].parentNode == ui.discardPile || storage[i].judges[j].parentNode == ui.cardPile) {
										storage[i].judges[j].viewAs = storage[i].viewAs[j];
										player.node.judges.appendChild(storage[i].judges[j]);
									}
								}
								player.update();
							}
						}
						game.delay(0, 100);
						ui.window.classList.remove('zoomout3');
						ui.window.classList.add('zoomin3');
						document.body.appendChild(ui.window);
						var data = {};
						for (var i = 0; i < game.players.length; i++) {
							data[game.players[i].dataset.position] = {
								h: get.cardsInfo(game.players[i].get('h')),
								e: get.cardsInfo(game.players[i].get('e')),
								j: get.cardsInfo(game.players[i].get('j'))
							}
						}
						game.addVideo('skill', event.player, ['SE_qiulao', data]);
						"step 5"
						ui.window.show();
						ui.window.classList.remove('zoomin3');
						setTimeout(function () {
							ui.window.style.transition = '';
							game.resume();
						}, 500);
						event.player.storage.SE_qiulao3 = '已发动' + event.player.storage.SE_qiulao4 + '次';
						game.pause();
						'step 6'
						var player = event.player;
						if (player.hp < player.maxHp) player.hp = player.maxHp;
						player.update();
						ui.control.innerHTML = '';
						ui.discardPile.innerHTML = '';
					},
					group: ["天篷变2"],
				},
				冰霜凌枪: {
					trigger: {
						source: "damageEnd",
					},
					forced: true,
					filter: function (event, player) {
						if (Math.random() > 3 / 5) return false;
						return true;
					},
					content: function () {
						trigger.player.turnOver();
					},
				},
				寒冰魔环: {
					trigger: {
						player: "phaseEnd",
					},
					unique: true,
					content: function () {
						"step 0"
						event.players = get.players(player);
						event.players.remove(player);
						player.draw(1);
						"step 1"
						if (event.players.length) {
							event.players.shift().damage();
							event.redo();
						}
					},
				},
				倾国之姿: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 999;
					},
				},
				红颜之花: {
					unique: true,
					trigger: {
						player: "phaseDrawBegin",
					},
					forced: true,
					content: function () {
						trigger.num += Math.max(0, game.players.length - 1);
					},
					mod: {
						maxHandcard: function (player, current) {
							return current + Math.max(2, game.players.length - 1);
						},
					},
				},
				洛水情花: {
					trigger: {
						player: "loseEnd",
					},
					frequent: true,
					unique: true,
					filter: function (event, player) {
						return _status.currentPhase != player;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							return get.color(card) == 'red' ? 1 : 0;
						});
						"step 1"
						if (result.bool) {
							player.chooseTarget(true, '选择一个目标对其造成一点<span style=\"color:\#EE4000\">火焰</span>伤害', function (card, player, target) {
								return player != target;
							}).ai = function (target) {
								return ai.get.damageEffect(target, player, player, 'fire');
							}
						}
						else {
							event.finish();
						}
						"step 2"
						if (result.targets.length) {
							player.line(result.targets, 'fire');
							result.targets[0].damage();
						}
					},
					ai: {
						effect: {
							target: function (card) {
								if (get.tag(card, 'loseCard')) {
									return [0.5, 1];
								}
							},
						},
					},
					priority: 0,
				},
				国色天香: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				骄阳陨落: {
					skillAnimation: "epic",
					animationColor: "thunder",
					trigger: {
						global: "gameStart",
					},
					forced: true,
					priority: null,
					title: function () {
						return '<div class="text center" style="color:#ff00ff">' + '纵然是深沉的黑夜，也遮不住一丝光亮';
					},
					content: function () {
						"step 0"
						event.current = player.next;
						"step 1"
						if (event.current.hasSkill('嗜血') || event.current.hasSkill('血祭启示录')) {
							event.current.hp = 0;
							event.current.update();
							var next = game.createEvent('dying', false);
							next.player = event.current;
							next.reason = 'changeHp';
							next.content = lib.element.playerproto.dying;
						}
						event.current.removeSkill(event.current.get('s').randomGets(event.current.skills.length - 1));
						"step 2"
						if (event.current.next != player) {
							event.current = event.current.next;
							event.goto(1);
						}
					},
				},
				燎火之箭: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.nature = 'fire';
						trigger.player.discard(trigger.player.get('e'));
					},
				},
				火之箭: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.nature = 'fire';
						trigger.player.discard(trigger.player.get('e'));
					},
				},
				怒焰火海: {
					trigger: {
						player: "phaseEnd",
					},
					unique: true,
					content: function () {
						"step 0"
						event.players = get.players(player);
						event.players.remove(player);
						"step 1"
						if (event.players.length) {
							event.players.shift().damage('fire');
							event.redo();
						}
					},
				},
				困兽之境: {
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					content: function () {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player) {
								game.players[i].discard(game.players[i].get('e', '2'))
								game.players[i].discard(game.players[i].get('e', '3'))
							}
						}
					},
				},
				毁灭之矛: {
					trigger: {
						source: "damageBegin",
					},
					filter: function (event, player) {
						return event.card && event.card.name == 'sha';
					},
					forced: true,
					content: function () {
						trigger.num += game.dead.length;
					},
				},
				倩女幽魂: {
					skillAnimation: "epic",
					animationColor: "fire",
					enable: "chooseToUse",
					filter: function (event, player) {
						if (event.type != 'dying') return false;
						if (player != event.dying) return false;
						if (!player.storage.恐惧阴魂) return false;
					},
					content: function () {
						if (player.storage.恐惧阴魂 - (player.maxHp - player.hp) > 0) player.draw(player.storage.恐惧阴魂 - (player.maxHp - player.hp));
						player.recover(player.storage.恐惧阴魂);
						player.storage.恐惧阴魂 = 0;
						player.syncStorage('恐惧阴魂');
					},
					ai: {
						order: 1,
						skillTagFilter: function (player) {
							if (!player.storage.恐惧阴魂) return false;
							if (player.hp > 0) return false;
						},
						save: true,
						result: {
							player: 10,
						},
					},
				},
				摄魂之法: {
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					filter: function (event, player) {
						return player.storage.恐惧阴魂 && event.source && event.source != player;
					},
					content: function () {
						player.storage.恐惧阴魂--;
						player.syncStorage('恐惧阴魂');
						trigger.source.damage('fire');
					},
					priority: 0,
				},
				恐惧阴魂: {
					mark: true,
					marktext: "魂",
					intro: {
						content: function (storage) {
							return '当前拥有' + storage + '层魂';
						},
					},
					init: function (player) {
						player.storage.恐惧阴魂 = 0;
					},
					trigger: {
						player: "damageBefore",
					},
					forced: true,
					filter: function (event, player) {
						return Math.random() <= 0.5;
					},
					content: function () {
						player.storage.恐惧阴魂 += 2;
						player.syncStorage('恐惧阴魂');
						trigger.untrigger();
						trigger.finish();
					},
					priority: 0,
				},
				幻影残像: {
					group: ["幻影残像_1111", "幻影残像_2222"],
					subSkill: {
						1111: {
							trigger: {
								player: "damageBefore",
							},
							filter: function (event, player) {
								if (_status.currentPhase == player) return true;
								return false;
							},
							forced: true,
							content: function () {
								trigger.untrigger();
								trigger.finish();
							},
						},
						2222: {
							trigger: {
								source: "damageBegin",
							},
							filter: function (event, player) {
								if (_status.currentPhase != player) return true;
								return false;
							},
							forced: true,
							priority: null,
							content: function () {
								trigger._triggered = null;
								player.draw(2);
							},
						},
					},
				},
				时光缓行: {
					trigger: {
						player: "damageAfter",
					},
					forced: true,
					content: function () {
						player.addSkill('时光缓行_1111');
					},
					subSkill: {
						1111: {
							trigger: {
								player: "damageBefore",
							},
							forced: true,
							content: function () {
								trigger.untrigger();
								trigger.finish();
								player.removeSkill('时光缓行_1111');
							},
						},
					},
				},
				魔能之球: {
					intro: {
						content: function (storage) {
							if (storage > 0) {
								return '冷却CD中';
							}
							else {
								return '目前可发动';
							}
						},
					},
					init: function (player) {
						player.storage.魔能之球 = 0;
					},
					enable: "phaseUse",
					usable: 1,
					silent: true,
					filter: function (event, player) {
						if (player.storage.魔能之球 <= 0) return true;
						return false;
					},
					content: function () {
						'step 0'
						event.target = [];
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player) {
								event.target.push(game.players[i]);
							}
						}
						'step 1'
						player.useCard({
							name: 'sha'
						}, event.target.randomGets(3, player), false);
						player.storage.魔能之球 = 2;
						player.addSkill('魔能之球_1111');
					},
					ai: {
						basic: {
							order: 10,
						},
						result: {
							player: 1,
						},
					},
					subSkill: {
						1111: {
							trigger: {
								player: "phaseAfter",
							},
							forced: true,
							popup: false,
							silent: true,
							content: function () {
								player.storage.魔能之球 -= 1;
								if (player.storage.魔能之球 == 0) {
									player.removeSkill('魔能之球_1111');
								}
							},
						},
					},
				},
				太阳之子: {
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					filter: function (event, player) {
						if (game.players.length + game.dead.length > 2) return true;
						return false;
					},
					content: function () {
						'step 0'
						event.target = game.players.randomGet(player);
						player.line(event.target, 'green');
						'step 1'
						event.target.turnOver();
					},
					priority: 0,
				},
				流火双刃: {
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					content: function () {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player) {
								player.line(game.players[i], 'green');
								if (game.players[i].hp < player.hp) game.players[i].discard(game.players[i].get('h'));
								if (game.players[i].hp >= player.hp) game.players[i].damage();
							}
						}
					},
					priority: 0,
				},
				双界反击: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					filter: function (event, player) {
						return Math.random() < 0.2 && event.num < 1;
					},
					content: function () {
						trigger.num = 1;
					},
				},
				极速双环: {
					enable: "phaseUse",
					filter: function (event, player) {
						return player.storage.极速双环 <= 0;
					},
					filterTarget: function (card, player, target) {
						return player != target;
					},
					init: function (player) {
						player.storage.极速双环 = 0;
					},
					skillAnimation: "epic",
					animationColor: "water",
					content: function () {
						'step 0'
						target.damage(0.01);
						player.storage.极速双环++;
						'step 1'
						if (player.storage.极速双环 < 10) {
							event.goto(0);
						}
					},
					ai: {
						basic: {
							order: 10,
						},
						result: {
							target: -10,
						},
					},
				},
				死亡缠绕: {
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					content: function () {
						if (trigger.source && trigger.source != player) {
							trigger.source.damage(0.5);
						}
						if (trigger.source && trigger.source == player) {
							player.draw();
						}
					},
					priority: 0,
				},
				亡灵禁区: {
					trigger: {
						global: "gainAfter",
					},
					filter: function (event, player) {
						return event.player != player && event.player.num('h') > event.player.hp;
					},
					forced: true,
					content: function () {
						player.draw();
					},
				},
				时空扭曲: {
					skillAnimation: "epic",
					animationColor: "water",
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					filter: function (event) {
						return Math.random() < 0.75;
					},
					content: function () {
						'step 0'
						player.recover(trigger.num);
						'step 1'
						while (_status.event.name != 'phaseLoop') {
							_status.event = _status.event.parent;
						}
						_status.paused = false;
						_status.event.player = player;
						_status.event.step = 0;
						if (game.bossinfo) {
							game.bossinfo.loopType = 1;
						}
					},
					priority: 0,
				},
				怒吼长坂: {
					group: ["怒吼长坂_1111", "怒吼长坂_2222"],
					subSkill: {
						1111: {
							trigger: {
								player: "damage",
							},
							forced: true,
							content: function () {
								player.draw(trigger.num + 1);
							},
						},
						2222: {
							enable: "chooseToUse",
							filter: function (event, player) {
								return player.num('he', {
									suit: 'spade'
								});
							},
							filterCard: function (card) {
								return get.suit(card) == 'spade';
							},
							position: "he",
							viewAs: {
								name: "tao",
							},
							prompt: "将一张黑桃牌当桃使用",
							check: function (card) {
								return 15 - ai.get.value(card)
							},
							ai: {
								skillTagFilter: function (player) {
									return player.num('he', {
										suit: 'spade'
									}) > 0;
								},
								threaten: 1.5,
								save: true,
								basic: {
									order: function (card, player) {
										if (player.hasSkillTag('pretao')) return 5;
										return 2;
									},
									useful: [8, 6.5],
									value: [8, 6.5],
								},
								result: {
									target: function (player, target) {
										// if(player==target&&player.hp<=0) return 2;
										var nh = target.num('h');
										var keep = false;
										if (nh <= target.hp) {
											keep = true;
										}
										else if (nh == target.hp + 1 && target.hp >= 2 && target.num('h', 'tao') <= 1) {
											keep = true;
										}
										var mode = get.mode();
										if (target.hp >= 2 && keep && target.hasFriend()) {
											if (target.hp > 2) return 0;
											if (target.hp == 2) {
												for (var i = 0; i < game.players.length; i++) {
													if (target != game.players[i] && ai.get.attitude(target, game.players[i]) >= 3) {
														if (game.players[i].hp <= 1) return 0;
														if (mode == 'identity' && game.players[i].isZhu && game.players[i].hp <= 2) return 0;
													}
												}
											}
										}
										if (target.hp < 0 && target != player && target.identity != 'zhu') return 0;
										var att = ai.get.attitude(player, target);
										if (att < 3 && att >= 0 && player != target) return 0;
										var tri = _status.event.getParent()._trigger;
										if (mode == 'identity' && player.identity == 'fan' && target.identity == 'fan') {
											if (tri && tri.name == 'dying' && tri.source && tri.source.identity == 'fan' && tri.source != target) {
												var num = 0;
												for (var i = 0; i < game.players.length; i++) {
													if (game.players[i].identity == 'fan') {
														num += game.players[i].num('h', 'tao');
														if (num > 2) return 2;
													}
												}
												if (num > 1 && player == target) return 2;
												return 0;
											}
										}
										if (mode == 'identity' && player.identity == 'zhu' && target.identity == 'nei') {
											if (tri && tri.name == 'dying' && tri.source && tri.source.identity == 'zhong') {
												return 0;
											}
										}
										if (mode == 'stone' && target.isMin() && player != target && tri && tri.name == 'dying' && player.side == target.side && tri.source != target.getEnemy()) {
											return 0;
										}
										return 2;
									},
								},
								tag: {
									recover: 1,
									save: 1,
								},
							},
						},
					},
				},
				大地之盾: {
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					content: function () {
						player.changeHujia();
						player.update();
					},
				},
				野蛮突杀: {
					unique: true,
					trigger: {
						player: "dying",
					},
					filter: function (event, player) {
						return !player.isTurnedOver();
					},
					content: function () {
						player.recover(player.maxHp);
						player.addTempSkill('luanwu', 'phaseAfter');
						player.removeSkill('野蛮突杀');
						player.phase();
						player.turnOver();
					},
				},
				燕子三抄水: {
					trigger: {
						player: ["useCard", "respondAfter"],
					},
					direct: true,
					unique: true,
					filter: function (event) {
						return get.color(event.card) == 'black';
					},
					content: function () {
						"step 0"
						game.delay(0.5);
						player.chooseTarget('是否发动【燕子三抄水】？', function (card, player, target) {
							return player != target;
						}).ai = function (target) {
							if (target.isTurnedOver()) return -1;
							return 1;
						}
						"step 1"
						if (result.bool) {
							player.loseHp();
							player.logSkill('tashui', result.targets, 'thunder');
							result.targets[0].turnOver();
						}
					},
					ai: {
						effect: {
							player: function (card) {
								return player.hp - 2;
								if (get.color(card) == 'black') {
									return [1, 2];
								}
							},
						},
					},
				},
				夺命飞刀: {
					trigger: {
						player: "respond",
					},
					filter: function (event, player) {
						return event.card.name == 'shan';
					},
					direct: true,
					content: function () {
						"step 0";
						player.chooseTarget('是否发动【夺命飞刀】？').ai = function (target) {
							if (target.skills.contains('hongyan')) return 0;
							return ai.get.damageEffect(target, _status.event.player, _status.event.player, 'thunder');
						};
						"step 1"
						if (result.bool) {
							player.logSkill('leiji', result.targets, 'thunder');
							event.target = result.targets[0];
							event.target.judge(function (card) {
								if (get.suit(card) == 'spade') return -4;
								return 0;
							});
						}
						else {
							event.finish();
						}
						"step 2"
						if (result.bool == false) {
							event.target.damage(2, 'thunder');
						}
					},
					ai: {
						mingzhi: false,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'respondShan')) {
									var hastarget = false;
									for (var i = 0; i < game.players.length; i++) {
										if (ai.get.attitude(target, game.players[i]) < 0) {
											hastarget = true;
											break;
										}
									}
									if (target.num('h', 'shan') && target.num('e', {
										suit: 'spade'
									})) {
										return [0, hastarget ? target.num('he') / 2 : 0];
									}
									if (target.num('h', 'shan')) {
										return [1, hastarget ? target.num('he') / 2 : 0];
									}
									return [1, target.num('h') / 4];
								}
							},
						},
					},
				},
				暗涌流沙: {
					skillAnimation: "epic",
					unique: true,
					mark: true,
					init: function (player) {
						player.storage.seyou = false;
					},
					enable: "phaseUse",
					filter: function (event, player) {
						return !player.storage.seyou
					},
					intro: {
						content: "limited",
					},
					filterTarget: true,
					content: function () {
						"step 0"
						player.unmarkSkill('seyou');
						player.storage.seyou = true;
						event.targets = game.players.slice(0);
						event.targets.remove(player);
						event.targets.remove(target);
						for (var i = 0; i < event.targets.length; i++) {
							if (event.targets[i].sex != 'male') {
								event.targets.splice(i--, 1);
							}
						}
						"step 1"
						if (event.targets.length) {
							event.current = event.targets.shift();
							if (event.current.num('he') && target.isAlive()) {
								event.current.chooseToUse({
									name: 'sha'
								}, target, -1);
							}
						}
						else {
							event.finish();
						}
						"step 2"
						if (result.bool == false) {
							player.gainPlayerCard(event.current, true, 'he');
						}
						event.goto(1);
					},
					ai: {
						order: 5,
						result: {
							target: function (player, target) {
								if (player.hp > 1) {
									if (game.phaseNumber < game.players.length) return 0;
									for (var i = 0; i < game.players.length; i++) {
										if (game.players[i].ai.shown == 0) return 0;
										if (game.players[i].sex == 'unknown') return 0;
									}
								}
								var effect = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i].sex == 'male' && game.players[i] != target && game.players[i] != player && game.players[i].num('he')) effect += ai.get.effect(target, {
										name: 'sha'
									}, game.players[i], target);
								}
								return effect;
							},
						},
					},
				},
				银沙之力: {
					trigger: {
						player: "damageEnd",
					},
					direct: true,
					content: function () {
						"step 0"
						if (event.isMine()) {
							event.dialog = ui.create.dialog('是否发动【银沙之力】？');
						}
						if (ui.cardPile.childNodes.length < 4) {
							var discardcards = get.cards(4);
							for (var i = 0; i < discardcards.length; i++) {
								ui.discardPile.appendChild(discardcards[i]);
							}
						}
						player.chooseControl('heart2', 'diamond2', 'club2', 'spade2', 'cancel').ai = function (event) {
							if (Math.random() < 0.5) return 'club2';
							if (Math.random() < 0.5) return 'spade2';
							if (Math.random < 2 / 3) return 'diamond2';
							return 'heart2';
						};
						"step 1"
						if (event.dialog) {
							event.dialog.close();
						}
						if (result.control && result.control.indexOf('2') != -1) {
							player.logSkill('sheshi');
							game.log(player, '指定的花色为', result.control);
							var suit = result.control.slice(0, result.control.length - 1);
							var cards = [];
							for (var i = 0; i < ui.cardPile.childNodes.length; i++) {
								var card = ui.cardPile.childNodes[i];
								cards.push(card);
								if (get.suit(card) == suit || i >= 3) {
									break;
								}
							}
							event.cards = cards;
							event.suit = suit;
							player.showCards(cards);
						}
						else {
							event.finish();
						}
						"step 2"
						if (event.cards && event.cards.length) {
							if (get.suit(event.cards[event.cards.length - 1]) == event.suit) {
								ui.discardPile.appendChild(event.cards.pop());
							}
							if (event.cards.length) {
								player.gain(event.cards, 'draw2');
							}
						}
					},
					ai: {
						maixie: true,
						effect: {
							target: function (card, player, target) {
								if (get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -2];
									var hasfriend = false;
									for (var i = 0; i < game.players.length; i++) {
										if (game.players[i] != target && ai.get.attitude(game.players[i], target) >= 0) {
											hasfriend = true;
											break;
										}
									}
									if (!hasfriend) return;
									if (target.hp >= 4) return [1, 2];
									if (target.hp == 3) return [1, 1.5];
									if (target.hp == 2) return [1, 0.5];
								}
							},
						},
					},
				},
				镭射光束: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					filter: function (event) {
						return Math.random() < 0.5;
					},
					content: function () {
						if (Math.random() < 0.5) {
							trigger.nature = 'fire';
						}
						else {
							if (!trigger.player.classList.contains('linked')) trigger.player.link();
						}
					},
				},
				企鹅导弹: {
					trigger: {
						player: "phaseEnd",
					},
					unique: true,
					filter: function (event, player) {
						return player.num('h') >= 2;
					},
					content: function () {
						"step 0"
						event.players = get.players(player);
						event.players.remove(player);
						"step 1"
						if (event.players.length) {
							player.discardPlayerCard('h', 2, player, true);
							event.players.shift().damage('fire');
							event.redo();
						}
					},
				},
				血祭启示录: {
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					content: function () {
						player.addSkill('血祭启示录_1');
						player.storage.血祭启示录 = get.time();
					},
					subSkill: {
						1: {
							trigger: {
								global: ["useCardAfter", "useCardBefore", "phaseBefore", "loseEnd", "phaseBegin", "phaseDradBegin", "phaseUseBegin", "phaseUseEnd", "phaseEnd", "phaseDiscardAfter", "phaseDiscardBegin", "useSkillBefore", "judgeBefore", "judgeAfter", "gainBefore", "gainEnd"],
							},
							forced: true,
							silent: true,
							popup: false,
							filter: function (event, player) {
								return typeof player.storage.血祭启示录 == 'number';
							},
							content: function () {
								'step 0'
								player.storage.血祭启示录_1 = get.time() - player.storage.血祭启示录;
								'step 1'
								if (player.storage.血祭启示录_1 >= 3000) {
									player.popup('血祭启示录');
									player.logSkill('血祭启示录');
									player.addSkill('血祭启示录_1');
								}
								else {
									event.finish();
								}
								'step 2'
								player.chooseTarget(true, function (card, player, target) {
									return target != player;
								}).ai = function (target) {
									return -ai.get.attitude(player, target);
								}
								"step 3"
								if (result.bool) {
									event.target = result.targets[0];
									event.target.damage();
									player.removeSkill('血祭启示录_1');
								}
							},
						},
					},
				},
				嗜血: {
					init: function (player) {
						player.storage.嗜血 = false;
					},
					trigger: {
						player: "phaseEnd",
					},
					forced: true,
					filter: function (event, player) {
						if (!player.storage.嗜血 && player.num('h') >= player.hp) return true;
						return false;
					},
					content: function () {
						'step 0'
						player.storage.嗜血 = true;
						'step 1'
						player.addSkill('嗜血_1');
						player.addSkill('嗜血_2');
					},
					subSkill: {
						1: {
							name: "嗜血",
							trigger: {
								source: "damageEnd",
							},
							forced: true,
							filter: function (event, player) {
								if (player.isDamaged()) return true;
								return false;
							},
							content: function () {
								player.recover(2);
							},
						},
						2: {
							trigger: {
								player: "loseEnd",
							},
							filter: function (event, player) {
								if (player.num('h')) return false;
								for (var i = 0; i < event.cards.length; i++) {
									if (event.cards[i].original == 'h') return true;
								}
								return false;
							},
							forced: true,
							content: function () {
								'step 0'
								player.storage.嗜血 = false;
								'step 1'
								player.removeSkill('嗜血_1');
								player.removeSkill('嗜血_2');
							},
						},
					},
				},
				定时爆竹: {
					trigger: {
						player: "phaseEnd",
					},
					content: function () {
						player.addSkill('定时爆竹_1');
						player.storage.定时爆竹 = get.time();
					},
					subSkill: {
						1: {
							trigger: {
								global: ["useCardAfter", "useCardBefore", "phaseBefore", "loseEnd", "phaseBegin", "phaseDradBegin", "phaseUseBegin", "phaseUseEnd", "phaseEnd", "phaseDiscardAfter", "phaseDiscardBegin", "useSkillBefore", "judgeBefore", "judgeAfter", "gainBefore", "gainEnd"],
							},
							forced: true,
							silent: true,
							popup: false,
							filter: function (event, player) {
								return typeof player.storage.定时爆竹 == 'number';
							},
							content: function () {
								'step 0'
								player.storage.定时爆竹_1 = get.time() - player.storage.定时爆竹;
								'step 1'
								if (player.storage.定时爆竹_1 >= 3000) {
									player.popup('定时爆竹');
									player.logSkill('定时爆竹');
									player.addSkill('定时爆竹_1');
								}
								else {
									event.finish();
								}
								'step 2'
								player.chooseTarget(true, function (card, player, target) {
									return target != player;
								}).ai = function (target) {
									return -ai.get.attitude(player, target);
								}
								"step 3"
								if (result.bool) {
									event.target = result.targets[0];
									player.gainPlayerCard('hej', event.target, true);
									player.removeSkill('定时爆竹_1');
								}
							},
						},
					},
				},
				诱敌制胜: {
					trigger: {
						player: "chooseToRespondBegin",
					},
					filter: function (event, player) {
						if (event.responded) return false;
						if (!event.filterCard({
							name: 'shan'
						})) return false;
						return true;
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							if (get.type(card) == 'basic') return 1;
							return 0;
						});
						"step 1"
						if (get.type(result.card) == 'basic') {
							trigger.untrigger();
							trigger.responded = true;
							trigger.result = {
								bool: true,
								card: {
									name: 'shan'
								}
							};
						}
					},
				},
				奥义·烈斩: {
					trigger: {
						global: "damageBefore",
					},
					forced: true,
					unique: true,
					filter: function (event, player) {
						return event.player != undefined && event.num > 0;
					},
					priority: null,
					content: function () {
						'step 0'
						player.chooseControl('火', '雷', '毒', '无来源',
						ui.create.dialog('请选择一项', 'hidden')).ai = function (event, player) {
							var player = trigger.player;
							var equip2 = trigger.player.get('e', '2');
							if (player.hasSkillTag('nofire')) return '无来源';
							if (player.hasSkillTag('nothunder')) return '无来源';
							if (equip2 && equip2.name == 'tengjia') return '火';
							return '无来源';
						};
						"step 1"
						if (result.control == '火') {
							trigger.nature = 'fire';
						}
						else if (result.control == '雷') {
							trigger.nature = 'thunder';
						}
						else if (result.control == '毒') {
							trigger.nature = 'poison';
						}
						else {
							trigger.untrigger();
							trigger.finish();
							var ex = 0;
							if (trigger.card && trigger.card.name == 'sha') {
								if (player.skills.contains('jiu')) ex++;
								if (player.skills.contains('luoyi2')) ex++;
								if (player.skills.contains('reluoyi2')) ex++;
							}
							trigger.player.loseHp(trigger.num + ex);
						}
					},
				},
				拔刀术: {
					enable: ["chooseToUse", "chooseToRespond"],
					filterCard: function (card) {
						return get.color(card) == 'black';
					},
					position: "he",
					viewAs: {
						name: "sha",
						nature: "thunder",
						suit: "spade",
						number: 4,
					},
					prompt: "将一张黑色牌当雷杀使用",
					ai: {
						respondSha: true,
						basic: {
							useful: [5, 1],
							value: [5, 1],
						},
						order: 3,
						result: {
							target: function (player, target) {
								if (player.hasSkill('jiu') && !target.num('e', 'baiyin')) {
									if (ai.get.attitude(player, target) > 0) {
										return -6;
									}
									else {
										return -3;
									}
								}
								return -1.5;
							},
						},
						tag: {
							respond: 1,
							respondShan: 1,
							damage: function (card) {
								if (card.nature == 'poison') return;
								return 1;
							},
							natureDamage: function (card) {
								if (card.nature) return 1;
							},
							fireDamage: function (card, nature) {
								if (card.nature == 'fire') return 1;
							},
							thunderDamage: function (card, nature) {
								if (card.nature == 'thunder') return 1;
							},
							poisonDamage: function (card, nature) {
								if (card.nature == 'poison') return 1;
							},
						},
					},
				},
				三重卡组: {
					trigger: {
						player: "phaseDiscardBefore",
					},
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
				},
				无尽诅咒: {
					trigger: {
						player: ["phaseBegin", "phaseEnd"],
					},
					unique: true,
					filter: function (event, player) {
						if (!player.num('hej')) return false;
						return true;
					},
					content: function () {
						'step 0'
						player.chooseToDiscard('hej', true);
						'step 1'
						event.target = game.players.randomGet(player);
						game.delayx();
						'step 2'
						event.target.showHandcards();
						'step 3'
						var cards = event.target.get('h', 'sha');
						if (cards.length) {
							player.gain(cards);
							event.target.$give(cards, player);
							event.target.chooseToDiscard('he', true);
						}
						else {
							event.target.damage('fire');
						}
					},
				},
				御战天下: {
					group: ["御战天下_2222", "御战天下_3333"],
					subSkill: {
						1111: {
							trigger: {
								global: "phaseEnd",
							},
							priority: -50,
							forced: true,
							popup: false,
							content: function () {
								player.storage.御战天下 = false;
							},
						},
						2222: {
							filterCard: function () {
								return false
							},
							selectCard: -1,
						},
						3333: {
							trigger: {
								global: "useCard",
							},
							priority: 500,
							filter: function (event, player) {
								return !player.storage.御战天下 && event.player != player;
							},
							content: function () {
								'step 0'
								player.storage.御战天下 = true;
								player.addSkill('御战天下_1111');
								player.gain(trigger.card);
								'step 1'
								for (var i = 0; i < game.players.length; i++) {
									trigger.targets.remove(game.players[i]);
								}
								if (trigger.card.name == 'wuxie') {
									player.addSkill('御战天下_4444');
								}
							},
						},
						4444: {
							trigger: {
								player: "chooseToUseBegin",
							},
							priority: 500,
							filter: function (event, player) {
								return event.filterCard && event.filterCard({
									name: 'wuxie'
								}, player);
							},
							prompt: "是否发动【御战天下】视为使用一张【无懈可击】",
							content: function () {
								lib.skill.御战天下_2222.viewAs = {
									name: 'wuxie'
								};
								event.parent.parent.backup('御战天下_2222');
								event.parent.parent.step = 0;
								player.removeSkill('御战天下_4444');
							},
						},
					},
				},
				百战獠牙: {
					init: function (player) {
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.百战獠牙 = [];
						}
					},
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						return target != player;
					},
					content: function () {
						'step 0'
						for (var i = 0; i < game.players.length; i++) {
							game.players[i].storage.百战獠牙 = [];
							game.players[i].removeSkill('百战獠牙_1');
						}
						'step 1'
						target.storage.百战獠牙 = player;
						target.addSkill('百战獠牙_1');
					},
					ai: {
						basic: {
							order: 10,
						},
						result: {
							target: -1,
						},
					},
					subSkill: {
						1: {
							trigger: {
								source: "damageBegin",
							},
							filter: function (event, player) {
								return event.num >= 1 && event.player == player.storage.百战獠牙;
							},
							forced: true,
							popup: false,
							priority: null,
							content: function () {
								trigger.player.logSkill('百战獠牙');
								trigger.num = 0;
							},
						},
					},
				},
				免疫奶瓶: {
					trigger: {
						player: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.num -= trigger.num * 0.5;
					},
				},
				鹿顶记: {
					intro: {
						content: "mark",
					},
					init: function (player) {
						player.storage.鹿顶记 = 0;
					},
					enable: "phaseUse",
					usable: 1,
					filterCard: true,
					position: "he",
					check: function (card) {
						return 8 - ai.get.value(card)
					},
					content: function () {
						"step 0"
						player.storage.鹿顶记 += 1;
						player.markSkill('鹿顶记');
						player.syncStorage('鹿顶记');
						"step 1"
						player.chooseTarget(function (card, player, target) {
							return target != player;
						}).ai = function (target) {
							return -ai.get.attitude(player, target);
						}
						"step 2"
						if (result.bool) {
							event.target = result.targets[0];
							event.target.damage(player.storage.鹿顶记);
							player.recover(player.storage.鹿顶记);
							player.storage.鹿顶记 = 0;
							player.unmarkSkill('鹿顶记');
						}
						else {
							event.finish();
						}
					},
					ai: {
						basic: {
							order: 1,
						},
						result: {
							player: 1,
						},
					},
				},
				连亘之水: {
					skillAnimation: "epic",
					animationColor: "thunder",
					enable: "phaseUse",
					usable: 1,
					unique: true,
					filter: function (event, player) {
						if (game.players.length + game.dead.length <= 7) return true;
						return false;
					},
					content: function () {
						var list = [];
						for (var i in lib.character) {
							if (lib.character[i].mode && lib.character[i].mode.contains(lib.config.mode) == false) continue;
							if (i != 'list') list.push(i);
						}
						var players = game.players.concat(game.dead);
						for (var j = 0; j < players.length; j++) {
							list.remove([players[j].name]);
						}
						if (list.length) {
							var player2 = game.addPlayer();
							if (get.config('double_character') || lib.config.mode == 'guozhan') {
								var list2 = list.randomGets(2);
								player2.init(list2[0], list2[1]);
							}
							else {
								player2.init(list.randomGet())
							}
							player2.init('yhzr火元素')
							player2.identity = player.identity;
							if (player2.identity == 'zhu') player2.identity = 'zhong';
							player2.setIdentity('元素');
							player2.group = player.group;
							player2.identityShown = true;
							player2.draw(4);
							if (player2.name) {
								var skills0 = lib.character[player2.name][3];
							}
							if (player2.name1) {
								var skills1 = lib.character[player2.name1][3];
							}
							if (player2.name2) {
								var skills2 = lib.character[player2.name2][3];
							}
							if (skills0 && skills0.length) {
								for (var i = 0; i < skills0.length; i++) {
									player.addSkill(skills0[i]);
								}
							}
							if (skills1 && skills1.length) {
								for (var i = 0; i < skills1.length; i++) {
									player.addSkill(skills1[i]);
								}
							}
							if (skills2 && skills2.length) {
								for (var i = 0; i < skills2.length; i++) {
									player.addSkill(skills2[i]);
								}
							}
							if (player.maxHp > 0) player.loseMaxHp(0);
						}
					},
				},
				凝水之盾: {
					trigger: {
						player: "phaseBegin",
					},
					forced: true,
					filter: function (event, player) {
						return !player.hujia;
					},
					content: function () {
						player.changeHujia();
						player.update();
					},
				},
				无尽深渊: {
					trigger: {
						source: "damageBegin",
					},
					forced: true,
					content: function () {
						trigger.player.loseHp(trigger.player.maxHp * 0.15);
						player.recover(trigger.player.maxHp * 0.15);
					},
				},
				神灯耀光: {
					trigger: {
						player: "phaseDiscardBefore",
					},
					priority: 10,
					forced: true,
					filter: function (event, player) {
						return player.hp == player.maxHp;
					},
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
				},
				风暴怒涛: {
					enable: "phaseUse",
					usable: 1,
					filterTarget: function (card, player, target) {
						return player != target && target.num('he') > 0 && player.num('he') >= target.num('he');
					},
					prompt: "请选择1名角色",
					content: function () {
						"step 0"
						var num = target.num('he')
						player.chooseToDiscard(num, true);
						"step 1"
						player.gain(target.get('he'));
						target.$give(target.get('he'), player);
						var num = target.num('he');
						target.damage('thunder', num, true);
					},
					ai: {
						order: 9.5,
						result: {
							target: function (player, target) {
								return ai.get.damageEffect(target, player);
							},
						},
						expose: 0.2,
					},
				},
				拳手的战意: {
					unique: true,
					enable: "chooseToUse",
					mark: true,
					init: function (player) {
						player.storage.chongsheng = 0;
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					filter: function (event, player) {
						if (event.type != 'dying') return false;
						if (player != _status.dying) return false;
						if (player.storage.chongsheng == 2) return false;
					},
					content: function () {
						player.hp = Math.min(2 - player.storage.chongsheng, player.maxHp);
						player.discard(player.get('hej'));
						player.draw(2 - player.storage.chongsheng);
						player.storage.chongsheng++;
						if (player.storage.chongsheng == 2) {
							player.unmarkSkill('chongsheng');
						}
						if (player.isLinked()) player.link();
						if (player.isTurnedOver()) player.turnOver();
						game.addVideo('storage', player, ['chongsheng', player.storage.chongsheng]);
					},
					ai: {
						skillTagFilter: function (player) {
							if (player.storage.chongsheng == 2) return false;
							if (player.hp > 0) return false;
						},
						save: true,
						result: {
							player: 10,
						},
						threaten: function (player, target) {
							if (target.storage.chongsheng < 2) return 0.6;
						},
					},
					intro: {
						content: function (storage) {
							return '剩余' + get.cnNumber(2 - storage) + '次';
						},
					},
				},
				时空道标: {
					trigger: {
						player: "dying",
						global: "gameStart",
					},
					priority: null,
					content: function () {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player) {
								game.players[i].damage();
							}
						}
					},
				},
				逝时若光: {
					skillAnimation: "epic",
					animationColor: "water",
					trigger: {
						player: "damageEnd",
					},
					forced: true,
					filter: function (event) {
						return Math.random() < 0.1;
					},
					content: function () {
						'step 0'
						player.recover(trigger.num);
						'step 1'
						while (_status.event.name != 'phaseLoop') {
							_status.event = _status.event.parent;
						}
						_status.paused = false;
						_status.event.player = player;
						_status.event.step = 0;
						if (game.bossinfo) {
							game.bossinfo.loopType = 1;
						}
					},
					priority: 0,
				},
				回响: {
					trigger: {
						player: "recoverBegin",
					},
					forced: true,
					content: function () {
						trigger.num += 1;
					},
				},
				超声音波: {
					group: ["超声音波_1111", "超声音波_2222"],
					subSkill: {
						1111: {
							trigger: {
								player: "damage",
							},
							content: function () {
								player.draw(trigger.num);
							},
						},
						2222: {
							enable: "chooseToUse",
							filter: function (event, player) {
								return player.num('he', {
									suit: 'spade'
								});
							},
							filterCard: function (card) {
								return get.suit(card) == 'spade';
							},
							position: "he",
							viewAs: {
								name: "tao",
							},
							prompt: "将一张黑桃牌当桃使用",
							check: function (card) {
								return 15 - ai.get.value(card)
							},
							ai: {
								skillTagFilter: function (player) {
									return player.num('he', {
										suit: 'spade'
									}) > 0;
								},
								threaten: 1.5,
								save: true,
								basic: {
									order: function (card, player) {
										if (player.hasSkillTag('pretao')) return 5;
										return 2;
									},
									useful: [8, 6.5],
									value: [8, 6.5],
								},
								result: {
									target: function (player, target) {
										// if(player==target&&player.hp<=0) return 2;
										var nh = target.num('h');
										var keep = false;
										if (nh <= target.hp) {
											keep = true;
										}
										else if (nh == target.hp + 1 && target.hp >= 2 && target.num('h', 'tao') <= 1) {
											keep = true;
										}
										var mode = get.mode();
										if (target.hp >= 2 && keep && target.hasFriend()) {
											if (target.hp > 2) return 0;
											if (target.hp == 2) {
												for (var i = 0; i < game.players.length; i++) {
													if (target != game.players[i] && ai.get.attitude(target, game.players[i]) >= 3) {
														if (game.players[i].hp <= 1) return 0;
														if (mode == 'identity' && game.players[i].isZhu && game.players[i].hp <= 2) return 0;
													}
												}
											}
										}
										if (target.hp < 0 && target != player && target.identity != 'zhu') return 0;
										var att = ai.get.attitude(player, target);
										if (att < 3 && att >= 0 && player != target) return 0;
										var tri = _status.event.getParent()._trigger;
										if (mode == 'identity' && player.identity == 'fan' && target.identity == 'fan') {
											if (tri && tri.name == 'dying' && tri.source && tri.source.identity == 'fan' && tri.source != target) {
												var num = 0;
												for (var i = 0; i < game.players.length; i++) {
													if (game.players[i].identity == 'fan') {
														num += game.players[i].num('h', 'tao');
														if (num > 2) return 2;
													}
												}
												if (num > 1 && player == target) return 2;
												return 0;
											}
										}
										if (mode == 'identity' && player.identity == 'zhu' && target.identity == 'nei') {
											if (tri && tri.name == 'dying' && tri.source && tri.source.identity == 'zhong') {
												return 0;
											}
										}
										if (mode == 'stone' && target.isMin() && player != target && tri && tri.name == 'dying' && player.side == target.side && tri.source != target.getEnemy()) {
											return 0;
										}
										return 2;
									},
								},
								tag: {
									recover: 1,
									save: 1,
								},
							},
						},
					},
				},
				贤者之石: {
					enable: "phaseUse",
					usable: 1,
					delay: 0,
					direct: true,
					unique: true,
					init: function (player) {
						player.storage.贤者之石 = [];
					},
					createDialog: function (player, onlylist) {
						var list = [];
						var skills = lib.character[player.storage.贤者之石][3];
						for (var j = 0; j < skills.length; j++) {
							if (!lib.skill[skills[j]].unique && lib.skill[skills[j]] && !player.skills.contains(skills[j])) {
								list.push(skills[j]);
							}
						}
						if (onlylist) return list;
						var dialog = ui.create.dialog();
						dialog.add('选择获得一项技能');
						_status.event.list = list;
						var clickItem = function () {
							_status.event._result = this.link;
							game.resume();
						};
						for (i = 0; i < list.length; i++) {
							if (lib.translate[list[i] + '_info']) {
								var translation = get.translation(list[i])[0] + get.translation(list[i])[1];
								var item = dialog.add('<div class="popup"     style="width:50%;display:inline-block"><div class="skill">【' + translation + '】</div><div>' + lib.translate[list[i] + '_info'] + '</div></div>');
								item.firstChild.addEventListener('click', clickItem);
								item.firstChild.link = list[i];
							}
						}
						dialog.add(ui.create.div('.placeholder'));
						return dialog;
					},
					content: function () {
						'step 0'
						player.chooseButton(ui.create.characterDialog(), true);
						'step 1'
						if (result.bool) {
							player.storage.贤者之石 = [];
							player.storage.贤者之石 = player.storage.贤者之石.concat(result.buttons[0].link);
							event.goto(2);
						}
						"step 2"
						event.skillai = function (list) {
							return list.randomGet();
						};
						if (event.isMine()) {
							event.dialog = lib.skill.贤者之石.createDialog(player);
							event.switchToAuto = function () {
								event._result = event.skillai(event.list);
								game.resume();
							};
							if (_status.event.list.length != 0) {
								game.pause();
							}
							else {
								if (event.dialog) {
									event.dialog.close();
								}
								player.getStat('skill').贤者之石--;
								alert('该角色没有可供选择的技能或者不满足条件');
								event.finish();
							}
						}
						else {
							event._result = event.skillai(lib.skill.贤者之石.createDialog(player, true));
						}
						"step 3"
						if (event.dialog) {
							event.dialog.close();
						}
						var link = result;
						player.logSkill('贤者之石');
						player.popup(link);
						player.addSkill(link);
					},
				},
				凤凰邪眼2: {
					enable: "phaseUse",
					usable: 10,
					delay: 0,
					direct: true,
					unique: true,
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].num('hej')) {
								return true;
							}
						}
						return false;
					},
					content: function () {
						"step 0"
						player.getStat('skill').凤凰邪眼2--;
						player.chooseTarget(function (card, player, target) {
							return player != target && target.num('hej');
						}, '请选择1名角色').ai = function (target) {
							return -ai.get.attitude(player, target);
						};
						"step 1"
						if (result.bool) {
							player.getStat('skill').凤凰邪眼2++;
							event.target = result.targets[0];
							event.goto(2);
						}
						else {
							event.finish();
						}
						"step 2"
						var target = event.target;
						event.dialog = ui.create.dialog('hidden');
						event.dialog.add('凤凰邪眼：选择' + get.translation(target) + '的一张卡牌使用');
						event.position = 'hej';
						var position = event.position;
						for (var i = 0; i < position.length; i++) {
							if (position[i] == 'h' && target.num('h')) {
								event.dialog.add('手牌');
								var hs = target.get('h');
								hs.randomSort();
								event.dialog.add(hs);
							}
							else if (position[i] == 'e' && target.num('e')) {
								event.dialog.add('装备牌');
								event.dialog.add(target.get('e'));
							}
							else if (position[i] == 'j' && target.num('j')) {
								event.dialog.add('判定牌');
								event.dialog.add(target.get('j'));
							}
						}
						var dialog = event.dialog;
						var trigger = event.parent.parent;
						player.chooseButton(dialog, function () {
							return 1
						}).filterButton = function (button) {
							return trigger.filterCard(button.link, player, trigger);
						};
						"step 3"
						if (result.bool) {
							player.logSkill('凤凰邪眼2', event.target);
							event.target.lose(result.links);
							event.target.$give(result.links, player);
							lib.skill.凤凰邪眼3.viewAs = result.buttons[0].link;
							event.parent.parent.backup('凤凰邪眼3');
							event.parent.parent.step = 0;
							if (event.isMine()) {
								event.parent.parent.openskilldialog = '选择' + get.translation(result.buttons[0].link) + '的目标';
							}
						}
					},
					ai: {
						order: 8,
						result: {
							player: function (player) {
								if (_status.dying) return ai.get.attitude(player, _status.dying);
								return 1;
							},
						},
						threaten: 10,
					},
				},
				凤凰邪眼3: {
					unique: true,
					filterCard: function () {
						return false
					},
					selectCard: -1,
					viewAs: {
						node: {
							image: {},
							info: {},
							name: {},
							name2: {},
							background: {},
							intro: {},
							range: {},
						},
						storage: {
							uncheck: [],
						},
						suit: "spade",
						number: 1,
						name: "guding",
						original: null,
						clone: {
							name: "guding",
							suit: "spade",
							number: 1,
							node: {
								name: {},
								info: {},
								intro: {},
								background: {},
								image: {},
							},
							_transitionEnded: true,
							fixed: true,
							timeout: 266,
						},
					},
					ai: {
						basic: {
							useful: [5, 1],
							value: [5, 1],
							equipValue: 2,
							order: function (card, player) {
								return 8 + ai.get.equipValue(card, player) / 20;
							},
						},
						order: 3.8,
						result: {
							target: function (player, target) {
								if (player.hasSkill('jiu') && !target.num('e', 'baiyin')) {
									if (ai.get.attitude(player, target) > 0) {
										return -6;
									}
									else {
										return -3;
									}
								}
								return -1.5;
							},
						},
						tag: {
							respond: 1,
							respondShan: 1,
							damage: function (card) {
								if (card.nature == 'poison') return;
								return 1;
							},
							natureDamage: function (card) {
								if (card.nature) return 1;
							},
							fireDamage: function (card, nature) {
								if (card.nature == 'fire') return 1;
							},
							thunderDamage: function (card, nature) {
								if (card.nature == 'thunder') return 1;
							},
							poisonDamage: function (card, nature) {
								if (card.nature == 'poison') return 1;
							},
						},
					},
				},
				天篷变1: {
					video: function (player, data) {
						if (data) {
							for (var i in data) {
								var current = game.playerMap[i];
								current.node.handcards1.innerHTML = '';
								current.node.handcards2.innerHTML = '';
								current.node.equips.innerHTML = '';
								current.node.judges.innerHTML = '';
								current.directgain(get.infoCards(data[i].h));
								var es = get.infoCards(data[i].e);
								for (var j = 0; j < es.length; j++) {
									current.$equip(es[j]);
								}
								var js = get.infoCards(data[i].j);
								for (var j = 0; j < js.length; j++) {
									player.node.judges.appendChild(js[j]);
								}
							}
							ui.window.classList.remove('zoomout3');
							ui.window.classList.add('zoomin3');
							document.body.appendChild(ui.window);
							setTimeout(function () {
								ui.window.show();
								ui.window.classList.remove('zoomin3');
								setTimeout(function () {
									ui.window.style.transition = '';
								}, 500);
							}, 100);
						}
						else {
							ui.window.style.transition = 'all 0.5s';
							ui.window.classList.add('zoomout3');
							ui.window.delete();
							ui.window.hide();
						}
					},
					intro: {
						content: function (storage, player) {
							if (true) {
								return player.storage.SE_qiulao3;
							}
						},
					},
					skillAnimation: true,
					animationColor: "fire",
					trigger: {
						player: "dieBefore",
					},
					unique: true,
					filter: function (event, player) {
						if (player.storage.SE_qiulao2) return false;
						if (player.storage.SE_qiulao) return true;
						return false;
					},
					check: function (event, player) {
						player.hp <= 0;
					},
					init: function (player) {
						player.storage.SE_qiulao4 = 0;
					},
					content: function () {
						"step 0"
						trigger.untrigger();
						trigger.finish();
						'step 1'
						event.player.storage.SE_qiulao4++;
						if (game.dead.length > 0) {
							while (game.dead.length) {
								game.dead[0].revive();
							}
						}
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] == player) continue;
							if (game.players[i].hp < game.players[i].maxHp) game.players[i].hp = game.players[i].maxHp;
							game.players[i].update();
						}
						"step 2"
						game.delay(0.5);
						"step 3"
						ui.window.style.transition = 'all 0.5s';
						ui.window.classList.add('zoomout3');
						ui.window.delete();
						ui.window.hide();
						game.delay(0, 500);
						game.addVideo('skill', event.player, '天篷变1');
						"step 4"
						var storage = event.player.storage.SE_qiulao;
						var player, frag;
						var i, j;
						for (i = 0; i < storage.length; i++) {
							if (game.players.contains(storage[i].player)) {
								player = storage[i].player;
								while (player.node.handcards1.childNodes.length)
								ui.discardPile.appendChild(player.node.handcards1.firstChild);
								while (player.node.handcards2.childNodes.length)
								ui.discardPile.appendChild(player.node.handcards2.firstChild);
								while (player.node.judges.childNodes.length)
								ui.discardPile.appendChild(player.node.judges.firstChild);
								while (player.node.equips.childNodes.length)
								ui.discardPile.appendChild(player.node.equips.firstChild);
							}
						}
						for (i = 0; i < storage.length; i++) {
							if (game.players.contains(storage[i].player)) {
								player = storage[i].player;
								for (j = 0; j < storage[i].handcards1.length; j++) {
									if (storage[i].handcards1[j].parentNode == ui.discardPile || storage[i].handcards1[j].parentNode == ui.cardPile) player.node.handcards1.appendChild(storage[i].handcards1[j]);
								}
								for (j = 0; j < storage[i].handcards2.length; j++) {
									if (storage[i].handcards2[j].parentNode == ui.discardPile || storage[i].handcards2[j].parentNode == ui.cardPile) player.node.handcards2.appendChild(storage[i].handcards2[j]);
								}
								for (j = 0; j < storage[i].equips.length; j++) {
									if (storage[i].equips[j].parentNode == ui.discardPile || storage[i].equips[j].parentNode == ui.cardPile) player.node.equips.appendChild(storage[i].equips[j]);
								}
								for (j = 0; j < storage[i].judges.length; j++) {
									if (storage[i].judges[j].parentNode == ui.discardPile || storage[i].judges[j].parentNode == ui.cardPile) {
										storage[i].judges[j].viewAs = storage[i].viewAs[j];
										player.node.judges.appendChild(storage[i].judges[j]);
									}
								}
								player.update();
							}
						}
						game.delay(0, 100);
						ui.window.classList.remove('zoomout3');
						ui.window.classList.add('zoomin3');
						document.body.appendChild(ui.window);
						var data = {};
						for (var i = 0; i < game.players.length; i++) {
							data[game.players[i].dataset.position] = {
								h: get.cardsInfo(game.players[i].get('h')),
								e: get.cardsInfo(game.players[i].get('e')),
								j: get.cardsInfo(game.players[i].get('j'))
							}
						}
						game.addVideo('skill', event.player, ['SE_qiulao', data]);
						"step 5"
						ui.window.show();
						ui.window.classList.remove('zoomin3');
						setTimeout(function () {
							ui.window.style.transition = '';
							game.resume();
						}, 500);
						event.player.storage.SE_qiulao3 = '已发动' + event.player.storage.SE_qiulao4 + '次';
						game.pause();
						'step 6'
						var player = event.player;
						if (player.hp < player.maxHp) player.hp = player.maxHp;
						player.update();
						ui.control.innerHTML = '';
						ui.discardPile.innerHTML = '';
					},
					group: ["天篷变2"],
				},
				天篷变2: {
					trigger: {
						global: "gameDrawAfter",
					},
					forced: true,
					priority: 333,
					popup: false,
					silent: true,
					content: function () {
						var handcards1, handcards2, judges, equips, viewAs, i, j;
						player.storage.SE_qiulao = [];
						player.storage.SE_qiulao2 = false;
						var table = document.createElement('table');
						var tr, td, str, st;
						for (i = 0; i < game.players.length; i++) {
							viewAs = [];
							handcards1 = [];
							handcards2 = [];
							judges = [];
							equips = [];
							for (j = 0; j < game.players[i].node.handcards1.childNodes.length; j++)
							handcards1.push(game.players[i].node.handcards1.childNodes[j]);
							for (j = 0; j < game.players[i].node.handcards2.childNodes.length; j++)
							handcards2.push(game.players[i].node.handcards2.childNodes[j]);
							for (j = 0; j < game.players[i].node.judges.childNodes.length; j++) {
								viewAs.push(game.players[i].node.judges.childNodes[j].viewAs);
								judges.push(game.players[i].node.judges.childNodes[j]);
							}

							for (j = 0; j < game.players[i].node.equips.childNodes.length; j++)
							equips.push(game.players[i].node.equips.childNodes[j]);
							tr = document.createElement('tr');
							tr.style.verticalAlign = 'top';
							table.appendChild(tr);
							td = document.createElement('td');
							td.innerHTML = get.translation(game.players[i]);
							tr.appendChild(td);
							td = document.createElement('td');
							td.innerHTML = (handcards1.length + handcards2.length);
							tr.appendChild(td);
							str = '';
							if (equips.length + judges.length) {
								if (equips.length) {
									str += get.translation(equips);
									if (judges.length) {
										str += '、';
									}
								}
								if (judges.length) {
									str += get.translation(judges, 'viewAs');
								}
							}
							else {
								str = '';
							}
							td = document.createElement('td');
							td.innerHTML = str;
							tr.appendChild(td);
							player.storage.SE_qiulao.push({
								player: game.players[i],
								handcards1: handcards1,
								handcards2: handcards2,
								judges: judges,
								equips: equips,
								viewAs: viewAs,
								value: handcards1.length + handcards2.length + equips.length - judges.length
							});
						}
						table.firstChild.firstChild.style.width = '85px';
						table.firstChild.childNodes[1].style.width = '48px';
						player.storage.天篷变3 = '未发动';
					},
				},
				恐惧结界: {
					unique: true,
					global: "恐惧",
				},
				恐惧: {
					trigger: {
						source: "damageEnd",
					},
					filter: function (event, player) {
						if (player.group != 'li') return false;
						if (event.card && event.card.name != 'sha') return false;
						return game.hasPlayer(function (target) {
							return player != target && target.hasSkill('恐惧结界', player);
						});
					},
					direct: true,
					content: function () {
						'step 0'
						var list = [];
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && game.players[i].hasSkill('恐惧结界', player)) {
								list.push(game.players[i]);
							}
						}
						event.list = list;
						'step 1'
						if (event.list.length) {
							var current = event.list.shift();
							event.current = current;
							player.chooseBool('是否对' + get.translation(current) + '发动【恐惧结界】？').set('choice', ai.get.attitude(player, current) > 0);
						}
						else {
							event.finish();
						}
						'step 2'
						if (result.bool) {
							player.logSkill('恐惧结界', event.current);
							event.current.draw();
						}
						event.goto(1);
					},
					ai: {
						expose: 0.2,
					},
				},
				恐惧镰刀: {
					group: ["恐惧镰刀_1", "恐惧镰刀_2", "恐惧镰刀_3"],
					subSkill: {
						1: {
							enable: "phaseUse",
							filter: function (event, player) {
								return player.num('h', {
									suit: 'club'
								}) > 0;
							},
							filterCard: function (card) {
								return get.suit(card) == 'club';
							},
							viewAs: {
								name: "tiesuo",
							},
							prompt: "将一张梅花牌当铁锁连环使用",
							check: function (card) {
								return 4 - ai.get.value(card)
							},
						},
						2: {
							name: "重铸♣︎",
							enable: "phaseUse",
							filter: function (event, player) {
								return player.num('h', {
									suit: 'club'
								}) > 0;
							},
							filterCard: function (card) {
								return get.suit(card) == 'club';
							},
							check: function (card) {
								return 5 - ai.get.useful(card);
							},
							content: function () {
								player.draw();
							},
							discard: false,
							prepare: function (cards, player) {
								player.$throw(cards);
							},
							ai: {
								basic: {
									order: 1,
								},
								result: {
									player: 1,
								},
							},
						},
						3: {
							mod: {
								selectTarget: function (card, player, range) {
									if (card.name == 'tiesuo') range[1] = 5;
								},
							},
						},
					},
				},
				挟天子以令诸侯: {
					trigger: {
						player: "phaseDrawBegin",
					},
					direct: true,
					content: function () {
						'step 0'
						player.chooseTarget('是否发动【挟天子以令诸侯】？', function (card, player, target) {
							return get.distance(player, target, 'attack') <= 1;
						}).ai = function (target) {
							return ai.get.attitude(player, target) <= 0;
						};
						'step 1'
						if (result.bool) {
							player.logSkill('zhaolie', result.targets);
							trigger.num--;
							event.cards = get.cards(3);
							event.target = result.targets[0];
							event.target.showCards(event.cards);
						}
						else {
							event.finish();
						}
						'step 2'
						event.lose = 0;
						for (var i = 0; i < event.cards.length; i++) {
							if (get.type(event.cards[i]) != 'basic' || event.cards[i].name == 'tao') {
								if (event.cards[i].name != 'tao') {
									event.lose++;
								}
								ui.discardPile.appendChild(event.cards[i]);
								event.cards.splice(i--, 1);
							}
						}
						'step 3'
						if (event.cards.length) {
							event.target.chooseControl('选项一', '选项二', function () {
								if (event.lose * 2 <= event.cards.length && event.target.hp - event.lose > 0) return '选项一';
								if (event.target.num('he') < event.lose && !event.target.num('h', 'tao')) return '选项二';
								if (event.lose >= 2 && !event.target.num('h', 'tao')) return '选项二';
								if (event.lose <= 1 && event.target.hp > 1) return '选项一';
								return '选项二';
							}).set('prompt', '挟天子以令诸侯<br><br><div class="text">1:' + get.translation(trigger.player) + '对你造成' + get.translation(event.lose) + '点伤害，然后你获得' + get.translation(event.cards) + '。</div><br><div class="text">2:你弃置' + get.translation(event.lose) + '张牌，然后' + get.translation(trigger.player) + '获得' + get.translation(event.cards) + '。</div></br>');
						}
						else {
							event.target.chooseControl('选项一', '选项二', function (target) {
								if (event.target.hp - event.lose > 0) '选项一';
								if (event.target.num('he') < event.lose) return '选项二';
								if (event.target.num('h', 'tao') > 0) '选项一';
								return '选项二';
							}).set('prompt', '挟天子以令诸侯<br><br><div class="text">1:' + get.translation(trigger.player) + '对你造成' + get.translation(event.lose) + '点伤害。</div><br><div class="text">2:你弃置' + get.translation(event.lose) + '张牌。</div></br>');
						}
						'step 4'
						if (result.control == '选项二') {
							event.target.chooseToDiscard(event.lose, true, 'he').ai = function (card) {
								return 10 - ai.get.value(card);
							}
							if (event.cards.length) {
								player.gain(event.cards, 'gain2');
								game.log(player, '获得了', event.cards);
							}

						}
						else {
							event.target.damage(event.lose, player);
							if (event.cards.length) {
								event.target.gain(event.cards, 'gain2');
								game.log(event.target, '获得了', event.cards);
							}
						}
					},
				},
				乱世枭雄: {
					trigger: {
						source: "damageBegin",
					},
					content: function () {
						player.draw();
					},
				},
				高速快门: {
					trigger: {
						player: "phaseAfter",
					},
					forced: true,
					priority: -50,
					filter: function (event, player) {
						return event.parent.name != '高速快门';
					},
					content: function () {
						player.draw();
						player.phase();
					},
					ai: {
						threaten: 1.8,
					},
				},
				闪耀之光: {
					trigger: {
						player: "damageBefore",
					},
					filter: function (event) {
						return event.nature == 'fire';
					},
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						nofire: true,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'fireDamage')) return 0;
							},
						},
					},
				},
				迷藏印记: {
					trigger: {
						player: "phaseUseEnd",
					},
					frequent: true,
					filter: function (event, player) {
						return get.cardCount(true, player) > 0;
					},
					content: function () {
						player.draw(get.cardCount(true, player));
					},
					ai: {
						threaten: 1.3,
					},
				},
				怒战八方: {
					mod: {
						cardUsable: function (card) {
							if (get.info(card) && get.info(card).forceUsable) return;
							return Infinity;
						},
						targetInRange: function () {
							return true;
						},
					},
					trigger: {
						player: "useCard",
					},
					filter: function (event, player) {
						if (_status.currentPhase != player) return false;
						return get.cardCount(event.card, player) > 1;
					},
					forced: true,
					usable: 3,
					content: function () {
						player.draw();
					},
				},
				破甲2: {
					trigger: {
						player: "phaseBefore",
					},
					forced: true,
					content: function () {
						player.removeSkill('破甲');
						player.removeSkill('破甲2');
					},
				},
				红莲庇护: {
					trigger: {
						player: ["loseEnd", "changeHp"],
					},
					forced: true,
					unique: true,
					filter: function (event, player) {
						return player.num('h') < 3;
					},
					content: function () {
						player.draw(3 - player.num('h'));
					},
					ai: {
						effect: {
							target: function (card, player, target) {
								if (card.name == 'shunshou') return;
								if (card.name == 'guohe') {
									if (!target.num('e')) return [0, 1];
								}
								else if (get.tag(card, 'loseCard')) {
									return [0, 1];
								}
							},
						},
						noh: true,
					},
					priority: 0,
				},
				机甲操作: {
					skillAnimation: "epic",
					animationColor: "metal",
					trigger: {
						global: "gameDrawAfter",
						player: ["phaseBefore", "phaseAfter"],
					},
					priority: 101,
					direct: true,
					content: function () {
						'step 0'
						var list = [];
						for (var i in lib.character) {
							if (lib.character[i].mode && lib.character[i].mode.contains(lib.config.mode) == false) continue;
							if (lib.character[i][0] != 'male') continue;
							if (i != 'list') list.push(i);
						}
						for (var j = 0; j < game.players.length; j++) {
							list.remove([game.players[j].name]);
							list.remove([game.players[j].name2]);
							list.remove(player.name2);
						}
						if (list.length) {
							player.chooseButton(ui.create.dialog([list, 'character']), function (button) {
								var i = Math.floor(Math.random() * list.length);
								return list[i];
							})
						}
						'step 1'
						if (result.bool) {
							player.logSkill('机甲操作');
							player.init('yhzr终结者9号', result.buttons[0].link);
						}
					},
				},
				角色扮演: {
					skillAnimation: true,
					animationColor: "water",
					trigger: {
						global: "dying",
					},
					priority: 9,
					filter: function (event, player) {
						return player.identity == 'zhong' && event.player.identity == 'zhu';
					},
					content: function () {
						'step 0'
						var hp = player.hp;
						trigger.player.recover(hp);
						trigger.player.gain(player.get('he'));
						player.$give(player.num('he'), trigger.player);
						'step 1'
						player.die()._triggered = null;
					},
				},
			},
			translate:{
				yhzr苍天之拳:"苍天之拳",
				yhzr宫本武藏:"宫本武藏",
				yhzr狼蛛:"狼蛛",
				yhzr火神战姬:"火神战姬",
				yhzr火元素:"火元素",
				yhzr黑暗死神:"黑暗死神",
				yhzr布鲁:"布鲁",
				yhzr布丁:"布丁",
				yhzr战神阿瑞斯:"战神阿瑞斯",
				yhzr八歧大蛇:"八歧大蛇",
				yhzr罪业狂屠:"罪业狂屠",
				yhzr二郎神杨戬:"二郎神杨戬",
				yhzr黑桃皇后:"黑桃皇后",
				yhzr波斯王子:"波斯王子",
				yhzr森林之女:"森林之女",
				yhzr暗月猎手:"暗月猎手",
				yhzr炽天使:"炽天使",
				yhzr圣女贞德:"圣女贞德",
				yhzr织田信长:"织田信长",
				yhzr血腥女王:"血腥女王",
				yhzr终结者9号:"终结者9号",
				yhzr霸王项羽:"霸王项羽",
				yhzr鬼X判官:"鬼X判官",
				yhzr判官钟馗:"判官钟馗",
				yhzr蚩尤:"蚩尤",
				yhzr温蒂:"温蒂",
				yhzr忘川巫女:"忘川巫女",
				yhzr潘多拉:"潘多拉",
				yhzr蛇发美杜莎:"蛇发美杜莎",
				yhzr暗精灵:"暗精灵",
				yhzr疯狂博士:"疯狂博士",
				yhzr树精长老:"树精长老",
				yhzr神农氏:"神农氏",
				yhzr冥王哈迪斯:"冥王哈迪斯",
				yhzr玄武:"玄武",
				yhzr风暴之灵:"风暴之灵",
				yhzr红炎双刀:"红炎双刀",
				yhzr饕餮:"饕餮",
				yhzr赵云:"赵云",
				yhzr妲己:"妲己",
				yhzr石甲守护者:"石甲守护者",
				yhzr金乌:"金乌",
				yhzr神X金乌:"神X金乌",
				yhzr诸葛亮:"诸葛亮",
				yhzr五彩神石:"五彩神石",
				yhzr关羽:"关羽",
				yhzr图坦卡蒙:"图坦卡蒙",
				yhzr貂蝉:"貂蝉",
				yhzr司马懿:"司马懿",
				yhzr吕布:"吕布",
				yhzr宙斯:"宙斯",
				yhzr黑胡子船长:"黑胡子船长",
				yhzr玉兔:"玉兔",
				yhzr熊猫武僧:"熊猫武僧",
				yhzr波塞冬:"波塞冬",
				yhzr小乔:"小乔",
				yhzr洛神:"洛神",
				yhzr服部半藏X影:"服部半藏X影",
				yhzr雪豹:"雪豹",
				yhzr猎魔人:"猎魔人",
				yhzr幽能刺客:"幽能刺客",
				yhzr孙悟空:"孙悟空",
				yhzr牛头人酋长:"牛头人酋长",
				yhzr绿野花仙:"绿野花仙",
				yhzr山丘之王:"山丘之王",
				yhzr食人魔首领:"食人魔首领",
				yhzr丛林之子:"丛林之子",
				yhzr达芬奇:"达芬奇",
				yhzr暴君萨特:"暴君萨特",
				yhzr嫦娥X月:"嫦娥X月",
				yhzr小龙女:"小龙女",
				yhzr雅典娜:"雅典娜",
				yhzr亚瑟王:"亚瑟王",
				yhzr凯撒大帝:"凯撒大帝",
				yhzr李元霸:"李元霸",
				yhzr哪咤:"哪咤",
				yhzr奥丁:"奥丁",
				yhzr周瑜:"周瑜",
				yhzr西门飞雪:"西门飞雪",
				yhzr玉皇大帝:"玉皇大帝",
				yhzr龙骑士:"龙骑士",
				yhzr大天使:"大天使",
				yhzr天蓬元帅:"天蓬元帅",
				yhzr冰雪女王:"冰雪女王",
				yhzr后羿:"后羿",
				yhzr炽焰火女:"炽焰火女",
				yhzr女武神:"女武神",
				yhzr精灵王子:"精灵王子",
				yhzr白袍巫师:"白袍巫师",
				yhzr阿波罗:"阿波罗",
				yhzr孙尚香:"孙尚香",
				yhzr死亡骑士:"死亡骑士",
				yhzr电光侠:"电光侠",
				yhzr张飞:"张飞",
				yhzr泰坦巨人:"泰坦巨人",
				yhzr斯巴达:"斯巴达",
				yhzr李探花:"李探花",
				yhzr埃及艳后:"埃及艳后",
				yhzr聂小倩:"聂小倩",
				yhzr超能企鹅:"超能企鹅",
				yhzr德古拉伯爵:"德古拉伯爵",
				yhzr福娃:"福娃",
				yhzr绯雨剑星:"绯雨剑星",
				yhzr阿努比斯:"阿努比斯",
				yhzr蝎子王:"蝎子王",
				yhzr狼王:"狼王",
				yhzr小鹿:"小鹿",
				yhzr水元素:"水元素",
				yhzr地狱领主:"地狱领主",
				yhzr灯神:"灯神",
				yhzr罗刹郡主:"罗刹郡主",
				yhzr袋鼠拳王:"袋鼠拳王",
				yhzr时空猎人:"时空猎人",
				yhzr火舞歌灵:"火舞歌灵",
				yhzr地狱火:"地狱火",
				yhzr幻卡魔女:"幻卡魔女",
				yhzr魅魔公主:"魅魔公主",
				yhzr曹操:"曹操",
				yhzr神秘冒险家:"神秘冒险家",
				yhzr自然之灵:"自然之灵",
				yhzr花木兰:"花木兰",
				天翔击:"天翔击",
				天翔击_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害必定<span style=\"color:#DC143C\">暴击</span>",
				天罚之拳:"天罚之拳",
				天罚之拳_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，概率令对方<span style=\"color:#FFFF00\">麻痹</span>无限回合",
				麻痹:"麻痹",
				麻痹_info:"每回合末概率<span style=\"color:#8B2323\">翻面</span>",
				千叶斩:"千叶斩",
				千叶斩_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，概率取消伤害，改为被伤害者<span style=\"color:#D8BFD8\">流失</span>10次0.2点体力",
				幻之分身:"幻之分身",
				幻之分身_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，高概率免伤并<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				勾玉魂刀:"勾玉魂刀",
				勾玉魂刀_info:"<span style=\"color:#EE7621\">被动：</span>摸牌阶段，你摸牌的数量改为你已损失的体力值+2；你的手牌上限+3",
				暗夜蛛毒:"暗夜蛛毒",
				暗夜蛛毒_info:"当你造成伤害时，你可以进行一次判定，若判定牌颜色为黑色，你<span style=\"color:#ADFF2F\">恢复</span>一点体力并开始蜕皮（蜕皮：<span style=\"color:#EE7621\">被动：</span>你可以免疫一次伤害）",
				幽影之蜕:"幽影之蜕",
				幽影之蜕_info:"<span style=\"color:#EE7621\">被动：</span>你可以免疫一次伤害",
				穿甲炸弹:"穿甲炸弹",
				穿甲炸弹_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，受伤者的防御-1（不可叠加），持续一回合",
				破甲:"破甲",
				破甲_info:"<span style=\"color:#EE7621\">被动：</span>你受到的伤害+1",
				枪林弹雨:"枪林弹雨",
				枪林弹雨_info:"出牌阶段，若你有两张颜色相同的手牌，你可以将其中一张牌当【万箭齐发】使用，<span style=\"color:#E066FF\">每回合限一次</span>",
				流炎爆裂:"流炎爆裂",
				流炎爆裂_info:"结束阶段，你可以<span style=\"color:#D8BFD8\">流失</span>1点体力，然后令一名敌方角色受到一点<span style=\"color:#EE4000\">火焰</span>伤害并弃置其装备区里的所有牌",
				不死之炎:"不死之炎",
				不死之炎_info:"<span style=\"color:#EE7621\">被动：</span>每回合末，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				无尽恐惧:"无尽恐惧",
				无尽恐惧_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，被杀者概率害怕（无法行动）",
				生命凋零:"生命凋零",
				生命凋零_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，扣除对方一点体力上限并扣除自身一点体力（扣除体力上限并不会影响原本造成的伤害）",
				光钻尘雾:"光钻尘雾",
				光钻尘雾_info:"出牌阶段结束时，你可以摸X张牌，X为你本回合使用的卡牌数",
				钻能射线:"钻能射线",
				钻能射线_info:"结束阶段，你可以<span style=\"color:#D8BFD8\">流失</span>2点体力，然后令一名敌方角色受到1点<span style=\"color:#EE4000\">火焰</span>伤害并弃置其装备区里的所有牌",
				蓝钻能量:"蓝钻能量",
				蓝钻能量_info:"<li><span style=\"color:#EE7621\">被动：</span>你的造成伤害后，为<span style=\"color:#5CACEE\">蓝钻</span>充能；<li><span style=\"color:#EE7621\">被动：</span>你造成的伤害为原伤害+<span style=\"color:#5CACEE\">蓝钻</span>能量数量",
				钻能保护:"钻能保护",
				钻能保护_info:"<span style=\"color:#EE7621\">被动：</span>你每有一个<span style=\"color:#5CACEE\">蓝钻</span>能量，你的伤害抗性+10%",
				神之裁决:"神之裁决",
				神之裁决_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害提升30%，每次造成伤害时都可以<span style=\"color:#ADFF2F\">恢复</span>一点体力并摸一张牌；<span style=\"color:#EE7621\">被动：</span>你使用[杀]无数量限制",
				幻影斩:"幻影斩",
				幻影斩_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时概率秒杀对方,秒杀后<span style=\"color:#ADFF2F\">恢复</span>自身两点体力",
				血肉钩索:"血肉钩索",
				血肉钩索_info:"任意一名角色的回合开始阶段，你可以对其使用一张杀，然后摸两张牌",
				腐肉吸噬:"腐肉吸噬",
				腐肉吸噬_info:"摸牌阶段，若你已受伤，你可以放弃摸牌并展示牌堆顶的X张牌，X为你已损失的体力值，其中每有一张黑色牌，你<span style=\"color:#ADFF2F\">恢复</span>1点体力，然后弃掉这些黑色牌，将其余的牌收入手牌。",
				通天法眼:"通天法眼",
				通天法眼_info:"回合开始阶段，你可以观看牌堆顶的8张牌，并将其以任意顺序置于牌堆项或牌堆底",
				九转神锋:"九转神锋",
				九转神锋_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时附加1-10次0.1的伤害",
				黑桃暗杀:"黑桃暗杀",
				黑桃暗杀_info:"当你使用一张[杀]时，可进行一次判定，若为黑色则此[杀]不可闪避并令对方<span style=\"color:#D8BFD8\">流失</span>一点体力，触发技能后可以摸一张牌",
				爆头:"爆头",
				爆头_info:"<span style=\"color:#EE7621\">被动：</span>当你的体力不小于4时，你必定<span style=\"color:#DC143C\">暴击</span>",
				遗忘之沙:"遗忘之沙",
				遗忘之沙_info:"每当其他角色死亡后，你将其移出游戏，然后创造一名与你相同的角色，该角色与你相同身份、无体力上限、无体力，无手牌上限，你死亡时该角色死亡,只能使用一次",
				宿敌之剑:"宿敌之剑",
				宿敌之剑_info:"每当你于回合外失去牌时，你可以进行一次判定，若结果为红色，你对一名其他角色造成2点<span style=\"color:#EE4000\">火焰</span>伤害",
				丛林祝福:"丛林祝福",
				丛林祝福_info:"<span style=\"color:#EE7621\">被动：</span>每回合末，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				丛林祈祷:"丛林祈祷",
				丛林祈祷_info:"你不能使用杀；出牌阶段，你可以弃置一张杀令一名其他角色<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				箭岚:"箭岚",
				箭岚_info:"<span style=\"color:#EE7621\">被动：</span>当你的【杀】造成伤害，你摸两张牌并<span style=\"color:#ADFF2F\">恢复</span>一点体力；你计算与其他角色距离-X，X为你的手牌数",
				追袭:"追袭",
				追袭_info:"当你使用一张[杀]时，可进行一次判定，若为红色则此[杀]不可闪避",
				炽天使:"炽天使",
				炽天使_info:"<span style=\"color:#EE7621\">被动：</span>你第一次造成伤害时，受伤者会成为炽天使为你作战",
				神圣领域:"神圣领域",
				神圣领域_info:"将一名角色送进神圣领域，直到玩家下回合开始或死亡",
				天使降世:"天使降世",
				天使降世_info:"<span style=\"color:#EE7621\">被动：</span>每回合末，你摸一张牌",
				炽羽:"炽羽",
				炽羽_info:"结束阶段，你可以<span style=\"color:#D8BFD8\">流失</span>1点体力，然后令一名敌方角色受到1点<span style=\"color:#EE4000\">火焰</span>伤害并弃置其装备区里的所有牌",
				忍术:"忍术",
				忍术_info:"<span style=\"color:#EE7621\">被动：</span>增加自身40%的躲避率",
				幻影之矛:"幻影之矛",
				幻影之矛_info:"<span style=\"color:#EE7621\">被动：</span>你使用黑色牌造成伤害后，你可以令受伤害角色将武将牌翻至背面，然后你<span style=\"color:#D8BFD8\">流失</span>一点体力",
				血色深吻:"血色深吻",
				血色深吻_info:"<span style=\"color:#EE7621\">被动：</span>当你造成伤害时，可以<span style=\"color:#ADFF2F\">恢复</span>一点体力并摸一张牌",
				鲜血撩拔:"鲜血撩拔",
				鲜血撩拔_info:"你造成伤害时，可以<span style=\"color:#D8BFD8\">流失</span>一点体力使你此次伤害<span style=\"color:#DC143C\">暴击</span>",
				鬼雄:"鬼雄",
				鬼雄_info:"回合结束阶段，若你的体力不是全场最少的(或之一)，你须减1点体力或体力上限",
				剑气:"剑气",
				剑气_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，额外斩出一道剑气",
				星阳变:"星阳变",
				星阳变_info:"<span style=\"color:#EE7621\">被动：</span>在特定情况下进入鬼状态；被动2：你的初始手牌数为6",
				阴阳游走:"阴阳游走",
				阴阳游走_info:"出牌阶段可使用，使用后立即死亡",
				代天罚恶:"代天罚恶",
				代天罚恶_info:"造成伤害时，若受伤角色体力大于你，你可以令其将体力调整至与你相同",
				朱砂笔·封:"朱砂笔·封",
				朱砂笔·封_info:"每受到1次伤害，可以指定1种花色，依次展示牌堆顶的牌，直到出现指定花色的牌为止，你获得与指定花色不同花色的所有牌（最多展示6张牌）。",
				魔神之盾:"魔神之盾",
				魔神之盾_info:"<span style=\"color:#EE7621\">被动：</span>回合开始阶段，若你没有<span style=\"color:#EEC900\">护盾</span>，你获得一点<span style=\"color:#EEC900\">护盾</span>",
				堕天一击:"堕天一击",
				堕天一击_info:"结束阶段，你可以<span style=\"color:#D8BFD8\">流失</span>1点体力，然后令一名敌方角色受到1点伤害并弃置其装备区里的所有牌",
				萝莉逆袭:"萝莉逆袭",
				萝莉逆袭_info:"<span style=\"color:#EE7621\">被动：</span>你濒死时概率<span style=\"color:#ADFF2F\">恢复</span>体力至体力上限",
				冥河之石:"冥河之石",
				冥河之石_info:"<span style=\"color:#EE7621\">被动：</span>受到的伤害减少0.5点",
				颤栗结界:"颤栗结界",
				颤栗结界_info:"<span style=\"color:#EE7621\">被动：</span>所有角色于出牌阶段每消耗1秒，便须于回合结束阶段<span style=\"color:#D8BFD8\">流失</span>0.1点体力",
				春神礼赞:"春神礼赞",
				春神礼赞_info:"<span style=\"color:#EE7621\">被动：</span>每回合末，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				毁灭舞步:"毁灭舞步",
				毁灭舞步_info:"<span style=\"color:#EE7621\">被动：</span>你的手牌数至少为2",
				魅惑之音:"魅惑之音",
				魅惑之音_info:"限定技，出牌阶段，你可以指定任意1名角色，其他所有男性角色需选择1项执行：（1）对你指定的角色出【杀】；（2）令你获得其一张牌",
				死亡凝视:"死亡凝视",
				死亡凝视_info:"对场上体力最低（或之一）的其他角色使用，一分钟后对其造成2点伤害，你<span style=\"color:#ADFF2F\">恢复</span>所有体力，此段时间内你受到的伤害+1",
				月蚀颂念:"月蚀颂念",
				月蚀颂念_info:"出牌阶段，你可以<span style=\"color:#ADFF2F\">恢复</span>两点体力，然后下回合回合开始阶段受到反噬",
				魅影:"魅影",
				魅影_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，低概率使伤害减一",
				月蚀颂念·噬魂:"月蚀颂念·噬魂",
				月蚀颂念·噬魂_info:"回合开始阶段扣除一点体力",
				腐蚀攻击:"腐蚀攻击",
				腐蚀攻击_info:"<span style=\"color:#EE7621\">被动：</span>你的攻击会腐蚀对手（腐蚀：每回合末流失0.5点体力，不可叠加）",
				腐蚀:"腐蚀",
				腐蚀_info:"每回合末扣除0.5点体力",
				自然涡流:"自然涡流",
				自然涡流_info:"回合开始阶段，你可以<span style=\"color:#D8BFD8\">流失</span>一点体力并令除你以外的所有角色将所有手牌扣置于武将牌上，回合结束时，获得扣置于武将牌上的牌",
				树苗抛掷:"树苗抛掷",
				树苗抛掷_info:"<span style=\"color:#EE7621\">被动：</span>造成伤害时引起树苗爆炸，额外造成一点伤害",
				神农庇护:"神农庇护",
				神农庇护_info:"每当你使用一张牌，你可以进行一次判定，若为红色，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				医者连心:"医者连心",
				医者连心_info:"出牌阶段，你可以弃置一张手牌令一名角色<span style=\"color:#ADFF2F\">恢复</span>一点体力，<span style=\"color:#E066FF\">每回合限两次</span>",
				嗜血探戈:"嗜血探戈",
				嗜血探戈_info:"当你受到伤害时，可以获得伤害来源的一张牌并<span style=\"color:#ADFF2F\">恢复</span>0.5点体力",
				冰息龟心:"冰息龟心",
				冰息龟心_info:"每当一名角色死亡，你<span style=\"color:#ADFF2F\">恢复</span>一点体力并对一名其他角色造成两点伤害",
				雷霆神盾:"雷霆神盾",
				雷霆神盾_info:"<span style=\"color:#EE7621\">被动：</span>当你受到伤害后，你获得一点<span style=\"color:#EEC900\">护盾</span>",
				风暴雷球:"风暴雷球",
				风暴雷球_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时爆发雷电之力，使其<span style=\"color:#FFFF00\">麻痹</span>",
				红炎守护:"红炎守护",
				红炎守护_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，免疫0.5点伤害，<span style=\"color:#ADFF2F\">恢复</span>免疫后伤害的50%点体力",
				洪荒之力:"洪荒之力",
				洪荒之力_info:"<span style=\"color:#EE7621\">被动：</span>你不能成为【杀】和【桃】的目标",
				机甲外壳:"机甲外壳",
				机甲外壳_info:"回合结束阶段，你可以将手牌数补至X，X为现存的势力数",
				涅槃真身:"涅槃真身",
				涅槃真身_info:"<span style=\"color:#EE7621\">被动：</span>死亡后进行涅槃，爆发真身之力",
				业火:"业火",
				业火_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害视为<span style=\"color:#EE4000\">火焰</span>伤害，同时弃置受伤角色装备区所有牌",
				阳炎胄:"阳炎胄",
				阳炎胄_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，低概率免伤",
				轮回尖刃:"轮回尖刃",
				轮回尖刃_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，<span style=\"color:#ADFF2F\">恢复</span>体力至体力上限",
				八卦图:"八卦图",
				八卦图_info:"<span style=\"color:#EE7621\">被动：</span>当你没装备防具时，始终视为你装备着【八卦阵】",
				东方破:"东方破",
				东方破_info:"回合结束阶段，你可以摸一张牌，并对所有敌人造成一点<span style=\"color:#EE4000\">火焰</span>伤害",
				陨石阵法:"陨石阵法",
				陨石阵法_info:"每当你成为其他角色卡牌目标时，若此时弃牌堆中同名卡(该名角色使用的牌)的数量大于1，你可以选择其中1张获得之并令该名角色摸1张牌取消该牌效果，然后你可以选择任意名目标（不包括你）令他们各摸1张牌，若因此目标手牌数大于其当前体力时，你对其造成1点伤害；每当你使用1张基本牌时，你可以再弃置与该牌名称相同的1张手牌，令场上所有角色各摸1张牌，若因此有角色手牌数大于其当前体力时（不为你），对其造成1点伤害",
				偃月:"偃月",
				偃月_info:"<span style=\"color:#EE7621\">被动：</span>你使用的任何卡牌无数量及距离限制；当你于回合内重复使用同名卡牌时，你恢复一点体力，<span style=\"color:#E066FF\">每回合限一次</span>",
				春秋刀法:"春秋刀法",
				春秋刀法_info:"<span style=\"color:#EE7621\">被动：</span>大刀劈中敌人时你可以<span style=\"color:#D8BFD8\">流失</span>一点体力并爆发暗劲，对敌人造成额外的一点伤害",
				梦魇镜面:"梦魇镜面",
				梦魇镜面_info:"你可以立即获得对你造成伤害的牌",
				尸雾:"尸雾",
				尸雾_info:"每当你失去最后一张手牌，你可以所有敌人失去全部手牌，没有手牌的角色<span style=\"color:#D8BFD8\">流失</span>一点体力（不触发技能）",
				银铃牵梦:"银铃牵梦",
				银铃牵梦_info:"<span style=\"color:#E066FF\">每回合限一次</span>，持续吸取一名角色的体力，直到你的体力<span style=\"color:#ADFF2F\">恢复</span>至体力上限，被吸取体力不会立即死亡",
				有凤来仪:"有凤来仪",
				有凤来仪_info:"<span style=\"color:#EE7621\">被动：</span>你的手牌数少于当前体力时，将手牌数补至当前体力数",
				龙魂:"龙魂",
				龙魂_info:"<span style=\"color:#EE7621\">被动：</span>你登场时，召唤龙魂，为你抵消5点伤害",
				龙胆:"龙胆",
				龙胆_info:"回合末，你可以失去了所有的龙魂，你获得技能【一骑当千】",
				一骑当千:"一骑当千",
				一骑当千_info:"<span style=\"color:#EE7621\">被动：</span>若你已受伤且受伤角色不为你，造成的伤害必然<span style=\"color:#DC143C\">暴击</span>，然后摸两张牌；你不能成为基本牌的目标",
				液态火:"液态火",
				液态火_info:"<span style=\"color:#EE7621\">被动：</span>司马懿领悟阴火，每次锦囊攻击都会将阴火种入敌人体内，使其下一次受到的<span style=\"color:#EE4000\">火焰</span>伤害+1",
				星落:"星落",
				星落_info:"你造成的伤害视为<span style=\"color:#EE4000\">火焰</span>伤害，同时弃置受伤角色装备区所有牌",
				无双:"无双",
				无双_info:"<span style=\"color:#EE7621\">被动：</span>你使用的[杀]或[决斗]需要两张[闪]或[杀]响应",
				十方横扫:"十方横扫",
				十方横扫_info:"<span style=\"color:#EE7621\">被动：</span>你使用的杀或决斗可指定至多3名角色为目标",
				雷电灵能:"雷电灵能",
				雷电灵能_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时爆发雷电之力，使其<span style=\"color:#FFFF00\">麻痹</span>;为自己注入电流，<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				罪恶疼饮:"罪恶疼饮",
				罪恶疼饮_info:"<span style=\"color:#EE7621\">被动：</span>当你受到1点<span style=\"color:#EE4000\">火焰</span>伤害后，你获得1枚“燃”标记；结束阶段开始时，你<span style=\"color:#D8BFD8\">流失</span>X点体力（X为“燃”标记的数量）",
				潮汐冲锋:"潮汐冲锋",
				潮汐冲锋_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害+燃印记数量",
				失心妖术:"失心妖术",
				失心妖术_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，令对方混乱",
				九命妖尾:"九命妖尾",
				九命妖尾_info:"濒死阶段，你可弃置所有牌，将体力<span style=\"color:#ADFF2F\">恢复</span>至10-X，并摸10-X张牌，X为你本局发动此技能的次数。每局最多发动9次",
				幸运兔子:"幸运兔子",
				幸运兔子_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，概率免伤并<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				醉八仙:"醉八仙",
				醉八仙_info:"造成伤害时，你可以令受伤角色须弃置一张手牌或令伤害+1",
				铁布衫:"铁布衫",
				铁布衫_info:"<span style=\"color:#EE7621\">被动：</span>其他角色使用的非延迟类锦囊对你无效",
				残废影刀:"残废影刀",
				残废影刀_info:"攻击可以使对手残废",
				残废:"残废",
				残废_info:"你的攻击数值减少50%",
				千鸟雾影:"千鸟雾影",
				千鸟雾影_info:"<span style=\"color:#EE7621\">被动：</span>受到攻击时，极低概率<span style=\"color:#ADFF2F\">恢复</span>自身体力至体力上限",
				血饮咆哮:"血饮咆哮",
				血饮咆哮_info:"出牌阶段，你使用[杀]无数量限制；每次造成伤害，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				血肉诅咒:"血肉诅咒",
				血肉诅咒_info:"<span style=\"color:#EE7621\">被动：</span>伤害到敌人时，敌人会受到诅咒",
				诅咒:"诅咒",
				诅咒_info:"回合末扣除最大体力的25%",
				神圣强化:"神圣强化",
				神圣强化_info:"<span style=\"color:#E066FF\">每回合限一次</span>，使用后进入神圣状态",
				神圣状态:"神圣状态",
				神圣状态_info:"已进入神圣状态！",
				幽能风暴:"幽能风暴",
				幽能风暴_info:"你的回合开始与结束阶段，对所有敌人造成0.5点伤害",
				暴权欺凌:"暴权欺凌",
				暴权欺凌_info:"<span style=\"color:#EE7621\">被动：</span>当你的武器牌被替换时，你可以将其置于你的武将牌上，并获得此装备的武器效果（不含距离）",
				海魂圣体:"海魂圣体",
				海魂圣体_info:"限定技，使用后，化身大海之魂，免疫所有攻击，持续1个回合",
				圣体:"圣体",
				圣体_info:"已化身大海之魂！",
				圣体·删:"圣体·删",
				圣体·删_info:"离变回真身还剩余1回合！",
				海神的活力:"海神的活力",
				海神的活力_info:"<span style=\"color:#EE7621\">被动：</span>造成伤害后，刷新技能【海魂圣体】",
				猴王分身:"猴王分身",
				猴王分身_info:"你进入濒死状态时，失去一点体力上限，将体力<span style=\"color:#ADFF2F\">恢复</span>至体力上限",
				火眼金睛:"火眼金睛",
				火眼金睛_info:"出牌阶段，你可以观看一名其他角色的手牌，并可以展示其中一张红桃牌，然后将其弃置或置于牌堆顶，<span style=\"color:#E066FF\">每回合限三次</span>",
				恐怖怒吼:"恐怖怒吼",
				恐怖怒吼_info:"<span style=\"color:#EE7621\">被动：</span>你使用的任何卡牌无数量及距离限制；当你于回合内重复使用同名卡牌时，你<span style=\"color:#D8BFD8\">流失</span>0.5点体力",
				尖刺之花:"尖刺之花",
				尖刺之花_info:"回合开始阶段，获得一朵尖刺之花",
				忧郁之花:"忧郁之花",
				忧郁之花_info:"回合开始阶段，获得一朵忧郁之花",
				敬畏之花:"敬畏之花",
				敬畏之花_info:"回合开始阶段，获得一朵敬畏之花",
				漫生花种:"漫生花种",
				漫生花种_info:"任意角色回合结束阶段，你为该角色种植尖刺之花，该角色进行额外的摸牌阶段；任意角色回合开始阶段，你为该角色种植忧郁之花，该角色进行额外的出牌阶段；其他角色摸牌阶段结束时，你为该角色种植敬畏之花，该角色进行额外的弃牌阶段",
				泰坦反击:"泰坦反击",
				泰坦反击_info:"<span style=\"color:#EE7621\">被动：</span>体力越少，伤害越高",
				欲望灾火:"欲望灾火",
				欲望灾火_info:"限定技，出牌阶段，所有角色视为对目标使用一张【决斗】，若目标死亡改为对目标下家继续结算，目标下家若为你则改为你的下家",
				混沌本性:"混沌本性",
				混沌本性_info:"<span style=\"color:#EE7621\">被动：</span>你使用[决斗]需要两张[杀]响应",
				生存本能:"生存本能",
				生存本能_info:"<span style=\"color:#EE7621\">被动：</span>每当你成为红色牌的目标，你可以摸一张牌",
				毁灭蛊箭:"毁灭蛊箭",
				毁灭蛊箭_info:"你造成伤害时，使弓箭威力减半，并令受伤者<span style=\"color:#D8BFD8\">流失</span>一点体力",
				浮夸射击:"浮夸射击",
				浮夸射击_info:"<span style=\"color:#E066FF\">每回合限一次</span>，每当你使用或打出一张黑色牌，你可以终止此牌效果并令一名其他角色<span style=\"color:#D8BFD8\">流失</span>一点体力",
				雷霆之环:"雷霆之环",
				雷霆之环_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时爆发雷电之力，使其<span style=\"color:#FFFF00\">麻痹</span>;为自己注入电流，<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				灾祸匣:"灾祸匣",
				灾祸匣_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害必定<span style=\"color:#DC143C\">暴击</span>",
				风花月蚀:"风花月蚀",
				风花月蚀_info:"你造成伤害时，可以弃置一张牌，然后受伤角色弃置两张牌",
				画月为牢:"画月为牢",
				画月为牢_info:"回合结束阶段，获得场上手牌数低于你的角色各一张手牌",
				踏雪无痕:"踏雪无痕",
				踏雪无痕_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时概率免伤并<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				冰心剑法:"冰心剑法",
				冰心剑法_info:"<span style=\"color:#EE7621\">被动：</span>每次攻击都会令对方冰冻",
				冰冻:"冰冻",
				冰冻_info:"每回合末扣除最大体力的12.5%",
				战争惧刃:"战争惧刃",
				战争惧刃_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害+X，X为已损失的体力",
				智慧庇护:"智慧庇护",
				智慧庇护_info:"<span style=\"color:#EE7621\">被动：</span>每次受到伤害后，10%概率<span style=\"color:#ADFF2F\">恢复</span>等量体力，然后终止一切结算并进入你的回合",
				净罪之池:"净罪之池",
				净罪之池_info:"每次造成伤害时，你可以令随机一名角色展示牌堆顶一张牌，然后将该牌置于牌堆底，若该牌的花色不为黑桃，其弃置一张牌",
				神之守护:"神之守护",
				神之守护_info:"<span style=\"color:#EE7621\">被动：</span>回合开始阶段，若你没有<span style=\"color:#EEC900\">护盾</span>，你获得一点<span style=\"color:#EEC900\">护盾</span>",
				圣剑之光:"圣剑之光",
				圣剑之光_info:"<span style=\"color:#EE7621\">被动：</span>你的<span style=\"color:#DC143C\">暴击</span>率固定为100%；每次<span style=\"color:#DC143C\">暴击</span>会增加一点<span style=\"color:#EEC900\">护盾</span>",
				凤求凰:"凤求凰",
				凤求凰_info:"你的回合内，每当你使用牌时，你可以指定1名角色(不为你),然后将他的区域内所有牌当做你的牌使用(一回合至多十次)，你的回合外，每当你需要打出牌时,你可以指定1名角色(不为你),然后将他的手牌视为你的手牌打出",
				仙荷甘露:"仙荷甘露",
				仙荷甘露_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害与回合结束阶段，你<span style=\"color:#ADFF2F\">恢复</span>一点体力",
				凤凰邪眼·新:"凤凰邪眼·新",
				凤凰邪眼·新_info:"",
				圣狮咆哮:"圣狮咆哮",
				圣狮咆哮_info:"对其他角色造成伤害后，受伤角色手牌上限-1，若已对受伤角色发动三次或更多时，改为令其体力上限-1",
				永恒之斩:"永恒之斩",
				永恒之斩_info:"<span style=\"color:#EE7621\">被动：</span>你即将死亡时，其他角色体力上限-1并弃置所有牌",
				不屈意志·元霸:"不屈意志·元霸",
				不屈意志·元霸_info:"回合结束阶段，你可以将一张与武将牌上的牌类别均不相同的手牌置于武将牌上称为“蕴”；任意一名角色进入濒死状态时，你可以弃置一张“蕴”令其<span style=\"color:#ADFF2F\">恢复</span>1点体力",
				莲花转生:"莲花转生",
				莲花转生_info:"<span style=\"color:#EE7621\">被动：</span>濒死阶段，你可弃置所有牌，将体力<span style=\"color:#ADFF2F\">恢复</span>至2-X，并摸X张牌，X为你本局发动此技能的次数。每局最多发动2次",
				混天绫:"混天绫",
				混天绫_info:"<span style=\"color:#E066FF\">每回合限一次</span>，你指定1名目标然后从1名随机角色的手牌中随机选择1张卡牌让其猜测种类，猜不中的场合，目标失去1点体力上限然后你<span style=\"color:#ADFF2F\">恢复</span>1点体力",
				神王之剑:"神王之剑",
				神王之剑_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害必定<span style=\"color:#DC143C\">暴击</span>",
				赤壁炎焰:"赤壁炎焰",
				赤壁炎焰_info:"任何角色受到<span style=\"color:#EE4000\">火焰</span>伤害后，你可以<span style=\"color:#ADFF2F\">恢复</span>一点体力；你造成<span style=\"color:#EE4000\">火焰</span>伤害后，可以复制受伤角色一项技能",
				化魔:"化魔",
				化魔_info:"<span style=\"color:#EE7621\">被动：</span>敌方回合开始阶段，极高概率视为对其使用一张火杀，若此杀未造成伤害，你摸一张牌",
				落花吹雪:"落花吹雪",
				落花吹雪_info:"<span style=\"color:#EE7621\">被动：</span>游戏开始时，获得2枚花瓣，其后每进入你的回合，你可以摸一张牌并获得1枚花瓣，受到伤害时，你可以弃置一张手牌后花瓣将令你免疫1次伤害",
				天外飞仙:"天外飞仙",
				天外飞仙_info:"<span style=\"color:#EE7621\">被动：</span>其他角色失去手牌后，30%概率失去一张牌",
				仙灵庇护:"仙灵庇护",
				仙灵庇护_info:"<span style=\"color:#EE7621\">被动：</span>你登场时，召唤仙灵来庇护自己，为你抵消3点伤害",
				真龙天子:"真龙天子",
				真龙天子_info:"<span style=\"color:#EE7621\">被动：</span>若【仙灵庇护】失效，回合末你爆发天子之力！",
				紫薇真火:"紫薇真火",
				紫薇真火_info:"限定技，出牌阶段，随机轰炸一名角色，造成合计至多5点<span style=\"color:#EE4000\">火焰</span>伤害",
				昊天云步:"昊天云步",
				昊天云步_info:"每次受到伤害后，40%概率<span style=\"color:#ADFF2F\">恢复</span>等量体力，然后终止一切结算并进入你的回合",
				龙人血脉:"龙人血脉",
				龙人血脉_info:"<span style=\"color:#EE7621\">被动：</span>每3秒激活一点血脉，当血脉数量为50时，你将当前体力、手牌数均翻倍；大于150时，你受到的伤害-1；为200时，所有其他角色进入濒死；为500时，游戏结束",
				龙之咆哮:"龙之咆哮",
				龙之咆哮_info:"<span style=\"color:#EE7621\">被动：</span>任意角色回合开始阶段，你获得一枚\"龙之咆哮\"标记；<span style=\"color:#EE7621\">被动：</span>受到伤害后，失去一枚\"龙之咆哮\"标记，摸一张牌",
				圣光之盾:"圣光之盾",
				圣光之盾_info:"<span style=\"color:#EE7621\">被动：</span>回合结束阶段，若你的体力为全场最低（或之一），你其后受到的三次伤害均视为体力<span style=\"color:#ADFF2F\">恢复</span>",
				天篷变:"天篷变",
				天篷变_info:"当你死亡时，你可令场上所有的一切退回到游戏开始的第1回合初始状态",
				冰霜凌枪:"冰霜凌枪",
				冰霜凌枪_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，概率令对方冰冻",
				寒冰魔环:"寒冰魔环",
				寒冰魔环_info:"回合结束阶段，你可以摸一张牌，并对所有敌人造成一点伤害",
				倾国之姿:"倾国之姿",
				倾国之姿_info:"<span style=\"color:#EE7621\">被动：</span>免疫一切除<span style=\"color:#D8BFD8\">流失</span>体力的伤害",
				红颜之花:"红颜之花",
				红颜之花_info:"<span style=\"color:#EE7621\">被动：</span>摸牌阶段，你摸X张牌，你的手牌上限+X，X为敌方存活角色个数且至少为2",
				洛水情花:"洛水情花",
				洛水情花_info:"<span style=\"color:#EE7621\">被动：</span>每当你于回合外失去牌时，你可以进行一次判定，若结果为红色，你对一名其他角色造成1点伤害",
				国色天香:"国色天香",
				国色天香_info:"<span style=\"color:#EE7621\">被动：</span>你不能成为延时类锦囊的目标",
				骄阳陨落:"骄阳陨落",
				骄阳陨落_info:"<span style=\"color:#EE7621\">被动：</span>游戏开始时，场上拥有【血祭启示录】或【嗜血】的角色进入濒死，然后所有其他角色将技能删至剩余一项",
				燎火之箭:"燎火之箭",
				燎火之箭_info:"你造成的伤害视为<span style=\"color:#EE4000\">火焰</span>伤害，同时弃置受伤角色装备区所有牌",
				火之箭:"火之箭",
				火之箭_info:"<span style=\"color:#EE7621\">被动：</span>你造成的伤害视为<span style=\"color:#EE4000\">火焰</span>伤害，同时弃置受伤角色装备区所有牌",
				怒焰火海:"怒焰火海",
				怒焰火海_info:"回合结束阶段，你可以对所有敌人造成一点<span style=\"color:#EE4000\">火焰</span>伤害",
				困兽之境:"困兽之境",
				困兽之境_info:"<span style=\"color:#EE7621\">被动：</span>回合结束阶段，弃置其他角色的防具和防御马",
				毁灭之矛:"毁灭之矛",
				毁灭之矛_info:"<span style=\"color:#EE7621\">被动：</span>你的【杀】伤害+X，X为阵亡角色数",
				倩女幽魂:"倩女幽魂",
				倩女幽魂_info:"濒死时，消耗所有魂，<span style=\"color:#ADFF2F\">恢复</span>等量体力，多出的部分改为摸牌",
				摄魂之法:"摄魂之法",
				摄魂之法_info:"受到伤害后，消耗一层魂，对伤害来源造成一点<span style=\"color:#EE4000\">火焰</span>伤害",
				恐惧阴魂:"恐惧阴魂",
				恐惧阴魂_info:"提升自身50点闪避，每次闪避后获得两层魂",
				幻影残像:"幻影残像",
				幻影残像_info:"<span style=\"color:#EE7621\">被动：</span>你回合内，你不会受到任何伤害，你回合外，你造成的伤害视为神圣伤害，同时你摸两张牌",
				时光缓行:"时光缓行",
				时光缓行_info:"<span style=\"color:#EE7621\">被动：</span>每次受到伤害后，防止下一次受到伤害，效果不叠加",
				魔能之球:"魔能之球",
				魔能之球_info:"<span style=\"color:#E066FF\">每回合限一次</span>，视为对随机三名其他角色使用一张【杀】，冷却CD一回合",
				太阳之子:"太阳之子",
				太阳之子_info:"<span style=\"color:#EE7621\">被动：</span>回合开始阶段，若游戏人数大于2，你令随机一名其他角色<span style=\"color:#8B2323\">翻面</span>",
				流火双刃:"流火双刃",
				流火双刃_info:"回合结束阶段，体力少于你的角色弃置所有手牌，你对体力不少于你的角色各造成一点伤害",
				双界反击:"双界反击",
				双界反击_info:"<span style=\"color:#EE7621\">被动：</span>造成低于一的伤害时，20%概率提升至一点伤害",
				极速双环:"极速双环",
				极速双环_info:"限定技，对一名角色造成10次0.01点伤害",
				死亡缠绕:"死亡缠绕",
				死亡缠绕_info:"<span style=\"color:#EE7621\">被动：</span>受伤后，对伤害来源造成0.5点伤害，若伤害来源为你，改为摸一张牌",
				亡灵禁区:"亡灵禁区",
				亡灵禁区_info:"其他角色获得牌后，若其手牌数大于其当前体力，你摸一张牌",
				时空扭曲:"时空扭曲",
				时空扭曲_info:"<span style=\"color:#EE7621\">被动：</span>每次受到伤害后，75%概率<span style=\"color:#ADFF2F\">恢复</span>等量体力，然后终止一切结算并进入你的回合",
				怒吼长坂:"怒吼长坂",
				怒吼长坂_info:"<span style=\"color:#EE7621\">被动：</span>受到伤害时，你摸X+1张牌，X为该伤害数；你的黑桃牌可视为桃使用或打出",
				大地之盾:"大地之盾",
				大地之盾_info:"<span style=\"color:#EE7621\">被动：</span>回合开始阶段，你获得一点<span style=\"color:#EEC900\">护盾</span>",
				野蛮突杀:"野蛮突杀",
				野蛮突杀_info:"<span style=\"color:#EE7621\">被动：</span>当你进入频死状态时，若此时你的武将牌未<span style=\"color:#8B2323\">翻面</span>，你将体力<span style=\"color:#ADFF2F\">恢复</span>至体力上限并立即开始你的回合，你失去【野蛮突杀】技能，然后直到回合结束你获得技能【乱武】，最后将你的武将牌<span style=\"color:#8B2323\">翻面</span>",
				燕子三抄水:"燕子三抄水",
				燕子三抄水_info:"每当你使用或打出一张黑色牌，你可以<span style=\"color:#D8BFD8\">流失</span>一点体力并令一名其他角色<span style=\"color:#8B2323\">翻面</span>",
				夺命飞刀:"夺命飞刀",
				夺命飞刀_info:"<span style=\"color:#EE7621\">被动：</span>每当你使用或打出一张【闪】，可令任意一名角色进行一次判定，若结果为黑桃，其受到两点雷电伤害",
				暗涌流沙:"暗涌流沙",
				暗涌流沙_info:"限定技，出牌阶段，你可以指定任意1名角色，其他所有男性角色需选择1项执行：（1）对你指定的角色出【杀】；（2）令你获得其一张牌。",
				银沙之力:"银沙之力",
				银沙之力_info:"<span style=\"color:#EE7621\">被动：</span>每受到1次伤害，可以指定1种花色，依次展示牌堆顶的牌，直到出现指定花色的牌为止，你获得与指定花色不同花色的所有牌（最多展示4张牌）。",
				镭射光束:"镭射光束",
				镭射光束_info:"<span style=\"color:#EE7621\">被动：</span>造成的伤害50%慨率转化为<span style=\"color:#EE4000\">火焰</span>/锁定伤害（横置受伤角色）",
				企鹅导弹:"企鹅导弹",
				企鹅导弹_info:"回合结束阶段，你可以弃置两张手牌并对所有敌人造成一点<span style=\"color:#EE4000\">火焰</span>伤害",
				血祭启示录:"血祭启示录",
				血祭启示录_info:"<span style=\"color:#EE7621\">被动：</span>回合结束阶段，召唤一只吸血蝙蝠，3秒后对一名角色造成一点伤害",
				嗜血:"嗜血",
				嗜血_info:"<span style=\"color:#EE7621\">被动：</span>回合结束阶段，若你手牌数不小于当前体力，你进入吸血鬼形态，当你失去最后一张手牌，你解除吸血鬼形态，当你于吸血鬼形态时造成伤害，你<span style=\"color:#ADFF2F\">恢复</span>两点体力",
				定时爆竹:"定时爆竹",
				定时爆竹_info:"回合结束阶段，福娃可以放下一个定时爆竹，3秒后爆炸，你指定一名角色并获得该目标一张牌",
				诱敌制胜:"诱敌制胜",
				诱敌制胜_info:"<span style=\"color:#EE7621\">被动：</span>每当你需要打出一张【闪】时，你可以进行1次判定，若结果为基本牌，视为你打出了一张【闪】",
				奥义·烈斩:"奥义·烈斩",
				奥义·烈斩_info:"任意1名角色受到伤害之前，你可以更改伤害的属性(火、雷、毒、无来源)",
				拔刀术:"拔刀术",
				拔刀术_info:"你的黑色牌可以视为具有雷电属性的【雷杀】",
				三重卡组:"三重卡组",
				三重卡组_info:"<span style=\"color:#EE7621\">被动：</span>你始终跳过弃牌阶段",
				无尽诅咒:"无尽诅咒",
				无尽诅咒_info:"你的回合开始或者回合结束阶段，若你区域内有牌，你可以弃置1张，然后随机选取1名角色，令其展示所有手牌，若其中有【杀】，你获得之且该名角色须选择1张手牌弃置，没有【杀】时受到你造成的1点<span style=\"color:#EE4000\">火焰</span>伤害",
				御战天下:"御战天下",
				御战天下_info:"其他角色使用牌时，你可以令此牌无效并获得之，若如此做，你无法发动此效果直到此回合结束，转化类的牌无法获得，若其他角色使用的牌为【无懈可击】则改为获得此牌，然后你获得一次机会于需要使用【无懈可击】时视为使用了一张【无懈可击】，此效果仅可累积一次",
				百战獠牙:"百战獠牙",
				百战獠牙_info:"对一名其他角色使用，直到你指定下一名角色成为此技能目标前，其对你造成的伤害减至0",
				免疫奶瓶:"免疫奶瓶",
				免疫奶瓶_info:"<span style=\"color:#EE7621\">被动：</span>免疫50%的伤害",
				鹿顶记:"鹿顶记",
				鹿顶记_info:"<span style=\"color:#E066FF\">每回合限一次</span>，你可以弃置一张牌获得一枚\"鹿顶记\"标记，然后你可以对一名角色造成X点伤害并<span style=\"color:#ADFF2F\">恢复</span>X点体力，然后清除所有标记，X为\"鹿顶记\"标记数，若未选择目标，则将\"鹿顶记\"标记保留",
				连亘之水:"连亘之水",
				连亘之水_info:"<span style=\"color:#E066FF\">每回合限一次</span>，如果游戏人数不大于7，召唤火元素为你作战并获得火元素的所有技能",
				凝水之盾:"凝水之盾",
				凝水之盾_info:"<span style=\"color:#EE7621\">被动：</span>回合开始阶段，若你没有<span style=\"color:#EEC900\">护盾</span>，你获得一点<span style=\"color:#EEC900\">护盾</span>",
				无尽深渊:"无尽深渊",
				无尽深渊_info:"<span style=\"color:#EE7621\">被动：</span>你造成伤害时，吸取对方15%的最大体力",
				神灯耀光:"神灯耀光",
				神灯耀光_info:"<span style=\"color:#EE7621\">被动：</span>若你未受伤，你跳过弃牌阶段",
				风暴怒涛:"风暴怒涛",
				风暴怒涛_info:"<span style=\"color:#E066FF\">每回合限一次</span>，你指定1名角色并弃置和该名角色手牌同等数量的牌，然后获得目标角色所有手牌，并对其造成x点雷电伤害(x为你从该名角色手中获得的手牌数量)",
				拳手的战意:"拳手的战意",
				拳手的战意_info:"<span style=\"color:#EE7621\">被动：</span>濒死阶段，你可弃置所有牌，将体力<span style=\"color:#ADFF2F\">恢复</span>至2-X，并摸X张牌，X为你本局发动此技能的次数。每局最多发动2次",
				时空道标:"时空道标",
				时空道标_info:"锁定技，游戏开始或你进入濒死时，你可以对所有其他角色均造成一点伤害",
				逝时若光:"逝时若光",
				逝时若光_info:"<span style=\"color:#EE7621\">被动：</span>每次受到伤害后，10%概率<span style=\"color:#ADFF2F\">恢复</span>等量体力，然后终止一切结算并进入你的回合",
				回响:"回响",
				回响_info:"<span style=\"color:#EE7621\">被动：</span><span style=\"color:#ADFF2F\">恢复</span>体力时，<span style=\"color:#ADFF2F\">恢复</span>体力数+1",
				超声音波:"超声音波",
				超声音波_info:"受到伤害时，你可以摸X张牌，X为该伤害数；你的黑桃牌可视为桃使用或打出",
				贤者之石:"贤者之石",
				贤者之石_info:"你的<span style=\"color:#E066FF\">每回合限一次</span>，你可以自由选取1名未上场角色的1项技能并获得之",
				凤凰邪眼2:"凤凰邪眼2",
				凤凰邪眼2_info:"",
				凤凰邪眼3:"凤凰邪眼3",
				凤凰邪眼3_info:"",
				天篷变1:"天篷变1",
				天篷变1_info:"当你死亡时，你可令场上所有的一切退回到游戏开始的第1回合初始状态",
				天篷变2:"天篷变2",
				天篷变2_info:"",
				恐惧结界:"恐惧结界",
				恐惧结界_info:"当一名其他力量角色使用【杀】造成一次伤害后，该角色可令你摸一张牌",
				恐惧:"恐惧",
				恐惧_info:"",
				恐惧镰刀:"恐惧镰刀",
				恐惧镰刀_info:"你可以将一张♣手牌当【铁索连环】使用或重铸。你使用【铁索连环】的目标数上限+3",
				挟天子以令诸侯:"挟天子以令诸侯",
				挟天子以令诸侯_info:"摸牌阶段摸牌时，你可以少摸一张，指定你攻击范围内的一名角色亮出牌堆顶上3张牌，将其中的非基本牌和【桃】置于弃牌堆，该角色进行二选一：你对其造成X点伤害，然后他获得这些基本牌；或他依次弃置X张牌，然后你获得这些基本牌。（X为其中非基本牌的数量）",
				乱世枭雄:"乱世枭雄",
				乱世枭雄_info:"<span style=\"color:#EE7621\">被动：</span>每次造成伤害时，你可以摸一张牌",
				高速快门:"高速快门",
				高速快门_info:"<span style=\"color:#EE7621\">被动：</span>回合结束后，你摸一张牌进行一个额外的回合",
				闪耀之光:"闪耀之光",
				闪耀之光_info:"<span style=\"color:#EE7621\">被动：</span>你防止即将受到的<span style=\"color:#EE4000\">火焰</span>伤害",
				迷藏印记:"迷藏印记",
				迷藏印记_info:"<span style=\"color:#EE7621\">被动：</span>出牌阶段结束时，你可以摸X张牌，X为你本回合使用的卡牌数",
				怒战八方:"怒战八方",
				怒战八方_info:"<span style=\"color:#EE7621\">被动：</span>你使用的任何卡牌无数量及距离限制；当你于回合内重复使用同名卡牌时，你摸一张牌（每回合最多以此法摸3张牌）",
				破甲2:"破甲2",
				破甲2_info:"",
				红莲庇护:"红莲庇护",
				红莲庇护_info:"<span style=\"color:#EE7621\">被动：</span>你的手牌数至少为3",
				机甲操作:"机甲操作",
				机甲操作_info:"<li><span style=\"color:#EE7621\">被动：</span>你的机身内可容纳一个人<li>游戏开始时，你可以自己寻找在机身内的人（男性）。回合开始/结束阶段开始时，你可以更换你在机身内的人(仅限身份单将模式)",
				角色扮演:"角色扮演",
				角色扮演_info:"<span style=\"color:#080808\">忠臣技：</span>当主公进入濒死时，你可令其<span style=\"color:#ADFF2F\">恢复</span>X点体力并获得你所有牌，然后你立即死亡，X为你当前的体力",
			},
		};
		for(var i in yhzr.skill){
			yhzr.skill[i].nobracket=true;
		};
		if(lib.device||lib.node){
			for(var i in yhzr.character){yhzr.character[i][4].push('ext:扩展ol/'+i+'.jpg');}
		}else{
			for(var i in yhzr.character){yhzr.character[i][4].push('db:extension-扩展ol:'+i+'.jpg');}
		}
		return yhzr;
	});
	lib.config.all.characters.push('yhzr');
	if(!lib.config.characters.contains('yhzr')) lib.config.characters.push('yhzr');
	lib.translate['yhzr_character_config']='旧英魂之刃';
	lib.group.push('jin');
	lib.translate.jin='×';
	if(lib.config['extension_扩展ol_yhzr_first']!=true){
		game.saveConfig('extension_扩展ol_yhzr',true);
		game.saveConfig('extension_扩展ol_yhzr_first',true);
		//lib.config.characters.remove(i);
	};
};