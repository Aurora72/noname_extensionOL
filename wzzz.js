window.func=function(lib,game,ui,get,ai,_status){
	if(lib.config.mode_config.wangzhezhizhan==undefined){
		lib.config.mode_config.wangzhezhizhan={};
		lib.config.mode_config.wangzhezhizhan.chooseCharacterNumber=4;
		game.saveConfig('chooseCharacterNumber',4,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.first_show='wzzz';
		game.saveConfig('first_show','wzzz','wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.free_choose=true;
		game.saveConfig('free_choose',true,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.change_choice=true;
		game.saveConfig('change_choice',true,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.zdgbcpms=true;
		game.saveConfig('zdgbcpms',true,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.drkz=false;
		game.saveConfig('drkz',false,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.tdyxj=false;
		game.saveConfig('tdyxj',false,'wangzhezhizhan');
		lib.config.mode_config.wangzhezhizhan.djzdjz=false;
		game.saveConfig('djzdjz',false,'wangzhezhizhan');
	};
	lib.extensionMenu.extension_扩展ol.wzzz_title={
		"name":"<b><p align=center><span style=\"font-size:18px\">-------王者之战-------</span></b>",
		"clear":true,
		"nopointer":true,
	};
	lib.extensionMenu.extension_扩展ol.wzzz_Fe_gSkill_disable={
		"name":"NP效果通用",
		"init":false,
		"intro":"开启后，NP效果不再局限于Fate.Eternity包武将"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_enable={
		"name":"<span style=\"font-size:15px;\">非专属模式启用王者之战包</span>",
		"init":false,
		"intro":"开启后，非专属模式启用王者之战包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_qqwz_enable={
		"name":"<span style=\"font-size:15px;\">非专属模式启用千秋万载包</span>",
		"init":false,
		"intro":"开启后，非专属模式启用千秋万载包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_ytjs_enable={
		"name":"<span style=\"font-size:15px;\">非专属模式启用一统江山包</span>",
		"init":false,
		"intro":"开启后，非专属模式启用一统江山包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_Fe_enable={
		"name":"<span style=\"font-size:12px;\">非专属模式启用Fate.Eternity包</span>",
		"init":false,
		"intro":"开启后，非专属模式启用Fate.Eternity包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_disable={
		"name":"<span style=\"font-size:15px;\">专属模式下禁用王者之战包</span>",
		"init":false,
		"intro":"开启后，专属模式下禁用王者之战包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_qqwz_disable={
		"name":"<span style=\"font-size:15px;\">专属模式下禁用千秋万载包</span>",
		"init":false,
		"intro":"开启后，专属模式下禁用千秋万载包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_ytjs_disable={
		"name":"<span style=\"font-size:15px;\">专属模式下禁用一统江山包</span>",
		"init":false,
		"intro":"开启后，专属模式下禁用一统江山包"
	};
	lib.extensionMenu.extension_扩展ol.wzzz_Fe_disable={
		"name":"<span style=\"font-size:12px;\">专属模式下禁用Fate.Eternity包</span>",
		"init":false,
		"intro":"开启后，专属模式下禁用Fate.Eternity包"
	};
	lib.arenaReady.push(function(){
	lib.skill['wzzz_回天']={
		trigger:{
			player:'phaseBegin'
		},
		forced:true,
		filter:function(event,player){
			return player.hp<=(player.maxHp/2)+1;
		},
		content:function(){
			player.draw(2);
			player.recover();
		}
	};
	lib.translate['wzzz_回天']='回天';
	lib.translate['wzzz_回天_info']='<span class="bluetext" style="color:#EE0000">奋发技</span>，锁定技，回合开始阶段，你摸两张牌并恢复一点体力。';
	lib.skill['wzzz_虚数空间']={
		nobracket:true,
		trigger:{
			global:'phaseBefore'
		},
		forced:true,
		filter:function(event,player){
			return player.hp<=(player.maxHp/2)+1;
		},
		content:function(){
			if(player.storage.FeNP == undefined) player.storage.FeNP=0;
			var JL=10;
			game.log(player,'增加了10NP');
			player.markSkill('FeNP');
			player.syncStorage('FeNP');
		}
	};
	lib.translate['wzzz_虚数空间']='虚数空间';
	lib.translate['wzzz_虚数空间_info']='<span class="bluetext" style="color:#EE0000">奋发技</span>，锁定技，任意角色的回合开始前，你获得10NP';
	if(lib.config.mode=='wangzhezhizhan'?lib.config['extension_扩展ol_wzzz_disable']!=true:lib.config['extension_扩展ol_wzzz_enable']!=false){
		lib.group.push('wang');
		lib.group.push('xian');
		lib.group.push('yao');
		lib.translate.wang='王';
		lib.translate.xian='仙';
		lib.translate.yao='妖';
		game.addCharacterPack({
			character: {
				//【王蔡文姬】
				wang_caiwenji: ['female', 'wang', 7, ['wang_caiwenji_qinbian', 'wang_caiwenji_qidun', 'wang_caiwenji_shuyong', 'wang_caiwenji_tianwei', 'wang_caiwenji_beifen', 'wang_caiwenji_baonu', 'wang_caiwenji_houxian', 'wang_caiwenji_wangyou', 'wang_caiwenji_huizou'],
					["ext:扩展ol/wang_caiwenji.jpg", 'wzzz', 'forbidai'], 'zhong'],
				//【王貂蝉】
				wang_diaochan: ['female', 'wang', 7, ['wang_diaochan_yuanjun', 'wang_diaochan_qidun', 'wang_diaochan_lipan', 'wang_diaochan_tianwei', 'wang_diaochan_lianxiang', 'wang_diaochan_baonu', 'wang_diaochan_xiyu', 'wang_diaochan_xiuhua', 'wang_diaochan_huitian'],
					["ext:扩展ol/wang_diaochan.jpg", 'wzzz', 'forbidai'], 'zhong'],
				//【王华雄】
				wang_huaxiong: ['male', 'wang', 8, ['wang_huaxiong_yuanjun', 'wang_huaxiong_qidun', 'wang_huaxiong_shanshi', 'wang_huaxiong_tianwei', 'wang_huaxiong_xiaoshou', 'wang_huaxiong_shuangren', 'wang_huaxiong_baonu', 'wang_huaxiong_fubing', 'wang_huaxiong_huitian'],
					["ext:扩展ol/wang_huaxiong.jpg", 'wzzz', 'forbidai'], 'zhong'],
				//【王李儒】
				wang_liru: ['male', 'wang', 6, ['wang_liru_yuanjun', 'wang_liru_qidun', 'wang_liru_shipo', 'wang_liru_tianwei', 'wang_liru_zhengjiao', 'wang_liru_baonu', 'wang_liru_suoshi', 'wang_liru_yudan'],
					["ext:扩展ol/wang_liru.jpg", 'wzzz', 'forbidai'], 'zhong'],
				//【王吕布】
				wang_lvbu: ['male', 'wang', 9, ['wang_lvbu_liangguang', 'wang_lvbu_qidun', 'wang_lvbu_wushuang', 'wang_lvbu_tianwei', 'wang_lvbu_fanfu', 'wang_lvbu_baonu', 'wang_lvbu_shashen', 'wang_lvbu_huitian'],
					["ext:扩展ol/wang_lvbu.jpg", 'wzzz', 'forbidai'], 'zhong'],
				//【仙马超】
				xian_machao: ['male', 'xian', 8, ['xian_machao_yuanjun', 'xian_machao_qidun', 'xian_machao_tianwei', 'xian_machao_tiedan', 'xian_machao_poji', 'xian_machao_yuling', 'xian_machao_baonu', 'xian_machao_langzhao', 'xian_machao_huitian'],
					["ext:扩展ol/xian_machao.jpg", 'wzzz', 'forbidai'], 'shu'],
				//【仙太史慈】
				xian_taishici: ['male', 'xian', 9, ['xian_taishici_yuanjun', 'xian_taishici_qidun', 'xian_taishici_tianwei', 'xian_taishici_tianlei', 'xian_taishici_yiji', 'xian_taishici_baonu', 'xian_taishici_zhenyuan', 'xian_taishici_huitian'],
					["ext:扩展ol/xian_taishici.jpg", 'wzzz', 'forbidai'], 'shu'],
				//【仙甄姬】
				xian_zhenji: ['female', 'xian', 7, ['xian_zhenji_yuanjun', 'xian_zhenji_qidun', 'xian_zhenji_tianwei', 'xian_zhenji_qinghuai', 'xian_zhenji_qingxin', 'xian_zhenji_baonu', 'xian_zhenji_mushen', 'xian_zhouyu_huitian'],
					["ext:扩展ol/xian_zhenji.jpg", 'wzzz', 'forbidai'], 'shu'],
				//【仙周瑜】
				xian_zhouyu: ['male', 'xian', 7, ['xian_zhouyu_yuanjun', 'xian_zhouyu_qidun', 'xian_zhouyu_tianwei', 'xian_zhouyu_poji', 'xian_zhouyu_lianhun', 'xian_zhouyu_baonu', 'xian_zhouyu_yuhun', 'xian_zhouyu_huitian'],
					["ext:扩展ol/xian_zhouyu.jpg", 'wzzz', 'forbidai'], 'shu'],
				//【仙诸葛恪】
				xian_zhugeke: ['male', 'xian', 6, ['xian_zhugeke_tianbing', 'xian_zhugeke_qidun', 'xian_zhugeke_tianwei', 'xian_zhugeke_shenzhi', 'xian_zhugeke_huling', 'xian_zhugeke_baonu', 'xian_zhugeke_yanwu', 'xian_zhugeke_fuxing'],
					["ext:扩展ol/xian_zhugeke.jpg", 'wzzz', 'forbidai'], 'shu'],
			},
			skill: {
				/*_wang_name: {
					trigger: {
						global: ['gameDrawAfter', 'phaseBegin', 'phaseBegin', 'triggerHidden', 'useCardToEnd']
					},
					forced: true,
					unique: true,
					popup: false,
					silent: true,
					filter: function (event, player) {
						return (player.group == 'wang' && player.node.name.dataset.nature != 'wang');
					},
					content: function () {
						player.node.name.dataset.nature = 'wang';
						player.node.name.style.color = "rgba(255,255,0,1)";
					}
				},
				_xian_name: {
					trigger: {
						global: ['gameDrawAfter', 'phaseBegin', 'phaseBegin', 'triggerHidden', 'useCardToEnd']
					},
					forced: true,
					unique: true,
					popup: false,
					silent: true,
					filter: function (event, player) {
						return (player.group == 'xian' && player.node.name.dataset.nature != 'xian');
					},
					content: function () {
						player.node.name.dataset.nature = 'xian';
						player.node.name.style.color = "rgba(255,100,5,1)";
					}
				},*/
		
		
				//王蔡文姬
				wang_caiwenji_qinbian: {
					trigger: {
						player: ['phaseUseBegin', 'phaseUseEnd']
					},
					audio:"ext:扩展ol:"+ 2,
					content: function () {
						player.draw();
					},
					mod: {
						maxHandcard: function (player, num) {
							var num1 = 0,
								num2 = 0;
							for (var i = 0; i < game.players.length; i++) {
								if (game.players[i].sex == 'female') num1++;
								if (game.players[i].sex == 'male') num2++;
							}
							if (num1 % 2 != 0) num++;
							if (num2 % 2 == 0) num++;
							return num;
						}
					}
				},
				wang_caiwenji_qidun: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					filter: function (event, player) {
						return (get.type(event.card) == 'delay' || event.card.name == 'tiesuo');
					},
					content: function () {
						game.log(player, '发动了奇遁，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'tiesuo' || get.type(card) == 'delay') {
									return [0, 0];
								}
							}
						}
					}
				},
				wang_caiwenji_shuyong: {
					enable: 'phaseUse',
					audio:"ext:扩展ol:"+ 2,
					usable: 1,
					filterTarget: function (card, player, target) {
						return target != player;
					},
					content: function () {
						"step 0"
						target.draw();
						"step 1"
						target.chooseCard('【书咏】<br><br><div class="text center">交给' + get.translation(player) + '一张牌并令' + get.translation(player) + '于此回合内使用牌时无距离和使用次数限，或令' + get.translation(player) + '依次弃你两张牌', function (card, player, target) {
							return true;
						}).set('ai', function (card) {
							if (ai.get.attitude(target, player) > 0) {
								return 100 - ai.get.value(card);
							}
							if (ai.get.attitude(target, player) <= 0) {
								return 0 - ai.get.value(card);
							}
						});
						"step 2"
						if (result.bool) {
							player.gain(result.cards);
							target.$give(result.cards, player);
							player.addTempSkill('wang_caiwenji_shuyong2', 'phaseEnd');
						}
						else {
							player.discardPlayerCard('he', target, true);
							player.discardPlayerCard('he', target, true);
						}
					},
					ai: {
						order: 10,
						result: {
							player: function (player, target) {
								if (ai.get.attitude(target, player) > 0) return 6;
								return 0;
							},
							target: function (player, target) {
								if (ai.get.attitude(target, player) <= 0) return -4;
								return 0;
							},
						},
					}
				},
				wang_caiwenji_shuyong2: {
					mod: {
						cardUsable: function (card, player, num) {
							return Infinity;
						},
						targetInRange: function (card, player, target, now) {
							return true;
						}
					},
				},
				wang_caiwenji_tianwei: {
					trigger: {
						player: 'turnOverBefore'
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						noturnOver: true,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'turnOver')) return [0, 0];
							}
						}
					},
					group: 'wang_caiwenji_tianwei2'
				},
				wang_caiwenji_tianwei2: {
					rigger: {
						player: 'phaseBefore'
					},
					nopop: true,
					forced: true,
					content: function () {
						player.lockOut = true;
					}
				},
				wang_caiwenji_beifen: {
					enable: 'phaseUse',
					audio:"ext:扩展ol:"+ 2,
					usable: 1,
					filter: function (event, player) {
						for (var i = 0; i < game.players.length; i++) {
							if (game.players[i] != player && get.distance(player, game.players[i], 'attack') <= 1) return true;
						}
						return false;
					},
					filterTarget: function (card, player, target) {
						return target != player;
					},
					content: function () {
						"step 0"
						target.chooseTarget(function (card, player, target1) {
							return target1 != event.player && get.distance(event.player, target1, 'attack') <= 1;
						}, true).ai = function (target1) {
							return ai.get.effect(target1, {
								name: 'sha'
							}, event.player, target);
						}
						"step 1"
						player.damage(target);
						"step 2"
						player.useCard({
							name: 'sha'
						}, result.targets[0], false);
					},
					ai: {
						order: 3,
						result: {
							player: function (player, target) {
								if (player.hasSkill('wang_caiwenji_wangyou') && player.hp <= 3 && !player.countCards('h', {
									color: 'red'
								})) return -6;
								return 0;
							},
							target: function (player, target) {
								var num1 = 0,
									num2 = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (ai.get.attitude(game.players[i], player) > 0 && game.players[i] != player && get.distance(player, game.players[i], 'attack') <= 1) num1++;
									if (ai.get.attitude(game.players[i], player) <= 0 && game.players[i] != player && get.distance(player, game.players[i], 'attack') <= 1) num2++;
								}
								if (ai.get.attitude(target, player) > 0 && num2 != 0) return 4;
								if (ai.get.attitude(target, player) <= 0 && num1 == 0) return -3;
								return 0;
							},
						},
					},
				},
				wang_caiwenji_baonu: {
					animationStr: '此行远兮君尚珍重',
					skillAnimation: true,
					animationColor: 'metal',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['wang_caiwenji_baonu2'],
				},
				wang_caiwenji_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				wang_caiwenji_houxian: {
					forced: true,
					group: ['wang_caiwenji_houxian1', 'wang_caiwenji_houxian2', 'wang_caiwenji_houxian3'],
				},
				wang_caiwenji_houxian1: {
					trigger: {
						global: 'recoverBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return player.countCards('h', {
							color: 'black'
						}) && player.hp <= 3;
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseToDiscard('h', function (card) {
							return get.color(card) == 'black';
						}, '【篌弦】<br><br><div class="text center">是否丢弃一张黑色手牌，令' + get.translation(trigger.player) + '回复的体力无效化。并且令' + get.translation(trigger.player) + '判定。').ai = function (card, player, target) {
							var player = _status.event.player;
							if (ai.get.attitude(_status.event.player, trigger.player) <= 0) {
								return 20 - ai.get.value(card);
							}
							if (ai.get.attitude(_status.event.player, trigger.player) > 0) {
								return -ai.get.value(card) - 20;
							}
		
						};
						"step 1"
						if (result.bool == false) {
							event.finish();
		
							return;
						}
						"step 2"
						player.logSkill('wang_caiwenji_houxian1', trigger.player);
						trigger.untrigger();
						trigger.finish();
						trigger.player.judge(function (card) {
							if (get.color(card) != 'red') return -2;
							return 0;
						});
						"step 3"
						if (result.judge > -2) {
							event.finish();
							return;
						}
						"step 4"
						trigger.player.damage('nosource');
					}
				},
				wang_caiwenji_houxian2: {
					trigger: {
						global: 'damageBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return player.countCards('h', {
							color: 'red'
						}) && player.hp <= 3;
					},
					direct: true,
					content: function () {
						"step 0"
						player.chooseToDiscard('h', function (card) {
							return get.color(card) == 'red';
						}, '【篌弦】<br><br><div class="text center">是否丢弃一张红色手牌，令' + get.translation(trigger.player) + '受的伤害无效化。并且令自己判定。').ai = function (card, player, target) {
							var player = _status.event.player;
							if (ai.get.attitude(_status.event.player, trigger.player) > 0) {
								return 20 - ai.get.value(card);
							}
		
							if (ai.get.attitude(_status.event.player, trigger.player) <= 0) {
								return -ai.get.value(card) - 20;
							}
						};
						"step 1"
						if (result.bool == false) {
							event.finish();
							return;
						}
						"step 2"
						player.logSkill('wang_caiwenji_houxian2', trigger.player);
						trigger.untrigger();
						trigger.finish();
						player.judge(function (card) {
							if (get.suit(card) != 'spade' && player.hp < player.maxHp) return 2;
							return 0;
						});
						"step 3"
						if (result.judge < 2) {
							event.finish();
							return;
						}
						"step 4"
						player.recover();
					}
				},
				wang_caiwenji_houxian3: {
					trigger: {
						player: 'phaseEnd'
					},
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return player.countCards('h') <= player.getHandcardLimit() && player.hp <= 3;
					},
					check: function (event, player) {
						return player.countCards('h') <= player.hp || player.countCards('e') >= player.hp;
					},
					content: function () {
						"step 0"
						var nume = player.countCards('e'),
							hp = player.hp;
						player.discard(player.get('he').randomGets(Infinity));
						player.draw(nume + hp);
						"step 1"
						if (player.countCards('h') < 2 * player.hp) {
							event.finish();
							return;
						}
						player.chooseTarget(function (card, player, target) {
							return true;
						}).ai = function (target) {
							if (player.hp == 1 && ai.get.attitude(target, player) <= 0) return target.maxHp + target.hp - 2;
							if (target.hp == target.maxHp && target.hp < 4 && ai.get.attitude(target, player) <= 0) return (4 - target.hp) * 2;
							if (target.hp < 4 && ai.get.attitude(target, player) <= 0) return 1;
							if (target.hp < 4 && ai.get.attitude(target, player) <= 0) return 0.5;
							return 0;
						}
						"step 2"
						if (result.bool == true) {
							if (player.hp != 1) {
								result.targets[0].loseMaxHp();
							}
							else {
								if (result.targets[0].maxHp >= 1) {
									result.targets[0].loseMaxHp(result.targets[0].maxHp - 1);
								}
							}
						}
					}
				},
				wang_caiwenji_wangyou: {
					trigger: {
						source: 'damageBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player, target) {
						return event.player != player && player.hp <= 3;
					},
					check: function (event, player, target) {
						return (ai.get.attitude(player, event.player) <= 0 && event.player.hp > player.hp) || (ai.get.attitude(player, event.player) > 0 && (event.player.hp <= player.maxHp || event.player.maxHp <= player.hp));
					},
					content: function () {
						trigger.untrigger();
						trigger.finish();
						var hp1 = trigger.player.hp;
						var hp2 = player.hp;
						trigger.player.hp = hp2;
						player.hp = hp1;
						player.update();
						trigger.player.update();
					}
				},
				wang_caiwenji_huizou: {
					trigger: {
						player: 'phaseBegin'
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					filter: function (event, player) {
						return player.hp <= 3;
					},
					content: function () {
						"step 0"
						player.chooseControl('recover_hp', 'draw_card', function (event, player) {
							var num = player.countCards('h');
							if (num > player.hp || player.hp == 1) return 'recover_hp';
							return 'draw_draw';
						});
						"step 1"
						if (result.control == 'draw_card') {
							player.draw(2);
						}
						else {
							player.recover();
						}
					},
				},
				//王貂蝉
				wang_diaochan_yuanjun: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: 'phaseDrawBegin',
					},
					content: function () {
						trigger.num += 2;
					}
				},
				wang_diaochan_qidun: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					filter: function (event, player) {
						return (get.type(event.card) == 'delay' || event.card.name == 'tiesuo');
					},
					content: function () {
						game.log(player, '发动了奇遁，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'tiesuo' || get.type(card) == 'delay') {
									return [0, 0];
								}
							}
						}
					}
				},
				wang_diaochan_lipan: {
					audio:"ext:扩展ol:"+ 1,
					enable: "phaseUse",
					usable: 1,
					filter: function (event, player) {
						var num = 0;
						for (var i = 0; i < game.players.length; i++) {
							num++
						}
						return (num > 1)
					},
					check: function (card) {
						return 10 - ai.get.value(card)
					},
					filterCard: true,
					position: "he",
					filterTarget: function (card, player, target) {
						if (ui.selected.targets.length == 1) {
							return target.canUse({
								name: 'juedou'
							}, ui.selected.targets[0]);
						}
						return true;
					},
					targetprompt: ["先出杀", "后出杀"],
					selectTarget: 2,
					multitarget: true,
					content: function () {
						'step 0'
						targets[0].addSkill('wang_diaochan_lipan2');
						targets[1].addSkill('wang_diaochan_lipan2');
						'step 1'
						targets[1].useCard({
							name: 'juedou'
						}, targets[0]).animate = false;
						game.delay(0.5);
						'step 2'
						targets[0].removeSkill('wang_diaochan_lipan2');
						targets[1].removeSkill('wang_diaochan_lipan2');
					},
					ai: {
						order: 8,
						result: {
							target: function (player, target) {
								if (ui.selected.targets.length == 0) {
									return -2.5;
								}
								else {
									return ai.get.effect(target, {
										name: 'juedou'
									}, ui.selected.targets[0], target);
								}
							},
						},
						expose: 0.4,
						threaten: 3,
					},
				},
				wang_diaochan_lipan2: {
					ai: {
						playernowuxie: true
					}
				},
				wang_diaochan_tianwei: {
					trigger: {
						player: 'turnOverBefore'
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						noturnOver: true,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'turnOver')) return [0, 0];
							}
						}
					},
					group: 'wang_diaochan_tianwei2'
				},
				wang_diaochan_tianwei2: {
					rigger: {
						player: 'phaseBefore'
					},
					nopop: true,
					forced: true,
					content: function () {
						player.lockOut = true;
					}
				},
				wang_diaochan_lianxiang: {
					audio:"ext:扩展ol:"+ 1,
					enable: "phaseUse",
					filterCard: true,
					selectCard: 1,
					prompt: "弃置一张手牌，选择一名男性角色，观看其手牌，并且获得其一张",
					filterCard: true,
					position: 'he',
					filterTarget: function (card, player, target) {
						return target.countCards('h') > 0 && target.sex == 'male';
					},
					check: function (card) {
						return 8 - ai.get.value(card)
					},
					content: function () {
						"step 0"
						player.chooseCardButton(target, target.get('h')).ai = function (card) {
							if (event.card != 'du') return ai.get.value(card) + 4;
							return 0;
						}
						"step 1"
						if (result.bool) {
							player.gain(result.links[0]);
							target.$give(result.cards, player);
						}
					},
					ai: {
						order: 11,
						result: {
							target: function (player, target, card) {
								if (target.hasSkillTag('noh') && target.countCards('h') <= 1 && !target.hasSkill('shangshi') && !target.hasSkill('shangshix') && !target.hasSkill('boss_juejing') || target.hasSkillTag('noh') && target.countCards('h') <= 3 && target.countCards('h') <= target.maxHp - target.hp && target.hasSkill('shangshi') || target.hasSkillTag('noh') && target.countCards('h') <= 4 && target.hasSkill('boss_juejing') || target.hasSkillTag('noh') && target.countCards('h') <= 4 && target.hasSkill('shangshix') || target.countCards('h', {
									name: 'du'
								}) == target.countCards('h')) return 0;
								return -target.countCards('h');
							},
						},
						threaten: 1.1,
					},
				},
				wang_diaochan_baonu: {
					skillAnimation: true,
					animationStr: '花开彼岸艳丽无双',
					animationColor: 'metal',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['wang_diaochan_baonu2'],
				},
				wang_diaochan_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				wang_diaochan_xiyu: {
					mod: {
						targetEnabled: function (card, player, target, now) {
							if (card.name == 'sha' && target.hp <= 3 && get.color(card) == 'black' || target.hp <= 3 && get.type(card) == 'trick' && get.color(card) == 'black') return false;
						},
					},
				},
				wang_diaochan_xiuhua: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					filter: function (event, player) {
						return player.hp <= 3;
					},
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【羞花】？', function (card, player, target) {
							return target.sex == 'male';
						}).ai = function (target) {
							var nh = target.countCards('h');
							if (target.countCards('h', {
								name: 'du'
							}) == nh) return -1;
							if (ai.get.attitude(_status.player, target) < 0 && nh > 0) return 2;
							if (ai.get.attitude(_status.player, target) == 0 && nh > 0) return 1;
							return 0.5;
						};
						'step 1'
						if (result.bool) {
							player.logSkill('wang_diaochan_xiuhua', result.targets[0]);
							player.gainPlayerCard('h', result.targets[0]);
						}
					}
				},
				wang_diaochan_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 3;
					},
					content: function () {
						player.recover();
					}
				},
		
				//王华雄
				wang_huaxiong_yuanjun: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				wang_huaxiong_qidun: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					check: function (event, player) {
						return ai.get.effect(event.target, event.card, event.player, player) < 0;
					},
					filter: function (event, player) {
						return (get.type(event.card) == 'delay' || event.card.name == 'tiesuo');
					},
					content: function () {
						game.log(player, '发动了奇遁，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'tiesuo' || get.type(card) == 'delay') {
									return [0, 0];
								}
							}
						}
					}
				},
				wang_huaxiong_shanshi: {
					trigger: {
						player: 'equipBegin'
					},
					filter: function (event, player) {
						return player.countCards('e', {
							subtype: 'equip1'
						}) && get.subtype(event.card) == 'equip1';
					},
					content: function () {
						"step 0"
						trigger.untrigger();
						trigger.finish();
						player.$equip(trigger.card);
						game.addVideo('equip', player, get.cardInfo(trigger.card));
						game.log(player, '装备了', trigger.card);
						"step 1"
						var info = get.info(trigger.card);
						if (info.onEquip && (!info.filterEquip || info.filterEquip(trigger.card, player))) {
							var next = game.createEvent('equip_' + trigger.card.name);
							next.setContent(info.onEquip);
							next.player = player;
							next.trigger.card = trigger.card;
							game.delayx();
						}
						delete player.equiping;
					},
					ai: {
						effect: {
							player: function (card, player, target) {
								if (get.subtype(card) == 'equip1') return [1, 10];
							}
						}
					},
					group: 'wang_huaxiong_shanshi2'
				},
				wang_huaxiong_shanshi2: {
					trigger: {
						source: 'damageBegin'
					},
					filter: function (event, player) {
						return event.card && event.card.name == 'sha' && event.notLink() && player.countCards('e', {
							subtype: 'equip1'
						});
					},
					forced: true,
					content: function () {
						trigger.num = 1 + player.countCards('e', {
							subtype: 'equip1'
						});
					}
				},
				wang_huaxiong_tianwei: {
					trigger: {
						player: 'turnOverBefore'
					},
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					group: 'wang_huaxiong_tianwei2'
				},
				wang_huaxiong_tianwei2: {
					trigger: {
						player: 'phaseBefore'
					},
					nopop: true,
					forced: true,
					content: function () {
						player.lockOut = true;
					}
				},
				wang_huaxiong_xiaoshou: {
					trigger: {
						player: 'damageEnd'
					},
					direct: true,
					filter: function (event, player) {
						return (event.source && event.source.countCards('e'));
					},
					content: function () {
						"step 0"
						player.choosePlayerCard('是否对' + get.translation(trigger.source) + '发动【梟首】？', trigger.source, ai.get.buttonValue, 'e');
						"step 1"
						if (result.bool) {
							player.logSkill('wang_huaxiong_xiaoshou', trigger.source);
							player.gain(result.buttons[0].link);
							trigger.source.$give(1, player);
						}
					},
					ai: {
						result: {
							target: function (card, player, target) {
								if (player.countCards('e') > 1 && get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -1.5];
									if (ai.get.attitude(target, player) < 0) return [1, 1];
								}
							}
						}
					}
				},
				wang_huaxiong_shuangren: {
					mod: {
						cardUsable: function (card, player, num) {
							if (card.name == 'sha') return num + 1;
						}
					}
				},
				wang_huaxiong_baonu: {
					skillAnimation: true,
					animationStr: ' ',
					animationColor: 'metal',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['wang_huaxiong_baonu2'],
				},
				wang_huaxiong_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				wang_huaxiong_fubing: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseEnd",
					},
					filter: function (event, player) {
						return event.player.hp <= 4;
					},
					content: function () {
						player.draw(2);
					}
				},
				wang_huaxiong_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 4;
					},
					content: function () {
						player.recover();
					}
				},
		
				//王李儒
				wang_liru_yuanjun: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				wang_liru_qidun: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					filter: function (event, player) {
						return (get.type(event.card) == 'delay' || event.card.name == 'tiesuo');
					},
					content: function () {
						game.log(player, '发动了奇遁，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'tiesuo' || get.type(card) == 'delay') {
									return [0, 0];
								}
							}
						}
					}
				},
				wang_liru_shipo: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 2,
					priority: 5.9,
					check: function (event, player) {
						return ai.get.effect(event.target, event.card, event.player, player) < 0;
					},
					filter: function (event, player) {
						return event.player != player && get.type(event.card, 'trick') == 'trick';
					},
					content: function () {
						"step 0"
						var effect = ai.get.effect(player, trigger.card, trigger.player, player);
						player.judge(function (card) {
							switch (get.color(card)) {
								case 'black':
									return -effect;
								case 'red':
									return 1;
								default:
									return 0;
							}
						});
						"step 1"
						switch (result.color) {
							case 'black':
								{
									trigger.untrigger();
									trigger.finish();
									break;
								}
							case 'red':
								{
									break;
								}
						}
					},
					ai: {
						effect: {
							target: function (card, player, target) {
								return 0.7
							},
						},
						threaten: 0.8,
					},
				},
				wang_liru_tianwei: {
					trigger: {
						player: 'turnOverBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					group: 'wang_liru_tianwei2'
				},
				wang_liru_tianwei2: {
					trigger: {
						player: 'phaseBefore'
					},
					nopop: true,
					forced: true,
					content: function () {
						player.lockOut = true;
					}
				},
				wang_liru_zhengjiao: {
					trigger: {
						player: "phaseEnd",
					},
					direct: true,
					audio:"ext:扩展ol:"+ 2,
					content: function () {
						"step 0"
						player.chooseTarget('是否发动【徵缴】？', function (card, player, target) {
							return player != target;
						}).ai = function (target) {
							var player = _status.event.player;
							var nh = Math.floor(target.countCards('h') / 2);
							if (ai.get.attitude(_status.event.player, target) > 0) return -6;
							if (nh >= 1 && ai.get.attitude(_status.event.player, target) <= 0) return nh;
							return 0;
						};
						'step 1'
						if (result.bool) {
							player.logSkill('wang_liru_zhengjiao', result.targets[0]);
							var num = Math.floor(result.targets[0].countCards('h') / 2);
							player.gainPlayerCard('h', result.targets[0], Math.min(num, result.targets[0].countCards('h')), true);
						}
					}
				},
				wang_liru_baonu: {
					skillAnimation: true,
					animationStr: '我要的是斩草除根',
					animationColor: 'metal',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['wang_liru_baonu2'],
				},
				wang_liru_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				wang_liru_suoshi: {
					enable: 'phaseUse',
					usable: 1,
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return player.hp <= 3;
					},
					filterTarget: function (card, player, target) {
						if (target == player) return false;
						return true;
					},
					prompt: '你可以选择一个目标直到你的下个回合开始，所有伤害来源均为他。',
					content: function () {
						target.addSkill('wang_liru_suoshi2');
					},
					ai: {
						order: 10,
						result: {
							target: function (player, target) {
								if (target.hasSkill('fankui') || target.hasSkill('ganglie') || target.hasSkill('duanchang') || target.hasSkill('refankui') || target.hasSkill('reganglie') || target.hasSkill('zhiyu') || target.hasSkill('xinenyuan') || target.hasSkill('enyuan') || target.hasSkill('duodao') || target.hasSkill('jilei') || target.hasSkill('wuhun') || target.hasSkill('wang_huaxiong_xiaoshou') || target.hasSkill('wang_lvbu_fanfu') || target.hasSkill('xian_machao_yuling') || target.hasSkill('xian_taishici_yiji')) {
									return -3;
								}
								return -0.5;
							}
						},
					},
				},
				wang_liru_suoshi2: {
					mark: true,
					intro: {
						content: '你是所有伤害的来源',
						nocount: true
					},
					group: ['wang_liru_suoshi3'],
					trigger: {
						global: 'damageBefore'
					},
					forced: true,
					priority: Infinity,
					audio:"ext:扩展ol:"+ 2,
					content: function () {
						trigger.source = player;
					}
				},
				wang_liru_suoshi3: {
					trigger: {
						global: 'phaseBegin'
					},
					forced: true,
					popup: false,
					silent: true,
					filter: function (event, player) {
						return event.player.hasSkill('wang_liru_suoshi');
					},
					content: function () {
						player.removeSkill('wang_liru_suoshi2');
					}
				},
				wang_liru_yudan: {
					audio:"ext:扩展ol:"+ 3,
					enable: ['chooseToRespond', 'chooseToUse'],
					filter: function (event, player) {
						return player.hp <= 3;
					},
					filterCard: function (card, player) {
						return get.color(card) == 'red';
					},
					position: 'h',
					viewAs: {
						name: 'tao'
					},
					viewAsFilter: function (player) {
						if (!player.countCards('h', {
							color: 'red'
						})) return false;
					},
					prompt: '将一张红色手牌当桃使用或打出',
					check: function (card) {
						return 15 - ai.get.value(card)
					},
					ai: {
						skillTagFilter: function (player) {
							if (!player.countCards('h', {
								color: 'red'
							})) return false;
						},
						respondTao: true,
						save: true,
					}
				},
		
		
				//王吕布
				wang_lvbu_liangguang: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: 'phaseDrawBegin',
					},
					content: function () {
						trigger.num += 4;
					}
				},
				wang_lvbu_qidun: {
					trigger: {
						target: "useCardToBefore",
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					filter: function (event, player) {
						return (get.type(event.card) == 'delay' || event.card.name == 'tiesuo');
					},
					content: function () {
						game.log(player, '发动了奇遁，', trigger.card, '对', trigger.target, '失效');
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (card.name == 'tiesuo' || get.type(card) == 'delay') {
									return [0, 0];
								}
							}
						}
					}
				},
				wang_lvbu_wushuang: {
					forced: true,
					group: ['wang_lvbu_wushuang1', 'wang_lvbu_wushuang2', 'wang_lvbu_wushuang3'],
				},
				wang_lvbu_wushuang1: {
					trigger: {
						player: 'shaBegin'
					},
					audio:"ext:扩展ol:"+ 4,
					forced: true,
					filter: function (event, player) {
						return !event.directHit;
					},
					content: function () {
						"step 0"
						var next = trigger.target.chooseToRespond({
							name: 'sha'
						});
						next.autochoose = lib.filter.autoRespondSha;
						next.ai = function (card) {
							if (trigger.target.countCards('h', 'sha') > 1) {
								return ai.get.unuseful2(card);
								trigger.untrigger();
								trigger.finish();
							}
							return -1;
						};
						"step 1"
						if (result.bool == false) {
							trigger.untrigger();
							trigger.directHit = true;
						}
					}
				},
				wang_lvbu_wushuang2: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: 'shaBegin'
					},
					priority: -1,
					forced: true,
					content: function () {
						"step 0"
						var next = trigger.target.chooseToRespond({
							name: 'sha'
						});
						next.autochoose = lib.filter.autoRespondSha;
						next.ai = function (card) {
							if (trigger.target.countCards('h', 'sha') > 0) {
								return ai.get.unuseful2(card);
							}
							return -1;
						};
						"step 1"
						if (result.bool == false) {
							trigger.untrigger();
							trigger.directHit = true;
						}
						else {
							trigger.trigger('shaMiss');
							trigger.finish();
							trigger.result = {
								bool: false
							}
							trigger.trigger('shaUnhirt');
						};
					}
				},
				wang_lvbu_wushuang3: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: 'juedou',
						target: 'juedou'
					},
					forced: true,
					filter: function (event, player) {
						return event.turn != player;
					},
					content: function () {
						"step 0"
						var next = trigger.turn.chooseToRespond({
							name: 'sha'
						});
						next.autochoose = lib.filter.autoRespondSha;
		
						next.ai = function (card) {
							if (ai.get.attitude(trigger.turn, player) < 0 && trigger.turn.countCards('h', 'sha') > 1) {
								return ai.get.unuseful2(card);
							}
							return -1;
						};
						"step 1"
						if (result.bool == false) {
							trigger.directHit = true;
						}
					},
					ai: {
						result: {
							target: function (card, player, target) {
								if (card.name == 'juedou' && target.countCards('h') > 0) return [1, 0, 0, -1];
							}
						}
					}
				},
				wang_lvbu_tianwei: {
					trigger: {
						player: 'turnOverBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					group: 'wang_lvbu_tianwei2'
				},
				wang_lvbu_tianwei2: {
					trigger: {
						player: 'phaseBefore'
					},
					nopop: true,
					forced: true,
					content: function () {
						player.lockOut = true;
					}
				},
				wang_lvbu_fanfu: {
					unique: true,
					mark: true,
					init: function (player) {
						player.storage.wang_lvbu_fanfu = 0;
					},
					trigger: {
						player: "damageEnd",
					},
					audio:"ext:扩展ol:"+ 4,
					filter: function (event, player) {
						return (event.source != undefined);
					},
					check: function (event, player) {
						return (ai.get.attitude(player, event.source) <= 0);
					},
					content: function () {
						"step 0"
						player.judge(function (card) {
							if (get.color(card) != 'black') return -2;
							return 2;
						})
							"step 1"
						if (result.judge < 2) {
							event.finish();
							return;
						}
						player.storage.wang_lvbu_fanfu++;
						"step 2"
						var next = trigger.source.chooseToRespond({
							name: 'shan'
						});
						next.autochoose = lib.filter.autoRespondShan;
						next.ai = function (card) {
							if (trigger.source.countCards('h', 'shan') > player.storage.wang_lvbu_fanfu) {
								return ai.get.unuseful2(card);
							}
							return -1;
						};
						"step 3"
						if (result.bool == false) {
							player.storage.wang_lvbu_fanfu = 0;
							trigger.source.damage();
							event.finish();
							return;
						}
						if (player.storage.wang_lvbu_fanfu > 0) {
							player.storage.wang_lvbu_fanfu--;
							event.goto(2);
						}
					},
					ai: {
						result: {
							target: function (card, player, target) {
								if (player.skills.contains('jueqing')) return [1, -1];
								if (get.tag(card, 'damage') && ai.get.damageEffect(target, player, player) > 0) return [1, 0, 0, -1.5];
							}
						}
					}
				},
				wang_lvbu_baonu: {
					skillAnimation: true,
					animationStr: '神挡杀神佛挡杀佛',
					animationColor: 'metal',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['wang_lvbu_baonu2'],
				},
				wang_lvbu_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				wang_lvbu_shashen: {
					trigger: {
						player: 'shaBefore'
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					filter: function (event, player) {
						return player.hp <= 5;
					},
					content: function () {},
					mod: {
						selectTarget: function (card, player, range) {
							if (card.name == 'sha' && player.hp <= 5) range[1] += 3;
						}
					}
				},
				wang_lvbu_huitian: {
					audio:"ext:扩展ol:"+ 4,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 5;
					},
					content: function () {
						player.recover();
					}
				},
		
		
		
		
				//仙马超
				xian_machao_yuanjun: {
					audio:"ext:扩展ol:"+ 2,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				xian_machao_qidun: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				xian_machao_tianwei: {
					trigger: {
						player: ['turnOverBefore', 'linkBefore']
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					content: function () {
						trigger.finish();
						trigger.untrigger();
					},
					ai: {
						noturnOver: true,
						nolink: true,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'turnOver') || get.tag(card, 'link')) return [0, 0];
							}
						}
					},
				},
				xian_machao_tiedan: {
					trigger: {
						player: 'shaMiss'
					},
					audio:"ext:扩展ol:"+ 2,
					direct: true,
					content: function () {
						"step 0"
						if (player.skills.contains('jiu')) {
							player.removeSkill('jiu');
							if (player.node.jiu) {
								player.node.jiu.delete();
								player.node.jiu2.delete();
								delete player.node.jiu;
								delete player.node.jiu2;
							}
							event.jiu = true;
						}
						player.chooseToUse('是否发动鐵膽？', {
							name: 'sha'
						}, trigger.target, -1).logSkill = 'xian_machao_tiedan';
						"step 1"
						if (result.bool) {
							player.logSkill('xian_machao_tiedan');
						}
						else if (event.jiu) {
							player.addSkill('jiu');
						}
					}
				},
				xian_machao_poji: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "shaBegin",
					},
					forced: true,
					filter: function (event, player) {
						return event.card && get.color(event.card) == 'red';
					},
					content: function () {
						trigger.directHit = true;
					},
					group: ['xian_machao_poji2'],
				},
				xian_machao_poji2: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						source: 'damageBegin'
					},
					filter: function (event, player) {
						if (event.card && event.card.name == 'sha' && get.suit(event.card) == 'spade') return true;
						return false;
					},
					forced: true,
					content: function () {
						trigger.num++;
					}
				},
				xian_machao_yuling: {
					audio:"ext:扩展ol:"+ 2,
					trigger: {
						player: "damageEnd",
					},
					direct: true,
					filter: function (event, player) {
						return (event.source && event.source.countCards('h'));
					},
					content: function () {
						"step 0"
						event.num = trigger.num;
						"step 1"
						if (num == 0 || trigger.source.countCards('h') == 0) {
							event.finish();
							return;
						}
						event.num--;
						player.choosePlayerCard('是否对' + get.translation(trigger.source) + '发动【玉灵】？', trigger.source, ai.get.buttonValue, 'h');
						"step 2"
						if (result.bool) {
							player.logSkill('xian_machao_yuling', trigger.source);
							player.gain(result.buttons[0].link);
							trigger.source.$give(1, player);
							event.goto(1);
						}
					},
					ai: {
						result: {
							target: function (card, player, target) {
								if (player.countCards('he') > 1 && get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -1.5];
									if (ai.get.attitude(target, player) < 0) return [1, 1];
								}
							},
						},
					},
				},
				xian_machao_baonu: {
					skillAnimation: true,
					animationStr: '灭族之恨不共戴天',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['xian_machao_baonu2'],
				},
				xian_machao_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				xian_machao_langzhao: {
					mod: {
						globalFrom: function (from, to, current) {
							if (from.hp <= 4) return current - 1;
						},
						globalTo: function (from, to, current) {
							if (to.hp <= 4) return current + 1;
						},
					},
					ai: {
						threaten: 0.8,
					},
				},
				xian_machao_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 4;
					},
					content: function () {
						player.recover();
					}
				},
		
		
		
				//仙太史慈
				xian_taishici_yuanjun: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				xian_taishici_qidun: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				xian_taishici_tianwei: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: ['turnOverBefore', 'linkBefore']
					},
					forced: true,
					content: function () {
						trigger.finish();
						trigger.untrigger();
					},
					ai: {
						noturnOver: true,
						nolink: true,
						effect: {
							target: function (card, player, target, current) {
								if (get.tag(card, 'turnOver') || get.tag(card, 'link')) return [0, 0];
							}
						}
					},
				},
				xian_taishici_tianlei: {
					init: function (player) {
						player.storage.xian_taishici_tianlei = 0;
					},
					audio:"ext:扩展ol:"+ 1,
					enable: 'phaseUse',
					usable: 1,
					filterTarget: function (card, player, target) {
						return target != player && target.countCards('h') > 0;
					},
					selectTarget: -1,
					filter: function (event, player) {
						return player.countCards('h') > 0;
					},
					multitarget: true,
					multiline: true,
					content: function () {
						"step 0"
						player.chooseToCompare(targets).callback = lib.skill.xian_taishici_tianlei.callback;
						"step 1"
						if (player.storage.xian_taishici_tianlei >= 2) {
							player.addTempSkill('xian_taishici_tianlei2', 'phaseEnd');
						}
						if (player.storage.xian_taishici_tianlei < 2) {
							player.chooseToDiscard('he', 2, true);
						}
						"step 2"
						player.storage.xian_taishici_tianlei = 0;
					},
					callback: function () {
						event.num1 = event.card1.number;
						event.num2 = event.card2.number;
						if (event.num1 > event.num2) {
							player.storage.xian_taishici_tianlei++;
						}
					},
					ai: {
						order: 10,
						result: {
							player: function (player, target) {
								var num = 0,
									num2 = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i] != player && ai.get.attitude(player, game.players[i]) <= 0 && game.players[i].countCards('h')) num++;
									if (game.players[i] != player && ai.get.attitude(player, game.players[i]) > 0 && game.players[i].countCards('h')) num2++;
								}
								if (num + num2 < 2 || num2 - num > 1 || num == 0 && num2 <= 2) return 0;
								return 1;
							}
						}
					},
				},
				xian_taishici_tianlei2: {
					trigger: {
						source: 'damageBegin'
					},
					filter: function (event) {
						return event.card && (event.card.name == 'sha');
					},
					forced: true,
					content: function () {
						trigger.num++;
					},
					mod: {
						cardUsable: function (card, player, num) {
							if (card.name == 'sha') return num += 1;
						}
					},
				},
				xian_taishici_yiji: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "damageEnd",
					},
					direct: true,
					filter: function (event, player) {
						return (event.source && player.countCards('h', {
							color: 'red'
						}) && !event.source.isDead());
					},
					content: function () {
						"step 0"
						event.num = trigger.num;
						"step 1"
						if (num == 0) {
							event.finish();
							return;
						}
						event.num--;
						player.chooseToDiscard('是否对' + get.translation(trigger.source) + '发动【義撃】？', 'h', {
							color: 'red'
						}).ai = function (card) {
							if (ai.get.attitude(player, trigger.source) <= 0) return 7 - ai.get.value(card);
							return -1;
						}
						"step 2"
						if (result.bool) {
							player.logSkill('xian_taishici_yiji', trigger.source);
							trigger.source.loseHp();
							event.goto(1);
						}
					},
				},
				xian_taishici_baonu: {
					skillAnimation: true,
					animationStr: '天行有常天义昭昭',
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					priority: Infinity,
					unique: true,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
						player.node.identity.dataset.color = 'shu';
						player.node.name.dataset.nature = 'fire';
					},
					group: ['xian_taishici_baonu2'],
				},
				xian_taishici_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				xian_taishici_zhenyuan: {
					mark: true,
					init: function (player) {
						player.storage.xian_taishici_zhenyuan = 0;
					},
					trigger: {
						source: 'damageEnd'
					},
					audio:"ext:扩展ol:"+ 1,
					forced: true,
					filter: function (event, player) {
						return player.hp <= 5 && event.num > 0 && player.storage.xian_taishici_zhenyuan4 != 0;
					},
					content: function () {
						player.storage.xian_taishici_zhenyuan += trigger.num;
						player.update();
						ui.clear();
					},
					group: ['xian_taishici_zhenyuan2', 'xian_taishici_zhenyuan3', 'xian_taishici_zhenyuan4'],
				},
				xian_taishici_zhenyuan2: {
					mod: {
						cardUsable: function (card, player, num) {
							if (card.name == 'sha' && player.hp <= 5) return num + player.storage.xian_taishici_zhenyuan;
						}
					},
				},
				xian_taishici_zhenyuan3: {
					trigger: {
						player: 'phaseUseEnd'
					},
					forced: true,
					unique: true,
					priority: -Infinity,
					popup: false,
					content: function () {
						player.storage.xian_taishici_zhenyuan = 0;
						player.storage.xian_taishici_zhenyuan4 = 0;
						player.update();
						ui.clear();
					},
				},
				xian_taishici_zhenyuan4: {
					unique: true,
					mark: true,
					init: function (player) {
						player.storage.xian_taishici_zhenyuan4 = 1;
					},
					trigger: {
						player: ['gameStart', 'phaseUseBefore']
					},
					forced: true,
					unique: true,
					priority: Infinity,
					popup: false,
					content: function () {
		
						player.storage.xian_taishici_zhenyuan4 += 2;
						player.update();
						ui.clear();
					},
				},
				xian_taishici_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 5;
					},
					content: function () {
						player.recover();
					}
				},
		
				//仙甄姬
				xian_zhenji_yuanjun: {
					audio:"ext:扩展ol:"+ 2,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				xian_zhenji_qidun: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				xian_zhenji_tianwei: {
					trigger: {
						player: ['turnOverBefore', 'linkBefore']
					},
					audio:"ext:扩展ol:"+ 2,
					forced: true,
					content: function () {
						trigger.finish();
						trigger.untrigger();
					},
				},
				xian_zhenji_qinghuai: {
					trigger: {
						player: "respondBefore",
					},
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return event.card.name == 'shan';
					},
					direct: true,
					content: function () {
						player.chooseToUse({
							name: 'sha'
						}, '倾懷：是否对' + '攻击范围内的一名目标使用一张杀',
						target).set('logSkill', 'xian_zhenji_qinghuai');
					}
				},
				xian_zhenji_qingxin: {
					trigger: {
						player: "phaseEnd",
					},
					audio:"ext:扩展ol:"+ 2,
					direct: true,
					filter: function (event, player) {
						return (get.cardCount({
							name: 'sha'
						}, player) == 0);
					},
					content: function () {
						"step 0"
						var check;
						var i, num = 0;
						for (i = 0; i < game.players.length; i++) {
							if (player != game.players[i]) {
								if (ai.get.attitude(player, game.players[i]) <= 0 && game.players[i].countCards('he')) num++;
							}
						}
						check = (num >= 1);
						player.chooseTarget('是否发动【倾心】？', [1, 2], function (card, player, target) {
							return target.countCards('he') > 0 && player != target;
						},
		
						function (target) {
							if (!check) return 0;
							return (1 - ai.get.attitude(_status.event.player, target));
						});
						"step 1"
						if (result.bool) {
							player.logSkill('xian_zhenji_qingxin', result.targets);
							for (var i = 0; i < result.targets.length; i++) {
								player.gainPlayerCard('he', result.targets[i]);
							}
						}
						"step 2"
						if (result.bool) game.delay();
					},
					ai: {
						threaten: 2,
						expose: 0.3,
					},
				},
				xian_zhenji_baonu: {
					skillAnimation: true,
					animationStr: '含辞未吐气若幽兰',
					trigger: {
						global: 'gameStart'
					},
					unique: true,
					forced: true,
					priority: Infinity,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['xian_zhenji_baonu2'],
				},
				xian_zhenji_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				xian_zhenji_mushen: {
					group: ['xian_zhenji_mushen2'],
					trigger: {
						target: "shaBefore",
					},
					forced: true,
					audio:"ext:扩展ol:"+ 2,
					filter: function (event, player) {
						return (event.card.name == 'sha' && get.color(event.card) == 'red' && player.hp <= 3)
					},
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player) {
								if (card.name == 'sha' && get.color(card) == 'red') return 'zerotarget';
							}
						}
					},
				},
				xian_zhenji_mushen2: {
					audio:"ext:扩展ol:"+ 2,
					trigger: {
						global: 'discardAfter'
					},
					filter: function (event, player) {
						for (var i = 0; i < event.cards.length; i++) {
							if (get.suit(event.cards[i]) == 'heart' && get.position(event.cards[i]) == 'd' && player.hp <= 3 || get.suit(event.cards[i]) == 'spade' && get.position(event.cards[i]) == 'd' && player.hp <= 3) {
								return true;
							}
						}
						return false;
					},
					frequent: 'check',
					check: function (event, player) {
						for (var i = 0; i < event.cards.length; i++) {
							if (get.suit(event.cards[i]) == 'heart' && get.position(event.cards[i]) == 'd' && player.hp <= 3 || get.suit(event.cards[i]) == 'spade' && get.position(event.cards[i]) == 'd' && player.hp <= 3) {
								if (event.cards[i].name == 'du') return false;
							}
						}
						return true;
					},
					content: function () {
						"step 0"
						if (trigger.delay == false) game.delay();
						"step 1"
						var cards = [];
						for (var i = 0; i < trigger.cards.length; i++) {
							if (get.suit(trigger.cards[i]) == 'heart' && get.position(trigger.cards[i]) == 'd' || get.suit(trigger.cards[i]) == 'spade' && get.position(trigger.cards[i]) == 'd') {
								cards.push(trigger.cards[i]);
							}
						}
						if (cards.length) {
							player.gain(cards);
							player.$gain2(cards);
							game.log(player, '发动暮神，获得了', cards);
						}
					},
				},
				xian_zhenji_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 3;
					},
					content: function () {
						player.recover();
					}
				},
		
				//仙周瑜
				xian_zhouyu_yuanjun: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 2;
					}
				},
				xian_zhouyu_qidun: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				xian_zhouyu_tianwei: {
					trigger: {
						player: ['turnOverBefore', 'linkBefore']
					},
					forced: true,
					content: function () {
						trigger.finish();
						trigger.untrigger();
					},
				},
				xian_zhouyu_poji: {
					audio:"ext:扩展ol:"+ 1,
					enable: "phaseUse",
					usable: 1,
					filter: function (event, player) {
						return player.countCards('h') > 0;
					},
					filterTarget: function (card, player, target) {
						return player != target;
					},
					content: function () {
						"step 0"
						target.chooseControl('heart2', 'diamond2', 'club2', 'spade2').ai = function (event) {
							switch (Math.floor(Math.random() * 6)) {
								case 0:
									return 'heart2';
								case 1:
								case 4:
								case 5:
									return 'diamond2';
								case 2:
									return 'club2';
								case 3:
									return 'spade2';
							}
						};
						"step 1"
						game.log(target, '选择了' + get.translation(result.control));
						event.choice = result.control;
						target.popup(event.choice);
						event.card = player.get('h').randomGet();
						target.gain(event.card);
						player.$give(event.card, target);
						game.delay();
						"step 2"
						if (get.suit(event.card) + '2' != event.choice) target.damage('fire', 1);
					},
					ai: {
						order: 1,
						result: {
							target: function (player, target) {
								if (target.hasSkillTag('nofire')) return 0;
								var value = 0,
									i;
								var cards = player.get('h');
								for (i = 0; i < cards.length; i++) {
									value += ai.get.value(cards[i]);
								}
								value /= player.countCards('h');
								if (target.hp == 1) return Math.min(0, value - 7);
								return Math.min(0, value - 5);
							},
						},
					},
				},
				xian_zhouyu_lianhun: {
					forced: true,
					group: ['xian_zhouyu_lianhun2', 'xian_zhouyu_lianhun3'],
				},
				xian_zhouyu_lianhun2: {
					audio:"ext:扩展ol:"+ 1,
					enable: 'phaseUse',
					usable: 1,
					filter: function (event, player) {
						return player.countCards('h', {
							suit: 'club'
						}) > 0;
					},
					filterCard: function (card) {
						return get.suit(card) == 'club';
					},
					viewAs: {
						name: 'tiesuo'
					},
					prompt: '将一张梅花牌当铁锁连环使用',
					check: function (card) {
						return 4 - ai.get.value(card)
					}
				},
				xian_zhouyu_lianhun3: {
					audio:"ext:扩展ol:"+ 1,
					enable: 'phaseUse',
					usable: 1,
					filter: function (event, player) {
						return player.countCards('h', {
							suit: 'club'
						}) > 0;
					},
					filterCard: function (card) {
						return get.suit(card) == 'club';
					},
					check: function (card) {
						return 5 - ai.get.useful(card);
					},
					content: function () {
						player.draw();
					}
				},
				xian_zhouyu_baonu: {
					skillAnimation: true,
					animationStr: ' ',
					trigger: {
						global: 'gameStart'
					},
					unique: true,
					forced: true,
					priority: Infinity,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['xian_zhouyu_baonu2'],
				},
				xian_zhouyu_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				xian_zhouyu_yuhun: {
					trigger: {
						target: "shaBefore",
					},
					forced: true,
					audio:"ext:扩展ol:"+ 1,
					filter: function (event, player) {
						return (event.card.name == 'sha' && get.color(event.card) == 'black' && player.hp <= 3)
					},
					content: function () {
						trigger.untrigger();
						trigger.finish();
					},
					ai: {
						effect: {
							target: function (card, player) {
								if (card.name == 'sha' && get.color(card) == 'black') return 'zerotarget';
							}
						}
					},
					mod: {
						targetEnabled: function (card, player, target, now) {
							if ((get.type(card) == 'trick') && get.suit(card) == 'club' && target.hp <= 3 || (get.type(card) == 'trick') && get.suit(card) == 'spade' && target.hp <= 3) return false;
						},
					},
				},
				xian_zhouyu_huitian: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: 'phaseBegin'
					},
					forced: true,
					filter: function (event, player) {
						return event.player.hp <= 3;
					},
					content: function () {
						player.recover();
					}
				},
		
				//仙诸葛恪
				xian_zhugeke_tianbing: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: "phaseDrawBegin",
					},
					content: function () {
						trigger.num += 3;
					}
				},
				xian_zhugeke_qidun: {
					mod: {
						targetEnabled: function (card, player, target) {
							if (get.type(card) == 'delay') {
								return false;
							}
						},
					},
				},
				xian_zhugeke_tianwei: {
					audio:"ext:扩展ol:"+ 1,
					trigger: {
						player: ['turnOverBefore', 'linkBefore']
					},
					forced: true,
					content: function () {
						trigger.finish();
						trigger.untrigger();
					},
				},
				xian_zhugeke_shenzhi: {
					enable: "phaseUse",
					audio:"ext:扩展ol:"+ 2,
					position: 'h',
					filterCard: true,
					selectCard: 1,
					filter: function (event, player) {
						return player.countCards('h') > 0;
					},
					check: function (card) {
						if (get.color(card) == 'black' && game.countPlayer(function (current) {
							return !current.countCards('h', {
								color: 'black'
							});
						}) >= game.countPlayer(function (current) {
							return !current.countCards('h', {
								color: 'ted'
							});
						}) || get.color(card) == 'red' && game.countPlayer(function (current) {
							return !current.countCards('h', {
								color: 'red'
							});
						}) >= game.countPlayer(function (current) {
							return !current.countCards('h', {
								color: 'black'
							});
						})) return 20 - ai.get.value(card);
						return 0;
					},
					selectTarget: -1,
					filterTarget: function (card, player, target) {
						return player != target;
					},
					content: function () {
						"step 0"
						target.chooseCard('展示一张相同颜色的手牌，或者受到一点伤害。', function (card) {
							return get.color(card) == get.color(cards[0]);
						}).set('ai', function (card) {
							if (ai.get.attitude(_status.event.player, _status.event.getParent().player) > 0) {
								return 20 - ai.get.value(card);
							}
							else {
								return 20 - ai.get.value(card);
							}
						});
						"step 1"
						if (result.bool) {
							target.showCards(result.cards[0]);
						}
						else {
							target.damage();
						}
					},
					ai: {
						order: 10,
						result: {
							player: function (target, player) {
								var num = 0;
								for (var i = 0; i < game.players.length; i++) {
									if (game.players[i] != player) {
										if (!game.players[i].countCards('h', {
											color: 'red'
										}) && player.countCards('h', {
											color: 'red'
										}) || !game.players[i].countCards('h', {
											color: 'black'
										}) && player.countCards('h', {
											color: 'black'
										})) num -= ai.get.damageEffect(game.players[i], player, game.players[i]);
									}
								}
								return num;
							}
						},
						threaten: 1.5
					},
				},
				xian_zhugeke_huling: {
					init: function (player) {
						player.storage.xian_zhugeke_huling = 0;
					},
					trigger: {
						player: 'damageAfter'
					},
					direct: true,
					content: function () {
						'step 0'
						player.storage.xian_zhugeke_huling += trigger.num;
						'step 1'
						if (player.storage.xian_zhugeke_huling <= 0) {
							player.storage.xian_zhugeke_huling = 0;
							event.finish();
							return;
						}
						player.chooseTarget(function (card, player, target) {
							return true;
						}, '【護靈】<br><br><div class="text center">令一名角色选择一项：1.交给你一张♥牌；2.弃两张牌').set('ai', function (target) {
							var nhe = target.countCards('he');
							var player = _status.event.player;
							if (ai.get.attitude(_status.event.player, target) > 0 || player == target) return -1;
							if (ai.get.attitude(_status.event.player, target) <= 0 && nhe < 2 && !target.hasSkillTag('noh')) return 1;
							if (ai.get.attitude(_status.event.player, target) <= 0 && nhe >= 2 && nhe < 6 && !target.hasSkillTag('noh')) return 7 - nhe;
							if (ai.get.attitude(_status.event.player, target) <= 0 && nhe >= 7 && !target.hasSkillTag('noh')) return 0.5;
							return 0.25;
						});
						'step 2'
						if (result.bool == false) {
							player.storage.xian_zhugeke_huling = 0;
							event.finish();
							return;
						}
						var target = result.targets[0];
						event.target = target;
						player.line(target, 'green');
						player.logSkill('xian_zhugeke_huling', target);
						target.chooseCard('【護靈】<br><br><div class="text center">交给' + get.translation(player) + '一张♥牌，或弃两张牌', function (card, player, target) {
							return get.suit(card) == 'heart';
						}).set('ai', function (card) {
							if (ai.get.attitude(_status.event.player, _status.event.getParent().player) > 0) {
								return 11 - ai.get.value(card);
							}
							if (ai.get.attitude(_status.event.player, _status.event.getParent().player) <= 0) {
								return 6 - ai.get.value(card);
							}
						});
						'step 3'
						var target = event.target;
						if (result.bool) {
							player.gain(result.cards);
							target.$give(result.cards, player);
						}
						else {
							target.chooseToDiscard('he', 2, true);
						}
						'step 4'
						if (player.storage.xian_zhugeke_huling > 0) {
							player.storage.xian_zhugeke_huling--;
							event.goto(1);
						}
					},
					ai: {
						maixie: true,
						effect: {
							target: function (card, player, target) {
								if (get.tag(card, 'damage')) {
									if (player.skills.contains('jueqing')) return [1, -2];
									if (!target.hasFriend()) return;
									if (target.hp >= 4) return [1, get.tag(card, 'damage') * 2];
									if (target.hp == 3) return [1, get.tag(card, 'damage') * 1.5];
									if (target.hp == 2) return [1, get.tag(card, 'damage') * 0.5];
								}
							}
						}
					}
				},
				xian_zhugeke_baonu: {
					skillAnimation: true,
					animationStr: ' ',
					trigger: {
						global: 'gameStart'
					},
					unique: true,
					forced: true,
					priority: Infinity,
					silent: true,
					audio:"ext:扩展ol:"+ 1,
					content: function () {
						if (lib.config.mode == 'guozhan') {
							player.showCharacter(2);
						}
					},
					group: ['xian_zhugeke_baonu2'],
				},
				xian_zhugeke_baonu2: {
					trigger: {
						global: 'gameDrawAfter'
					},
					forced: true,
					popup: false,
					silent: true,
					content: function () {
						player.gain(get.cards(4))._triggered = null;
					}
				},
				xian_zhugeke_yanwu: {
					unique: true,
					init: function (player) {
						player.storage.xian_zhugeke_yanwu = 0;
					},
					trigger: {
						player: 'loseEnd'
					},
					direct: true,
					audio:"ext:扩展ol:"+ 1,
					filter: function (event, player) {
						for (var i = 0; i < event.cards.length; i++) {
							if (event.cards[i].original == 'e' && player.hp <= 3) return true;
						}
						return false;
					},
					content: function () {
						"step 0"
						var num = 0;
						for (var i = 0; i < trigger.cards.length; i++) {
							if (trigger.cards[i].original == 'e') num++;
						}
						player.storage.xian_zhugeke_yanwu += num;
						"step 1"
						if (player.storage.xian_zhugeke_yanwu == 0 || player.hp > 3) {
							player.storage.xian_zhugeke_yanwu = 0;
							event.finish();
							return;
						}
						"step 2"
						player.chooseTarget('【焰舞】是否视为对任意一名角色使用火攻？', function (card, player, target) {
							if (target.countCards('h') <= 0) return false;
							return player.canUse({
								name: 'huogong'
							}, target);
						}).ai = function (target) {
							return ai.get.effect(target, {
								name: 'huogong'
							}, player);
						}
						"step 3"
						if (result.bool) {
							player.logSkill('xian_zhugeke_yanwu', result.targets[0]);
							player.storage.xian_zhugeke_yanwu--;
							player.useCard({
								name: 'huogong'
							}, result.targets[0], false);
						}
						if (result.bool == false) {
							player.storage.xian_zhugeke_yanwu = 0;
						}
						"step 4"
						if (player.storage.xian_zhugeke_yanwu >= 0) {
							event.goto(1);
						}
					},
					ai: {
						effect: {
							target: function (card, player, target, current) {
								if (get.type(card) == 'equip') return 1;
							}
						}
					},
				},
				xian_zhugeke_fuxing: {
					audio:"ext:扩展ol:"+ 1,
					enable: 'phaseUse',
					usable: 1,
					filterCard: true,
					position: 'he',
					selectCard: 2,
					check: function (card) {
						if (get.tag(card, 'recover') >= 1) return 0;
						return 7 - ai.get.value(card);
					},
					filter: function (event, player) {
						return player.hp <= 3;
					},
					content: function () {
						player.recover();
					},
					ai: {
						result: {
							player: function (player) {
								return ai.get.recoverEffect(player);
							}
						},
						order: 2.5
					}
				},
		
		
			},
			translate: {
		
				wang_caiwenji: '王蔡文姬',
				wang_diaochan: '王貂蝉',
				wang_huaxiong: '王华雄',
				wang_liru: '王李儒',
				wang_lvbu: '王吕布',
		
				xian_machao: '仙马超',
				xian_taishici: '仙太史慈',
				xian_zhenji: '仙甄姬',
				xian_zhouyu: '仙周瑜',
				xian_zhugeke: '仙诸葛恪',
		
		
				//蔡文姬
				wang_caiwenji_qinbian: '琴辨',
				wang_caiwenji_qinbian_info: '出牌阶段开始时或出牌阶段结束时你可以摸一张牌，若场上女性角色数为单数或场上男性角色数为双数，你的手牌上限加一若同时满足改为加二。',
				wang_caiwenji_qidun: '奇遁',
				wang_caiwenji_qidun_info: '锁定技，不受延时锦囊和【铁索连环】影响。',
				wang_caiwenji_shuyong: '書詠',
				wang_caiwenji_shuyong_info: '出牌阶段限一次，你可令一名其他角色摸一张牌，然后其选择一项：将一张手牌交给你，并令你于此回合内使用牌时无距离和使用次数限制；或令你依次弃置其两张牌。',
				wang_caiwenji_tianwei: '天威',
				wang_caiwenji_tianwei2: '天威',
				wang_caiwenji_tianwei_info: '锁定技，武将不会被翻面或移除游戏。',
				wang_caiwenji_beifen: '悲憤',
				wang_caiwenji_beifen_info: '出牌阶段限一次，如果你攻击范围内有其他角色，你可令一名其他角色指定你攻击范围内除你以外的一名角色，并令其对你造成1点伤害，然后你视为对被指定的角色使用【杀】。',
				wang_caiwenji_beifen_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				wang_caiwenji_baonu: ' ',
				wang_caiwenji_houxian: '篌弦',
				wang_caiwenji_houxian1: '篌弦',
				wang_caiwenji_houxian2: '篌弦',
				wang_caiwenji_houxian3: '篌弦',
				wang_caiwenji_houxian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，当一名角色回复体力时，你可以弃置一张黑色手牌，防止此体力回复效果，令其进行一次判定若结果不为红色则受到无来源的1点伤害。当一名角色受到伤害时，你可以弃置一张红色手牌，防止此伤害，令你进行一次判定若结果不为黑桃令你回复1点体力，你的回合结束后若你手牌数不大于你的手牌上限数，你可以弃置所有牌将手牌补至体力数加上你所丢弃的装备数，如果此时你的手牌数不小于你体力的两倍，你可以选择一名角色，若此时你的体力值为1目标体力上限减至1，反之目标失去1点体力上限。',
				wang_caiwenji_wangyou: '忘優',
				wang_caiwenji_wangyou_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，当你对其他角色造成伤害时，你可以防止此伤害，并与其交换体力值。',
				wang_caiwenji_huizou: '回奏',
				wang_caiwenji_huizou_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，你选择一项，恢复一点体力或摸两张牌。',
				//王貂蝉
				wang_diaochan_yuanjun: '援軍',
				wang_diaochan_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				wang_diaochan_qidun: '奇遁',
				wang_diaochan_qidun_info: '锁定技，不受延时锦囊和【铁索连环】影响。',
				wang_diaochan_lipan: '離叛',
				wang_diaochan_lipan_info: '出牌阶段，你可以选择弃一张牌，并选择两名角色，若如此做，视为其中一名角色对另一名角色使用一张【决斗】，且此【决斗】不能被【无懈可击】响应，每回合限一次。',
				wang_diaochan_tianwei: '天威',
				wang_diaochan_tianwei2: '天威',
				wang_diaochan_tianwei_info: '锁定技，武将不会被翻面或移除游戏。',
				wang_diaochan_lianxiang: '憐香',
				wang_diaochan_lianxiang_info: '出牌阶段，你可以弃一张牌，若如此做，你可以观看任意一名男性角色的手牌，并可以获得其中的一张。',
				wang_diaochan_lianxiang_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				wang_diaochan_baonu: ' ',
				wang_diaochan_xiyu: '惜玉',
				wang_diaochan_xiyu_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，你不能成为黑色【杀】和锦囊的目标。',
				wang_diaochan_xiuhua: '羞花',
				wang_diaochan_xiuhua_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，回合结束阶段，你可以获得任意一名男性角色一张手牌。',
				wang_diaochan_huitian: '回天',
				wang_diaochan_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//王华雄
				wang_huaxiong_yuanjun: '援軍',
				wang_huaxiong_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				wang_huaxiong_qidun: '奇遁',
				wang_huaxiong_qidun_info: '锁定技，不受延时锦囊和【铁索连环】影响。',
				wang_huaxiong_shanshi: '擅使',
				wang_huaxiong_shanshi2: '擅使',
				wang_huaxiong_shanshi_info: '你可以额外装备任意数量的武器，你使用的【杀】造成的伤害为1+X，X为你已装备的武器数量。',
				wang_huaxiong_tianwei: '天威',
				wang_huaxiong_tianwei2: '天威',
				wang_huaxiong_tianwei_info: '锁定技，武将不会被翻面或移除游戏。',
				wang_huaxiong_xiaoshou: '梟首',
				wang_huaxiong_xiaoshou_info: '你可以立即从对你造成伤害的来源处的装备区内获得一张牌',
				wang_huaxiong_shuangren: '雙刃',
				wang_huaxiong_shuangren_info: '出牌阶段，你可以额外使用一张杀。',
				wang_huaxiong_shuangren_append: '<b><p align=center>以下为奋发技，当你体力小于等于4时发动</b>',
				wang_huaxiong_baonu: ' ',
				wang_huaxiong_fubing: '伏兵',
				wang_huaxiong_fubing_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，回合结束阶段，你可以摸两张牌。',
				wang_huaxiong_huitian: '回天',
				wang_huaxiong_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//王李儒
				wang_liru_yuanjun: '援軍',
				wang_liru_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				wang_liru_qidun: '奇遁',
				wang_liru_qidun_info: '锁定技，不受延时锦囊和【铁索连环】影响。',
				wang_liru_shipo: '识破',
				wang_liru_shipo_info: '除你以外任意角色使用锦囊对你生效以前，你可以进行判定，若为【黑色】，则该锦囊对你无效。',
				wang_liru_tianwei: '天威',
				wang_liru_tianwei2: '天威',
				wang_liru_tianwei_info: '锁定技，武将不会被翻面或移除游戏。',
				wang_liru_zhengjiao: '徵缴',
				wang_liru_zhengjiao_info: '回合结束阶段，你可以指定除你以外的任意一名角色，你立即获得该角色的一半手牌，(若目标手牌为单数，则向下取整数)。',
				wang_liru_zhengjiao_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				wang_liru_baonu: ' ',
				wang_liru_suoshi: '唆使',
				wang_liru_suoshi2: '唆使',
				wang_liru_suoshi_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，出牌阶段，可以指定除自己外任意一名角色直到你的下回合开始前，该角色成为所有伤害的来源。',
				wang_liru_yudan: '御丹',
				wang_liru_yudan_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，你可以将任意【红色】手牌当【桃】使用。',
		
				//王吕布
				wang_lvbu_liangguang: '粮广',
				wang_lvbu_liangguang_info: '摸牌阶段，你可以额外摸四张牌。',
				wang_lvbu_qidun: '奇遁',
				wang_lvbu_qidun_info: '锁定技，不受延时锦囊和【铁索连环】影响。',
				wang_lvbu_wushuang: '無雙',
				wang_lvbu_wushuang1: '無雙',
				wang_lvbu_wushuang2: '無雙',
				wang_lvbu_wushuang3: '無雙',
				wang_lvbu_wushuang_info: '锁定技，你使用【杀】时，目标需连续使用两张【杀】才能抵消，与你进行【决斗】的角色，每次需要打出两张【杀】。',
				wang_lvbu_tianwei: '天威',
				wang_lvbu_tianwei2: '天威',
				wang_lvbu_tianwei_info: '锁定技，武将不会被翻面或移除游戏。',
				wang_lvbu_fanfu: '翻覆',
				wang_lvbu_fanfu_info: '对你造成伤害的来源立即判定，若为【黑色】，目标必须打出两张【闪】，否则受到你造成的一点伤害。',
				wang_lvbu_fanfu_append: '<b><p align=center>以下为奋发技，当你体力小于等于5时发动</b>',
				wang_lvbu_baonu: ' ',
				wang_lvbu_shashen: '殺神',
				wang_lvbu_shashen_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，你使用的【杀】可以额外指定一至三个目标。',
				wang_lvbu_huitian: '回天',
				wang_lvbu_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//仙马超
				xian_machao_yuanjun: '援軍',
				xian_machao_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				xian_machao_qidun: '奇遁',
				xian_machao_qidun_info: '锁定技，你不能成为延时类锦囊的目标。',
				xian_machao_tianwei: '天威',
				xian_machao_tianwei_info: '锁定技，武将牌不会被横置或翻面。',
				xian_machao_tiedan: '鐵膽',
				xian_machao_tiedan_info: '当你使用的【杀】被抵消时，你可以立即对同一目标再使用一张【杀】。',
				xian_machao_poji: '破撃',
				xian_machao_poji2: '破撃',
				xian_machao_poji_info: '锁定技，你的红色杀不可闪避，你的♠【杀】造成的伤害+1。',
				xian_machao_yuling: '玉靈',
				xian_machao_yuling_info: '你每受到1点伤害，你可以获得伤害来源的一张手牌。',
				xian_machao_yuling_append: '<b><p align=center>以下为奋发技，当你体力小于等于4时发动</b>',
				xian_machao_baonu: ' ',
				xian_machao_langzhao: '狼召',
				xian_machao_langzhao_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，其他角色计算与你的距离时始终+1，你计算其他角色距离时始终-1。',
				xian_machao_huitian: '回天',
				xian_machao_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
		
				//仙太史慈
				xian_taishici_yuanjun: '援軍',
				xian_taishici_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				xian_taishici_qidun: '奇遁',
				xian_taishici_qidun_info: '锁定技，你不能成为延时类锦囊的目标。',
				xian_taishici_tianwei: '天威',
				xian_taishici_tianwei_info: '锁定技，武将牌不会被横置或翻面。',
				xian_taishici_tianlei: '天雷',
				xian_taishici_tianlei_info: '出牌阶段，你可用一张牌同时以所有其他角色拼点，若点数大于两名以上则赢：回合内你可以额外出一张【杀】，你每张【杀】所造成的伤害+1;若你没赢：你弃两张牌',
				xian_taishici_yiji: '義撃',
				xian_taishici_yiji_info: '你每受到1点伤害，可弃一张红色手牌令对方失去1点体力',
				xian_taishici_yiji_append: '<b><p align=center>以下为奋发技，当你体力小于等于5时发动</b>',
				xian_taishici_baonu: ' ',
				xian_taishici_zhenyuan: '鎮元',
				xian_taishici_zhenyuan2: '鎮元',
				xian_taishici_zhenyuan3: '鎮元',
				xian_taishici_zhenyuan4: '鎮元',
				xian_taishici_zhenyuan_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，出牌阶段，你每造成一点伤害，可额外出一张【杀】',
				xian_taishici_huitian: '回天',
				xian_taishici_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//仙甄姬
				xian_zhenji_yuanjun: '援軍',
				xian_zhenji_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				xian_zhenji_qidun: '奇遁',
				xian_zhenji_qidun_info: '锁定技，你不能成为延时类锦囊的目标。',
				xian_zhenji_tianwei: '天威',
				xian_zhenji_tianwei_info: '锁定技，武将牌不会被横置或翻面。',
				xian_zhenji_qinghuai: '倾懷',
				xian_zhenji_qinghuai_info: '每当你使用或打出一张【闪】时（在其结算前），可以对任意攻击范围内的一名角色使用一张【杀】。',
				xian_zhenji_qingxin: '倾心',
				xian_zhenji_qingxin_info: '你在出牌阶段没有使用或打出任何一张【杀】，回合结束阶段你可以获得任意两名角色各一张牌。',
				xian_zhenji_qingxin_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				xian_zhenji_baonu: ' ',
				xian_zhenji_mushen: '暮神',
				xian_zhenji_mushen2: '暮神',
				xian_zhenji_mushen_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，红色的【杀】对你无效，你可获得任何♥和♠的弃牌',
				xian_zhenji_huitian: '回天',
				xian_zhenji_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//仙周瑜
				xian_zhouyu_yuanjun: '援軍',
				xian_zhouyu_yuanjun_info: '摸牌阶段，你可以额外摸两张牌。',
				xian_zhouyu_qidun: '奇遁',
				xian_zhouyu_qidun_info: '锁定技，你不能成为延时类锦囊的目标。',
				xian_zhouyu_tianwei: '天威',
				xian_zhouyu_tianwei_info: '锁定技，武将牌不会被横置或翻面。',
				xian_zhouyu_poji: '魄撃',
				xian_zhouyu_poji_info: '出牌阶段，你可以令一名角色选择一种花色，抽取你的一张牌并亮出，若此牌与所选花色不同，则你对其造成一点火焰伤，然后该角色获得此牌。每回合限用一次。',
				xian_zhouyu_lianhun: '連魂',
				xian_zhouyu_lianhun2: '連魂◈铁锁',
				xian_zhouyu_lianhun3: '連魂◈重铸',
				xian_zhouyu_lianhun_info: '出牌阶段，你可以将你的任意一张♣手牌当【铁索连环】使用或重铸，每回合限一次。',
				xian_zhouyu_lianhun_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				xian_zhouyu_baonu: ' ',
				xian_zhouyu_yuhun: '玉魂',
				xian_zhouyu_yuhun_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，黑色的【杀】对你无效，你不能成为♠或♣锦囊的目标。',
				xian_zhouyu_huitian: '回天',
				xian_zhouyu_huitian_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，锁定技，回合开始阶段，恢复一点体力。',
		
				//仙诸葛恪
				xian_zhugeke_tianbing: '天兵',
				xian_zhugeke_tianbing_info: '摸牌阶段，你可以额外摸三张牌。',
				xian_zhugeke_qidun: '奇遁',
				xian_zhugeke_qidun_info: '锁定技，你不能成为延时类锦囊的目标。',
				xian_zhugeke_tianwei: '天威',
				xian_zhugeke_tianwei_info: '锁定技，武将牌不会被横置或翻面。',
				xian_zhugeke_shenzhi: '神秩',
				xian_zhugeke_shenzhi_info: '出牌阶段，你可弃一张手牌，令所有其他角色展示一张相同颜色的手牌，否则受到你造成的1点伤害。',
				xian_zhugeke_huling: '護靈',
				xian_zhugeke_huling_info: '你每受到1点伤害，可令任意一名角色二选一，交给你一张♥牌或弃两张牌。',
				xian_zhugeke_huling_append: '<b><p align=center>以下为奋发技，当你体力小于等于3时发动</b>',
				xian_zhugeke_baonu: ' ',
				xian_zhugeke_yanwu: '焰舞',
				xian_zhugeke_yanwu_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，你每次去一张装备区里的牌，视为向任意一名角色使用了一张【火攻】',
				xian_zhugeke_fuxing: '復興',
				xian_zhugeke_fuxing_info: '<span class="bluetext" style="color:#EE0000">奋发技' + '</span>，出牌阶段，你可以弃两张牌，然后回复一点体力',
		
		
		
			},
		}, '<span>王者之战</span>');
	};
	if(lib.config.mode=='wangzhezhizhan'?
	(lib.config['extension_扩展ol_wzzz_qqwz_disable']!=true||lib.config['extension_扩展ol_wzzz_ytjs_disable']!=true):
	(lib.config['extension_扩展ol_wzzz_qqwz_enable']!=false||lib.config['extension_扩展ol_wzzz_qqwz_enable']!=false)){
		var kzol_sgs={ //取自极略三国，用于千秋万载包、一统江山包
			ai:{
				skill:{
					lose_equip:'xiaoji|xuanfeng',
					need_kongcheng:'shangshix|shangshi|sgk_ruya|sgk_qicai|lianying|relianying|kongcheng|sijian|hengzheng',
					rejudge:'guicai|sgk_guicai|guidao|jilve|nos_zhenlie|huanshi|midao',
					save:'sgk_guagu|sgk_fangxin|sgk_renxin|jijiu|buyi|chunlao|longhun|sgk_longhun',
					need_card:'sgk_youdi|sgk_rende|sgk_liuyun|sgk_yansha|sgk_huiqu|sgk_zhaoxiang|kanpo|guicai|sgk_guicai|guidao|beige|xiaoguo|liuli|tianxiang|jijiu|leiji|releiji|qingjian|zhuhai|qinxue|danji',
					recover:'sgk_liuyun|sgk_zhishi|rerende|rende|kuanggu|zaiqi|jieyin|qingnang|yinghun|hunzi|shenzhi|longhun|zishou|ganlu|xueji|shangshi|chengxiang|buqu|quji',
					use_lion:'longhun|duanliang|qixi|guidao|relijian|lijian|xinjujian|jujian|zhiheng|mingce|yongsi|fenxun|gongqi|yinling|jilve|qingcheng',
					need_equip:'shensu|mingce|jujian|sgk_liuyun|beige|yuanhu|huyuan|gongqi|gongji|yanzheng|qingcheng|longhun|shuijian|yinbing',
					straight_damage:'sgk_chouxi|sgk_zhishi|qiangxi|duwu|danshou',
					double_sha:'paoxiao|fuhun|tianyi|xianzhen|zhaxiang|lihuo|jiangchi|shuangxiong|qiangwu|luanji',
					need_maxhp:'sgk_ruya|yingzi|zaiqi|yinghun|hunzi|juejing|ganlu|zishou|miji|chizhong|xueji|quji|xuehen|jushou|tannang|fangzhu|shangshi|miji',
					bad_skills:'benghuai|sgk_wumou|shiyong|sgk_shiyong|yaowu|chanyuan|chouhai',
					break_sha:'sgk_zhaoxiang|sgk_yansha',
					maixie_skill:'guixin|yiji|fankui|jieming|xuehen|neoganglie|ganglie|vsganglie|enyuan|fangzhu|nosenyuan|langgu|quanji|zhiyu|renjie|tanlan|tongxin|huashen|duodao|chengxiang|benyu',
				}
			},
			sort:{
				hp:function(a,b){
					var c1=a.hp;
					var c2=b.hp;
					if(c1==c2){
						return kzol_sgs.sort.threat(a,b);
					}
					return c1>c2;
				},
				handcard:function(a,b){
					var c1=a.num('h');
					var c2=b.num('h');
					if(c1==c2){
						return kzol_sgs.sort.defense(a,b);
					}
					return c1<c2;
				},
				value:function(a,b){
					return kzol_sgs.getValue(a)<kzol_sgs.getValue(b);
				},
				chaofeng:function(a,b){
					return kzol_sgs.getDefense(a)>kzol_sgs.getDefense(b);
				},
				defense:function(a,b){
					return kzol_sgs.getDefenseSha(a)<kzol_sgs.getDefenseSha(b);
				},
				threat:function(a,b){
					var d1=a.num('h');
					for(var i=0;i<game.players.length;i++){
						if(a.canUse('sha',game.players[i])&&a!=game.players[i]){
							d1=d1+10/(kzol_sgs.getDefense(game.players[i]))
						}
					}
					var d2=b.num('h');
					for(var i=0;i<game.players.length;i++){
						if(b.canUse('sha',game.players[i])&&b!=game.players[i]){
							d2=d2+10/(kzol_sgs.getDefense(game.players[i]))
						}
					}
					return d1>d2;
				}
			},
			isKongcheng:function(player){
				return player.num('h')==0;
			},
			needKongcheng:function(player,keep){
				if(keep){
					return kzol_sgs.isKongcheng(player)&&(player.hasSkill('kongcheng')||(player.hasSkill('zhiji')&&!player.storage.zhiji));
				}
				if(!kzol_sgs.hasLoseHandcardEffective(player)&&!kzol_sgs.isKongcheng(player)) return true;
				if(player.hasSkill('zhiji')&&!player.storage.zhiji) return true;
				return player.hasSkills(kzol_sgs.ai.skill.need_kongcheng);
			},
			hasBaguaEffect:function(player){
				if(player.num('e','bagua')) return true;
				if(player.hasSkill('bazhen')&&!player.get('e','2')) return true;
				if(player.hasSkill('linglong')&&!player.get('e','2')) return true;
				return false;
			},
			hasBuquEffect:function(player){
				if(player.hasSkill('buqu')){
					if(player.storage.buqu==undefined) return true;
					if(player.storage.buqu&&player.storage.buqu.length<=4) return true;
					return false;
				}
				return false;
			},
			hasZhuqueEffect:function(player){
				var cards=player.get('h');
				for(var i=0;i<cards.length;i++){
					if(cards[i].name=='sha'&&cards[i].nature=='fire') return true;
					if(player.num('e','zhuque')&&cards[i].name=='sha'&&!cards[i].nature) return true;
				}
				return false;
			},
			hasJiuEffect:function(player){
				if(player.hasSkills('jiu|boss_zuijiu|luoyi2|reluoyi2|jie|nuzhan2|anjian|sgk_huxiao|sgk_jiwu_buff1|sgk_wenjiu3')) return true;
				if(player.hasSkills('sgk_ganglie_damage|sgk_fenwei')) return true;
				if(player.hasSkill('jieyuan')&&player.num('h')>=2)
				if(player.hasSkill('chouhai')&&kzol_sgs.isKongcheng(player)) return true;
				if(player.hasSkill('qingxi')){
					var num=1;
					var info=get.info(player.get('e','1'));
					if(info&&info.distance&&info.distance.attackFrom){
						num-=info.distance.attackFrom;
					}
					return num>1;
				}
				return false;
			},
			hasWushuangEffect:function(player){
				if(player.hasSkills('wushuang|sgk_shejing')) return true;
				return false;
			},
			hasZhugeEffect:function(player){
				if(player.num('e','zhuge')) return true;
				if(player.hasSkills('paoxiao|tianyi2|zhanlong2|xianzhen2|sgk_shayi')) return true;
				return false;
			},
			loseCardEffect:function(player){	
				if(kzol_sgs.needKongcheng(player)) return 3;
				if(kzol_sgs.getLeastHandcardNum(player)>0) return 1;
				return -player.num('h');
			},
			gainCardEffect:function(player){
				if(kzol_sgs.needKongcheng(target,true)) return -1;
				if(kzol_sgs.getOverflow(player)) return 0;
				return 3;
			},
			getLeastHandcardNum:function(player){
				var least=0;
				if(player.hasSkills('lianying|relianying')&&least<1) least=1;
				if(player.hasSkill('sgk_ruya')&&least<player.maxHp) least=player.maxHp;
				if(player.hasSkill('shangshix')&&least<4) least=4;
				var jwfy=kzol_sgs.findPlayerBySkillName('shoucheng');
				if(least<1&&jwfy&&kzol_sgs.isFriend(player,jwfy)) least = 1;
				if(player.hasSkill('shangshi')&&least<Math.min(2,kzol_sgs.getLostHp(player))) least=Math.min(2,kzol_sgs.getLostHp(player));
				return least;
			},
			hasLoseHandcardEffective:function(player){
				return player.num('h')>kzol_sgs.getLeastHandcardNum(player);
			},
			isWeak:function(player){
				if(kzol_sgs.hasBuquEffect(player)) return false;
				if(player.hasSkill('longhun')&&player.num('he')>2) return false;
				if(player.hasSkill('sgk_longhun')&&player.num('he')>2) return false;
				if(player.hasSkill('hunzi')&&!player.storage.hunzi&&player.hp>1) return false;
				if((player.hp<=2&&player.num('h')<=2)||player.hp<=1) return true;
				return false;
			},
			getLostHp:function(player){
				return player.maxHp-player.hp;
			},
			getBestHp:function(player){
				var arr={
					ganlu:1,yinghun:2,xueji:1,
					baobian:Math.max(0,player.maxHp-3),
				};
				if(player.hasSkill('longhun')&&player.num('he')>2) return 1;
				if(player.hasSkill('hunzi')&&!player.storage.hunzi) return 2;
				for(var i in arr){
					if(player.hasSkill(i)){
						return Math.max((player.isZhu&&3||2),player.maxHp-arr[i])
					}
				}
				if(player.hasSkill('renjie')&&player.hasSkill('sbaiyin')) return player.maxHp-1;
				if(player.hasSkill('quanji')&&player.hasSkill('zili')) return player.maxHp-1;
				return player.maxHp;
			},
			getValue:function(player){
				return player.hp*2 + player.num('h');
			},
			isGoodHp:function(player){
				if(player.hp>1||kzol_sgs.getCardsNum('tao',player)>=1||kzol_sgs.getCardsNum('jiu',player)>=1) return true;
				if(kzol_sgs.hasBuquEffect(player)) return true;
				if(player.hasSkill('niepan')&&!player.storage.niepan) return true;
				if(player.hasSkill('reniepan')&&!player.storage.reniepan) return true;
				if(player.hasSkill('sgk_zhuizun')&&!player.storage.sgk_zhuizun) return true;
				if(player.hasSkill('fuli')&&!player.storage.fuli) return true;
				return false;
			},
			isScure:function(player){
				if(player.hp>kzol_sgs.getBestHp(player)) return true;
				if(kzol_sgs.countCanShaMe(player)<=0) return true;
				if(kzol_sgs.isGoodHp(player)) return true;
				return false;
			},
			needBear:function(player){
				return (player.hasSkill('renjie')&&player.hasSkill('sbaiyin')&&!player.hasSkill('jilue')&&player.storage.renjie<4)||(player.hasSkill('qinxue')&&!player.storage.qinxue);
			},
			cardNeed:function(card,player){
				if(player==undefined||get.itemtype(player)!='player') player=get.owner(card);
				var friends=kzol_sgs.getFriends(player).sort(kzol_sgs.sort.hp);
				if(!friends.length) return null;
				if(card.name=='tao'){
					friends.sort(kzol_sgs.sort.hp);
					if(friends[0].hp<2) return 10;
					if(player.hp<3||(kzol_sgs.getLostHp(player)>1&&!player.hasSkills('longhun|buqu|sgk_longhun'))||player.hasSkills('kurou|benghuai')) return 14;
					return kzol_sgs.getUseValue(card,player);
				}
				var wuguotai=kzol_sgs.findPlayerBySkillName('buyi');
				if(wuguotai&&kzol_sgs.isFriend(player,wuguotai)&&get.type(card)!='basic'){
					if(player.hp<3||(kzol_sgs.getLostHp(player)>1&&!player.hasSkills('longhun|buqu|sgk_longhun'))||player.hasSkills('kurou|benghuai')) return 13;
				}
				if(kzol_sgs.isWeak(player)&&card.name=='shan'&&kzol_sgs.getCardsNum('shan',player,player)<1) return 12;
				return 0;
			},
			getOverflow:function(player,getMaxCards){
				var kingdom_num=0;
				if(player.hasSkill('yongsi')&&_status.currentPhase==player&&!(player.hasSkill('keji')&&get.cardCount({name:'sha'},player)==0)){
					var list=['wei','shu','wu','qun'];
					for(var i=0;i<game.players.length&&list.length;i++){
						if(list.contains(game.players[i].group)){
							list.remove(game.players[i].group);
							kingdom_num++;
						}
					}
				}
				var MaxCards=0;
				if(player.hasSkill('qiaobian')) MaxCards=Math.max(player.num('h')-1,player.getHandcardLimit());
				if(player.hasSkill('keji')&&get.cardCount({name:'sha'},player)==0) MaxCards=player.num('h');
				if(getMaxCards&&MaxCards>0) return MaxCards;
				MaxCards=player.getHandcardLimit();
				if(kingdom_num>0){
					if(player.num('he')<=kingdom_num) MaxCards=0;
					else MaxCards=Math.min(player.getHandcardLimit(),player.num('he')-kingdom_num);
					if(getMaxCards) return MaxCards;
				}
				if(getMaxCards) return player.getHandcardLimit();
				return player.num('h')-MaxCards;
			},
			willSkipPhaseUse:function(player){
				var friend_wuxie=0;
				for(var i=0;i<game.players.length;i++){
					if(kzol_sgs.isFriend(player,game.players[i])) friend_wuxie=friend_wuxie+kzol_sgs.getCardsNum('wuxie',game.players[i],player);
					if(kzol_sgs.isEnemy(player,game.players[i])) friend_wuxie=friend_wuxie-kzol_sgs.getCardsNum('wuxie',game.players[i],player);
				}
				if(player.skipList.contains('phaseUse')) return true;
				if(player.hasJudge('lebu')&&!player.hasSkill('yanxiao2')&&friend_wuxie<=0){
					if(!player.hasSkills('zongshi|keji|guanxing|qiaobian')&&player.num('h')>=player.hp+1) return true;
					return false;
				}
				return false;
			},
			willSkipPhaseDraw:function(player){
				var friend_wuxie=0;
				for(var i=0;i<game.players.length;i++){
					if(kzol_sgs.isFriend(player,game.players[i])) friend_wuxie=friend_wuxie+kzol_sgs.getCardsNum('wuxie',game.players[i],player);
					if(kzol_sgs.isEnemy(player,game.players[i])) friend_wuxie=friend_wuxie-kzol_sgs.getCardsNum('wuxie',game.players[i],player);
				}
				if(player.hasJudge('bingliang')&&!player.hasSkill('yanxiao2')&&friend_wuxie<=0){
					if(!player.hasSkills('guanxing|qiaobian')&&player.num('h')<=player.hp+2) return true;
					return false;
				}
				if(player.skipList.contains('phaseDraw')) return true;
				return false;
			},
			getViewAsCard:function(card,player){
				var skills=player.get('s',true).concat(lib.skill.global);
				game.expandSkills(skills);
				var list=[];
				for(var i=0;i<skills.length;i++){
					var ifo=get.info(skills[i]);
					if(ifo.viewAs&&ifo.viewAs.name&&ifo.filterCard){
						var filtercard=get.filter(ifo.filterCard);
						var pos=kzol_sgs.getCardPlace(card);
						if((ifo.selectCard==1||ifo.selectCard==undefined)&&filtercard(card,player)&&((ifo.position&&ifo.position.indexOf(pos)==0)||!ifo.position&&pos=='h')){
							return game.createCard({name:ifo.viewAs.name,suit:card.suit,number:card.number});
						}
					}
				}
				return null;
			},
			getSkillViewCard:function(card,name,player,place){
				var skills=player.get('s',true).concat(lib.skill.global);
				game.expandSkills(skills);
				for(var i=0;i<skills.length;i++){
					var ifo=get.info(skills[i]);
					if(ifo.viewAs&&ifo.viewAs.name==name){
						if(ifo.filterCard){
							var filtercard=get.filter(ifo.filterCard);
							if(filtercard(card,player)&&(ifo.selectCard==1||ifo.selectCard==undefined)){
								if(ifo.position&&ifo.position.indexOf(place)==0) return true;
								if(!ifo.position) return place=='h';
							}
						}
					}
				}
				return false;
			},
			getCardPlace:function(card){
				var owner=get.owner(card);
				if(owner){
					if(owner.get('h').contains(card)) return 'h';
					if(owner.get('e').contains(card)) return 'e';
					if(owner.get('j').contains(card)) return 'j';
					return 's';
				}
				return 's';
			},
			isCard:function(name,card,player){
				if(!player||!card) return false;
				if(card.name!=name){
					var owner=get.owner(card);
					var place;
					if(!owner||player!=owner){
						place='h';
					}
					else{
						place=kzol_sgs.getCardPlace(card);
					}
					if(kzol_sgs.getSkillViewCard(card,name,player,place)) return true;
					if(player.hasSkill('wushen')&&get.suit(card)=='heart'&&card.name!='sha') return false;
					if(player.hasSkill('jinjiu')&&card.name=='jiu') return true;
				}
				else{
					if(player.hasSkill('wushen')&&get.suit(card)=='heart'&&card.name=='sha') return true;
					if(player.hasSkill('jinjiu')&&card.name=='jiu') return true;
					if(lib.filter.cardUsable(card,player)) return true;
				}
				return false;
			},
			getKnownCard:function(player,from,card_name,viewAs,flags){
				flags=flags||'h';
				var forbid=false;
				if(!from&&player==_status.event.player) forbid=true;
				from=from||_status.event.player;
				var cards=player.get(flags);
				var know=0;
				for(var i=0;i<cards.length;i++){
					var card=cards[i];
					if((!forbid&&player==from)){
						if((viewAs&&kzol_sgs.isCard(card_name,card,player))||card.name==card_name||get.suit(card)==card_name||get.color(card)==card_name){
							know++;
						}
					}
				}
				return know;
			},
			getDefenseSha:function(player,attacker){
				if(attacker==undefined||get.itemtype(attacker)!='player') attacker=_status.event.player;
				var defense=kzol_sgs.getCardsNum('shan',player,attacker);
				var knownShan=kzol_sgs.getKnownCard(player,attacker,'shan',true);
				
				defense = defense + knownShan * 1.2;
				
				if(attacker.hasSkill('liegong')){
					var length=player.num('h');
					if(length>=attacker.hp||length<=get.attackRange(attacker)) return 0;
				}
				if(attacker.hasSkill('reliegong')){
					var num=0;
					if(player.num('h')>=attacker.num('h')) num++;
					if(player.hp>=attacker.hp) num++;
					if(get.attackRange(player)<=get.attackRange(attacker)) num++;
					if(num>0) return 0;
				}
				
				if(kzol_sgs.hasBaguaEffect(player)){
					defense+=1.3;
					if(player.hasSkill('tiandu')) defense+=0.6;
					if(player.hasSkill('leiji')) defense+=0.4;
					if(player.hasSkill('boss_leiji')) defense+=0.5;
					if(player.hasSkill('releiji')) defense+=0.4;
					if(player.hasSkill('hongyan')) defense+=0.2;
				}
				
				if(kzol_sgs.getCardsNum('shan',player,_status.event.player)>1){
					if(player.hasSkill('mingzhe')) defense+=0.2;
					if(player.hasSkill('tuntian')&&player.hasSkill('zaoxian')) defense+=1.5;
				}
				
				if(player.hasSkill('aocai')&&_status.currentPhase!==player) defense+=0.5;
				if(player.hasSkill('sgk_zhenlie')) defense+=0.5;
				if(player.hasSkill('sgk_danshou')&&!kzol_sgs.isKongcheng(player)&&!kzol_sgs.isKongcheng(attacker)) defense+=0.5;
				
				var sgksk_zhuran=kzol_sgs.findPlayerBySkillName('sgk_yonglie');
				if(sgksk_zhuran&&kzol_sgs.isGoodHp(sgksk_zhuran)){
					if(get.distance(sgksk_zhuran,player,'attack')<=1&&kzol_sgs.isFriend(player,sgksk_zhuran)) defense+=0.5;
				}
				var sgksr_zhangliao=kzol_sgs.findPlayerBySkillName('sgk_yansha');
				if(sgksr_zhangliao&&sgksr_zhangliao.storage.sgk_yansha2&&sgksr_zhangliao.storage.sgk_yansha2.length){
					if(kzol_sgs.isFriend(player,sgksr_zhangliao)&&ai.get.attitude(sgksr_zhangliao,attacker)<0&&attacker.num('he')) defense+=0.5;
				}
				
				if(player.hasZhuSkill('hujia')){
					var caocao=player;
					var list=game.filterPlayer(function(target){
						return kzol_sgs.isFriend(target,caocao)&&target.group=='wei'&&target!=caocao;
					});
					if(list.length>0){
						var hujiaShan=0;
						for(var i=0;i<list.length;i++){
							hujiaShan+=kzol_sgs.getCardsNum('shan',list[i],_status.event.player);
							if(kzol_sgs.hasBaguaEffect(list[i])) hujiaShan+=0.8;
						}
						defense+=hujiaShan;
					}
				}
				defense = defense + Math.min(player.hp*0.45,10);
				if(attacker&&!attacker.hasSkill('jueqing')){
					if(player.hasSkillTag('maixie')&&kzol_sgs.isGoodHp(player)) defense++;
					
					if(player.hasSkill('jieming')) defense+=4;
					if(player.hasSkills('yiji|sgk_yiji')) defense+=4;
					if(player.hasSkill('guixin')) defense+=4;
					if(player.hasSkill('yuce')) defense+=2;
				}
				
				if(player.hasSkills('rende|rerende')&&player.hp>2) defense++;
				if(player.hasSkill('kuanggu')&&player.hp>1) defense+=0.2;
				if(player.hasSkill('tianming')&&player.hp>1) defense+=0.1;
				if(player.hasSkills('zaiqi|rezaiqi')&&player.hp>1) defense+=0.35;
				if(player.hp>kzol_sgs.getBestHp(player)) defense+=0.8;
				if(player.hp<=2) defense-=0.4;
				if(player.hasSkill('tianxiang')) defense+=player.num('h')*0.5;
				
				if(player.num('e','tengjia')&&kzol_sgs.hasZhuqueEffect(attacker)&&!attacker.hasSkill('unequip')) defense-=0.6;
				if(player.isZhu){
					defense-=0.4;
					if(kzol_sgs.isZhuInDanger()) defense-=0.7;
				}
				if(player.isTurnedOver()&&!player.hasSkill('sgk_youxia')) defense-=0.35;
				
				if(player.num('j','lebu')&&!player.hasSkill('yanxiao2')) defense-=0.15;
				if(player.num('j','bingliang')&&!player.hasSkill('yanxiao2')) defense-=0.15;
				if(player.num('j','caomu')&&!player.hasSkill('yanxiao2')) defense-=0.15;
				
				if((attacker.hasSkill('roulin')&&player.sex=='female')||(attacker.sex=='female'&&player.hasSkill('roulin'))) defense = defense - 2.4;
				
				if(!kzol_sgs.hasBaguaEffect(player)){
					if(player.hasSkill('jijiu')) defense-=3;
					if(player.hasSkill('dimeng')) defense-=2.5;
					if(player.hasSkill('guzheng')&&!kzol_sgs.getCardsNum('shan',player,attacker)) defense-=2.5;
					if(player.hasSkill('qiaobian')) defense-=2.4;
					if(player.hasSkill('jieyin')) defense-=2.3;
					if(player.hasSkills('lijian|sgk_lijian')) defense-=2.2;
				}
				return defense;
			},
			getDefense:function(player){
				if(player==undefined||get.itemtype(player)!='player'){
					return 0;
				}
				var current_player=_status.event.player;
				if(!current_player) return kzol_sgs.getValue(player);
				
				var defense=kzol_sgs.getValue(player);
				
				if(player.get('e','2')) defense+=2;
				if(player.get('e','3')) defense++;
				if(player.num('e','muniu')&&player.get('e','5').cards) defense+=player.get('e','5').cards.length;
				
				if(kzol_sgs.hasBaguaEffect(player)){
					if(player.hasSkill('tiandu')) defense++;
					if(player.hasSkill('leiji')) defense+=2;
					if(player.hasSkill('boss_leiji')) defense+=2;
					if(player.hasSkill('releiji')) defense+=2;
					if(player.hasSkill('hongyan')) defense+=2;
				}
				var maixie=kzol_sgs.ai.skill.maixie_skill.split("|");
				for(var i=0;i<maixie.length;i++){
					if(player.hasSkill(maixie[i])&&kzol_sgs.isGoodHp(player)) defense++;
				}
				
				if(player.hasSkill('jieming')) defense+=3;
				if(player.hasSkills('yiji|sgk_yiji')) defense+=3;
				if(player.hasSkill('guixin')) defense+=game.players.length-1;
				if(player.hasSkill('yuce')) defense+=2;
				if(player.hasSkill('chengxiang')) defense++;
				
				if(player.hasZhuSkill('shichou')){
					var current=kzol_sgs.findPlayerBySkillName('shichou_dying');
					if(current) defense+=current.hp;
				}
				
				if(player.hasSkill('rende')&&player.num('h')>1&&player.hp>2) defense++;
				if(player.hasSkill('rerende')&&player.num('h')>1&&player.hp>2) defense++;
				if(player.hasSkill('kuanggu')&&player.hp>1) defense+=0.5;
				if(player.hasSkill('diykuanggu')&&player.hp>1) defense+=0.5;
				if(player.hasSkill('zaiqi')&&player.hp>1) defense=defense+((player.maxHp-player.hp)*0.5);
				if(player.hasSkill('tianming')) defense+=0.5;
				if(player.hasSkill('keji')) defense+=player.num('h')*0.25;
				if(player.hasSkill('aocai')&&_status.currentPhase!==player) defense+=0.5;
				if(player.hasSkill('tianxiang')) defense+=player.num('h')*0.5;
				
				if(player.hp>kzol_sgs.getBestHp(player)) defense+=0.8;
				if(player.hp<=2) defense=defense-0.4;
				if(player.hasSkill('benghuai')&&player.maxHp<=5) defense--;
				if(player.hasSkills(kzol_sgs.ai.skill.bad_skills)) defense--;
				
				if(player.isZhu){
					defense = defense - 0.4;
					if(kzol_sgs.isZhuInDanger()) defense = defense - 0.7;
				}
				
				var invaliditySkill=['yijue','boss_hujia','retieji','pozhou','sgk_zhenhun'];
				for(var i=0;i<invaliditySkill.length;i++){
					if(player.disabledSkills[invaliditySkill[i]]&&player.disabledSkills[invaliditySkill[i]].length>0)
						defense-=5;
				}
				
				if(player.isTurnedOver()) defense--;
				
				if(player.num('j','lebu')&&!player.hasSkill('yanxiao2')) defense-=0.5;
				if(player.num('j','bingliang')&&!player.hasSkill('yanxiao2')) defense-=0.5;
				if(player.num('j','caomu')&&!player.hasSkill('yanxiao2')) defense-=0.5;
				
				if(player.hasSkill('jijiu')) defense+=2;
				if(player.hasSkill('qingnang')) defense+=2;
				if(player.hasSkill('dimeng')) defense+=2.5;
				if(player.hasSkill('guzheng')) defense+=2.5;
				if(player.hasSkill('qiaobian')) defense+=2.4;
				if(player.hasSkill('jieyin')) defense+=2.3;
				if(player.hasSkills('sgk_lijian|lijian')) defense+=2.1;
				if(player.hasSkill('yishe')) defense+=2;
				if(player.hasSkill('paiyi')) defense+=1.5;
				if(player.hasSkill('yongsi')) defense+=2;
				
				defense=defense + (game.players.length - (get.distance(player,_status.currentPhase,'absolute'))%game.players.length)/4;
				
				defense=defense + player.get('s').length*0.25;
				
				return defense;
			},
			findCardInCardPile:function(name){
				var card;
				for(var i=0;i<ui.cardPile.childNodes.length;i++){
					card=ui.cardPile.childNodes[i];
					if(typeof name=='string'){
						if(card.name==name){
							return card;
						}
					}
					else if(typeof name=='function'){
						if(name(card)){
							return card;
						}
					}
				}
				return null;
			},
			findCardInDiscardPile:function(name){
				var cards=[];
				var card=false;
				for(var i=0;i<ui.discardPile.childNodes.length;i++){
					card=ui.discardPile.childNodes[i];
					if(typeof name=='string'){
						if(card.name==name){
							return card;
						}
					}
					else if(typeof name=='function'){
						if(name(card)){
							return card;
						}
					}
					else{
						cards=cards.concat(card);
					}
				}
				if(cards.length) return cards.randomGet();
				return null;
			},
			isZhuHealthy:function(){
				var zhu = get.zhu();
				if(!zhu) return false;
				var zhu_hp;
				if(zhu.hasSkill('benghuai')&&zhu.hp>4){
					zhu_hp = 4;
				}
				else{
					zhu_hp = zhu.hp;
				}
				return zhu_hp > 3||(zhu_hp>2&&kzol_sgs.getDefense(zhu)>3);
			},
			isZhuInDanger:function(){
				var zhu = get.zhu();
				if(!zhu) return false;
				var zhu_hp;
				if(zhu.hasSkill('benghuai')&&zhu.hp>4){
					zhu_hp = 4;
				}
				else{
					zhu_hp = zhu.hp;
				}
				return zhu_hp<3;
			},
			findPlayerBySkillName:function(skills){
				return game.findPlayer(function(player){
					return player.hasSkills(skills);
				});
			},
			isFriend:function(other,another){
				return ai.get.attitude(other,another)>0;
			},
			isEnemy:function(other,another){
				return ai.get.attitude(other,another)<0;
			},
			getFriends:function(player){
				return game.filterPlayer(function(target){
					return kzol_sgs.isFriend(player,target);
				});
			},
			getFriendsNoself:function(player){
				return game.filterPlayer(function(target){
					return kzol_sgs.isFriend(player,target)&&player!=target;
				});
			},
			getEnemies:function(player){
				return game.filterPlayer(function(target){
					return kzol_sgs.isEnemy(player,target);
				});
			},
			filterFriend:function(player,func){
				var friends=kzol_sgs.getFriends(player);
				for(var i=0;i<friends.length;i++){
					if(func(friends[i])){
						return game.players[i];
					}
				}
				return null;
			},
			filterFriends:function(player,func){
				var list=[];
				var friends=kzol_sgs.getFriends(player);
				for(var i=0;i<friends.length;i++){
					if(func(friends[i])){
						list.push(game.players[i]);
					}
				}
				return list;
			},
			filterEnemy:function(player,func){
				var enemies=kzol_sgs.getEnemies(player);
				for(var i=0;i<enemies.length;i++){
					if(func(enemies[i])){
						return game.players[i];
					}
				}
				return null;
			},
			filterEnemies:function(player,func){
				var list=[];
				var enemies=kzol_sgs.getEnemies(player);
				for(var i=0;i<enemies.length;i++){
					if(func(enemies[i])){
						list.push(game.players[i]);
					}
				}
				return list;
			},
			countFriends:function(player){
				return game.countPlayer(function(target){
					return kzol_sgs.isFriend(player,target)&&target!=player;
				});	
			},
			countEnemies:function(player){
				return game.countPlayer(function(target){
					return kzol_sgs.isEnemy(player,target);
				});	
			},
			countNextEmenies:function(from,to){
				var num=0;
				var current=from.getNext();
				for(var i=0;i<10&&current!=to;i++){
					if(kzol_sgs.isEnemy(to,current)){
						num++;
					}
					current=current.getNext();
				}
				return num;
			},
			getNextEmenies:function(from,to){
				var list=[];
				var current=from.getNext();
				for(var i=0;i<10&&current!=to;i++){
					if(kzol_sgs.isEnemy(to,current)){
						list.push(current);
					}
					current=current.getNext();
				}
				return list;
			},
			countCanShaMe:function(player){
				return game.countPlayer(function(target){
					return kzol_sgs.isEnemy(player,target)&&target.canUse('sha',player)&&ai.get.effect(target,{name:'sha'},player)>0;
				});
			},
			getCanShaMe:function(player){
				return game.filterPlayer(function(target){
					return kzol_sgs.isEnemy(player,target)&&target.canUse('sha',player)&&ai.get.effect(player,{name:'sha'},target)>0;
				});
			},
			getWillShaTarget:function(player){
				var target=game.filterPlayer(function(target1){
					return player.canUse('sha',target1)&&ai.get.effect(target1,{name:'sha'},player)>0;
				});
				target.sort(function(a,b){
					return ai.get.effect(a,{name:'sha'},player)<ai.get.effect(a,{name:'sha'},player);
				});
				return target[0];
			},
			getCardsNum:function(class_name,player,from){
				if(player==undefined||get.itemtype(player)!='player') player=_status.event.player;
				var cards=player.get('h');
				if(player.num('e','muniu')&&player.get('e','5').cards&&player.get('e','5').cards.length){
					cards=cards.concat(player.get('e','5').cards);
				}
				var num=0,shownum=0,redtao=0,redsha=0,rencard=0,blackcard=0,blackwuxie=0,equipwuxie=0;
				var equipcard=0,heartsha=0,hearttao=0,spadewuxie=0,spadejiu=0,spadecard=0,diamondcard=0;
				var clubcard=0,shashan = 0,jiunum=0;
				var forbid=false;
				if(!from&&_status.event.player!=player) forbid=true;
				from=from||_status.event.player;
				for(var i=0;i<cards.length;i++){
					var card=cards[i];
					if(!forbid&&player==from){
						shownum++;
						if(card.name==class_name) num++;
						if(card.name=='jiu') jiunum++;
						if(get.type(card)=='equip') equipcard++;
						if(card.name=='sha'||card.name=='shan') shashan++;
						if(get.color(card)=='red'){
							rencard++;
							if(card.name!='sha') redsha++;
							if(card.name!='tao') redtao++;
						}
						if(get.color(card)=='black'){
							blackcard++;
							if(card.name!='wuxie') blackwuxie++;
						}
						if(get.suit(card)=='heart'){
							if(card.name!='sha') heartsha++;
							if(card.name!='tao') redtao++;
						}
						if(get.suit(card)=='spade'){
							if(card.name!='wuxie') spadewuxie++;
							if(card.name!='jiu') spadejiu++;
						}
						if(get.suit(card)=='diamond'&&card.name!='sha') diamondcard++;
						if(get.suit(card)=='club') clubcard++;
					}
				}
				var ecards=player.get('e');
				for(var i=0;i<ecards.length;i++){
					var card=ecards[i];
					equipcard++;
					if(player.num('h')>player.hp) equipwuxie++;
					if(get.color(card)=='red'){
						redtao++;redsha++;
					}
					if(get.suit(card)=='heart') hearttao++;
					if(get.suit(card)=='spade') spadecard++;
					if(get.suit(card)=='diamond') diamondcard++;
					if(get.suit(card)=='club') clubcard++;
				}
				if(class_name=='sha'){
					var shanum;
					if(player.hasSkill('wusheng')){
						shanum=redsha+num+(player.num('h')-shownum)*0.69;
					}
					if(player.hasSkill('shizhi')&&player.hp==1){
						shanum=shashan+(player.num('h')-shownum)*0.3;
					}
					else if(player.hasSkill('wushen')){
						shanum=heartsha+num+(player.num('h')-shownum)*0.5;
					}
					else if(player.hasSkill('jinjiu')){
						shanum=jiunum+num+(player.num('h')-shownum)*0.5;
					}
					else if(player.hasSkills('longhun|sgk_longhun')){
						shanum=diamondcard+num+(player.num('h')-shownum)*0.5;
					}
					else if(player.hasSkill('nos_gongji')){
						shanum=equipcard+num+(player.num('h')-shownum)*0.5;
					}
					else if(player.hasSkills('longdan|chixin')){
						shanum=shashan+(player.num('h')-shownum)*0.72;
					}
					else if(player.num('e','zhangba')){
						shanum=num+(player.num('h')-shownum)*0.2;
					}
					else{
						shanum=num+(player.num('h')-shownum)*0.35;
					}
					return (kzol_sgs.hasWushuangEffect(player)&&shanum*2)||shanum;
				}
				else if(class_name=='shan'){
					if(player.hasSkill('qingguo')){
						return blackcard+num+(player.num('h')-shownum)*0.8;
					}
					else if(player.hasSkills('longdan|chixin')){
						return shashan+(player.num('h')-shownum)*0.72;
					}
					else if(player.hasSkills('longhun|sgk_longhun')){
						return clubcard+num+(player.num('h')-shownum)*0.65;
					}
					else if(player.hasSkill('jieyue3')){
						return rencard+num+(player.num('h')-shownum)*0.5;
					}
					else{
						return num+(player.num('h')-shownum)*0.6;
					}
				}
				else if(class_name=='tao'){
					if(player.hasSkill('jijiu')){
						return num+redtao+(player.num('h')-shownum)*0.6;
					}
					else if(player.hasSkills('longhun|sgk_longhun')){
						return hearttao+num+(player.num('h')-shownum)*0.5;
					}
					else{
						return num;
					}
				}
				else if(class_name=='jiu'){
					if(player.hasSkill('jiuchi')){
						return num+spadejiu+(player.num('h')-shownum)*0.3;
					}
					else if(player.hasSkill('jiushi')){
						return num+1;
					}
					else{
						return num;
					}
				}
				else if(class_name=='wuxie'){
					if(player.hasSkill('kanpo')){
						return num+blackwuxie+(player.num('h')-shownum)*0.5;
					}
					else if(player.hasSkill('yanzheng')){
						return num+equipwuxie;
					}
					else if(player.hasSkill('ruzong')){
						return num*3;
					}
					else{
						return num;
					}
				}
				else{
					return num;
				}
			},
			getCards:function(name,player){
				player=player||_status.event.player;
				return player.num('he',name);
			},
		};
		lib.kzol_sgs=kzol_sgs;
		window.kzol_sgs=kzol_sgs;
	};
	if(lib.config.mode=='wangzhezhizhan'?lib.config['extension_扩展ol_wzzz_qqwz_disable']!=true:lib.config['extension_扩展ol_wzzz_qqwz_enable']!=false){
		var character={
            "qqwz斩将攫石":["male","qun",7,["qqwz_魔将","qqwz韧力","qqwz飞熊"],[]],
            "qqwz幻惑众心":["male","qun",6,["qqwz_惑心","qqwz仙符"],[]],
            "qqwz专擅朝政":["male","qun",9,["qqwz_酗酒","qqwz_色欲","qqwz_掌权","qqwz_暴凌"],["zhu"]],
            "qqwz经达权变":["male","qun",7,["qqwz_绝命","qqwz_危局","qqwz_暗幕"],[]],
            "qqwz汉末龙裔":["male","qun",7,["qqwz_皇令","qqwz_定数"],["zhu"]],
            "qqwz身陷囹圄":["male","qun",7,["qqwz_谋诛"],[]],
            "qqwz月下琵琶":["female","qun",7,["qqwz_离歌","qqwz_月琴","qqwz_长恨","qqwz胡笳"],[]],
            "qqwz妙笔为龙":["male","qun",7,["qqwz_万化","qqwz_归魂","qqwz_仙道"],[]],
            "qqwz登极至尊":["male","qun",8,["qqwz_谋篡","qqwz_妄尊","qqwz替汉","qqwz王权"],["zhu"]],
            "qqwz真龙之意":["male","qun",7,["qqwz_升龙","qqwz_飞燕","qqwz_排兵"],[]],
            "qqwz披坚持锐":["male","qun",8,["qqwz_虎狼","qqwz骁勇"],[]],
            "qqwz驭魂千机":["female","qun",6,["qqwz_傀儡","qqwz_驭魂","qqwz月魂","qqwz月尘","qqwz憾世"],[]],
            "qqwz不鏖遗民":["male","qun",7,["qqwz_舍粮","qqwz_渡世","qqwz_顺道"],[]],
            "qqwz陷阵克敌":["male","qun",8,["qqwz_将酒","qqwz_破敌","qqwz百战"],[]],
            "qqwz坐也思君":["female","qun",6,["qqwz_计筹","qqwz_星蝶","qqwz巧智"],[]],
            "qqwz一战而就":["male","qun",7,["qqwz_策定","qqwz_殉道"],[]],
            "qqwz孤注一掷":["female","qun",6,["qqwz_威视","qqwz_牵连"],[]],
            "qqwz烈火焚城":["male","qun",7,["qqwz_抵命","qqwz_毒谋","qqwz_火牢","qqwz_火刑","qqwz_破计","qqwz_诛族"],[]],
            "qqwz监军谋国":["male","qun",7,["qqwz_缓图","qqwz_鸿鹄","qqwz凝烈"],[]],
            "qqwz眉颦笑浅":["female","qun",7,["qqwz_隔墙","qqwz_投曹"],[]],
            "qqwz独饮醉卧":["male","qun",8,["qqwz_罪业"],["zhu"]],
            "qqwz祸乱朝纲":["male","qun",7,["qqwz_乱国","qqwz祸言","qqwz祸常"],[]],
            "qqwz夜袭许昌":["male","qun",7,["qqwz_并起"],[]],
            "qqwz师表海内":["male","qun",6,["qqwz_让梨","qqwz_儒门","qqwz圣名"],[]],
            "qqwz刚直谏上":["male","qun",6,["qqwz_秉忠","qqwz_孤援","qqwz风骨"],[]],
            "qqwz淯水香魂":["female","qun",6,["qqwz_妖艳","qqwz_醉魂","qqwz慰安"],[]],
            "qqwz善战无前":["male","qun",9,["qqwz_战神","qqwz_无前","qqwz鬼神"],[]],
            "qqwz威震塞外":["male","qun",8,["qqwz_进击","qqwz_白马"],["zhu"]],
            "qqwz吴王光耀":["male","wu",8,["qqwz_英雄","qqwz_急援","qqwz_权衡"],["zhu"]],
            "qqwz披星踏浪":["male","wu",7,["qqwz_踏浪"],[]],
            "qqwz望君早归":["female","wu",6,["qqwz_焦凤","qqwz_流年"],[]],
            "qqwz魅影剑舞":["female","wu",7,["qqwz_鸳鸯","qqwz_影剑"],[]],
            "qqwz矫情之花":["female","wu",6,["qqwz_绿荫","qqwz_花落","qqwz映花"],[]],
            "qqwz豪饮鲸吞":["male","wu",7,["qqwz_铁壁","qqwz_冷血","qqwz_奋命"],["forbidai"]],
            "qqwz魂佑江东":["male","wu",5,["qqwz_睥睨","qqwz_魂佑"],["zhu"]],
            "qqwz策马扬鞭":["male","wu",7,["qqwz_转日","qqwz_军霸2","qqwz_卧虎"],["zhu"]],
            "qqwz缔造联盟":["male","wu",6,["qqwz_联盟","qqwz_人杰","qqwz_施财"],[]],
            "qqwz锦运绵长":["male","wu",6,["qqwz_明谏","qqwz_修政","qqwz失远"],[]],
            "qqwz才猷蕴借":["male","wu",6,["qqwz_合纵","qqwz_连横","qqwz_料敌"],[]],
            "qqwz杀身成仁":["male","wu",10,["qqwz_致死","qqwz_引敌"],[]],
            "qqwz神行太保":["male","wu",7,["qqwz_冷兵","qqwz_迅疾"],[]],
            "qqwz刹那芳华":["female","wu",6,["qqwz_年华","qqwz_朝露"],[]],
            "qqwz溺酒残戮":["male","wu",8,["qqwz_残戮","qqwz_血仇","qqwz_丧命"],["zhu"]],
            "qqwz旋战回击":["male","wu",7,["qqwz_凌风","qqwz_御风","qqwz风袭"],[]],
            "qqwz缘后雅志":["female","wu",6,["qqwz_定心","qqwz_魂忆"],[]],
            "qqwz醉酒提矛":["male","wu",8,["qqwz_佳酿","qqwz_烈火","qqwz炎焚"],[]],
            "qqwz旋击敌寇":["male","wu",8,["qqwz_弓彰","qqwz_直入"],[]],
            "qqwz伏路断道":["male","wu",7,["qqwz_毒箭","qqwz_缴械","qqwz_亡箭","qqwz_擒拿"],[]],
            "qqwz倚虎弄权":["female","wu",7,["qqwz_矜持","qqwz_毁誉"],[]],
            "qqwz狂直之士":["male","wu",7,["qqwz_耿直","qqwz_妙玄"],[]],
            "qqwz傲世轻物":["male","wu",6,["qqwz_诱饵","qqwz岢将","qqwz诛敌"],[]],
            "qqwz安国将军":["male","wu",8,["qqwz_安邦"],[]],
            "qqwz临阵献策":["male","wu",7,["qqwz_阵邀","qqwz_相助"],[]],
            "qqwz宴诛权臣":["male","wu",8,["qqwz_善学","qqwz_鸿宴","qqwz_王召","qqwz仁道"],["zhu"]],
            "qqwz饕餮盛宴":["male","wu",6,["qqwz_奢豪","qqwz_罪责"],[]],
            "qqwz溯江激战":["male","wu",10,["qqwz_伺机","qqwz_白衣","qqwz苦读","qqwz激溯"],[]],
            "qqwz折冲将军":["male","wu",8,["qqwz_锦帆","qqwz_合围"],[]],
            "qqwz英姿雄发":["male","wu",9,["qqwz_霸业","qqwz_控局","qqwz_谋策"],[]],
            "qqwz烈焰燃天":["male","wu",8,["qqwz_赤焰","qqwz_雅逊"],[]],
            "qqwz思君两欢":["female","wu",7,["qqwz_妙心","qqwz_娇啸","qqwz君佑","qqwz卿月"],[]],
            "qqwz同气连枝":["female","wu",7,["qqwz_芙蓉","qqwz_沉鱼","qqwz天韵"],[]],
            "qqwz盖世之才":["male","wu",7,["qqwz_揣测","qqwz_英才","qqwz乱敌"],[]],
            "qqwz惊鸿绝艳":["female","qun",7,["qqwz_蝎心","qqwz_乱政","qqwz女权","qqwz鸠酒"],[]],
            "qqwz战天斗地":["male","wu",8,["qqwz_烈士","qqwz_酣战","qqwz惩恶"],[]],
            "qqwz洞口之战":["male","wu",7,["qqwz_镇军","qqwz惑敌"],[]],
            "qqwz超然卓绝":["male","wu",7,["qqwz_善民","qqwz优民"],[]],
            "qqwz忻忻得意":["male","qun",7,["qqwz_篱下","qqwz_散财"],[]],
            "qqwz蓝田生玉":["male","wu",7,["qqwz_狂傲","qqwz_杀令","qqwz_举国","qqws诏辅","qqwz兵败"],[]],
            "qqwz随能所任":["male","wu",6,["qqwz_秉正","qqwz_慎重","qqwz忠贤"],[]],
            "qqwz破天焚舰":["male","wu",8,["qqwz_牺牲","qqwz_诈曹","qqwz焚舰"],[]],
            "qqwz雍容雅步":["female","wu",6,["qqwz_携手","qqwz_招亲","qqwz国母"],[]],
            "qqwz杵枪摧敌":["male","qun",8,["qqwz_狮枪","qqwz雄狮"],["zhu"]],
            "qqwz大贤良师":["male","qun",7,["qqwz_雷鸣","qqwz_天道","qqwz太平","qqwz玄雷"],["zhu"]],
            "qqwz蹯踞西疆":["male","qun",6,["qqwz孤鹫","qqwz祸乱","qqwz逆击"],[]],
            "qqwz从容啸咤":["male","qun",7,["qqwz_繁华","qqwz_汉室","qqwz据江","qqwz汉学"],["zhu"]],
            "qqwz英风劲气":["male","qun",6,["qqwz鞬骑"],[]],
            "qqwz游历吴中":["male","wu",5,["qqwz鸿德","qqwz平反"],[]],
            "qqwz心术不正":["male","qun",6,["qqwz妖道","qqwz通甲"],[]],
            "qqwz狡黠颖慧":["female","qun",6,["qqwz魔姬","qqwz暗予"],["zhu"]],
            "qqwz曲辞谄媚":["male","qun",7,["qqwz_推卸","qqwz_谗言","qqwz破阵","qqwz谄辞"],[]],
            "qqwz仙山游医":["male","qun",5,["qqwz_医心","qqwz_去病","qqwz医国","qqwz刮骨"],[]],
            "qqwz箭击曹营":["male","qun",8,["qqwz_箭阵","qqwz_名门","qqwz豪贵","qqwz割据"],["zhu"]],
            "qqwz宽释请命":["male","wu",6,["qqwz释罪","qqwz诵书","qqwz请命","qqwz无责"],[]],
            "qqwz凰梦汉回":["female","qun",4,["qqwz贤后","qqwz霓凰","qqwz凰龙"],["zhu"]],
            "qqwz为夫弑敌":["female","wu",5,["qqwz定卦","qqwz诛心","qqwz祸福","qqwz伏杀"],[]],
            "qqwz悍然嗜血":["male","qun",50,["qqwz鳞甲","qqwz荒兽"],["zhu"]],
            "qqwz挥剑驭火":["male","wu",4,["qqwz陵营","qqwz无绝"],[]],
            "qqwz出镇江夏":["male","qun",5,["qqwz求策","qqwz镇江"],["zhu"]],
            "qqwz林历扬名":["male","wu",5,["qqwz锐樾"]],
            "qqwz艳绝无双":["female","qun",6,["qqwz仇绝","qqwz前尘"]],
            "qqwz如损如篪":["male","wu",5,["qqwz索舟","qqwz锋戮"]],
            "qqwz山林隐士":["male","qun",3,["qqwz知隐","qqwz水镜","qqwz明杰"]],
            "qqwz诗音共赏":["male","qun",4,["qqwz肱骨","qqwz撰古","qqwz博通","qqwz德论"]],
            "qqwz摆宴欲诛":["male","wu",5,["qqwz微审","qqwz斥公"]],
		};
		for(var i in character){
			var c=character[i];
			if(lib.config.mode=='wangzhezhizhan'){
				var skill=c[3][c[3].length-1];
				lib.translate[skill+'_append']='<b><p align=center>以下为奋发技，当你体力小于等于X时发动<br>(X为体力上限÷2+1)</b>';
				c[3].push('wzzz_回天');
			};
			if(c[4]==undefined) c[4]=[];
			c[4].push('ext:扩展ol/'+i+'.jpg');
			c[4].push('qqwz');
			c[4].push('forbidai');
			if(c[5]==undefined) c[5]=[];
			c[5].push(c[1]);
		};
		game.addCharacterPack({
			character:character,
			skill:{
            "qqwz_魔将":{
                audio:["qqwz魔将",2],
                group:"qqwz_魔将2",
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                forced:true,
                content:function (){
         "step 0"
         if(!trigger.source.hasSkill('fengyin')){
            trigger.source.addTempSkill('fengyin','phaseAfter');
        }
        "step 1"
       player.recover();
       trigger.source.loseMaxHp();
},
            },
            "qqwz_魔将2":{
                audio:["qqwz魔将",2],
                trigger:{
                    source:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.2;
},
                content:function (){
trigger.player.die(); 
},
            },
            "qqwz_惑心":{
                audio:["qqwz惑心",2],
                group:["qqwz_惑心2"],
                trigger:{
                    player:"phaseBefore",
                },
                priority:10,
                forced:true,
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='trick';
        });
        event.card=card;
        'step 1'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
        'step 2'
        var card=get.cardPile(function(card){
            return get.type(card)=='jiguan';
        });
        event.card=card;
        'step 3'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
        'step 4'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 5'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
        'step 6'
        var card=get.cardPile(function(card){
            return get.type(card)=='food';
        });
        event.card=card;
        'step 7'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
    },
            },
            "qqwz_惑心2":{
                audio:["惑心",2],
                trigger:{
                    global:["phaseBegin","phaseEnd"],
                },
                check:function (event,player){
        if(get.attitude(player,event.player)<-2){
            var cards=player.getCards('h');
            if(cards.length>player.hp) return true;
            for(var i=0;i<cards.length;i++){
                var useful=get.useful(cards[i]);
                if(useful<5) return true;
                if(cards[i].number>9&&useful<7) return true;
            }
        }
        return false;
    },
                logTarget:"player",
                filter:function (event,player){
        return player.hp<player.maxHp&&event.player!=player&&
            player.countCards('h')>0&&event.player.countCards('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(trigger.player);
        "step 1"
        if(result.bool){
            trigger.player.loseHp();
        }
    },
            },
            "qqwz_雷鸣":{
                audio:["qqwz雷鸣",2],
                trigger:{
                    player:"respond",
                },
                filter:function (event,player){
        return event.card.name=='shan';
    },
                direct:true,
                content:function (){
        "step 0";
        player.chooseTarget(get.prompt('qqwz_雷鸣')).ai=function(target){
            return ai.get.damageEffect(target,_status.event.player,_status.event.player,'thunder');
        };
        "step 1"
       if(result.bool){
            player.logSkill('qqwz_雷鸣',result.targets);
            var target=result.targets[0];
            event.target=target;
            target.judge(function(card){
                if(target.hp==target.maxHp){
                    if(get.color(card)=='red') return -1;
                }
                if(get.color(card)=='red') return 1;
                return 0;
            });
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.color){
            if(result.color=='red'){
                event.target.damage(2,'thunder');
                player.recover(2);
            }
            else{
                event.target.damage(4,'thunder');
                player.draw(3);
            }
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'respondShan')){
                    var hastarget=game.hasPlayer(function(current){
                        return ai.get.attitude(target,current)<0;
                    });
                    var be=target.num('e',{color:'black'});
                    if(target.num('h','shan')&&be){
                        if(!target.hasSkill('qqwz_天道')) return 0;
                        return [0,hastarget?target.num('he')/2:0];
                    }
                    if(target.num('h','shan')&&target.num('h')>2){
                        if(!target.hasSkill('qqwz_天道')) return 0;
                        return [0,hastarget?target.num('h')/4:0];
                    }
                    if(target.num('h')>3||(be&&target.num('h')>=2)){
                        return [0,0];
                    }
                    if(target.num('h')==0){
                        return [1.5,0];
                    }
                    if(target.num('h')==1&&!be){
                        return [1.2,0];
                    }
                    if(!target.hasSkill('qqwz_天道')) return [1,0.05];
                    return [1,Math.min(0.5,(target.num('h')+be)/4)];
                }
            },
                    },
                },
            },
            "qqwz_天道":{
                audio:["qqwz天道",2],
                trigger:{
                    global:"judge",
                },
                filter:function (event,player){
        return player.num('he')>0;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('qqwz_天道'),'he',function(card){
            return get.color(card);
        }).set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=ai.get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result;
            }
            else{
                return -result;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.logSkill('qqwz_天道');
            player.$gain2(trigger.player.judging[0]);
            player.gain(trigger.player.judging[0]);
            trigger.player.judging[0]=result.cards[0];
            if(!get.owner(result.cards[0],'judge')){
                trigger.position.appendChild(result.cards[0]);
            }
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
        }
        "step 3"
        game.delay(2);
    },
                ai:{
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "qqwz_虎狼":{
                audio:["qqwz虎狼",2],
                trigger:{
                    player:"phaseDrawBefore",
                },
                check:function (event,player){
        if(player.num('h')>player.hp) return true;
        if(player.num('h')>3) return true;
        return false;
    },
                content:function (){
        "step 0"
        player.draw(3);
        player.judge(ui.special);
        "step 1"
        player.gain(result.card);
        player.$gain2(result.card);
        player.addTempSkill('qqwz_虎狼2','phaseAfter');
        player.storage.qqwz_虎狼=get.color(result.card);
        trigger.untrigger();
        trigger.finish();
    },
            },
            "qqwz_虎狼2":{
                audio:["qqwz虎狼",2],
                group:["qqwz_虎狼3","qqwz_虎狼4"],
                enable:"phaseUse",
                viewAs:{
                    name:"juedou",
                    suit:"diamond",
                    number:12,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":12,"name":"sha","cardid":"3338194343","clone":{"name":"sha","suit":"diamond","number":12,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":545},"timeout":343,"original":"h"}],
                },
                filterCard:function (card,player){
        return get.color(card)!=player.storage.qqwz_虎狼;
    },
                check:function (card){
        return 6-ai.get.value(card);
    },
                content:function (){
        player.draw();
        player.recover();
    },
                ai:{
                    basic:{
                        order:10,
                        useful:1,
                        value:4.5,
                    },
                    result:{
                        target:-1.5,
                        player:function (player,target){
                if(ai.get.damageEffect(target,player,target)>0&&ai.get.attitude(player,target)>0&&ai.get.attitude(target,player)>0){
                    return 0;
                }
                var hs1=target.get('h','sha');
                var hs2=player.get('h','sha');
                if(hs1.length>hs2.length+1){
                    return -2;
                }
                var hsx=target.get('h');
                if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                    return -2;
                }
                if(hsx.length>3&&hs2.length==0){
                    return -2;
                }
                if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                    return -2;
                }
                return -0.5;
            },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "qqwz_虎狼3":{
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='juedou';
},
                content:function (){
        player.useCard(trigger.card,trigger.targets,false)._triggered=null;
        player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
            },
            "qqwz_虎狼4":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='juedou');
    },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
            },
            "qqwz_箭阵":{
                audio:["qqwz箭阵",2],
                group:"qqwz_箭阵2",
                enable:"phaseUse",
                viewAs:{
                    name:"wanjian",
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"club","number":7,"name":"mujiaren","cardid":"6535920446","_transform":"translateX(0px)","clone":{"name":"mujiaren","suit":"club","number":7,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2328},"timeout":2265,"original":"h"},{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":10,"name":"sha","nature":"fire","cardid":"8737294420","_transform":"translateX(672px)","clone":{"name":"sha","suit":"diamond","number":10,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2329},"timeout":2266,"original":"h"}],
                },
                filterCard:function (card,player){
        if(ui.selected.cards.length){
            return get.suit(card)!=get.suit(ui.selected.cards[0]);
        }
        var cards=player.get('h');
        for(var i=0;i<cards.length;i++){
            if(card!=cards[i]){
                if(get.suit(card)!=get.suit(cards[i])) return true;
            }
        }
        return false;
    },
                selectCard:2,
                complexCard:true,
                check:function (card){
        return 6-ai.get.value(card);
    },
                ai:{
                    basic:{
                        order:10,
                        useful:1,
                        value:5,
                    },
                    wuxie:function (target,card,player,viewer){
            if(ai.get.attitude(viewer,target)>0&&target.num('h','shan')){
                if(!target.num('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                    result:{
                        target:function (player,target){
                if(player.hasUnknown(2)) return 0;
                var nh=target.num('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                    },
                },
            },
            "qqwz_箭阵2":{
                audio:["qqwz箭阵",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card.name=='wanjian';
    },
                forced:true,
                content:function (){
        trigger.num++;
    },
            },
            "qqwz_名门":{
                audio:["qqwz名门",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
     player.draw(2);
     player.recover(2);
},
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='lebu') return false;
        },
                },
            },
            "qqwz_酗酒":{
                audio:["qqwz酗酒",2],
                group:"qqwz_酗酒2",
                enable:"chooseToUse",
                filterCard:function (card){
        return get.suit(card)=='spade';
    },
                viewAs:{
                    name:"jiu",
                    suit:"spade",
                    number:2,
                },
                viewAsFilter:function (player){
        if(!player.num('h',{suit:'spade'})) return false;
    },
                prompt:"将一张黑桃手牌当酒使用",
                check:function (card){
        if(_status.event.type=='dying') return 1;
        return 4-ai.get.value(card);
    },
                ai:{
                    skillTagFilter:function (player){
            return player.num('h',{suit:'spade'})>0&&player.hp<=0;
        },
                    threaten:1.5,
                    save:true,
                    basic:{
                        useful:function (card,i){
                if(_status.event.player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                        value:function (card,player){
                if(player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                    },
                    order:function (){
            return lib.card.sha.ai.order+0.2;
        },
                    result:{
                        target:function (player,target){
                if(target&&target.hp<=0) return 2;
                if(lib.config.mode=='stone'&&!player.isMin()){
                    if(player.getActCount()+1>=player.actcount) return 0;
                }
                var shas=player.get('h','sha');
                if(shas.length>1&&player.getCardUsable('sha')>1){
                    return 0;
                }
                var card;
                if(shas.length){
                    for(var i=0;i<shas.length;i++){
                        if(lib.filter.filterCard(shas[i],target)){
                            card=shas[i];break;
                        }
                    }
                }
                else if(player.hasSha()&&player.needsToDiscard()){
                    if(player.num('h','hufu')!=1){
                        card={name:'sha'};
                    }
                }
                if(card){
                    if(game.hasPlayer(function(current){
                        return (ai.get.attitude(target,current)<0&&
                            target.canUse(card,current,true,true)&&
                            !current.num('e','baiyin')&&
                            ai.get.effect(current,card,target)>0);
                    })){
                        return 1;
                    }
                }
                return 0;
            },
                    },
                    tag:{
                        save:1,
                    },
                },
            },
            "qqwz_酗酒2":{
                audio:["qqwz酗酒",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=3;
    },
                ai:{
                    threaten:1.3,
                },
            },
            "qqwz_色欲":{
                audio:["qqwz色欲",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
        return event.player.sex=='female';
    },
                content:function (){
      trigger.player.loseHp();
      trigger.player.loseMaxHp();
      trigger.player.turnOver();
      player.draw(2);
    },
            },
            "qqwz_掌权":{
                audio:["qqwz掌权",2],
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                filter:function (event,player){
        return event.player!=player&&player.hp!=player.maxHp;
    },
                content:function (){
        player.recover();
        player.loseMaxHp();
    },
                ai:{
                    threaten:0.5,
                },
            },
            "qqwz_暴凌":{
                audio:["qqwz暴凌",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                content:function (){
         trigger.num+=player.hp;
},
            },
            "qqwz_绝命":{
                locked:true,
                group:"qqwz_绝命2",
                global:"qqwz_绝命3",
            },
            "qqwz_绝命2":{
                audio:["qqwz绝命",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
var card=get.cards(10)
var c=[]
player.showCards(card)
if(Math.random()<=1){
for(var i=0;i<card.length;i++){
if(get.color(card[i])=='black') c.push(card[i])
}
player.gain(c)
}
else player.gain(card)
},
            },
            "qqwz_危局":{
                audio:["qqwz危局",2],
                group:"qqwz_危局2",
                usable:1,
                unique:true,
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.qqwz_危局;
    },
                init:function (player){
        player.storage.qqwz_危局=false;
    },
                mark:true,
                intro:{
                    content:"limited",
                },
                skillAnimation:"epic",
                animationColor:"thunder",
                filterTarget:function (card,player,target){
        return target!=player;
    },
                selectTarget:-1,
                multitarget:true,
                multiline:true,
                content:function (){
        "step 0"
        player.unmarkSkill('qqwz_危局')
        player.storage.qqwz_危局=false;
        event.current=player.next;
        "step 1"
        event.current.animate('target');
        event.current.chooseToUse('危局：使用一张杀或流失两点体力',{name:'sha'},function(card,player,target){
            if(player==target) return false;
            if(!player.canUse('sha',target)) return false;
            if(get.distance(player,target)<=1) return true;
            if(game.hasPlayer(function(current){
                return current!=player&&get.distance(player,current)<get.distance(player,target);
            })){
                return false;
            }
            return true;
        });
        "step 2"
        if(result.bool==false) event.current.loseHp(2);
        if(event.current.next!=player){
            event.current=event.current.next;
            game.delay(0.5);
            event.goto(1);
        }
    },
                ai:{
                    order:1,
                    result:{
                        player:function (player){
                if(lib.config.mode=='identity'&&game.zhu.isZhu&&player.identity=='fan'){
                    if(game.zhu.hp==1&&game.zhu.num('h')<=2) return 1;
                }
                var num=0;
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    var att=ai.get.attitude(player,players[i]);
                    if(att>0) att=1;
                    if(att<0) att=-1;
                    if(players[i]!=player&&players[i].hp<=3){
                        if(players[i].num('h')==0) num+=att/players[i].hp;
                        else if(players[i].num('h')==1) num+=att/2/players[i].hp;
                        else if(players[i].num('h')==2) num+=att/4/players[i].hp;
                    }
                    if(players[i].hp==1) num+=att*1.5;
                }
                if(player.hp==1){
                    return -num;
                }
                if(player.hp==2){
                    return -game.players.length/4-num;
                }
                return -game.players.length/3-num;
            },
                    },
                },
            },
            "qqwz_暗幕":{
                audio:["qqwz暗幕",2],
                group:"qqwz_暗幕2",
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=1;
},
                content:function (){
trigger.untrigger();
trigger.finish();
},
                mod:{
                    targetEnabled:function (card){
            if((get.type(card)=='trick'||get.type(card)=='delay')&&
                get.color(card)=='black') return false;
        },
                },
            },
            "qqwz_危局2":{
                audio:["qqwz危局",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
return get.type(event.card)=='trick';
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
            },
            "qqwz_绝命3":{
                mod:{
                    cardSavable:function (card,player){
            if(!_status.currentPhase) return;
            if(_status.currentPhase.get('s').contains('qqwz_绝命')&&_status.currentPhase!=player){
                if(card.name=='tao'&&_status.event.dying!=player) return false;
            }
        },
                },
            },
            "qqwz_暗幕2":{
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "qqwz_万化":{
                unique:true,
                init:function (player){
        player.storage.qqwz_万化={
            list:[],
            owned:{},
            player:player,
        }
    },
                get:function (player,num){
        if(typeof num!='number') num=2;
        while(num--){
            var name=player.storage.qqwz_万化.list.randomRemove();
            var skills=lib.character[name][3].slice(0);
            for(var i=0;i<skills.length;i++){
                var info=lib.skill[skills[i]];
                if(info.unique&&!info.gainable){
                    skills.splice(i--,1);
                }
            }
            player.storage.qqwz_万化.owned[name]=skills;
            player.popup(name);
            game.log(player,'获得了一个化身');
        }
    },
                group:["qqwz_万化2","qqwz_万化3"],
                intro:{
                    content:function (storage,player){
            var str='';
            var slist=storage.owned;
            var list=[];
            for(var i in slist){
                list.push(i);
            }
            if(list.length){
                str+=get.translation(list[0]);
                for(var i=1;i<list.length;i++){
                    str+='、'+get.translation(list[i]);
                }
            }
            var skill=player.additionalSkills.qqwz_万化[0];
            if(skill){
                str+='<p>当前技能：'+get.translation(skill);
            }
            return str;
        },
                    mark:function (dialog,content,player){
            var slist=content.owned;
            var list=[];
            for(var i in slist){
                list.push(i);
            }
            if(list.length){
                dialog.addSmall([list,'character']);
            }
            var skill=player.additionalSkills.qqwz_万化[0];
            if(skill){
                dialog.add('<div><div class="skill">【'+get.translation(skill)+
                '】</div><div>'+lib.translate[skill+'_info']+'</div></div>');
            }
        },
                },
                mark:true,
            },
            "qqwz_万化2":{
                audio:["qqwz万化",2],
                trigger:{
                    global:["gameStart","phaseBefore"],
                },
                forced:true,
                popup:false,
                priority:10,
                filter:function (event,player){
        return !player.storage.qqwz_万化inited;
    },
                content:function (){
        for(var i in lib.character){
            if(i.indexOf('stone_')==0) continue;
            var add=false;
            for(var j=0;j<lib.character[i][3].length;j++){
                var info=lib.skill[lib.character[i][3][j]];
                if(!info){
                    continue;
                }
                if(info.gainable||!info.unique){
                    add=true;break;
                }
            }
            if(add){
                player.storage.qqwz_万化.list.push(i);
            }
        }
        for(var i=0;i<game.players.length;i++){
            player.storage.qqwz_万化.list.remove([game.players[i].name]);
            player.storage.qqwz_万化.list.remove([game.players[i].name1]);
            player.storage.qqwz_万化.list.remove([game.players[i].name2]);
        }
        lib.skill.qqwz_万化.get(player,5);
        player.storage.qqwz_万化inited=true;
    },
            },
            "qqwz_万化3":{
                audio:["qqwz万化",2],
                trigger:{
                    player:["phaseBegin","phaseEnd"],
                    global:"gameStart",
                },
                filter:function (event,player,name){
        if(name=='phaseBegin'&&game.phaseNumber==1) return false;
        return true;
    },
                priority:-9,
                forced:true,
                popup:false,
                content:function (){
        var slist=player.storage.qqwz_万化.owned;
        var list=[];
        for(var i in slist){
            list.push(i);
        }
        if(event.isMine()){
            event.dialog=ui.create.dialog('选择获得一项技能',[list,'character']);
            if(trigger.name=='game'){
                event.control=ui.create.control();
            }
            else{
                event.control=ui.create.control(['cancel2']);
            }
            event.clickControl=function(link){
                if(link!='cancel2'){
                    var currentname=event.dialog.querySelector('.selected.button').link;
                    var mark=player.marks.qqwz_万化;
                    if(trigger.name=='game'){
                        mark.hide();
                        // mark.style.transform='scale(0.8)';
                        mark.style.transition='all 0.3s';
                        setTimeout(function(){
                            mark.style.transition='all 0s';
                            ui.refresh(mark);
                            mark.setBackground(currentname,'character');
                            if(mark.firstChild){
                                mark.firstChild.remove();
                            }
                            setTimeout(function(){
                                mark.style.transition='';
                                mark.show();
                                // mark.style.transform='';
                            },50);
                        },500);
                    }
                    else{
                        if(mark.firstChild){
                            mark.firstChild.remove();
                        }
                        mark.setBackground(currentname,'character');
                    }
                    player.addAdditionalSkill('qqwz_万化',link);
                    player.logSkill('qqwz_万化2');
                    game.log(player,'获得技能','【'+get.translation(link)+'】');
                    player.popup(link);

                    for(var i=0;i<event.dialog.buttons.length;i++){
                        if(event.dialog.buttons[i].classList.contains('selected')){
                            var name=event.dialog.buttons[i].link;
                            player.sex=lib.character[name][0];
                            player.group=lib.character[name][1];
                            // player.node.identity.style.backgroundColor=get.translation(player.group+'Color');
                            break;
                        }
                    }

                    if(event.triggername=='phaseBegin'){
                        (function(){
                            var skills=[link];
                            var list=[];
                            game.expandSkills(skills);
                            var triggerevent=event._trigger;
                            var name='phaseBegin';
                            for(i=0;i<skills.length;i++){
                                var trigger=get.info(skills[i]).trigger;
                                if(trigger){
                                    var add=false;
                                    if(player==triggerevent.player&&trigger.player){
                                        if(typeof trigger.player=='string'){
                                            if(trigger.player==name) add=true;
                                        }
                                        else if(trigger.player.contains(name)) add=true;
                                    }
                                    if(trigger.global){
                                        if(typeof trigger.global=='string'){
                                            if(trigger.global==name) add=true;
                                        }
                                        else if(trigger.global.contains(name)) add=true;
                                    }
                                    if(add&&player.isOut()==false) list.push(skills[i]);
                                }
                            }
                            for(var i=0;i<list.length;i++){
                                game.createTrigger('phaseBegin',list[i],player,triggerevent);
                            }
                        }());
                    }
                }
                ui.auto.show();
                event.dialog.close();
                event.control.close();
                game.resume();
            };
            event.control.custom=event.clickControl;
            ui.auto.hide();
            game.pause();
            for(var i=0;i<event.dialog.buttons.length;i++){
                event.dialog.buttons[i].classList.add('selectable');
            }
            event.custom.replace.button=function(button){
                if(button.classList.contains('selected')){
                    button.classList.remove('selected');
                    if(trigger.name=='game'){
                        event.control.style.opacity=0;
                    }
                    else{
                        event.control.replace(['cancel2']);
                    }
                }
                else{
                    for(var i=0;i<event.dialog.buttons.length;i++){
                        event.dialog.buttons[i].classList.remove('selected');
                    }
                    button.classList.add('selected');
                    event.control.replace(slist[button.link]);
                    if(trigger.name=='game'&&getComputedStyle(event.control).opacity==0){
                        event.control.style.transition='opacity 0.5s';
                        ui.refresh(event.control);
                        event.control.style.opacity=1;
                        event.control.style.transition='';
                        ui.refresh(event.control);
                    }
                    else{
                        event.control.style.opacity=1;
                    }
                }
                event.control.custom=event.clickControl;
            }
            event.custom.replace.window=function(){
                for(var i=0;i<event.dialog.buttons.length;i++){
                    if(event.dialog.buttons[i].classList.contains('selected')){
                        event.dialog.buttons[i].classList.remove('selected');
                        if(trigger.name=='game'){
                            event.control.style.opacity=0;
                        }
                        else{
                            event.control.replace(['cancel2']);
                        }
                        event.control.custom=event.clickControl;
                        return;
                    }
                }
            }
        }
        else{
            event.finish();
        }
    },
            },
            "qqwz_归魂":{
                audio:["qqwz归魂",2],
                unique:true,
                trigger:{
                    player:["damageEnd","loseHp","loseMaxHp","recoverEnd","gainMaxHpEnd"],
                },
                frequent:true,
                filter:function (event,player){
        return player.storage.qqwz_万化&&player.storage.qqwz_万化.list&&
            player.storage.qqwz_万化.list.length>0;
    },
                content:function (){
        for(var i=0;i<trigger.num;i++){
            lib.skill.qqwz_万化.get(player);
        }
    },
            },
            "qqwz_仙道":{
                audio:["qqwz仙道",2],
                group:"qqwz_仙道2",
                unique:true,
                trigger:{
                    player:"phaseAfter",
                },
                direct:true,
                init:function (player){
        player.storage.qqwz_仙道=[];
        // player.storage.qqwz_仙道2=0;
    },
                intro:{
                    content:"characters",
                },
                content:function (){
        'step 0'
        // if(player.storage.qqwz_仙道2<1){
        //     player.storage.qqwz_仙道2++;
        //     event.finish();
        // }
        // else{
        //     player.storage.qqwz_仙道2=0;
        // }
        'step 1'
        player.logSkill('qqwz_仙道');
        var list=[];
        var list2=[];
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list2.add(players[i].name);
            list2.add(players[i].name1);
            list2.add(players[i].name2);
        }
        for(var i in lib.character){
            if(player.storage.qqwz_仙道.contains(i)) continue;
            if(list2.contains(i)) continue;
            list.push(i);
        }
        var name=list.randomGet();
        player.storage.qqwz_仙道.push(name);
        player.markSkill('qqwz_仙道');
        var skills=lib.character[name][3];
        for(var i=0;i<skills.length;i++){
            player.addSkill(skills[i]);
        }
        event.dialog=ui.create.dialog('<div class="text center">'+get.translation(player)+'发动了【仙道】',[[name],'character']);
        game.delay(2);
        'step 2'
        event.dialog.close();
    },
            },
            "qqwz_仙道2":{
                audio:["qqwz仙道",2],
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"hej",
                viewAs:{
                    name:"tao",
                    suit:"diamond",
                    number:5,
                },
                viewAsFilter:function (player){
        if(!player.num('hej',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当桃使用",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            if(!player.num('hej',{color:'red'})) return false;
        },
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                        order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                    },
                    order:3,
                    result:{
                        target:function (player,target){
                if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                    if(ai.get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3.05+(kzol_sgs.getDefenseSha(target,player))/30;
                    }
                }
                return -1.55+(kzol_sgs.getDefenseSha(target,player))/30;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function (card){
                if(card.nature) return 1;
            },
                        fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                        recover:1,
                        save:1,
                    },
                },
            },
            "qqwz_离歌":{
                audio:["qqwz离歌",2],
                trigger:{
                    global:"damageEnd",
                },
                filter:function (event,player){
        return (event.card&&event.source&&
            event.player.classList.contains('dead')==false&&player.num('he'));
    },
                direct:true,
                check:function (event,player){
        var att1=ai.get.attitude(player,event.player);
        var att2=ai.get.attitude(player,event.source);
        return att1>att2&&att1>=0&&player!=event.source;
    },
                content:function (){
        "step 0"
        player.draw(1);
        var next=player.chooseToDiscard('he',get.prompt('qqwz_离歌'));
        next.set('ai',ai.get.unuseful2);
        next.set('logSkill','qqwz_离歌');
        "step 1"
        if(result.bool){
            trigger.player.judge();
        }
        else{
            event.finish();
        }
        "step 2"
        switch(get.suit(result.card)){
            case 'heart':trigger.player.recover(2);break;
            case 'diamond':trigger.player.draw(3);break;
            case 'club':trigger.source.chooseToDiscard('he',5,true);break;
            case 'spade':trigger.source.loseHp(2);break;
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "qqwz_月琴":{
                audio:["qqwz月琴",2],
                trigger:{
                    source:"damageEnd",
                },
                filter:function (event,player){
        return (event.card&&event.source&&
            event.player.classList.contains('dead')==false&&player.num('he'));
    },
                direct:true,
                check:function (event,player){
        var att1=ai.get.attitude(player,event.player);
        var att2=ai.get.attitude(player,event.source);
        return att1>att2&&att1>=0;
    },
                content:function (){
        "step 0"
        var next=player.chooseToDiscard('he',get.prompt('qqwz_月琴'));
        next.set('ai',ai.get.unuseful2);
        next.set('logSkill','qqwz_月琴');
        "step 1"
        if(result.bool){
            trigger.player.judge();
        }
        else{
            event.finish();
        }
        "step 2"
        switch(get.suit(result.card)){
            case 'heart':trigger.player.turnOver();break;
            case 'diamond':trigger.player.loseHp(1);break;
            case 'club':player.gainMaxHp(2);break;
            case 'spade':player.recover(2);break;
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "qqwz_长恨":{
                audio:["qqwz长恨",2],
                trigger:{
                    player:"dieBegin",
                },
                forced:true,
                filter:function (event){
        return event.source&&event.source.isIn();
    },
                content:function (){
        trigger.source.clearSkills();
        trigger.source.die()._triggered=null;
    },
                ai:{
                    threaten:function (player,target){
            if(target.hp==1) return 0.2;
            return 1.5;
        },
                    effect:{
                        target:function (card,player,target,current){
                if(!target.hasFriend()) return;
                if(target.hp<=1&&get.tag(card,'damage')) return [1,0,0,-2];
            },
                    },
                },
            },
            "qqwz_谋诛":{
                audio:["qqwz谋诛",2],
                group:["qqwz_谋诛2","qqwz_谋诛3"],
                trigger:{
                    player:"shaBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.target)<0;
    },
                content:function (){
         player.draw(2);
        if(!trigger.target.hasSkill('fengyin')){
            trigger.target.addTempSkill('fengyin','phaseAfter');
        }
    },
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num+2;
        },
                },
            },
            "qqwz_谋诛2":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
            if(event.player.get('h').length==0) return true;
    },
                forced:true,
                content:function (){
        trigger.num+=5;
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(target.get('h').length==0) return [1,-2];
            },
                    },
                },
            },
            "qqwz_谋诛3":{
                trigger:{
                    player:"useCard",
                },
                forced:true,
                priority:10,
                content:function (){
                player.addTempSkill('unequip','useCardAfter');
            },
            },
            "qqwz_皇令":{
                enable:"phaseUse",
                usable:1,
                audio:["qqwz皇令",2],
                filter:function (event,player){
        return player.num('h')>0;
    },
                filterCard:true,
                selectCard:-1,
                filterTarget:function (card,player,target){
        return player!=target;
    },
                discard:false,
                prepare:"give2",
                ai:{
                    order:1,
                    result:{
                        player:0,
                        target:function (player,target){
                if(player.num('h')>1){
                    return 1;
                }
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(players[i].num('h')&&players[i]!=target&&players[i]!=player&&ai.get.attitude(player,players[i])<0){
                        break;
                    }
                }
                if(i==players.length){
                    return 1;
                }
                return -2/(target.num('h')+1);
            },
                    },
                },
                content:function (){
        "step 0"
        event.target1=targets[0];
        targets[0].gain(cards,player);
        var players=game.filterPlayer();
        for(var i=0;i<players.length;i++){
            if(players[i].num('h')&&players[i]!=event.target1&&players[i]!=player){
                break;
            }
        }
        if(i==players.length){
            event.finish();
        }
        "step 1"
        player.chooseTarget(true,'选择拼点目标',function(card,player,target){
            return target.num('h')&&target!=_status.event.target1&&target!=player;
        }).set('ai',function(target){
            var player=_status.event.player;
            var eff=ai.get.effect(target,{name:'sha'},_status.event.target1,player);
            var att=ai.get.attitude(player,target);
            if(att>0){
                return eff-10;
            }
            return eff;
        }).set('target1',event.target1);
        "step 2"
        if(result.targets.length){
            event.target2=result.targets[0];
            event.target1.line(event.target2);
            event.target1.chooseToCompare(event.target2);
        }
        else{
            event.finish();
        }
        "step 3"
        if(result.bool){
            event.target1.useCard({name:'sha'},event.target2);
            event.target2.die();
            player.draw(2);
        }
        else{
            event.target2.useCard({name:'sha'},event.target1);
            event.target1.die();
            player.draw(2);
        }
    },
            },
            "qqwz_定数":{
                audio:["qqwz定数",2],
                group:["qqwz_定数2","qqwz_定数3","qqwz_定数4"],
                trigger:{
                    target:"shaBegin",
                },
                check:function (event,player){
        var cards=player.get('h');
        if(cards.length<=2){
            for(var i=0;i<cards.length;i++){
                if(cards[i].name=='shan'||cards[i].name=='tao') return false;
            }
        }
        return true;
    },
                content:function (){
        player.draw(2);
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha') return [1,0.5];
            },
                    },
                },
            },
            "qqwz_定数2":{
                audio:["qqwz定数",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
if(trigger.num>1) trigger.num=1
},
            },
            "qqwz_定数3":{
                audio:["qqwz定数",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_定数4":{
                audio:["qqwz定数",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                unique:true,
                filter:function (event){
return event.nature;
},
                content:function (){
trigger.untrigger();
trigger.finish();
player.draw(2);
},
            },
            "qqwz_谋篡":{
                audio:["qqwz谋篡",2],
                trigger:{
                    global:"phaseBegin",
                },
                check:function (event,player){
        var att=ai.get.attitude(player,event.player);
        return !game.hasPlayer(function(current){
            return ai.get.attitude(player,current)<att;
        });
    },
                filter:function (event,player){
        return event.player!=player&&!player.storage.qqwz_谋篡;
    },
                content:function (){
        player.draw(2);
        player.gainMaxHp();
        player.chooseToUse({name:'juedou'},'谋篡：是否使用一张决斗？').logSkill='qqwz_谋篡';
    },
                ai:{
                    expose:0.2,
                },
                intro:{
                    content:"player",
                },
            },
            "qqwz_妄尊":{
                audio:["qqwz妄尊",2],
                group:"qqwz_妄尊2",
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=player.maxHp;
    },
            },
            "qqwz_妄尊2":{
                audio:["qqwz妄尊",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_狮枪":{
                audio:["qqwz狮枪",2],
                group:["qqwz_狮枪2","qqwz_狮枪3"],
                trigger:{
                    player:"shaBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.target)<0;
    },
                content:function (){
        player.draw(2);
        if(!trigger.target.hasSkill('fengyin')){
            trigger.target.addTempSkill('fengyin','phaseAfter');
        }
    },
                mod:{
                    globalFrom:function (from,to){
            if(from.hp>to.hp) return -Infinity;
        },
                },
            },
            "qqwz_狮枪2":{
                audio:["qqwz狮枪",2],
                group:"qqwz_狮枪闪",
                trigger:{
                    source:"damageEnd",
                },
                priority:10,
                forced:true,
                content:function (){
        'step 0'
        player.recover();
        var card=get.cardPile(function(card){
            return get.type(card)=='basic';
        });
        event.card=card;
        'step 1'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
    },
            },
            "qqwz_狮枪3":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou');
    },
                forced:true,
                content:function (){
        trigger.num+=3;
    },
                mod:{
                    selectTarget:function (card,player,range){
           if(card.name=='sha') range[1]+=3;
    },
                },
            },
            "qqwz_升龙":{
                group:["qqwz_升龙_sha","qqwz_升龙_shan","qqwz_升龙_draw"],
                subSkill:{
                    draw:{
                        trigger:{
                            player:["useCard","respond"],
                        },
                        forced:true,
                        popup:false,
                        audio:["qqwz升龙",2],
                        filter:function (event,player){
                if(!get.zhu(player,'shouyue')) return false;
                return event.skill=='qqwz_升龙_sha'||event.skill=='qqwz_升龙_shan';
            },
                        content:function (){
                player.draw();
                player.storage.fanghun2++;
            },
                        mod:{
                            cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+2;
                },
                        },
                        sub:true,
                    },
                    sha:{
                        audio:["qqwz升龙",2],
                        enable:["chooseToUse","chooseToRespond"],
                        filterCard:{
                            name:"shan",
                        },
                        viewAs:{
                            name:"sha",
                            suit:"diamond",
                            number:5,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":5,"name":"shan","cardid":"5813936408","original":"h","_transform":"translateX(336px)","_mouseentercreated":false,"clone":{"name":"shan","suit":"diamond","number":5,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2237},"timeout":2137}],
                        },
                        viewAsFilter:function (player){
                if(!player.countCards('h','shan')) return false;
            },
                        prompt:"将一张闪当杀使用或打出",
                        check:function (){return 1},
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.6
                    },
                            },
                            respondSha:true,
                            skillTagFilter:function (player){
                    if(!player.countCards('h','shan')) return false;
                },
                            order:function (){
                    return get.order({name:'sha'})+0.1;
                },
                            useful:-1,
                            value:-1,
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                            if(get.attitude(player,target)>0){
                                return -6;
                            }
                            else{
                                return -3;
                            }
                        }
                        return -1.5;
                    },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                                natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                                fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                                thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                                poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                            },
                        },
                        sub:true,
                    },
                    shan:{
                        audio:["qqwz升龙",2],
                        enable:["chooseToRespond"],
                        filterCard:{
                            name:"sha",
                        },
                        viewAs:{
                            name:"shan",
                        },
                        prompt:"将一张杀当闪打出",
                        check:function (){return 1},
                        viewAsFilter:function (player){
                if(!player.countCards('h','sha')) return false;
            },
                        ai:{
                            respondShan:true,
                            skillTagFilter:function (player){
                    if(!player.countCards('h','sha')) return false;
                },
                            effect:{
                                target:function (card,player,target,current){
                        if(get.tag(card,'respondShan')&&current<0) return 0.6
                    },
                            },
                            order:4,
                            useful:-1,
                            value:-1,
                            basic:{
                                useful:[7,2],
                                value:[7,2],
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz_飞燕":{
                group:["qqwz_飞燕2","qqwz_飞燕3","qqwz_飞燕4"],
                ai:{
                    mingzhi:false,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'respondShan')||get.tag(card,'respondSha')){
                    if(ai.get.attitude(target,player)<=0){
                        if(current>0) return;
                        if(target.num('h')==0) return 1.6;
                        if(target.num('h')==1) return 1.2;
                        if(target.num('h')==2) return [0.8,0.2,0,-0.2];
                        return [0.4,0.7,0,-0.7];
                    }
                }
            },
                    },
                },
            },
            "qqwz_飞燕2":{
                audio:["qqwz飞燕",2],
                trigger:{
                    player:"shaBefore",
                },
                filter:function (event,player){
        if(event.skill!='qqwz_升龙_sha') return false;
        return event.target.num('h')>0;
    },
                logTarget:"target",
                content:function (){
        var card=trigger.target.get('h').randomGet();
        player.gain(card,trigger.targe);
        trigger.target.$giveAuto(card,player);
        game.delay();
    },
            },
            "qqwz_飞燕3":{
                audio:["qqwz飞燕",2],
                trigger:{
                    player:"respond",
                },
                filter:function (event,player){
        if(event.skill!='qqwz_飞燕_shan'&&event.skill!='qqwz_飞燕_sha')return false;
        return event.source&&event.source.num('h')>0;
    },
                logTarget:"source",
                content:function (){
        var card=trigger.source.get('h').randomGet(2);
        player.gain(card,trigger.source,2);
        trigger.source.$giveAuto(card,player);
        game.delay();
    },
            },
            "qqwz_飞燕4":{
                audio:["qqwz飞燕",2],
                trigger:{
                    player:"respond",
                },
                filter:function (event,player){
        return event.card.name=='shan'&&player.hasSha();
    },
                direct:true,
                content:function (){
        player.chooseToUse({name:'sha'},'飞燕：是否使用一张杀？').logSkill='qqwz_飞燕4';
    },
            },
            "qqwz_排兵":{
                audio:["qqwz_排兵",2],
                trigger:{
                    player:["shaBegin","juedouBegin"],
                },
                direct:true,
                content:function (){
        'step 0'
        player.chooseControl('摸牌','加伤害','cancel2').set('prompt',get.prompt('qqwz_排兵'));
        'step 1'
        if(result.control&&result.control!='cancel2'){
            player.logSkill('qqwz_排兵');
            var nd=player.num('he');
            if(result.control=='摸牌'){
                player.draw(2);
               player.recover(2);
            }
            else{
                player.addTempSkill('qqwz_排兵2','useCardToAfter');
                player.storage.qqwz_排兵=nd;
            }
        }
    },
            },
            "qqwz_排兵2":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou');
    },
                forced:true,
                audio:["qqwz排兵",2],
                content:function (){
        if(typeof player.storage.qqwz_排兵=='number'){
            trigger.num+=player.storage.qqwz_排兵;
        }
    },
            },
            "qqwz_傀儡":{
                audio:["qqwz傀儡",2],
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
       return player.maxHp>=5;
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                filterCard:true,
                position:"he",
                content:function (){
        player.loseMaxHp(5);
        player.gain(target.get('hej'),target);
        target.$give(target.num('hej'),player);
        player.storage.qqwz_傀儡=target;
        target.die();
    },
                check:function (card){return 8-ai.get.value(card)},
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                if(player.classList.contains('turnedover')) return 10;
                return 0;
            },
                        target:function (player,target){
                if(target.num('h')>target.hp) return target.hp-target.num('h');
                return 0;
            },
                    },
                    threaten:1.5,
                    effect:{
                        target:function (card){
                if(card.name=='guiyoujie') return [0,2];
            },
                    },
                },
            },
            "qqwz_驭魂":{
                audio:["qqwz驭魂",2],
                trigger:{
                    player:"phaseEnd",
                },
                frequent:true,
                content:function (){
         'step 0'
    var card=get.cardPile(function(card){
        return get.type(card)=='trick';
    });
    event.card=card;
    'step 1'
    if(event.card){
        player.recover();
        player.gainMaxHp();
         player.gain(game.createCard(event.card),'gain2');
    }
    },
            },
            "qqwz_蝎心":{
                audio:["qqwz蝎心",2],
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function (event,player){
        return event.player!=player&&player.num('h')>0;
    },
                direct:true,
                content:function (){
        "step 0"   
        var next=player.chooseToDiscard(get.prompt('qqwz_蝎心',trigger.player));     
        next.set('logSkill',['qqwz_蝎心',trigger.player]);
        "step 1"
        if(result.bool){
            trigger.player.damage(2)._triggered=null;
            trigger.player.loseHp();
            trigger.player.addTempSkill('qqwz_蝎心2','phaseAfter');
        }
        else{
            event.finish();
        }
    },
                ai:{
                    threaten:2,
                    expose:0.3,
                },
            },
            "qqwz_蝎心2":{
                trigger:{
                    player:"recoverBefore",
                },
                forced:true,
                content:function (){
trigger.untrigger();
trigger.finish();
},
            },
            "qqwz_乱政":{
                trigger:{
                    source:"dieAfter",
                },
                forced:true,
                filter:function (event,player){
                return !player.hasSkill('qqwz_乱政2');
            },
                content:function (){
                player.addSkill('qqwz_乱政2');
            },
            },
            "qqwz_乱政2":{
                audio:["qqwz乱政",2],
                trigger:{
                    global:"phaseAfter",
                },
                forced:true,
                priority:-50,
                content:function (){
                player.removeSkill('qqwz_乱政2');
                player.phase();
           player.draw(3);
            },
            },
            "qqwz_狮枪闪":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                },
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                content:function (){
     trigger.directHit=true;
    },
            },
            "qqwz_舍粮":{
                audio:["qqwz舍粮",2],
                group:["qqwz_舍粮2","qqwz_舍粮3"],
                trigger:{
                    player:["phaseEnd","phaseUseBegin"],
                },
                init:function (player){
        player.storage.qqwz_舍粮=[];
    },
                filter:function (event,player){
        return !player.storage.qqwz_舍粮||!player.storage.qqwz_舍粮.length;
    },
                intro:{
                    content:"cards",
                },
                content:function (){
        'step 0'
        player.draw(5);
        player.chooseCard(5,'he',true,'选择五张牌作为“粮”');
        'step 1'
        player.storage.qqwz_舍粮=result.cards;
        player.lose(result.cards,ui.special);
        player.syncStorage('qqwz_舍粮');
        player.markSkill('qqwz_舍粮');
    },
            },
            "qqwz_渡世":{
                audio:["qqwz渡世",2],
                trigger:{
                    player:"damageEnd",
                    source:"damageEnd",
                },
                filter:function (event,player){
        return player.storage.qqwz_舍粮&&player.storage.qqwz_舍粮.length&&event.player.isAlive();
    },
                direct:true,
                content:function (){
        'step 0'
        trigger.player.chooseCardButton('选择获得一张“粮”',player.storage.qqwz_舍粮);
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_渡世');
            trigger.player.gain(result.links[0],'draw2','log');
            player.storage.qqwz_舍粮.remove(result.links[0]);
            player.syncStorage('qqwz_舍粮');
            if(player.storage.qqwz_舍粮.length==0){
                player.recover(99999);
                player.draw(3);
                player.unmarkSkill('qqwz_舍粮');
            }
            else{
                player.markSkill('qqwz_舍粮');
            }
        }
    },
            },
            "qqwz_顺道":{
                enable:"phaseUse",
                audio:["qqwz顺道",2],
                filterTarget:true,
                filter:function (event,player){
        return player.storage.qqwz_舍粮.length>0;
    },
                content:function (){
        "step 0"
        player.chooseCardButton(player.storage.qqwz_舍粮,true);
        "step 1"
        var card=result.links[0];
        player.discard(card);
        player.storage.qqwz_舍粮.remove(card);
        if(!player.storage.qqwz_舍粮.length){
            player.unmarkSkill('qqwz_舍粮');
        }
        else{
            player.markSkill('qqwz_舍粮');
        }
        player.syncStorage('qqwz_舍粮');
        "step 2"
        target.draw(2);
    },
            },
            "qqwz_舍粮2":{
                audio:["qqwz舍粮",2],
                trigger:{
                    player:"phaseUseBgein",
                },
                filter:function (event,player){
        return !player.storage.qqwz_舍粮||!player.storage.qqwz_舍粮.length;
    },
                intro:{
                    content:"cards",
                },
                content:function (){
        'step 0'
        player.draw(5);
        player.chooseCard(5,'he',true,'选择两张牌作为“粮”');
        'step 1'
        player.storage.qqwz_舍粮=result.cards;
        player.lose(result.cards,ui.special);
        player.syncStorage('qqwz_舍粮');
        player.markSkill('qqwz_舍粮');
    },
            },
            "qqwz_舍粮3":{
                audio:["qqwz舍粮",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_计筹":{
                audio:["qqwz计筹",2],
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filter:function (event,player){
        return player.num('he',{type:'equip'})>0;
    },
                content:function (){
        'step 0'
        player.chooseToDiscard(get.prompt('qqwz_计筹'),[1,player.num('he',{type:'equip'})],'he',function(card){
            return get.type(card)=='equip';
        }).set('ai',function(card){
            if(card.name=='bagua') return 10;
            return 7-ai.get.value(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_计筹');
            event.cards=get.cards(5*result.cards.length);
            player.showCards(event.cards);
        }
        else{
            event.finish();
        }
        'step 2'
        var gained=[];
        for(var i=0;i<event.cards.length;i++){
            if(get.type(event.cards[i],'trick')=='trick'){
                gained.push(event.cards[i]);
            }
            else{
                ui.discardPile.appendChild(event.cards[i]);
            }
        }
        player.gain(gained,'gain2');
    },
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
                ai:{
                    threaten:1.5,
                },
            },
            "qqwz_星蝶":{
                inherit:"bagua_skill",
                filter:function (event,player){
        if(!lib.skill.bagua_skill.filter(event,player)) return false;
        if(player.get('e','2')) return false;
        return true;
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(player==target&&get.subtype(card)=='equip2'){
                    if(ai.get.equipValue(card)<=7.5) return 0;
                }
                if(target.get('e','2')) return;
                return lib.skill.bagua_skill.ai.effect.target.apply(this,arguments);
            },
                    },
                },
                mod:{
                    maxHandcard:function (player,num){
            if(player.get('e','3')||player.get('e','4')) return;
            return num+=player.hp;
        },
                    targetInRange:function (card,player,target,now){
            if(player.get('e','5')) return;
            var type=get.type(card);
            if(type=='trick'||type=='delay') return true;
        },
                },
                trigger:{
                    player:"chooseToRespondBegin",
                },
                audio:["qqwz星蝶",2],
                group:"qqwz_星蝶2",
                check:function (event,player){
        if(ai.get.damageEffect(player,event.player,player)>=0) return false;
        return true;
    },
                content:function (){
        "step 0"
        player.judge('bagua',function(card){return (get.color(card)=='red')?1.5:-0.5});
        "step 1"
        if(result.judge>0){
            trigger.untrigger();
            trigger.responded=true;
            trigger.result={bool:true,card:{name:'shan'}}
        }
    },
            },
            "qqwz_星蝶2":{
                audio:["qqwz星蝶",2],
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                content:function (){
        var list=get.typeCard('trick');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
    },
                ai:{
                    threaten:1.4,
                },
            },
            "qqwz_将酒":{
                mod:{
                    cardEnabled:function (card,player){
            if(card.name=='jiu'&&_status.event.skill!='qqwz_将酒') return false;
        },
                    cardUsable:function (card,player){
            if(card.name=='jiu'&&_status.event.skill!='qqwz_将酒') return false;
        },
                    cardRespondable:function (card,player){
            if(card.name=='jiu'&&_status.event.skill!='qqwz_将酒') return false;
        },
                    cardSavable:function (card,player){
            if(card.name=='jiu'&&_status.event.skill!='qqwz_将酒') return false;
        },
                },
                enable:["chooseToUse","chooseToRespond"],
                audio:["qqwz将酒",2],
                filter:function (event,player){
        return player.num('h','jiu')>0;
    },
                filterCard:{
                    name:"jiu",
                },
                viewAs:{
                    name:"juedou",
                },
                viewAsFilter:function (player){
        if(!player.num('h','jiu')) return false;
    },
                check:function (){return 1},
                ai:{
                    skillTagFilter:function (player){
            if(!player.num('h','jiu')) return false;
        },
                    respondSha:true,
                    order:4,
                    useful:-1,
                    value:-1,
                    basic:{
                        order:5,
                        useful:1,
                        value:4.5,
                    },
                    result:{
                        target:-1.5,
                        player:function (player,target){
                        if(ai.get.damageEffect(target,player,target)>0&&ai.get.attitude(player,target)>0&&ai.get.attitude(target,player)>0){
                            return 0;
                        }
                        var hs1=target.get('h','sha');
                        var hs2=player.get('h','sha');
                        if(hs1.length>hs2.length+1){
                            return -2;
                        }
                        var hsx=target.get('h');
                        if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                            return -2;
                        }
                        if(hsx.length>3&&hs2.length==0){
                            return -2;
                        }
                        if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                            return -2;
                        }
                        return -0.5;
                    },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "qqwz_破敌":{
                audio:["qqwz破敌",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target&&target.num('h')>0;
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target);
        "step 1"
        if(result.bool){
            player.storage.qqwz_破敌=target;
            player.addTempSkill('qqwz_破敌2','phaseAfter');
            player.addTempSkill('qqwz_破敌4','phaseAfter');
        }
        else{
            player.addTempSkill('qqwz_破敌3','phaseAfter');
        }
    },
                ai:{
                    order:function (name,player){
            var cards=player.get('h');
            if(player.num('h','sha')==0){
                return 1;
            }
            for(var i=0;i<cards.length;i++){
                if(cards[i].name!='sha'&&cards[i].number>11&&ai.get.value(cards[i])<7){
                    return 9;
                }
            }
            return ai.get.order({name:'sha'})-1;
        },
                    result:{
                        player:function (player){
                if(player.num('h','sha')>0) return 0;
                var num=player.num('h');
                if(num>player.hp) return 0;
                if(num==1) return -2;
                if(num==2) return -1;
                return -0.7;
            },
                        target:function (player,target){
                var num=target.num('h');
                if(num==1) return -1;
                if(num==2) return -0.7;
                return -0.5
            },
                    },
                    threaten:1.3,
                },
            },
            "qqwz_破敌2":{
                mod:{
                    targetInRange:function (card,player,target,now){
                    if(player.storage.qqwz_破敌==target) return true;
                },
                    cardUsable:function (card,player,num){
                    if(card.name=='sha') return Infinity;
                },
                },
                ai:{
                    unequip:true,
                },
            },
            "qqwz_破敌3":{
                audio:["qqwz破敌",2],
                trigger:{
                    source:"damageEnd",
                },
                filter:function (event,player){
        return event.card&&event.card.name=='sha';
    },
                content:function (){
     trigger.player.die();          
    },
            },
            "qqwz_破敌4":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                },
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                content:function (){
     trigger.directHit=true;
    },
                group:"qqwz_破敌5",
            },
            "qqwz_破敌5":{
                audio:["qqwz破敌",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha')&&
        event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
            },
            "qqwz_篱下":{
                audio:["qqwz篱下",2],
                trigger:{
                    global:"useCard",
                },
                forced:true,
                check:function (event,player){
        return ai.get.effect(player,event.card,event.player,player)>0;
    },
                filter:function (event,player){
        if(!event.targets) return false;
        if(event.player==player) return false;
        if(event.targets.contains(player)) return false;
        var type=get.type(event.card);
        if(type!='basic'&&type!='trick') return false;
        if(lib.filter.targetEnabled2(event.card,event.player,player)){
            for(var i=0;i<event.targets.length;i++){
                if(get.distance(event.targets[i],player)<=1) return true;
            }
        }
        return false;
    },
                content:function (){
        'step 0'
        game.delay(0.5);
        'step 1'
        trigger.targets.add(player);
        trigger.player.line(player,'green');
    },
            },
            "qqwz_散财":{
                audio:["qqwz散财",2],
                trigger:{
                    source:"damageEnd",
                },
                group:"qqwz_散财_1",
                filter:function (event,player){
        return _status.currentPhase==player&&event.player.isAlive()&&
        event.player.num('he')>0;
    },
                forced:true,
                content:function (){
        var num=0;
        if(trigger.player.num('h')) num+=2;
        if(trigger.player.num('e')) num+=2;
        if(num){
            player.gainPlayerCard(4,trigger.player,num,'he',true).set('filterButton',function(button){
                for(var i=0;i<ui.selected.buttons.length;i++){
                    if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
                }
                return true;
            });
        }
    },
                mod:{
                    maxHandcard:function (player,num){
                        return num+player.maxHp;
                    },
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        audio:["qqwz散财",2],
                        content:function (){
                    trigger.num++;
                },
                        sub:true,
                    },
                },
            },
            "qqwz_策定":{
                enable:"phaseUse",
                usable:1,
                audio:["qqwz策定",2],
                position:"he",
                filterCard:function (card){
        return card.name=='sha'||get.type(card)=='equip'||get.type(card)=='basic';
    },
                filter:function (event,player){
        return player.num('h','sha')>0||player.num('he',{type:'equip'})>0||player.num('h',{type:'basic'})>0;
    },
                check:function (card){return 8-ai.get.value(card)},
                selectTarget:2,
                multitarget:true,
                discard:false,
                targetprompt:["得到牌","攻击目标"],
                prepare:"give",
                filterTarget:function (card,player,target){
        if(ui.selected.targets.length==0){
            return player!=target;
        }
        else{
            return lib.filter.filterTarget({name:'sha'},ui.selected.targets[0],target);
        }
    },
                content:function (){
        "step 0"
        targets[0].gain(cards,player);
        "step 1"
        targets[0].chooseControl('摸牌','出杀和决斗',function(){
            var player=_status.event.player;
            var target=_status.event.target;
            if(ai.get.effect(_status.event.target,{name:'sha'},player,player)>0){
                return 1;
            }
            return 0;
        }).set('target',targets[1]).set('prompt','对'+get.translation(targets[1])+'使用一张杀和一张决斗，或摸二张牌');
        "step 2"
        if(result.control=='摸牌'){
            targets[0].draw(2);
        }
        else{
            targets[0].useCard({name:'sha'},targets[1]);
            targets[0].useCard({name:'juedou'},targets[1]);
        }
    },
                ai:{
                    result:{
                        player:function (player){
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(players[i]!=player&&ai.get.attitude(player,players[i])>1&&ai.get.attitude(players[i],player)>1){
                        return 1;
                    }
                }
                return 0;
            },
                        target:function (player,target){
                if(ui.selected.targets.length){
                    return -0.1;
                }
                return 1;
            },
                    },
                    order:8.5,
                    expose:0.2,
                },
            },
            "qqwz_殉道":{
                audio:["qqwz殉道",2],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
        return _status.currentPhase!=player;
    },
                content:function (){
        player.addTempSkill('qqwz_殉道2',['phaseAfter','phaseBefore']);
    },
            },
            "qqwz_殉道2":{
                trigger:{
                    target:"useCardToBefore",
                },
                audio:["qqwz殉道",2],
                group:["qqwz_殉道3","qqwz_殉道4"],
                forced:true,
                priority:15,
                filter:function (event,player){
        return get.type(event.card)=='trick'||get.type(event.card)=='basic';
    },
                content:function (){
        game.log(player,'发动了殉道，',trigger.card,'对',trigger.target,'失效')
        trigger.untrigger();
        trigger.finish();
    },
                mark:true,
                intro:{
                    content:"一切伤害对你无效",
                },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='trick'||get.type(card)=='basic') return [0,0,0,0];
            },
                    },
                },
            },
            "qqwz_殉道3":{
                audio:["qqwz殉道",2],
                trigger:{
                    player:"loseHpBefore",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
trigger.untrigger();
trigger.finish();
},
            },
            "qqwz_殉道4":{
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
trigger.untrigger();
trigger.finish();  
},
            },
            "qqwz_繁华":{
                audio:["qqwz繁华",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                content:function (){
        player.draw(3);
        player.addTempSkill('qqwz_繁华2','phaseAfter');
    },
                ai:{
                    threaten:1.5,
                },
            },
            "qqwz_繁华2":{
                audio:["qqwz繁华",2],
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function (event){
        return (get.type(event.card)=='basic');
    },
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='trick';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.gain(game.createCard(event.card),'gain2');
        }
    },
                ai:{
                    threaten:1.4,
                },
            },
            "qqwz_汉室":{
                audio:["qqwz汉室",2],
                group:"qqwz_汉室2",
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    player.gainMaxHp();
    trigger.untrigger();
    trigger.finish();
},
                mod:{
                    globalTo:function (from,to,distance){
            return distance+2;
        },
                },
            },
            "qqwz_汉室2":{
                audio:["qqwz汉室",2],
                enable:"phaseUse",
                usable:2,
                viewAs:{
                    name:"tao",
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"uncheck":[]},"suit":"diamond","number":11,"name":"bxyr_kaitianfu","_transform":"translateX(448px)","_mouseentercreated":false,"clone":{"name":"bxyr_kaitianfu","suit":"diamond","number":11,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":494},"original":"h","timeout":464},{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"uncheck":[]},"suit":"diamond","number":2,"name":"jihuocard","_transform":"translateX(336px)","_mouseentercreated":false,"clone":{"name":"jihuocard","suit":"diamond","number":2,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":495},"original":"h","timeout":465}],
                },
                filterCard:function (card,player){
        if(ui.selected.cards.length){
            return get.suit(card)==get.suit(ui.selected.cards[0]);
        }
        var cards=player.get('h');
        for(var i=0;i<cards.length;i++){
            if(card!=cards[i]){
                if(get.suit(card)==get.suit(cards[i])) return true;
            }
        }
        return false;
    },
                selectCard:2,
                complexCard:true,
                check:function (card){
        return 6-ai.get.value(card);
    },
                ai:{
                    basic:{
                        order:10,
                        useful:1,
                        value:5,
                    },
                    wuxie:function (target,card,player,viewer){
            if(ai.get.attitude(viewer,target)>0&&target.num('h','shan')){
                if(!target.num('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                    result:{
                        target:function (player,target){
                if(player.hasUnknown(2)&&get.mode()!='guozhan') return 0;
                var nh=target.num('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                        recover:1,
                        save:1,
                    },
                },
            },
            "qqwz_威视":{
                audio:["qqwz威视",2],
                trigger:{
                    global:"phaseBegin",
                },
                check:function (event,player){
        if(ai.get.attitude(player,event.player)<-2){
            var cards=player.get('h');
            if(cards.length>player.hp) return true;
            for(var i=0;i<cards.length;i++){
                var useful=ai.get.useful(cards[i]);
                if(useful<5) return true;
                if(cards[i].number>9&&useful<7) return true;
            }
        }
        return false;
    },
                logTarget:"player",
                filter:function (event,player){
        return event.player!=player&&
            player.num('h')>0&&event.player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(trigger.player);
        "step 1"
        if(result.bool){
            player.draw(2);
            trigger.player.addTempSkill('qqwz_威视2','phaseAfter');
        }
    },
            },
            "qqwz_威视2":{
                trigger:{
                    player:"UseCard",
                },
                forced:true,
                filter:function (event,player){
return Math.random()<=0.6;
},
                content:function (){
player.loseHp();
},
                mod:{
                    playerEnabled:function (card,player,target){
            if(player!=target) return false;
        },
                },
            },
            "qqwz_牵连":{
                audio:["qqwz牵连",2],
                trigger:{
                    target:"shaBefore",
                },
                direct:true,
                priority:11,
                selectTarget:[1,3],
                content:function (){
        "step 0"
        player.chooseTarget([1,3],get.prompt('qqwz_牵连'),function(card,player,target){
            return target!=player&&_status.event.getTrigger().player.canUse('sha',target,false);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            return ai.get.effect(target,trigger.card,trigger.player,player)+0.1;
        });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz_牵连',target);
            event.target=target;
            target.chooseCard({name:'shan'},'交给'+get.translation(player)+
            '一张闪，或成为此杀的额外目标').set('ai',function(card){
                return ai.get.attitude(target,_status.event.source)>=0?1:-1;
            }).set('source',player);
            game.delay();
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.gain(result.cards,event.target);
            event.target.$give(result.cards,player);
            game.delay();
        }
        else{
            player.recover();
            trigger.targets.push(event.target);
            game.log(event.target,'成为了额外目标');
        }
    },
                ai:{
                    expose:0.2,
                    effect:{
                        target:function (card,player,target){
                if(card.name!='sha') return;
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    var target2=players[i];
                    if(player!=target2&&target!=target2&&player.canUse(card,target2,false)&&
                        ai.get.effect(target2,{name:'shacopy',nature:card.nature,suit:card.suit},player,target)<0){
                        if(target.hp==target.maxHp) return [0,1];
                        return [0,0];
                    }
                }
            },
                    },
                },
            },
            "qqwz_抵命":{
                mod:{
                    cardEnabled:function (card,player){
            if(card.name=='tao'&&_status.event.skill!='qqwz_抵命') return false;
        },
                    cardUsable:function (card,player){
            if(card.name=='tao'&&_status.event.skill!='qqwz_抵命') return false;
        },
                    cardRespondable:function (card,player){
            if(card.name=='tao'&&_status.event.skill!='qqwz_抵命') return false;
        },
                    cardSavable:function (card,player){
            if(card.name=='tao'&&_status.event.skill!='qqwz_抵命') return false;
        },
                },
                enable:["chooseToUse","chooseToRespond"],
                audio:["qqwz抵命",2],
                filter:function (event,player){
        return player.num('h','tao')>0;
    },
                filterCard:{
                    name:"tao",
                },
                viewAs:{
                    name:"guohe",
                    suit:"heart",
                    number:3,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"uncheck":[]},"suit":"heart","number":3,"name":"tao","_transform":"translateX(448px)","_mouseentercreated":false,"clone":{"name":"tao","suit":"heart","number":3,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":1874},"original":"h","timeout":1842}],
                },
                viewAsFilter:function (player){
        if(!player.num('h','tao')) return false;
    },
                check:function (){return 1},
                ai:{
                    skillTagFilter:function (player){
            if(!player.num('h','tao')) return false;
        },
                    respondSha:true,
                    order:4,
                    useful:-1,
                    value:-1,
                    basic:{
                        order:5,
                        useful:1,
                        value:4.5,
                    },
                    result:{
                        target:-1.5,
                        player:function (player,target){
                if(ai.get.damageEffect(target,player,target)>0&&ai.get.attitude(player,target)>0&&ai.get.attitude(target,player)>0){
                    return 0;
                }
                var hs1=target.get('h','sha');
                var hs2=player.get('h','sha');
                if(hs1.length>hs2.length+1){
                    return -2;
                }
                var hsx=target.get('h');
                if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                    return -2;
                }
                if(hsx.length>3&&hs2.length==0){
                    return -2;
                }
                if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                    return -2;
                }
                return -0.5;
            },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                        loseCard:1,
                        discard:1,
                    },
                },
            },
            "qqwz_毒谋":{
                audio:["qqwz毒谋",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        return game.hasPlayer(function(player){
            return player.num('h')==0;
        });
    },
                content:function (){
        'step 0'
        player.chooseTarget([1,5],get.prompt('qqwz_毒谋'),function(card,player,target){
            return target.num('h')==0;
        }).set('ai',function(target){
            var player=_status.event.player;
            return ai.get.damageEffect(target,player,player);
        });
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_毒谋',result.targets);
            result.targets[0].loseHp(2);
        }
    },
            },
            "qqwz_火牢":{
                skillAnimation:"epic",
                animationColor:"fire",
                audio:["qqwz火牢",2],
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.qqwz_火牢;
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                unique:true,
                selectTarget:-1,
                multitarget:true,
                multiline:true,
                mark:true,
                line:"fire",
                content:function (){
        "step 0"
        player.storage.qqwz_火牢=true;
        player.awakenSkill('qqwz_火牢');
        event.num=1;
        event.targets=targets.slice(0);
        event.targets.sort(lib.sort.seat);
        "step 1"
        if(event.targets.length){
            var target=event.targets.shift();
            event.target=target;
            var res=ai.get.damageEffect(target,player,target,'fire');
            target.chooseToDiscard('he','弃置至少'+get.cnNumber(event.num)+'张牌或受到4点火焰伤害',[num,Infinity]).set('ai',function(card){
                if(ui.selected.cards.length>=_status.event.getParent().num) return -1;
                if(_status.event.player.hasSkillTag('nofire')) return -1;
                if(_status.event.res>=0) return 6-ai.get.value(card);
                if(get.type(card)!='basic'){
                    return 10-ai.get.value(card);
                }
                return 8-ai.get.value(card);
            }).set('res',res);
        }
        else{
            event.finish();
        }
        "step 2"
        if(!result.bool){
            event.target.damage(4,'fire');
            event.num=1;
        }
        else{
            event.num=result.cards.length+2;
        }
        event.goto(1);
    },
                ai:{
                    order:1,
                    result:{
                        player:function (player){
                var num=0,players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(player!=players[i]&&ai.get.damageEffect(players[i],player,players[i],'fire')<0){
                        var att=ai.get.attitude(player,players[i]);
                        if(att>0){
                            num--;
                        }
                        else if(att<0){
                            num++;
                        }
                    }
                }
                if(game.players.length<5){
                    return num-1;
                }
                else{
                    return num-2;
                }
            },
                    },
                },
                init:function (player){
        player.storage.xinfencheng=false;
    },
                intro:{
                    content:"limited",
                },
            },
            "qqwz_火刑":{
                audio:["qqwz火刑",2],
                usable:2,
                trigger:{
                    global:"loseEnd",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player;
},
                content:function (){
 trigger.player.damage(2,'fire')._triggered=null;
},
            },
            "qqwz_破计":{
                audio:["qqwz破计",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
        player.draw(2);
    },
                mod:{
                    wuxieRespondable:function (){
                        return false;
                    },
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'&&player!=target){
                return false;
            }
        },
                },
            },
            "qqwz_诛族":{
                audio:["qqwz诛族",2],
                enable:"phaseUse",
                usable:2,
                filterCard:function (card){
        return get.type(card,'trick')=='trick';
    },
                filterTarget:function (card,player,target){
        return target!=player&&target.num('h')>0;
    },
                discard:false,
                delay:false,
                check:function (card){
        return 8-ai.get.value(card);
    },
                content:function (){
        'step 0'
        player.showCards(cards);
        'step 1'
        ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
        var n1=target.get('he',function(card){
            if(!lib.filter.cardDiscardable(card,player)) return false;
            return get.type(card,'trick')=='trick';
        });
        var n2=target.get('he',function(card){
            if(!lib.filter.cardDiscardable(card,player)) return false;
            return get.type(card,'trick')!='trick';
        });
        if(n1.length>1||n2.length>2||(n1.length==3&&n2.length==2)){
            target.chooseToDiscard('弃置3张锦囊牌，或两张非锦囊牌',true,'he',function(card,player){
                if(!lib.filter.cardDiscardable(card,player)) return false;
                if(!_status.event.nontrick){
                    return get.type(card,'trick')=='trick';
                }
                if(ui.selected.cards.length){
                    return get.type(card,'trick')!='trick';
                }
                return true;
            }).set('ai',function(card){
                if(get.type(card,'trick')=='trick'){
                    return 8-ai.get.value(card);
                }
                return -ai.get.value(card);
            }).set('selectCard',function(){
                if(ui.selected.cards.length==3&&get.type(ui.selected.cards[0],'trick')=='trick'){
                    return 1;
                }
                return 2;
            }).set('nontrick',n2.length>=2).set('complexCard',true);
        }
        else{
            if(n1.length){
                target.discard(n1);
            }
            else if(n2.length){
                target.discard(n2);
            }
        }
    },
                ai:{
                    order:9,
                    result:{
                        target:-1,
                    },
                },
            },
            "qqwz_去病":{
                audio:["qqwz去病",2],
                enable:"phaseUse",
                filterCard:true,
                usable:1,
                check:function (card){
        return 9-ai.get.value(card)
    },
                filterTarget:function (card,player,target){
        if(target.hp>=target.maxHp) return false;
        return true;
    },
                content:function (){
        target.damage()._triggered=null;
        player.recover();
    },
                ai:{
                    result:{
                        target:function (player,target){
                            var hs=target.num('he');
                            if(hs.length<3) return 0;
                            return -1.5;
                        },
                        player:-1,
                    },
                    order:10,
                },
                group:"qqwz_去病_1",
                subSkill:{
                    "1":{
                        audio:["qqwz去病",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
              player.recover();
    },
                        ai:{
                            expose:0.5,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz_医心":{
                audio:["qqwz医心",2],
                group:"qqwz_医心_1",
                enable:"chooseToUse",
                filter:function (event,player){
        return _status.currentPhase!=player;
    },
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"tao",
                },
                prompt:"将一张红色牌当桃使用",
                check:function (card){return 15-ai.get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            return player.num('he',{color:'red'})>0&&_status.currentPhase!=player;
        },
                    threaten:1.5,
                    save:true,
                    basic:{
                        order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                        useful:[8,6.5],
                        value:[8,6.5],
                    },
                    result:{
                        target:function (player,target){
                // if(player==target&&player.hp<=0) return 2;
                var nd=player.needsToDiscard();
                var keep=false;
                if(nd<=0){
                    keep=true;
                }
                else if(nd==1&&target.hp>=2&&target.num('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2||nd==0) return 0;
                    if(target.hp==2){
                        if(game.hasPlayer(function(current){
                            if(target!=current&&ai.get.attitude(target,current)>=3){
                                if(current.hp<=1) return true;
                                if((mode=='identity'||mode=='versus'||mode=='chess')&&current.identity=='zhu'&&current.hp<=2) return true;
                            }
                        })){
                            return 0;
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=ai.get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=game.countPlayer(function(current){
                            if(current.identity=='fan'){
                                return current.num('h','tao');
                            }
                        });
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
                subSkill:{
                    "1":{
                        audio:["qqwz医心",2],
                        trigger:{
                            player:"recoverEnd",
                        },
                        forced:true,
                        content:function (){
     player.recover(player.maxHp-player.hp);
},
                        sub:true,
                    },
                },
            },
            "qqwz_缓图":{
                audio:["qqwz缓图",2],
                group:"qqwz_缓图2",
                trigger:{
                    player:"useCard",
                },
                forced:true,
                filter:function (event,player){
      return Math.random()<=0.5;
},
                content:function (){
        player.draw();
        player.recover();
    },
                intro:{
                    content:"card",
                },
            },
            "qqwz_缓图2":{
                audio:["qqwz缓图",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
   return get.type(event.card)=='basic'&&Math.random()<=0.4;
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
            },
            "qqwz_鸿鹄":{
                audio:["qqwz鸿鹄",2],
                group:"qqwz_鸿鹄2",
                trigger:{
                    player:"damageAfter",
                },
                forced:true,
                content:function (){
        player.draw();
        player.recover();
    },
            },
            "qqwz_鸿鹄2":{
                audio:["qqwz鸿鹄",2],
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i])=='d'){
                return true;
            }
        }
        return false;
    },
                direct:true,
                popup:false,
                content:function (){
        "step 0"
        if(trigger.delay==false) game.delay();
        event.cards=[];
        for(var i=0;i<trigger.cards.length;i++){
            if(get.position(trigger.cards[i])=='d'){
                event.cards.push(trigger.cards[i]);
                ui.special.appendChild(trigger.cards[i]);
            }
        }
        "step 1"
        if(event.cards.length){
            player.chooseCardButton(get.prompt('qqwz_鸿鹄2'),event.cards,[1,event.cards.length]).set('ai',function(button){
                if(!_status.event.goon||ui.selected.buttons.length) return 0;
                return 1;
            }).set('goon',game.hasPlayer(function(current){
                return Math.abs(ai.get.attitude(player,current))>1;
            }));
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            event.togive=result.links.slice(0);
            player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true,function(card,player,target){
                return target!=player;
            }).set('ai',function(target){
                var att=ai.get.attitude(_status.event.player,target);
                if(_status.event.enemy){
                    return -att;
                }
                else{
                    if(att>2) return att/Math.sqrt(1+target.num('h'));
                    return att/Math.sqrt(1+target.num('h'))/5;
                }
            }).set('enemy',ai.get.value(event.togive[0])<0);
        }
        else{
            for(var i=0;i<event.cards.length;i++){
                ui.discardPile.appendChild(event.cards[i]);
            }
            event.finish();
        }
        "step 3"
        if(result.bool){
            player.logSkill('qqwz_鸿鹄2',result.targets);
            for(var i=0;i<event.togive.length;i++){
                event.cards.remove(event.togive[i]);
            }
            result.targets[0].gain(event.togive,player);
            result.targets[0].$gain2(event.togive);
            event.goto(1);
        }
        else{
            for(var i=0;i<event.cards.length;i++){
                ui.discardPile.appendChild(event.cards[i]);
            }
            event.finish();
        }
    },
                ai:{
                    expose:0.1,
                    effect:{
                        target:function (card,player,target,current){
                if(target.hasFriend()&&get.tag(card,'discard')){
                    if(current<0) return 0;
                    return [1,1];
                }
            },
                    },
                },
            },
            "qqwz_隔墙":{
                audio:["qqwz隔墙",2],
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
        return event.player!=player&&event.player.isAlive();
    },
                frequent:true,
                content:function (){
        "step 0"
        if(trigger.player.num('e')){
            player.choosePlayerCard(trigger.player,'e','选择装备一张装备牌并令其翻面，或取消并摸二张牌');
        }
        "step 1"
        if(result&&result.links&&result.links.length){
            game.delay(2);
            trigger.player.$give(result.links[0],player);
            trigger.player.turnOver();
            player.equip(result.links[0]);
            player.line(trigger.player);
        }
        else{
            player.draw(2);
        }
    },
                ai:{
                    expose:0.1,
                },
            },
            "qqwz_投曹":{
                skillAnimation:true,
                audio:["qqwz投曹",2],
                unique:true,
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.qqwz_投曹&&player.num('e')>0;
    },
                init:function (player){
        player.storage.qqwz_投曹=false;
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                mark:true,
                content:function (){
        "step 0"
        player.awakenSkill('qqwz_投曹');
        var cards=player.get('e');
        target.gain(cards,player);
        event.num=cards.length;
        player.$give(cards,target);
        player.storage.qqwz_投曹=true;
        game.delay();
        "step 1"
        target.chooseTarget([1,event.num],'令'+get.translation(player)+'回复'+
            event.num+'点体力并令其摸'+event.num+'张牌，或对攻击范围内的'+event.num+'名角色造成2点伤害',function(card,player,target2){
            return get.distance(_status.event.player,target2,'attack')<=1;
        }).set('ai',function(target2){
            var target=_status.event.player;
            var player=_status.event.getParent().player;
            if(ai.get.attitude(target,player)>0){
                if(player.hp+event.num<=player.maxHp||player.hp==1) return -1;
            }
            return ai.get.damageEffect(target2,target,target);
        });
        "step 2"
        if(result.bool){
            target.line(result.targets,'green');
            event.targets=result.targets;
            event.num2=0;
        }
        else{
            player.recover(event.num);
            player.draw(event.num);
            event.finish();
        }
        "step 3"
        if(event.num2<event.targets.length){
            event.targets[event.num2].damage(2,target);
            event.num2++;
            event.redo();
        }
    },
                intro:{
                    content:"limited",
                },
                ai:{
                    order:1,
                    result:{
                        target:1,
                        player:function (player){
                var bool=true,players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(players[i]!=player&&ai.get.attitude(player,players[i])>2&&ai.get.attitude(players[i],player)>2){
                        bool=false;break;
                    }
                }
                if(bool) return -10;
                if(player.hp==1) return 1;
                if(game.phaseNumber<game.players.length) return -10;
                if(player.num('e')+player.hp<=player.maxHp) return 1;
                return -10;
            },
                    },
                },
            },
            "qqwz_罪业":{
                audio:["qqwz罪业",2],
                group:["qqwz_罪业2","qqwz_罪业3"],
                enable:"phaseUse",
                usable:1,
                delay:0,
                filter:function (event,player){
        return player.num('h',{color:'red'})&&player.num('h',{color:'black'});
    },
                content:function (){
        'step 0'
        player.chooseControl('红色','黑色').set('ai',function(){
            var player=_status.event.player;
            if(player.num('h',{color:'red'})==1&&
            player.num('h',{color:'black'})>1) return '红色';
            return '黑色';
        });
        'step 1'
        event.control=result.control;
        player.showHandcards();
        'step 2'
        var cards;
        if(event.control=='红色'){
            cards=player.get('h',{color:'red'});
        }
        else{
            cards=player.get('h',{color:'black'});
        }
        player.discard(cards);
        event.num=cards.length;
        'step 3'
        player.chooseTarget([1,event.num],function(card,player,target){
            return target!=player&&target.num('he')>0;
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target)+0.5;
        });
        'step 4'
        if(result.bool&&result.targets){
            player.line(result.targets,'green');
            event.targets=result.targets;
            event.targets.sort(lib.sort.seat);
            event.gained=event.targets.length;
        }
        else{
            event.finish();
        }
        'step 5'
        if(event.targets.length){
            player.gainPlayerCard(2,event.targets.shift(),'he',true);
            event.redo();
        }
        'step 6'
        if(event.gained>=5){
            player.loseMaxHp();
        }
    },
                ai:{
                    order:function (item,player){
            if(player.num('h',{color:'red'})==1) return 10;
            if(player.num('h',{color:'black'})==1) return 10;
            return 1;
        },
                    result:{
                        player:1,
                    },
                },
            },
            "qqwz_罪业2":{
                audio:["qqwz罪业",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_罪业3":{
                audio:["qqwz罪业",2],
                trigger:{
                    player:"loseHpBefore",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
trigger.untrigger();
trigger.finish();
},
            },
            "qqwz_推卸":{
                audio:["qqwz推卸",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return event.num>1;
    },
                content:function (){
         "step 0"
        player.chooseTarget(get.prompt('qqwz_推卸'),function(card,player,target){
                    return target!=event.player;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz_推卸',target);
            target.draw(2);
            player.draw();
            player.loseHp();
            trigger.untrigger();
            trigger.finish();
        }
},
            },
            "qqwz_谗言":{
                audio:["qqwz谗言",2],
                trigger:{
                    player:"phaseUseBegin",
                },
                check:function (event,player){
        var nh=player.num('h')-player.num('h',{type:'equip'});
        if(nh<=1) return true;
        if(player.num('h','tao')) return false;
        if(nh<=2) return Math.random()<0.7;
        if(nh<=3) return Math.random()<0.4;
        return false;
    },
                content:function (){
        player.draw(player.hp);
        player.addTempSkill('qqwz_谗言2','phaseAfter');
    },
            },
            "qqwz_谗言2":{
                audio:["qqwz谗言",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                content:function (){
       player.draw();
},
                mod:{
                    maxHandcard:function (player,num){
            var damage=player.getStat().damage;
            if(typeof damage=='number') return num-player.hp+damage;
            return 0;
        },
                },
            },
            "qqwz_乱国":{
                audio:["qqwz乱国",2],
                group:["qqwz_乱国锦囊","qqwz_乱国机关","qqwz_乱国回合","qqwz_乱国延迟锦囊","qqwz_乱国基本"],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(event.parent.name=='qqwz_乱国') return false;
        return get.type(event.card,'trick')=='trick';
    },
                content:function (){
    var list=game.filterPlayer(function(current){
            return player.canUse('nanman',current)&&current.isEnemyOf(player);
        });
        list.sort(lib.sort.seat);
        player.useCard({name:'nanman'},list);
    },
                ai:{
                    threaten:1.5,
                    expose:0.1,
                },
            },
            "qqwz_乱国锦囊":{
                audio:["qqwz乱国",2],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(event.parent.name=='qqwz_乱国锦囊') return false;
        return get.type(event.card,'jiguan')=='jiguan';
    },
                content:function (){
    var list=game.filterPlayer(function(current){
            return player.canUse('wuzhong',current)&&current.isEnemyOf(player);
        });
        list.sort(lib.sort.seat);
        player.useCard({name:'wuzhong'},list);
    },
                ai:{
                    threaten:1.5,
                    expose:0.1,
                },
            },
            "qqwz_乱国基本":{
                audio:["qqwz乱国",2],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(event.parent.name=='qqwz_乱国基本') return false;
        return get.type(event.card,'food')=='food';
    },
                content:function (){
    player.recover();
    },
                ai:{
                    threaten:1.5,
                    expose:0.1,
                },
            },
            "qqwz_乱国机关":{
                audio:["qqwz乱国",2],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(event.parent.name=='qqwz_乱国机关') return false;
        return get.type(event.card,'jiguan')=='jiguan';
    },
                content:function (){
    var list=game.filterPlayer(function(current){
            return player.canUse('juedou',current)&&current.isEnemyOf(player);
        });
        list.sort(lib.sort.seat);
        player.useCard({name:'juedou'},list);
    },
                ai:{
                    threaten:1.5,
                    expose:0.1,
                },
            },
            "qqwz_乱国延迟锦囊":{
                audio:["qqwz乱国",2],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(event.parent.name=='qqwz_乱国延迟锦囊') return false;
        return get.type(event.card,'basic')=='basic';
    },
                content:function (){
    var list=game.filterPlayer(function(current){
            return player.canUse('wugu',current)&&current.isEnemyOf(player);
        });
        list.sort(lib.sort.seat);
        player.useCard({name:'wugu'},list);
    },
                ai:{
                    threaten:1.5,
                    expose:0.1,
                },
            },
            "qqwz_乱国回合":{
                audio:["qqwz乱国",2],
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                filter:function (event,player){
     return player!=event.player;
},
                content:function (){
      player.draw();
     player.phase();
},
            },
            "qqwz_并起":{
                audio:["qqwz并起",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target;
    },
                selectTarget:function (){
        return [1,4];
    },
                position:"he",
                check:function (card){
        return 8-ai.get.useful(card);
    },
                content:function (){
        "step 0"
        player.draw(2);
        player.recover(3);
        "step 1"
        target.draw(4);
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player){
                var num=player.countCards('h');
                if(player.hp==1) return 1;
                if(player.hp==2&&num<=2) return 1;
                if(player.hp==3&&num<=1) return 1;
                if(game.phaseNumber<game.players.length*2) return 0;
                if(player.hasUnknown()) return 0;
                return 1;
            },
                    },
                },
            },
            "qqwz_让梨":{
                audio:["qqwz让梨",2],
                group:"qqwz_让梨2",
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=3;
    },
                ai:{
                    threaten:1.3,
                },
            },
            "qqwz_儒门":{
                audio:["qqwz儒门",2],
                trigger:{
                    player:"damageBegin",
                },
                filter:function (event,player){
        return event.source&&event.source.hp<player.hp;
    },
                content:function (){
        trigger.num=0;
    },
                ai:{
                    threaten:0.8,
                },
            },
            "qqwz_让梨2":{
                audio:["qqwz让梨",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_秉忠":{
                trigger:{
                    player:"discardAfter",
                },
                direct:true,
                audio:["qqwz秉忠",2],
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i])=='d'){
                return true;
            }
        }
        return false;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_秉忠'),function(card,player,target){
            return player!=target&&target.num('he')>0;
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_秉忠',result.targets);
            event.target=result.targets[0];
            player.discardPlayerCard(2,event.target,true);
        }
        else{
            event.finish();
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "qqwz_孤援":{
                audio:["qqwz孤援",2],
                trigger:{
                    global:"damageEnd",
                },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('孤援'),function(card,player,target){
                    return target.hp!=0;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz_孤援',target);
            target.draw();
        }
        player.recover();
    },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.num('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "qqwz_妖艳":{
                audio:["qqwz妖艳",2],
                group:"qqwz_妖艳2",
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
        game.countPlayer(function(current){
            if(current!=player&&!current.hasSkill('fengyin')){
                player.line(current,'green');
                current.addTempSkill('fengyin','phaseAfter');
            }
        });
    },
            },
            "qqwz_醉魂":{
                audio:["qqwz醉魂",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('he',{type:'equip'});
    },
                filterCard:{
                    type:"equip",
                },
                position:"he",
                filterTarget:function (card,player,target){
        return target!=player;
    },
                check:function (card){
        var player=_status.event.player;
        if(game.hasPlayer(function(current){
            return ai.get.attitude(player,current)>2&&current.isTurnedOver();
        })){
            return 10-ai.get.value(card,player);
        }
        return 6-ai.get.value(card,player);
    },
                content:function (){
        'step 0'
        target.turnOver();
        'step 1'
        target.draw();
        player.draw();
    },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
                if(target.isTurnedOver()) return 2;
                return -0.5;
            },
                    },
                },
            },
            "qqwz_妖艳2":{
                audio:["qqwz妖艳",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event){       
        return event.source.sex=='male';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        trigger.source.loseHp();
    },
            },
            "qqwz_战神":{
                group:["qqwz_战神决斗","qqwz_战神伤害","qqwz_战神闪杀","qqwz_战神绝境","qqwz_战神免致死","qqwz_战神无视防具"],
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                },
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                audio:["qqwz战神",2],
                filter:function (event,player){
        return event.card;
    },
                content:function (){
        trigger.directHit=true;
    },
            },
            "qqwz_战神决斗":{
                audio:["qqwz战神",2],
                trigger:{
                    player:"juedou",
                    target:"juedou",
                },
                forced:true,
                filter:function (event,player){
        return event.turn!=player;
    },
                content:function (){
        "step 0"
        var next=trigger.turn.chooseToRespond({name:'sha'});
        next.autochoose=lib.filter.autoRespondSha;
        next.ai=function(card){
            if(ai.get.attitude(trigger.turn,player)<0&&trigger.turn.num('h','sha')>1){
                return ai.get.unuseful2(card);
            }
            return -1;
        };
        "step 1"
        if(result.bool==false){
            trigger.directHit=true;
        }
    },
                ai:{
                    result:{
                        target:function (card,player,target){
                if(card.name=='juedou'&&target.num('h')>0) return [1,0,0,-1];
            },
                    },
                },
            },
            "qqwz_战神闪杀":{
                audio:["qqwz战神",2],
                enable:["chooseToUse","chooseToRespond"],
                filterCard:{
                    name:"shan",
                },
                viewAs:{
                    name:"sha",
                    suit:"diamond",
                    number:5,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"uncheck":[]},"suit":"diamond","number":5,"name":"shan","_transform":"translateX(112px)","_mouseentercreated":false,"clone":{"name":"shan","suit":"diamond","number":5,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":327},"original":"h","timeout":307}],
                },
                viewAsFilter:function (player){
                if(!player.num('h','shan')) return false;
            },
                prompt:"将一张闪当杀使用或打出",
                check:function (){return 1},
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.6
                    },
                    },
                    respondSha:true,
                    skillTagFilter:function (player){
                    if(!player.num('h','shan')) return false;
                },
                    order:function (){
                    return ai.get.order({name:'sha'})+0.1;
                },
                    useful:-1,
                    value:-1,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    result:{
                        target:function (player,target){
                        if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                            if(ai.get.attitude(player,target)>0){
                                return -6;
                            }
                            else{
                                return -3;
                            }
                        }
                        return -1.5;
                    },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                        natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                        fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                        thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                        poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                    },
                },
            },
            "qqwz_战神伤害":{
                audio:["qqwz战神",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                filter:function (event,player){
        return player.getStat('damage')>=4;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('战神'),function(card,player,target){
                    return player.getStat('damage')>=4;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz_战神_伤害',target);
            target.damage(4)._triggered=null;
        }
    },
            },
            "qqwz_战神绝境":{
                audio:["qqwz战神",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
if(trigger.num>1) trigger.num=1
},
            },
            "qqwz_战神免致死":{
                audio:["qqwz战神",2],
                trigger:{
                    player:"dieBefore",
                },
                forced:true,
                unique:true,
                filter:function (event,player){
       return player.hp>=1;

    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        player.hp==player.hp;
},
            },
            "qqwz_无前":{
                audio:["qqwz无前",2],
                group:["qqwz_无前2","qqwz_无前3","qqwz_无前4","qqwz_无前5"],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                priority:55,
                content:function (){
        var list=["juedou"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
            },
            "qqwz_无前2":{
                audio:["qqwz无前",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='juedou'&&Math.random()<=0.7;;
},
                content:function (){
        trigger.player.die();
},
                mod:{
                    cardUsable:function (card,player,num){
          if(card.name=='sha') return Infinity;
    },
                },
            },
            "qqwz_无前3":{
                audio:["qqwz无前",2],
                trigger:{
                    global:"gainEnd",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.6;
},
                content:function (){
player.draw();
},
            },
            "qqwz_无前4":{
                audio:["qqwz无前",2],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
        var hq=player.num('e');
        player.changeHujia(hq);
},
            },
            "qqwz_无前5":{
                audio:["qqwz无前",2],
                trigger:{
                    global:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
    return player!=event.player;
},
                content:function (){
       game.me.hp+=1;
},
            },
            "qqwz_战神无视防具":{
                ai:{
                    unequip:true,
                    skillTagFilter:function (player,tag,arg){
                    if(arg&&arg.name=='sha') return true;
                    return false;
                },
                },
            },
            "qqwz_进击":{
                audio:["qqwz进击",2],
                group:"qqwz_进击2",
                trigger:{
                    source:"damageEnd",
                },
                direct:true,
                filter:function (event){
     return event.card&&event.card.name=='sha'&&event.cards&&event.player.num('e');
    },
                content:function (){
        "step 0"
        player.choosePlayerCard('e',trigger.player);
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_进击');
            trigger.player.discard(result.links[0]);
            event.card=result.links[0];
        }
        else{
            event.finish();
        }
        "step 2"
        if(get.position(card)=='d'){
            if(get.subtype(card)=='equip3'||get.subtype(card)=='equip4'){
                player.gain(card,trigger.player);
                player.$gain2(card);
            }
        }
    },
            },
            "qqwz_进击2":{
                audio:["qqwz进击",2],
                trigger:{
                    player:"phaseBefore",
                },
                forced:true,
                content:function (){
player.addTempSkill('qqwz_进击3','phaseAfter');
},
            },
            "qqwz_进击3":{
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-99999;
        },
                    selectTarget:function (card,player,range){
           if(card.name=='sha') range[1]+=6;
    },
                },
            },
            "qqwz_白马":{
                audio:["qqwz白马",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
       player.addTempSkill('qqwz_白马2',{player:'phaseBegin'});
       player.addTempSkill('qianxing',{player:'phaseBegin'});
    },
                mod:{
                    globalFrom:function (from,to,current){
            if(from.hp>6) return current-2;
        },
                    globalTo:function (from,to,current){
            if(to.hp<=4) return current+3;
        },
                },
                ai:{
                    threaten:0.8,
                },
            },
            "qqwz_白马2":{
                audio:["qqwz白马",2],
                trigger:{
                    global:"useCard",
                },
                frequent:true,
                filter:function (event){
        return (get.type(event.card)=='equip');
    },
                content:function (){
        player.draw(2);
    },
                ai:{
                    threaten:1.4,
                },
            },
            "qqwz_英雄":{
                audio:["qqwz英雄",2],
                group:["qqwz_英雄2","qqwz_英雄3"],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wu') game.players[i].draw(2);
}
},
            },
            "qqwz_英雄2":{
                audio:["qqwz英雄",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wei') game.players[i].damage(2,'fire')._triggered=null;
}
},
            },
            "qqwz_英雄3":{
                audio:["qqwz英雄",2],
                trigger:{
                    player:"turnOverAfter",
                },
                forced:true,
                content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='qun') game.players[i].TurnOver();
}
},
            },
            "qqwz_急援":{
                audio:["qqwz急援",2],
                group:"qqwz_急援2",
                unique:true,
                trigger:{
                    target:"taoBegin",
                },
                zhuSkill:true,
                forced:true,
                filter:function (event,player){
        if(event.player==player) return false;
        if(!player.hasZhuSkill('qqwz_急援')) return false;
        if(player.hp>0) return false;
        if(event.player.group!='wu') return false;
        return true;
    },
                content:function (){
        player.recover(2);
        player.draw(2);
    },
            },
            "qqwz_急援2":{
                audio:["qqwz急援",2],
                unique:true,
                trigger:{
                    player:"damageBegin",
                },
                zhuSkill:true,
                forced:true,
                filter:function (event,player){
        if(event.source!='wu') return false;
        return true;
    },
                content:function (){
        player.recover(2);
        player.draw();
    },
            },
            "qqwz_权衡":{
                audio:["qqwz权衡",2],
                group:"qqwz_权衡2",
                enable:"phaseUse",
                position:"he",
                usable:3,
                filterCard:true,
                selectCard:[1,Infinity],
                prompt:"弃置任意张牌并摸等量X2的牌",
                check:function (card){
        return 6-ai.get.value(card)
    },
                content:function (){
        var abc=player.hp;
        player.draw(cards.length*2);
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                    threaten:1.5,
                },
            },
            "qqwz_权衡2":{
                mod:{
                    maxHandcard:function (player,num){
            if(player.hp<player.maxHp) return num+player.maxHp-player.hp;
        },
                },
            },
            "qqwz_踏浪":{
                audio:["qqwz踏浪",2],
                group:["qqwz_踏浪2","qqwz_踏浪3","qqwz_踏浪4"],
                enable:"chooseToUse",
                position:"he",
                viewAs:{
                    name:"guohe",
                },
                viewAsFilter:function (player){
        if(!player.num('he')) return false;
    },
                prompt:"将一张牌当过河拆桥使用",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    basic:{
                        order:9,
                        useful:1,
                        value:5,
                    },
                    result:{
                        target:function (player,target){
                var es=target.get('e');
                var nh=target.num('h');
                var noe=(es.length==0||target.hasSkillTag('noe'));
                var noe2=(es.length==1&&es[0].name=='baiyin'&&target.hp<target.maxHp);
                var noh=(nh==0||target.hasSkillTag('noh'));
                if(noh&&noe) return 0;
                if(noh&&noe2) return 0.01;
                if(ai.get.attitude(player,target)<=0) return (target.num('he'))?-1.5:1.5;
                var js=target.get('j');
                if(js.length){
                    var jj=js[0].viewAs?{name:js[0].viewAs}:js[0];
                    if(jj.name=='guohe') return 3;
                    if(js.length==1&&ai.get.effect(target,jj,target,player)>=0){
                        return -1.5;
                    }
                    return 2;
                }
                return -1.5;
            },
                    },
                    tag:{
                        loseCard:1,
                        discard:1,
                    },
                },
            },
            "qqwz_踏浪2":{
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='guohe'||card.name=='lebu') return false;
        },
                },
            },
            "qqwz_踏浪3":{
                audio:["qqwz踏浪",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return event.player.get('h').length!=0;
},
                content:function (){
trigger.untrigger();
trigger.finish();    
},
            },
            "qqwz_踏浪4":{
                audio:["qqwz踏浪",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
                    if(event.player.get('h').length==0) return true;
            },
                forced:true,
                content:function (){
                trigger.player.loseHp(3)._triggered=null;
            },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                        if(card.name=='sha'&&target.get('h').length==0) return [1,-2];
                    },
                    },
                },
            },
            "qqwz_揣测":{
                audio:["qqwz揣测",2],
                enable:"phaseUse",
                usable:3,
                filter:function (event,player){
        return player.num('h')>0;
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                content:function (){
        "step 0"
        target.chooseControl('heart2','diamond2','club2','spade2').set('ai',function(event){
            switch(Math.floor(Math.random()*6)){
                case 0:return 'heart2';
                case 1:case 4:case 5:return 'diamond2';
                case 2:return 'club2';
                case 3:return 'spade2';
            }
        });
        "step 1"
        game.log(target,'选择了'+get.translation(result.control));
        event.choice=result.control;
        target.popup(event.choice);
        event.card=player.get('h').randomGet();
        target.gain(event.card,player);
        player.$give(event.card,target);
        game.delay();
        "step 2"
        if(get.suit(event.card)+'2'!=event.choice) target.damage(2,'nocard')._triggered=null;
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                var eff=ai.get.damageEffect(target,player);
                if(eff>=0) return 1+eff;
                var value=0,i;
                var cards=player.get('h');
                for(i=0;i<cards.length;i++){
                    value+=ai.get.value(cards[i]);
                }
                value/=player.num('h');
                if(target.hp==1) return Math.min(0,value-7);
                return Math.min(0,value-5);
            },
                    },
                },
            },
            "qqwz_焦凤":{
                audio:["qqwz焦凤",2],
                group:"qqwz_焦凤2",
                filter:function (event,player){
        return player.num('he',{color:'red'})>0;
    },
                enable:"chooseToUse",
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"lebu",
                    suit:"diamond",
                    number:13,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":13,"name":"sha","cardid":"6749506513","clone":{"name":"sha","suit":"diamond","number":13,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"fixed":true,"timeout":6616},"original":"h","_transform":"translateY(0px)","viewAs":"lebu"}],
                },
                prompt:"将一张红色牌当乐不思蜀使用",
                check:function (card){return 6-ai.get.value(card)},
                ai:{
                    threaten:1.5,
                    basic:{
                        order:1,
                        useful:1,
                        value:8,
                    },
                    result:{
                        target:function (player,target){
                var num=target.hp-target.num('h')-2;
                if(num>-1) return -0.01;
                if(target.hp<3) num--;
                if(target.isTurnedOver()) num/=2;
                var dist=get.distance(player,target,'absolute');
                if(dist<1) dist=1;
                return num/Math.sqrt(dist);
            },
                    },
                    tag:{
                        skip:"phaseUse",
                    },
                },
            },
            "qqwz_焦凤2":{
                trigger:{
                    player:["useCard","respond","phaseAfter"],
                },
                audio:["qqwz焦凤",2],
                direct:true,
                unique:true,
                filter:function (event,player,name){
        if(name=='phaseAfter') return true;
        return event.card&&get.color(event.card)=='red';    
    },
                init:function (player){
        player.storage.qqwz_焦凤2=0;
    },
                content:function (){
        player.draw();
        if(event.triggername=='phaseAfter'){
            player.storage.qqwz_焦凤2=0;  
        }                            
        else{
            player.logSkill('qqwz_焦凤2');
            player.addTempSkill('qqwz_焦凤2_maxHandcard',{player:'phaseAfter'});
            player.storage.qqwz_焦凤2++;
        }
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        player:function (card,player,target,effect){
                if(get.color(card)=='red') return [1,3];
            },
                    },
                },
                subSkill:{
                    maxHandcard:{
                        mod:{
                            maxHandcard:function (player,current){
                    if(player.storage.qqwz_焦凤2&&typeof player.storage.qqwz_焦凤2=='number') return current+player.storage.qqwz_焦凤2;
                },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz_流年":{
                audio:["qqwz流年",2],
                trigger:{
                    player:"damageEnd",
                },
                priority:5,
                filter:function (event,player){
        return player.num('h');
        },
                content:function (){
           'step 0'
                 player.chooseToDiscard('h',true)
           'step 1'
           player.recover()
            },
                mod:{
                    targetEnabled:function (card,player,target){
            if(card.name=='lebu'){
                return false;
            }                        
            if(card.name=='sha'){
                return false;
            }
        },
                },
            },
            "qqwz_鸳鸯":{
                audio:["qqwz鸳鸯",2],
                enable:"phaseUse",
                filterCard:true,
                usable:1,
                selectCard:1,
                check:function (card){
        var player=get.owner(card);
        if(player.num('h')>player.hp)
            return 8-ai.get.value(card)
        if(player.hp<player.maxHp)
            return 6-ai.get.value(card)
        return 4-ai.get.value(card)

    },
                filterTarget:function (card,player,target){
        if(target.sex!='male') return false;
        if(target.hp>=target.maxHp) return false;
        if(target==player) return false;
        return true;
    },
                content:function (){
        player.recover();
        player.addTempSkill('qqwz_鸳鸯2','phaseAfter');
        target.recover(2);
        target.gainMaxHp();
        target.draw();
    },
                ai:{
                    order:5.5,
                    result:{
                        player:function (player){
                if(player.hp<player.maxHp) return 4;
                if(player.num('h')>player.hp) return 0
                return -1;
            },
                        target:4,
                    },
                    threaten:2,
                },
            },
            "qqwz_影剑2":{
                audio:["qqwz影剑",2],
                trigger:{
                    global:"useCardAfter",
                },
                forced:true,
                unique:true,
                forceunique:true,
                filter:function (event,player){
        var type=get.type(event.card,'equip');
        return event.player!=player&&(type=='equip');
    },
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
            },
            "qqwz_影剑":{
                audio:["qqwz影剑",2],
                group:["qqwz_影剑2","qqwz_影剑3"],
                trigger:{
                    player:"loseEnd",
                },
                frequent:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                content:function (){
        var num=0;
        for(var i=0;i<trigger.cards.length;i++){
            if(trigger.cards[i].original=='e') num+=2;
        }
        player.draw(num);
    },
                ai:{
                    noe:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                },
            },
            "qqwz_影剑3":{
                trigger:{
                    player:"equipBegin",
                },
                audio:["qqwz影剑",2],
                frequent:true,
                filter:function (event,player){
                    return player.num('e',{subtype:'equip1'})&&get.subtype(event.card)== 'equip1';
                },
                content:function (){
                    "step 0"
                    trigger.untrigger();
                    trigger.finish();
                    player.$equip(trigger.card);
                    game.addVideo('equip',player,get.cardInfo(trigger.card));
                    game.log(player,'装备了',trigger.card);
                    "step 1"
                    var info=get.info(trigger.card);
                    if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
                        var next=game.createEvent('equip_'+trigger.card.name);
                        next.setContent(info.onEquip);
                        next.player=player;
                        next.trigger.card=trigger.card;
                        game.delayx();
                    }
                    delete player.equiping;
                },
                ai:{
                    effect:{
                        player:function (card,player,target){
                            if(get.subtype(card)=='equip1') return[1,10];
                        },
                    },
                },
            },
            "qqwz_鸳鸯2":{
                mod:{
                    cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+2;
                },
                },
            },
            "qqwz_绿荫":{
                audio:["qqwz绿荫",2],
                enable:"chooseToUse",
                filterCard:function (card){
        return get.color(card)=='red';
    },
                usable:3,
                viewAs:{
                    name:"wuzhong",
                },
                viewAsFilter:function (player){
        if(!player.countCards('h',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当无中生有使用",
                check:function (card){
        var player=_status.currentPhase;
        if(player.countCards('h')>player.hp){
            return 6-get.value(card);
        }
        return 4-get.value(card)
    },
                ai:{
                    basic:{
                        order:4,
                        value:[3,1],
                        useful:1,
                    },
                    wuxie:function (target,card,player,current,state){
            if(get.attitude(current,player)>=0&&state>0) return false;
        },
                    result:{
                        player:function (player){
                var nh=player.countCards('h');
                if(nh<=player.hp&&nh<=4&&_status.event.name=='chooseToUse'){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'})){
                        return -10;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -10;
                        if(viewAs&&viewAs.name=='huogong') return -10;
                    }
                }
                return 0;
            },
                        target:function (player,target){
                if(target.hasSkill('huogong2')||target.countCards('h')==0) return 0;
                if(player.countCards('h')<=1) return 0;
                if(target==player){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'})){
                        return -1.5;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -1.5;
                        if(viewAs&&viewAs.name=='huogong') return -1.5;
                    }
                    return 0;
                }
                return -1.5;
            },
                    },
                    tag:{
                        damage:1,
                        fireDamage:1,
                        natureDamage:1,
                        norepeat:1,
                        draw:2,
                    },
                },
            },
            "qqwz_花落":{
                audio:["qqwz花落",2],
                group:"qqwz_花落2",
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                content:function (){
  var rg=player.num;
trigger.source.damage(rg)._triggered=null;
trigger.untrigger();
trigger.finish();
},
            },
            "qqwz_花落2":{
                mod:{
                    suit:function (card,suit){
            if(suit=='spade') return 'heart';
        },
                },
            },
            "qqwz_铁壁":{
                audio:["qqwz铁壁",2],
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event){
        if(_status.currentPhase!=event.player){
            for(var i=0;i<event.cards.length;i++){
                if(event.cards[i].original=='h') return true;
            }
        }
        return false;
    },
                check:function (event,player){
        return ai.get.attitude(player,event.player)>2;
    },
                content:function (){
        "step 0"
        player.line(trigger.player,'green');
        player.damage();
        "step 1"
        trigger.player.draw(3);
        player.draw(1);
    },
            },
            "qqwz_冷血":{
                audio:["qqwz冷血",2],
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                forced:true,
                priority:100,
                filter:function (event,player){
return Math.random()<=0.7;
},
                content:function (){
         player.recover(player.maxHp-player.hp);

    },
            },
            "qqwz_奋命":{
                audio:["qqwz奋命",2],
                trigger:{
                    global:"damageBegin",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return player!=event.player&&(get.translation(event.player.name)=='qqwz吴王光耀'||get.translation(event.player.name2)=='qqwz吴王光耀');
},
                content:function (){
trigger.untrigger();
trigger.finish();
    player.damage(2);
},
            },
            "qqwz_烈士":{
                audio:["qqwz烈士",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target&&target.num('h')>0;
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target);
        "step 1"
        if(result.bool){
            player.addTempSkill('qqwz_烈士2','phaseAfter');
        }
        else{
            player.draw(2);
        }
    },
                ai:{
                    order:function (name,player){
            var cards=player.get('h');
            if(player.num('h','sha')==0){
                return 1;
            }
            for(var i=0;i<cards.length;i++){
                if(cards[i].name!='sha'&&cards[i].number>11&&ai.get.value(cards[i])<7){
                    return 9;
                }
            }
            return ai.get.order({name:'sha'})-1;
        },
                    result:{
                        player:function (player){
                if(player.num('h','sha')>0) return 0.6;
                var num=player.num('h');
                if(num>player.hp) return 0;
                if(num==1) return -2;
                if(num==2) return -1;
                return -0.7;
            },
                        target:function (player,target){
                var num=target.num('h');
                if(num==1) return -1;
                if(num==2) return -0.7;
                return -0.5
            },
                    },
                    threaten:1.3,
                },
            },
            "qqwz_烈士2":{
                mod:{
                    targetInRange:function (card,player,target,now){
                    if(card.name=='sha') return true;
                },
                    selectTarget:function (card,player,range){
                    if(card.name=='sha'&&range[1]!=-1) range[1]+=7;
                },
                    cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+1;
                },
                },
            },
            "qqwz_酣战":{
                audio:["qqwz酣战",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player;
},
                content:function (){
        trigger.player.loseMaxHp();
trigger.player.loseHp();
trigger.untrigger();
trigger.finish();
},
            },
            "qqwz_睥睨":{
                audio:["qqwz睥睨",2],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
var list=[];
for(var i in lib.character){
if(lib.character[i].mode&&lib.character[i].mode.contains(lib.config.mode)==false) continue;
if(i!='list') list.push(i);
}
var players=game.players.concat(game.dead);
for(var j=0;j<players.length;j++){
list.remove([players[j].name]);
}
if(list.length){
var player2=game.addPlayer();
if(get.config('double_character')||lib.config.mode=='guozhan'){
var list2=list.randomGets(2);
player2.init(list2[0],list2[1]);
}
else{
player2.init(list.randomGet())
}
    var KJL=["qqwz吴王光耀","qqwz策马扬鞭","qqwz折冲将军","qqwz战天斗地","qqwz醉酒提矛","qqwz破天焚舰"].randomGet();
player2.init(KJL)
player2.identity=player.identity;
if(player2.identity=='zhu') player2.identity='zhong';
player2.setIdentity('虎将');
player2.group=player.group;
player2.identityShown=true;
player2.draw(4);
if(player2.name){
var skills0=lib.character[player2.name][3];
}
if(player2.name1){
var skills1=lib.character[player2.name1][3];
}
if(player2.name2){
var skills2=lib.character[player2.name2][3];
}

if(player.maxHp>0) player.loseMaxHp(1);
}
    },
                group:"qqwz_睥睨_1",
                subSkill:{
                    "1":{
                        audio:["qqwz睥睨",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        content:function (){
var list=[];
for(var i in lib.character){
if(lib.character[i].mode&&lib.character[i].mode.contains(lib.config.mode)==false) continue;
if(i!='list') list.push(i);
}
var players=game.players.concat(game.dead);
for(var j=0;j<players.length;j++){
list.remove([players[j].name]);
}
if(list.length){
var player2=game.addPlayer();
if(get.config('double_character')||lib.config.mode=='guozhan'){
var list2=list.randomGets(2);
player2.init(list2[0],list2[1]);
}
else{
player2.init(list.randomGet())
}
    var KJQ=["qqwz盖世英才","qqwz锦运绵长","qqwz蓝田生玉","qqwz才猷蕴借"].randomGet();
player2.init(KJQ);
player2.identity=player.identity;
if(player2.identity=='zhu') player2.identity='zhong';
player2.setIdentity('英才');
player2.group=player.group;
player2.identityShown=true;
player2.draw(4);
if(player2.name){
var skills0=lib.character[player2.name][3];
}
if(player2.name1){
var skills1=lib.character[player2.name1][3];
}
if(player2.name2){
var skills2=lib.character[player2.name2][3];
}

if(player.maxHp>0) player.loseMaxHp(1);
    player.removeSkill('qqwz_睥睨');
}
        },
                        sub:true,
                    },
                },
            },
            "qqwz_魂佑":{
                audio:["qqwz魂佑",2],
                group:"qqwz_魂佑2",
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wu') game.players[i].draw(2);
}
    },
            },
            "qqwz_虎踞":{
                audio:["qqwz虎踞",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=2;
    },
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-2;
        },
                },
                ai:{
                    threaten:1.3,
                },
            },
            "qqwz_军霸2":{
                audio:["qqwz军霸",2],
                trigger:{
                    player:"damageBegin",
                },
                frequent:true,
                priority:-500,
                content:function (){
if(trigger.num>1) trigger.num=1
},
                group:["qqwz_军霸3"],
            },
            "qqwz_军霸3":{
                audio:["qqwz军霸",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                frequent:true,
                content:function (){
trigger.untrigger();
trigger.finish();
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "qqwz_转日":{
                audio:["qqwz转日",2],
                group:"qqwz_转日2",
                trigger:{
                    player:"shaBefore",
                    target:"shaBefore",
                },
                frequent:true,
                filter:function (event,player){
        if(event.card.name=='sha') return true;
    },
                content:function (){
       player.recover();
        player.draw();
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(card.name=='sha') return [1,0.6];
            },
                        player:function (card,player,target){
                if(card.name=='sha') return [1,1];
            },
                    },
                },
            },
            "qqwz_转日2":{
                audio:["qqwz转日",2],
                trigger:{
                    player:"damageBegin",
                },
                filter:function (event,player){
        return event.card&&event.card.name=='juedou';
    },
                content:function (){
     player.draw();
     trigger.untrigger();
     trigger.finish();           
    },
            },
            "qqwz_卧虎":{
                skillAnimation:true,
                audio:["qqwz卧虎",2],
                derivation:["qqwz_虎踞","qqwz_庇佑"],
                unique:true,
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.hp!=player.num('he')&&!player.storage.qqwz_卧虎;
    },
                forced:true,
                priority:3,
                content:function (){
        player.loseHp(3);
        player.addSkill('qqwz_虎踞');
        player.addSkill('qqwz_庇佑');
        player.awakenSkill('qqwz_卧虎');
        player.storage.qqwz_卧虎=true;
        game.createTrigger('phaseBegin','qqwz_庇佑',player,trigger);
    },
                ai:{
                    threaten:function (player,target){
            if(target.hp!=target.num('he')) return 2;
            return 0.5;
        },
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                if(!target.hasFriend()) return;
                if(get.tag(card,'damage')==1&&target.hp==2&&!target.isTurnedOver()&&
                _status.currentPhase!=target&&get.distance(_status.currentPhase,target,'absolute')<=3) return [0.5,1];
            },
                    },
                },
            },
            "qqwz_庇佑":{
                audio:["qqwz庇佑",2],
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.hp<player.maxHp;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(1,get.prompt('qqwz_庇佑'),function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
            var player=_status.event.player;
            if(player.maxHp-player.hp==1&&target.num('he')==0){
                return 0;
            }
            if(ai.get.attitude(_status.event.player,target)>0){
                return 10+ai.get.attitude(_status.event.player,target);
            }
            if(player.maxHp-player.hp==1){
                return -1;
            }
            return 1;
        });
        "step 1"
        if(result.bool){
            event.num=player.maxHp-player.hp;
            if(player.num('e')>=player.hp){
                event.num=player.maxHp;
            }
            player.logSkill('qqwz_庇佑',result.targets);
            event.target=result.targets[0];
            if(event.num==1){
                event.directcontrol=true;
            }
            else{
                var str1='摸'+get.cnNumber(event.num,true)+'弃一';
                var str2='受到'+get.cnNumber(event.num,true)+'点伤害弃'+get.cnNumber(event.num,true);
                player.chooseControl(str1,str2,function(event,player){
                    return _status.event.choice;
                }).set('choice',ai.get.attitude(player,event.target)>0?str1:str2);
                event.str=str1;
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.directcontrol||result.control==event.str){
            event.target.draw(event.num);
            event.target.changeHujia(event.num),
            event.target.chooseToDiscard(true,'he');
        }
        else{
            event.target.damage(event.num);
            event.target.chooseToDiscard(event.num,true,'he');
        }
    },
                ai:{
                    threaten:function (player,target){
            if(target.hp==1||target.num('e')>=target.hp) return 2;
            if(target.hp==target.maxHp) return 0.5;
            if(target.hp==2) return 1.5;
            return 0.5;
        },
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                if(target.maxHp<=3) return;
                if(get.tag(card,'damage')){
                    if(target.hp==target.maxHp) return [0,1];
                }
                if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
            },
                    },
                },
            },
            "qqwz_联盟":{
                audio:["qqwz联盟",2],
                group:"qqwz_联盟2",
                enable:"phaseUse",
                usable:1,
                changeSeat:true,
                filterTarget:function (card,player,target){
        return player!=target;
    },
                content:function (){
        target.gain(player.get('h'));
        target.$give(player.num('h'),target);
        player.draw(2);
    },
            },
            "qqwz_联盟2":{
                audio:["qqwz联盟",2],
                trigger:{
                    player:"phaseEnd",
                },
                frequent:true,
                content:function (){
        player.draw(3);
    },
            },
            "qqwz_人杰":{
                audio:["qqwz人杰",2],
                enable:"phaseUse",
                unique:true,
                delay:0,
                direct:true,
                content:function (){
        "step 0"
        var dialog=ui.create.dialog('人杰');
        for(var i=0;i<game.players.length;i++){
             if(game.players[i]==player) continue;
             if(game.players[i].num('h')){
                dialog.add(get.translation(game.players[i])+'的'+'手牌');
                var hs=game.players[i].get('h');
                dialog.add(hs);                                     
             }
        }
        event.dialog=dialog;
        if(player==game.me){
            if(event.isMine()){
                game.pause();
                ui.create.confirm('o');
                    game.countChoose();
                    event.choosing=true;
            }
            else{
                event.finish();
                    event.result='viewed';
                setTimeout(function(){
                    event.dialog.close();
                },2*lib.config.duration);
                game.delayx(2);
            }
        }
        else{
            event.finish();
        }        
        "step 1"
            event.result='viewed';
        _status.imchoosing=false;
            event.choosing=false;
        if(event.dialog) event.dialog.close();                        
    },
                group:"qqwz_人杰2",
            },
            "qqwz_人杰2":{
                audio:["qqwz人杰",2],
                trigger:{
                    source:"damageEnd",
                    player:"damageEnd",
                },
                direct:true,
                content:function (){
                    'step 0'
                    player.chooseTarget('人杰:选择两名角色置换他们的手牌',function(card,player,target){
                        return target.num('h');
                    },2).set('ai',function(target){
                        if(!ui.selected.targets.length) return -ai.get.attitude(player,target)+target.num('h');
                        if(ui.selected.targets.length){
                            var num=ui.selected.targets[0].num('h')-target.num('h');
                            if(num>0) return ai.get.attitude(player,target);
                            return 0;
                        }
                    });    
                    'step 1'
                    if(result.bool){
                        player.logSkill('qqwz_人杰2',result.targets);
                        event.cards0=result.targets[0].get('h');
                        event.cards1=result.targets[1].get('h');
                        result.targets[0].lose(event.cards0,ui.special);
                        result.targets[1].lose(event.cards1,ui.special);
                        result.targets[0].gain(event.cards1,result.targets[1]);
                        result.targets[1].gain(event.cards0,result.targets[0]);
                        result.targets[0].$give(event.cards0.length,result.targets[1]);
                        result.targets[1].$give(event.cards1.length,result.targets[0]);                
                    }
                    else{
                        event.finish();
                    }
                },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                            if(get.tag(card,'damage')){
                                if(player.hasSkill('jueqing')) return [1,-2];
                                if(!target.hasFriend()) return;
                                if(target.hp>=4&&player.num('h')>target.num('h')) return [1,get.tag(card,'damage')*2];
                                if(target.hp==3&&player.num('h')>target.num('h')) return [1,get.tag(card,'damage')*1.5];
                                if(target.hp==2&&player.num('h')>target.num('h')) return [1,get.tag(card,'damage')*0.5];
                            }
                        },
                    },
                },
            },
            "qqwz_施财":{
                audio:["qqwz施财",2],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
        "step 0"
        player.draw(2);
        player.recover();
        "step 1"
        for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].draw(2);
        };
    };
    },
            },
            "qqwz_明谏":{
                audio:["qqwz明谏",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('h',{type:'equip'})>0;
    },
                filterCard:function (card){
        return get.type(card)=='equip';
    },
                filterTarget:function (card,player,target){
        if(target.isMin()) return false;
        return player!=target;
    },
                content:function (){
        target.addTempSkill('qqwz_暗谏');
        target.equip(cards[0]);
        player.draw(2);
        player.recover();
    },
                ai:{
                    basic:{
                        order:10,
                    },
                    result:{
                        target:3,
                    },
                    threaten:1.3,
                },
            },
            "qqwz_暗谏":{
                trigger:{
                    player:"equipBegin",
                },
                frequent:true,
                filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    effect:{
                        player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                    },
                },
            },
            "qqwz_修政":{
                audio:["qqwz修政",2],
                unique:true,
                gainable:true,
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event,player){
        if(event.player!=player&&event.player.classList.contains('dead')==false&&
        event.cards&&event.cards.length&&event.getParent(2).name=='phaseDiscard'){
            for(var i=0;i<event.cards.length;i++){
                if(get.position(event.cards[i])=='d'){
                    return true;
                }
            }
            return false;
        }
    },
                checkx:function (event,player){
        var du=false;
        var num=0;
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i])=='d'){
                num++;
                if(event.cards[i].name=='du'){
                    du=true;
                }
            }
        }
        if(get.attitude(player,event.player)>0){
            if(du&&num<=3){
                return false;
            }
            return true;
        }
        if(du) return true;
        return num>2;
    },
                direct:true,
                content:function (){
        "step 0"
        event.cards=trigger.cards.slice(0);
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i])!='d'){
                event.cards.splice(i,1);i--;
            }
        }
        if(event.cards.length==0){
            event.finish();
            return;
        }
        var check=lib.skill.qqwz_修政.checkx(trigger,player);
        player.chooseCardButton(event.cards,'修政：选择令'+get.translation(trigger.player)+'收回的牌').set('ai',function(button){
            if(_status.event.check){
                return 20-get.value(button.link);
            }
            return 0;
        }).set('check',check);
        "step 1"
        if(result.bool){
            game.delay(0.5);
            player.logSkill('qqwz_修政',trigger.player);
            trigger.player.gain(result.links[0]);
            trigger.player.$gain2(result.links[0]);
            game.log(trigger.player,'收回了',result.links[0]);
            event.cards.remove(result.links[0]);
            if(event.cards.length){
                player.gain(event.cards);
                player.$gain2(event.cards);
                game.log(player,'收回了',event.cards);
            }
            game.delay();
        }
    },
                ai:{
                    threaten:1.3,
                    expose:0.2,
                },
                group:["qqwz_修政_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"gameDrawAfter",
                        },
                        forced:true,
                        unique:true,
                        content:function (){                    
        player.forcemin=true;
    },
                        sub:true,
                    },
                },
            },
            "qqwz_魂佑2":{
                audio:["qqwz魂佑",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wei')game.players[i].loseHp(2);
}
},
            },
            "qqwz_芙蓉":{
                audio:["qqwz芙蓉",2],
                group:["qqwz_芙蓉_color","qqwz_芙蓉_color2"],
                subSkill:{
                    color:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        popup:false,
                        silent:true,
                        content:function (){
                player.storage.qqwz_芙蓉_color=['black','red'];
            },
                        sub:true,
                    },
                    "color2":{
                        trigger:{
                            player:"useCard",
                        },
                        forced:true,
                        popup:false,
                        silent:true,
                        filter:function (event,player){
                return Array.isArray(player.storage.qqwz_芙蓉_color)&&_status.currentPhase==player;
            },
                        content:function (){
                player.storage.qqwz_芙蓉_color.remove(get.color(trigger.card));
            },
                        sub:true,
                    },
                },
                trigger:{
                    player:"phaseDiscardBegin",
                },
                direct:true,
                filter:function (event,player){
        if(!player.storage.qqwz_芙蓉_color) return false;
        var length=player.storage.qqwz_芙蓉_color.length;
        if(length==0) return false;
        var hs=player.get('h');
        if(hs.length==0) return false;
        if(length==2) return true;
        var color=player.storage.qqwz_芙蓉_color[0];
        for(var i=0;i<hs.length;i++){
            if(get.color(hs[i])==color) return true;
        }
        return false;
    },
                intro:{
                    content:"cards",
                },
                init:function (player){
        player.storage.qqwz_芙蓉=[];
    },
                content:function (){
        'step 0'
        player.chooseCard(get.prompt('qqwz_芙蓉'),function(card){
            return _status.event.player.storage.qqwz_芙蓉_color.contains(get.color(card));
        }).set('ai',function(card){
            var player=_status.event.player;
            if(player.storage.qqwz_芙蓉.length==2){
                if(!game.hasPlayer(function(current){
                    return (current!=player&&
                        ai.get.damageEffect(current,player,player)>0&&
                        ai.get.attitude(player,current)<0)
                })) return 0;
            }
            return 7-ai.get.value(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_芙蓉');
            if(player.storage.qqwz_芙蓉.length<2){
                player.$give(result.cards,player);
            }
            player.lose(result.cards,ui.special);
            player.storage.qqwz_芙蓉=player.storage.qqwz_芙蓉.concat(result.cards);
            player.markSkill('qqwz_芙蓉');
            player.syncStorage('qqwz_芙蓉');
        }
        else{
            event.finish();
        }
        'step 2'
        if(player.storage.qqwz_芙蓉.length==2){
            player.$throw(player.storage.qqwz_芙蓉);
            while(player.storage.qqwz_芙蓉.length){
                ui.discardPile.appendChild(player.storage.qqwz_芙蓉.shift());
            }
            player.unmarkSkill('qqwz_芙蓉');
            player.chooseTarget(function(card,player,target){
                return target!=player;
            },'对一名角色造成4点神圣伤害并弃置其装备区内的牌').set('ai',function(target){
                var player=_status.event.player;
                if(ai.get.attitude(player,target)>0) return -1;
                return ai.get.damageEffect(target,player,player)+target.num('e')/2;
            });
        }
        else{
            event.finish();
        }
        'step 3'
        if(result.bool){
            var target=result.targets[0];
            target.damage(4)._triggered=null;
            event.target=target;
            player.line(target,'green');
        }
        else{
            event.finish();
        }
        'step 4'
        if(event.target&&event.target.isAlive()){
            var es=event.target.get('e');
            if(es.length){
                event.target.discard(es);
            }
        }
    },
                ai:{
                    threaten:1.5,
                },
            },
            "qqwz_沉鱼":{
                audio:["qqwz沉鱼",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
        player.addTempSkill('qqwz_花落',{player:'phaseBegin'});
        player.addTempSkill('qqwz_流年',{player:'phaseBegin'});
    },
            },
            "qqwz_狂傲":{
                audio:["qqwz狂傲",2],
                trigger:{
                    player:"chooseToRespondBegin",
                },
                frequent:true,
                filter:function (event,player){
        if(event.responded) return false;
        return _status.currentPhase!==player;
    },
                content:function (){
        "step 0"
        var cards=[];
        if(ui.cardPile.childNodes.length<10){
            var discardcards=get.cards(10);
            for(var i=0;i<discardcards.length;i++){
                ui.discardPile.appendChild(discardcards[i]);
            }
        }
        for(var i=0;i<10;i++){
            cards.push(ui.cardPile.childNodes[i]);
        }
        player.chooseCardButton('狂傲：选择一张卡牌打出',cards).set('filterButton',function(button){
            return get.type(button.link)=='basic'&&_status.event.getTrigger().filterCard(button.link);
        });
        "step 1"
        if(result.bool){
            game.log(player,'狂傲发动成功');
            trigger.untrigger();
            trigger.responded=true;
            result.links[0].remove();
            trigger.result={bool:true,card:result.links[0]}
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,effect){
                if(get.tag(card,'respondShan')) return 0.7;
                if(get.tag(card,'respondSha')) return 0.7;
            },
                    },
                },
                group:"qqwz狂傲2",
            },
            "qqwz_杀令":{
                audio:["qqwz杀令",2],
                group:["qqwz_杀令2"],
                enable:"chooseToUse",
                filter:function (event,player){
        return player.num('h',{type:'basic'});
    },
                chooseButton:{
                    dialog:function (){
            var list=[];
                for(var i in lib.card){
                    if(!lib.translate[i+'_info']) continue;
                    if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                    if(lib.card[i].type=='basic') list.push(['basic','',i]);
                }
            list.push(['基本','','sha','fire']);
            list.push(['基本','','sha','thunder']);    
            list.push(['基本','','sha','poison']);    

            return ui.create.dialog('杀令:请选择想要使用的基本牌',[list,'vcard']);
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            var player=_status.event.player;
            var shaTarget=false;
            for(var i=0;i<game.players.length;i++){
                if(player.canUse('sha',game.players[i])&&ai.get.effect(game.players[i],{name:'sha'},player)>0){
                    shaTarget=true;
                }
            }
            if(player.isDamaged()) return (button.link[2]=='tao')?1:-1;
            if(shaTarget&&player.num('h','sha')&&!player.num('h','jiu')) return (button.link[2]=='jiu')?1:-1;
            if(shaTarget&&!player.num('h','sha')) return (button.link[2]=='sha')?1:-1;
            return (button.link[2]=='sha')?1:-1;
        },
                    backup:function (links,player){
            return {
                filterCard:function(card){
                    return get.type(card)=='basic';
                },
                audio:["qqwz杀令",2],
                popname:true,
                viewAs:{name:links[0][2]}
            }
        },
                    prompt:function (links,player){
            return '将一张基本牌当'+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    save:true,
                    order:6,
                    result:{
                        player:1,
                    },
                },
            },
            "qqwz_杀令2":{
                audio:["qqwz杀令",2],
                enable:["chooseToRespond"],
                filterCard:function (card){
        return get.type(card)=='basic';
    },
                viewAs:{
                    name:"shan",
                },
                viewAsFilter:function (player){
         if(!player.num('h',{type:'basic'})) return false;
    },
                prompt:"将一张基本牌当闪打出",
                check:function (){return 1},
                ai:{
                    respondShan:true,
                    skillTagFilter:function (player){
            if(!player.num('h',{type:'basic'})) return false;
        },
                    result:{
                        target:function (card,player,target,current){
                if(get.tag(card,'respondShan')&&current<0) return 0.6
            },
                    },
                    basic:{
                        useful:[7,2],
                        value:[7,2],
                    },
                },
            },
            "qqwz_举国":{
                audio:["qqwz举国",2],
                enable:"phaseUse",
                usable:5,
                filterCard:function (){
        if(ui.selected.targets.length) return false;
        return true;
    },
                position:"he",
                selectCard:1,
                filterTarget:function (card,player,target){
        return target!=player;
    },
                check:function (card){
        switch(ui.selected.cards.length){
            case 0:return 7-ai.get.value(card);
            case 1:return 6-ai.get.value(card);
            case 2:return 3-ai.get.value(card);
            default:return 0;
        }
    },
                content:function (){
        target.damage();
    },
                ai:{
                    order:2,
                    result:{
                        target:function (player,target){
                return ai.get.damageEffect(target,player);
            },
                    },
                    threaten:1.5,
                    expose:0.3,
                },
            },
            "qqwz_合纵":{
                trigger:{
                    player:"phaseDrawBegin",
                },
                direct:true,
                audio:["qqwz合纵",2],
                content:function (){
        "step 0"
        var check;
        if(player.num('h')==0){
            check=false;
        }
        else{
            check=(game.countPlayer(function(current){
                return player!=current&&ai.get.attitude(player,current)>1;
            })>=2);
        }
        if(get.is.versus()){
            event.versus=true;
            player.chooseBool(get.prompt('qqwz_合纵'));
        }
        else{
            player.chooseTarget(get.prompt('qqwz_合纵'),[1,3],function(card,player,target){
                return player!=target;
            },function(target){
                if(!_status.event.check) return 0;
                return ai.get.attitude(_status.event.player,target);
            }).set('check',check);
        }
        "step 1"
        if(result.bool){
            var targets;
            if(event.versus){
                targets=game.filterPlayer(function(current){
                    return current!=player&&current.side==player.side;
                });
            }
            else{
                targets=result.targets;
            }
            player.logSkill('qqwz_合纵',targets);
            game.asyncDraw(targets);
            trigger.num--;
        }
    },
            },
            "qqwz_连横":{
                audio:["qqwz连横",2],
                trigger:{
                    global:"judge",
                },
                filter:function (event,player){
        return player.num('he')>0;
    },
                logTarget:"player",
                check:function (event,player){
        if(ai.get.attitude(player,event.player)<=0) return false;
        var cards=player.get('he');
        var judge=event.judge(event.player.judging[0]);
        for(var i=0;i<cards.length;i++){
            var judge2=event.judge(cards[i]);
            if(_status.currentPhase!=player&&judge2==judge&&get.color(cards[i])=='red'&&ai.get.useful(cards[i])<5) return true;
            if(judge2>judge) return true;
        }
        return false;
    },
                content:function (){
        "step 0"
        player.draw(2);
        var target=trigger.player;
        player.line(target,'green');
        var judge=trigger.judge(target.judging[0]);
        var attitude=ai.get.attitude(target,player);
        target.choosePlayerCard('请选择代替判定的牌','he','visible',true,player).set('ai',function(button){
            var card=button.link;
            var judge=_status.event.judge;
            var attitude=_status.event.attitude;
            var result=trigger.judge(card)-judge;
            var player=_status.event.player;
            if(result>0){
                return 20+result;
            }
            if(result==0){
                if(_status.currentPhase==player) return 0;
                if(attitude>=0){
                    return get.color(card)=='red'?7:0-ai.get.value(card);
                }
                else{
                    return get.color(card)=='black'?10:0+ai.get.value(card);
                }
            }
            if(attitude>=0){
                return get.color(card)=='red'?0:-10+result;
            }
            else{
                return get.color(card)=='black'?0:-10+result;
            }
        }).set('judge',judge).set('attitude',attitude);
        "step 1"
        if(result.bool){
            event.card=result.links[0];
            player.respond(event.card,'highlight');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            if(trigger.player.judging[0].clone){
                trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                game.broadcast(function(card){
                    if(card.clone){
                        card.clone.classList.remove('thrownhighlight');
                    }
                },trigger.player.judging[0]);
                game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
            }
            ui.discardPile.appendChild(trigger.player.judging[0]);
            trigger.player.judging[0]=event.card;
            if(!get.owner(event.card,'judge')){
                trigger.position.appendChild(event.card);
            }
            game.log(trigger.player,'的判定牌改为',event.card);
            game.delay(2);
        }
    },
                ai:{
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "qqwz_料敌":{
                audio:["qqwz料敌",2],
                trigger:{
                    player:["useCardAfter","respondAfter","discardAfter"],
                },
                frequent:true,
                content:function (){
        player.draw();
        player.recover(2);
    },
                ai:{
                    threaten:0.7,
                },
            },
            "qqwz_致死":{
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.storage.qqwz_引敌&&player.storage.qqwz_引敌.length>0;
    },
                direct:true,
                audio:["qqwz致死",2],
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('qqwz_致死'),function(card,player,target){
            return player.hp>=target.hp;
        }).set('ai',function(target){
            var player=_status.event.player;
            if(target==player){
                if(player.num('h')>=player.maxHp) return 0;
                return 0.5;
            }
            var att=ai.get.attitude(player,target);
            if(att<2) return 0;
            if(target.hp==1&&att>2){
                att+=2;
            }
            if(player.num('j','lebu')){
                if(target.hp==target.maxHp) return att-2;
                return att-1;
            }
            if(target.hp==target.maxHp) return 0;
            if(player.num('h')<player.hp-1){
                return att-3;
            }
            return att-2;
        });
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_致死',result.targets);
            if(result.targets[0]==player){
                player.$throw(player.storage.qqwz_引敌,1000);
                var num=player.maxHp-player.num('h');
                if(num>0) player.draw(num);
                while(player.storage.qqwz_引敌.length){
                    ui.discardPile.appendChild(player.storage.qqwz_引敌.shift());
                }
                player.syncStorage('qqwz_引敌');
                player.unmarkSkill('qqwz_引敌');
            }
            else{
                var target=result.targets[0];
                target.recover(3);
                target.gain(player.storage.qqwz_引敌.slice(0),'gain2','log');
                target.draw(player.storage.qqwz_引敌.length);
                player.storage.qqwz_引敌.length=0;
            }
            player.syncStorage('qqwz_引敌');
            player.unmarkSkill('qqwz_引敌');
        }
    },
            },
            "qqwz_引敌":{
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                audio:["qqwz引敌",2],
                init:function (player){
        player.storage.qqwz_引敌=[];
    },
                filter:function (event,player){
        return player.num('he')>0;
    },
                marktext:"敌",
                content:function (){
        "step 0"
        player.chooseCard([1,player.num('he')],'he',get.prompt('qqwz_引敌'),function(card){
            return player.num('he')>0;
        }).set('ai',function(card){
            return 6-ai.get.value(card);
        });
        "step 1"
        if(result.bool){
            player.$give(result.cards,player,false);
            player.logSkill('qqwz_引敌');
            game.log(player,'将',result.cards,'置于武将牌上');
            player.storage.qqwz_引敌=player.storage.qqwz_引敌.concat(result.cards);
            player.lose(result.cards,ui.special);
            player.markSkill('qqwz_引敌');
            player.syncStorage('qqwz_引敌');
        }
    },
                intro:{
                    content:"cards",
                    onunmark:function (storage,player){
            if(storage&&storage.length){
                for(var i=0;i<storage.length;i++){
                    ui.discardPile.appendChild(storage[i]);
                }
                player.$throw(storage);
                delete player.storage.qqwz_引敌;
            }
        },
                },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha'||card.name=='juedou'){
                    if(current<0) return 1.2;
                }
            },
                    },
                    threaten:function (player,target){
            if(target.storage.yinbing&&target.storage.yinbing.length) return 2;
            return 1;
        },
                },
            },
            "qqwz_冷兵":{
                audio:["qqwz冷兵",2],
                trigger:{
                    player:"useCard",
                },
                filter:function (event,player){
        if(event.card.name!='sha') return false;
        return game.hasPlayer(function(current){
            return !event.targets.contains(current)&&get.distance(player,current)<=1&&player.canUse('sha',current);
        });
    },
                direct:true,
                content:function (){
        'step 0'
        player.draw(2);
        player.chooseTarget(get.prompt('qqwz_冷兵'),function(card,player,target){
            return !_status.event.source.contains(target)&&get.distance(player,target)<=1&&player.canUse('sha',target);
        }).set('source',trigger.targets).set('ai',function(target){
            var player=_status.event.player;
            return ai.get.effect(target,{name:'sha'},player,player);
        });
        'step 1'
        if(result.bool){
            if(!event.isMine()&&!_status.connectMode) game.delay(0.5);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        player.logSkill('qqwz_冷兵',event.target);
        trigger.targets.push(event.target);
    },
                ai:{
                    effect:{
                        player:function (card,player,target){
                if(card.name=='sha'){
                    if(player._duanbingtmp) return;
                    player._duanbingtmp=true;
                    if(ai.get.effect(target,{name:'sha'},player,player)<=0){
                        delete player._duanbingtmp;
                        return;
                    }
                    if(game.hasPlayer(function(current){
                        return current!=target&&get.distance(player,current)<=1&&
                        player.canUse('sha',current)&&ai.get.effect(current,{name:'sha'},player,player)>0;
                    })){
                        delete player._duanbingtmp;
                        return [1,1];
                    }
                    delete player._duanbingtmp;
                }
            },
                    },
                },
            },
            "qqwz_迅疾":{
                audio:["qqwz迅疾",2],
                enable:"phaseUse",
                usable:1,
                position:"he",
                filterTarget:function (card,player,target){
        return target!=player;
    },
                content:function (){
        target.loseMaxHp();
        player.storage.qqwz_迅疾2=target;
        player.addTempSkill('qqwz_迅疾2','phaseAfter');
    },
                check:function (card){
        if(card.name=='sha'&&_status.event.player.num('h','sha')<=1) return 0;
        return 6-ai.get.value(card);
    },
                filterCard:true,
                ai:{
                    order:4,
                    result:{
                        player:function (player,target){
                if(get.distance(player,target)<=1) return 0;
                var hs=player.get('h','shunshou');
                if(hs.length&&player.canUse(hs[0],target,false)){
                    return 1;
                }
                var geteff=function(current){
                    return ai.get.effect(current,{name:'sha'},player,player)>0;
                }
                if(player.hasSha()&&geteff(target)){
                    var num=game.countPlayer(function(current){
                        return current!=player&&get.distance(player,current)<=1&&geteff(current);
                    });
                    if(num==0){
                        if(game.hasPlayer(function(current){
                            return player.canUse('sha',current)&&geteff(current)&&current!=target;
                        })){
                            return 1;
                        }
                    }
                    else if(num==1){
                        return 1;
                    }
                }
                return 0;
            },
                    },
                },
            },
            "qqwz_迅疾2":{
                mark:"character",
                onremove:true,
                intro:{
                    content:"到$的距离视为1",
                },
                mod:{
                    globalFrom:function (from,to){
                    if(to==from.storage.qqwz_迅疾2){
                        return -Infinity;
                    }
                },
                },
            },
            "qqwz_年华":{
                audio:["qqwz年华",2],
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function (event,player){
        return event.player!=player&&get.distance(event.player,player,'attack')>1;
    },
                logTarget:"player",
                check:function (event,player){
        if(ai.get.attitude(player,event.player)>=0) return false;
        var e2=player.get('e','2');
        if(e2){
            if(e2.name=='tengjia') return true;
            if(e2.name=='bagua') return    true;
        }
        return player.num('h','shan')>0;
    },
                content:function (){
        player.recover();
        var target=trigger.player;
        target.addTempSkill('qqwz_年华_viewas','phaseAfter');
        target.addTempSkill('qqwz_年华_range','phaseAfter');
        target.storage.qqwz_年华=player;
        target.markSkillCharacter('qqwz_年华',player,'年华','锦囊牌均视为毒且'+get.translation(player)+'视为在攻击范围内');
    },
                ai:{
                    expose:0.2,
                },
                subSkill:{
                    range:{
                        mod:{
                            targetInRange:function (card,player,target){
                    if(card.name=='du'&&target==player.storage.qqwz_年华){
                        return true;
                    }
                },
                        },
                        onremove:function (player){
                game.broadcast(function(player){
                    if(player.marks.qqwz_年华){
                        player.marks.qqwz_年华.delete();
                        delete player.marks.qqwz_年华;
                    }
                },player);
                if(player.marks.qqwz_年华){
                    player.marks.qqwz_年华.delete();
                    delete player.marks.qqwz_年华;
                    game.addVideo('unmark',player,'qqwz_年华');
                }
            },
                        trigger:{
                            player:"useCard",
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
                return event.skill=='qqwz_年华_viewas'
            },
                        content:function (){
                player.removeSkill('qqwz_年华_viewas');
                game.broadcastAll(function(player){
                    if(player.marks.qqwz_年华&&player.marks.qqwz_年华.info){
                        player.marks.qqwz_年华.info.content=player.marks.qqwz_年华.info.content.slice(8);
                    }
                },player);
            },
                        sub:true,
                    },
                    viewas:{
                        mod:{
                            cardEnabled:function (card,player){
                    if(card.name!='du'&&get.type(card,'trick')=='trick') return false;
                },
                            cardUsable:function (card,player){
                    if(card.name!='du'&&get.type(card,'trick')=='trick') return false;
                },
                            cardRespondable:function (card,player){
                    if(card.name!='du'&&get.type(card,'trick')=='trick') return false;
                },
                            cardSavable:function (card,player){
                    if(card.name!='du'&&get.type(card,'trick')=='trick') return false;
                },
                        },
                        enable:["chooseToUse","chooseToRespond"],
                        filterCard:function (card){
                return get.type(card,'trick')=='trick';
            },
                        viewAs:{
                            name:"du",
                            suit:"spade",
                            number:4,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"uncheck":[]},"suit":"spade","number":4,"name":"guohe","clone":{"name":"guohe","suit":"spade","number":4,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":1737},"timeout":1714,"original":"h"}],
                        },
                        check:function (){return 1},
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.8
                    },
                            },
                            respondSha:true,
                            order:4,
                            useful:-1,
                            value:-1,
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                            if(ai.get.attitude(player,target)>0){
                                return -6;
                            }
                            else{
                                return -3;
                            }
                        }
                        return -1.5;
                    },
                                player:function (player,target){
                            if(player.hasSkillTag('usedu')) return 5;
                            return -1;
                        },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                                natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                                fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                                thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                                poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz_朝露":{
                audio:["qqwz朝露",2],
                enable:"phaseUse",
                usable:1,
                filterCard:function (card,player,target){
        return get.type(card,'basic')=='basic';
    },
                check:function (card){
        return 7-ai.get.value(card);
    },
                filterTarget:function (card,player,target){
        if(target==player) return false;
        return target.get('e','1')||target.get('e','2');
    },
                content:function (){
        'step 0'
        var e1=target.get('e','1');
        var e2=target.get('e','2');
        event.e1=e1;
        event.e2=e2;
        if(e1&&e2){
            player.chooseControl('武器牌','防具牌').set('ai',function(){
                if(_status.event.player.get('e','2')){
                    return '武器牌';
                }
                return '防具牌';
            });
        }
        else if(e1){
            event.choice='武器牌';
        }
        else{
            event.choice='防具牌';
        }
        'step 1'
        var choice=event.choice||result.control;
        if(choice=='武器牌'){
            if(event.e1){
                target.discard(event.e1);
                target.$give(event.e1,player);
            }
            player.recover(2);
        }
        else{
            if(event.e2){
                player.equip(event.e2);
                target.$give(event.e2,player);
            }
        }
    },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
                if(target.get('e','2')&&!player.get('e','2')){
                    return -2;
                }
                return -1;
            },
                    },
                },
            },
            "qqwz_残戮":{
                audio:["qqwz残戮",2],
                trigger:{
                    player:"phaseDrawBefore",
                },
                check:function (event,player){
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp<game.players[i].maxHp){
                num++;
                if(num>3) return true;
            }
        }
        return false;
    },
                prompt:function (){
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp<game.players[i].maxHp){
                num++;
            }
        }
        return '残戮：是否放弃摸牌，改为摸'+get.cnNumber(num)+'张牌并回复等量体力';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp<game.players[i].maxHp){
                num++;
            }
        }
        if(num>0){
            player.draw(num);
            player.recover(num);
        }
    },
            },
            "qqwz_血仇":{
                audio:["qqwz血仇",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
        return player.num('h')==0;
    },
                content:function (){
        trigger.player.logSkill('qqwz_血仇');
        trigger.num=0;
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'damage')&&target.num('h')==0) return [1,-2];
            },
                    },
                },
            },
            "qqwz_丧命":{
                audio:["qqwz丧命",2],
                enable:"phaseUse",
                usable:1,
                delay:0,
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.showHandcards();
        "step 1"
        if(player.num('h',{color:'black'})>=player.num('h',{color:'red'})) player.useCard({name:'tao'},player);
    },
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                if(player.getStat().card.sha>0) return 0;
                if(player.num('h','tao')) return 0;    
                if(player.hasSkill('tao')) return 0;
                if(!player.num('h','tao')) return 0;            
                if(player.num('h',{color:'black'})>=player.num('h',{color:'red'})) return 3;
                return 0;
            },
                    },
                },
            },
            "qqwz_凌风":{
                audio:["qqwz凌风",2],
                trigger:{
                    player:"loseEnd",
                },
                usable:5,
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget([1,2],get.prompt('qqwz_凌风'),function(card,player,target){
            if(player==target) return false;
            return target.num('he');
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_凌风',result.targets);
            event.targets=result.targets
            if(result.targets.length==1){
                player.discardPlayerCard(event.targets[0],'he',[1,2],true);
            }
            else{
                player.discardPlayerCard(event.targets[0],'he',true);
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(targets.length==2){
            player.discardPlayerCard(targets[1],'he',true);
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                    noe:true,
                },
            },
            "qqwz_御风":{
                audio:["qqwz御风",2],
                trigger:{
                    player:"loseEnd",
                },
                direct:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_御风'),function(card,player,target){
            if(target==player) return false;
            return get.distance(player,target)<=1||player.canUse('sha',target,false);
        }).set('ai',function(target){
            if(get.distance(player,target)<=1){
                return ai.get.damageEffect(target,player,player)*2;
            }
            else{
                return ai.get.effect(target,{name:'sha'},player,player);
            }
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_御风',result.targets);
            var target=result.targets[0];
            var distance=get.distance(player,target);
            if(distance<=1&&player.canUse('sha',target,false)){
                player.chooseControl('出杀','造成伤害').ai=function(){
                    return '造成伤害';
                }
                event.target=target;
            }
            else if(distance<=1){
                target.damage();
                event.finish();
            }
            else{
                player.useCard({name:'sha'},target,false).animate=false;
                game.delay();
                event.finish();
            }
        }
        else{
            event.finish();
        }
        "step 2"
        var target=event.target;
        if(result.control=='出杀'){
            player.useCard({name:'sha'},target,false).animate=false;
            game.delay();
        }
        else{
            target.damage(2);
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                    noe:true,
                },
            },
            "qqwz_携手":{
                enable:"phaseUse",
                usable:2,
                audio:["qqwz携手",2],
                selectTarget:2,
                filterTarget:function (card,player,target){
        if(target.isMin()) return false;
        if(ui.selected.targets.length==0) return true;
        if(ui.selected.targets[0].num('e')==0&&target.num('e')==0) return false;
        return Math.abs(ui.selected.targets[0].num('e')-target.num('e'))<=player.maxHp;
    },
                multitarget:true,
                content:function (){
        "step 0"
        event.cards=[targets[0].get('e'),targets[1].get('e')];
        targets[0].lose(event.cards[0],ui.special);
        targets[1].lose(event.cards[1],ui.special);
        if(event.cards[0].length) targets[0].$give(event.cards[0],targets[1]);
        if(event.cards[1].length) targets[1].$give(event.cards[1],targets[0]);
        "step 1"
        for(var i=0;i<event.cards[1].length;i++){
            targets[0].equip(event.cards[1][i]);
        }
        for(var i=0;i<event.cards[0].length;i++){
            targets[1].equip(event.cards[0][i]);
        }
    },
                ai:{
                    order:10,
                    threaten:function (player,target){
            return 0.8*Math.max(1+target.maxHp);
        },
                    result:{
                        target:function (player,target){
                var list1=[];
                var list2=[];
                var num=player.maxHp;
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(ai.get.attitude(player,players[i])>0) list1.push(players[i]);
                    else if(ai.get.attitude(player,players[i])<0) list2.push(players[i]);
                }
                list1.sort(function(a,b){
                    return a.num('e')-b.num('e');
                });
                list2.sort(function(a,b){
                    return b.num('e')-a.num('e');
                });
                var delta;
                for(var i=0;i<list1.length;i++){
                    for(var j=0;j<list2.length;j++){
                        delta=list2[j].num('e')-list1[i].num('e');
                        if(delta<=0) continue;
                        if(delta<=num){
                            if(target==list1[i]||target==list2[j]){
                                return ai.get.attitude(player,target);
                            }
                            return 0;
                        }
                    }
                }
                return 0;
            },
                    },
                    effect:{
                        target:function (card,player,target){
                if(target.hp==target.maxHp&&get.tag(card,'damage')) return 0.2;
            },
                    },
                },
            },
            "qqwz_招亲":{
                trigger:{
                    global:"dying",
                },
                priority:6,
                audio:["qqwz招亲",2],
                filter:function (event,player){
        return event.player.hp<=0&&event.player.num('h')>0;
    },
                check:function (event,player){
        if(event.player.isUnderControl(true,player)){
            return event.player.get('h',function(card){
                return get.type(card)!='food';
            }).length>0;
        }
        return ai.get.attitude(player,event.player)>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var check=false;
        if(trigger.player==player){
            if(player.num('h',function(card){
                return get.type(card)!='food';
            })){
                check=true;
            }
        }
        else{
            if(ai.get.attitude(player,trigger.player)>0){
                check=true;
            }
        }
        player.choosePlayerCard(trigger.player,get.prompt('qqwz_招亲',trigger.player),'h').set('ai',function(button){
            if(!_status.event.check) return 0;
            if(_status.event.target.isUnderControl(true,_status.event.player)){
                if(get.type(button.link)!='food'){
                    return 10-ai.get.value(button.link);
                }
                return 0;
            }
            else{
                return Math.random();
            }
        }).set('check',check).set('filterButton',function(button){
            if(_status.event.player==_status.event.target){
                return lib.filter.cardDiscardable(button.link,_status.event.player);
            }
            return true;
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_招亲',trigger.player);
            event.card=result.links[0];
            player.showCards([event.card],get.translation(player)+'展示的手牌');
        }
        else{
            event.finish();
        }
        "step 2"
        if(get.type(event.card)!='food'){
            trigger.player.recover(9999);
            trigger.player.discard(event.card);
        }
    },
                ai:{
                    threaten:1.4,
                },
            },
            "qqwz_镇军":{
                trigger:{
                    player:"shaBegin",
                },
                direct:true,
                filter:function (event,player){
        return event.target.hp>0&&event.target.num('he')>0;
    },
                audio:["qqwz镇军",2],
                logTarget:"target",
                content:function (){
        'step 0'
        player.addTempSkill('qqwz_镇军血','phaseAfter');
        player.choosePlayerCard(trigger.target,'he',
            [1,Math.min(trigger.target.num('he'),trigger.target.hp*2)],get.prompt('qqwz_镇军',trigger.target));
        'step 1'
        if(result.bool&&result.links.length){
            player.logSkill('qqwz_镇军');
            if(trigger.target.storage.qqwz_镇军2){
                trigger.target.storage.qqwz_镇军2=trigger.target.storage.qqwz_镇军2.concat(result.links);
            }
            else{
                trigger.target.storage.qqwz_镇军2=result.links;
            }
            game.addVideo('storage',trigger.target,['qqwz_镇军2',get.cardsInfo(trigger.target.storage.qqwz_镇军2),'cards']);
            trigger.target.addSkill('qqwz_镇军2');
            trigger.target.lose(result.links,ui.special);
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "qqwz_镇军血":{
                audio:["qqwz镇军",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
                    if(event.player.get('h').length==0) return true;
            },
                forced:true,
                content:function (){
                trigger.num+=2;
            },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                        if(target.get('h').length==0) return [1,-2];
                    },
                    },
                },
            },
            "qqwz_定心":{
                enable:"phaseUse",
                usable:2,
                multitarget:true,
                audio:["qqwz定心",2],
                filterTarget:function (card,player,target){
        if(player==target) return false;
        var num=target.num('h');
        if(ui.selected.targets.length){
            return num<ui.selected.targets[0].num('h');
        }
        var players=game.filterPlayer();
        for(var i=0;i<players.length;i++){
            if(num>players[i].num('h')) return true;
        }
        return false;
    },
                selectTarget:2,
                content:function (){
        'step 0'
        var gainner,giver;
        if(targets[0].num('h')<targets[1].num('h')){
            gainner=targets[0];
            giver=targets[1];
        }
        else{
            gainner=targets[1];
            giver=targets[0];
        }
        giver.chooseCard('选择1张手牌交给'+get.translation(gainner),true);
        event.gainner=gainner;
        event.giver=giver;
        'step 1'
        var card=result.cards[0];
        event.gainner.gain(card,event.giver);
        event.giver.$give(1,event.gainner);
        'step 2'
        if(event.gainner.num('h')!=event.giver.num('h')){
            if(player.hp<player.maxHp){
                player.chooseControl('draw_card','recover_hp',function(event,player){
                    if(player.hp>=3&&player.num('h')<player.hp) return 'draw_card';
                    return 'recover_hp';
                });
            }
            else{
                player.draw(2);
                event.finish();
            }
        }
        else{
            event.finish();
        }
        'step 3'
        if(result.control=='draw_card'){
            player.draw(2);
        }
        else{
            player.recover(3);
        }
    },
                ai:{
                    order:10.5,
                    threaten:2,
                    result:{
                        target:function (player,target){
                var num=target.num('h');
                var att=ai.get.attitude(player,target);
                if(ui.selected.targets.length==0){
                    if(att>0) return -1;
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        var num2=players[i].num('h');
                        var att2=ai.get.attitude(player,players[i]);
                        if(att2>=0&&num2<num) return -1;
                    }
                    return 0;
                }
                else{
                    return 1;
                }
            },
                        player:0.1,
                    },
                },
            },
            "qqwz_魂忆":{
                audio:["qqwz魂忆",2],
                trigger:{
                    player:"dieBegin",
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_魂忆'),function(card,player,target){
            return player!=target&&_status.event.source!=target;
        }).set('ai',function(target){
            var num=ai.get.attitude(_status.event.player,target);
            if(num>0){
                if(target.hp==1){
                    num+=2;
                }
                if(target.hp<target.maxHp){
                    num+=2;
                }
            }
            return num;
        }).set('source',trigger.source);
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz_魂忆',target);
            target.recover(9999);
            target.draw(5);
        }
    },
                ai:{
                    expose:0.5,
                },
            },
            "qqwz_佳酿":{
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                audio:["qqwz佳酿",2],
                filter:function (event,player){
        return player.num('h')>0;
    },
                init:function (player){
        player.storage.qqwz_佳酿=[];
    },
                intro:{
                    content:"cards",
                },
                content:function (){
        'step 0'
        player.chooseCard([1,player.num('h')],get.prompt('qqwz_佳酿')).set('ai',function(){
            return 1;
        });
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_佳酿');
            player.storage.qqwz_佳酿=player.storage.qqwz_佳酿.concat(result.cards);
            player.syncStorage('qqwz_佳酿');
            player.markSkill('qqwz_佳酿');
            player.lose(result.cards,ui.special);
            player.$give(result.cards,player);
        }
    },
                ai:{
                    effect:{
                        player:function (card,player){
                if(_status.currentPhase!=player) return;
                if(player.num('h')<=player.hp&&!player.storage.qqwz_佳酿.length){
                    return [0,0,0,0];
                }
            },
                    },
                    threaten:1.4,
                },
                group:"qqwz_佳酿2",
            },
            "qqwz_佳酿2":{
                audio:["qqwz佳酿",2],
                trigger:{
                    global:"dying",
                },
                priority:6,
                filter:function (event,player){
        return event.player.hp<=0&&player.storage.qqwz_佳酿.length>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var att=ai.get.attitude(player,trigger.player);
        player.recover(2);
        player.chooseCardButton(get.prompt('qqwz_佳酿',trigger.player),player.storage.qqwz_佳酿).set('ai',function(button){
            if(_status.event.att>0) return 1;
            return 0;
        }).set('att',att);
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_佳酿',trigger.player);
            player.$throw(result.links);
            player.storage.qqwz_佳酿.remove(result.links[0]);
            ui.discardPile.appendChild(result.links[0]);
            player.syncStorage('qqwz_佳酿');
            trigger.player.useCard({name:'jiu'},trigger.player);
            trigger.player.hp+1;
            if(!player.storage.qqwz_佳酿.length){
                player.unmarkSkill('qqwz_佳酿');
            }
            else{
                player.markSkill('qqwz_佳酿');
            }
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "qqwz_烈火":{
                audio:["qqwz烈火",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                    },
                },
                group:"qqwz_烈火2",
            },
            "qqwz_烈火2":{
                audio:["qqwz烈火",2],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
return event.source&&event.source.isIn()&&event.source!=player;
                },
                content:function (){
        trigger.source.damage(2,'fire')._triggered=null;
    },
            },
            "qqwz_弓彰":{
                enable:"phaseUse",
                usable:1,
                audio:["qqwz弓彰",2],
                position:"he",
                filterCard:true,
                check:function (card){
        if(get.type(card)!='equip') return 0;
        var player=_status.currentPhase;
        if(player.num('he',{subtype:get.subtype(card)})>1){
            return 11-ai.get.equipValue(card);
        }
        return 6-ai.get.equipValue(card);
    },
                content:function (){
        "step 0"
        player.addTempSkill('qqwz_弓彰2','phaseAfter');
        "step 1"
        if(get.type(cards[0])=='equip'){
            player.chooseTarget('是否弃置一名角色的2张牌？',function(card,player,target){
                return player!=target&&target.num('he')>0;
            }).set('ai',function(target){
                var player=_status.event.player;
                if(ai.get.attitude(player,target)<0){
                    return Math.max(0.5,ai.get.effect(target,{name:'sha'},player,player));
                }
                return 0;
            });
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.line(result.targets,'green');
            event.target=result.targets[0];
            player.draw(2);
            player.discardPlayerCard(event.target,2,'he',true).ai=ai.get.buttonValue;
        }
    },
                ai:{
                    order:9,
                    result:{
                        player:1,
                    },
                },
            },
            "qqwz_弓彰2":{
                mod:{
                    attackFrom:function (){
            return -Infinity;
        },
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
            },
                },
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                filter:function (event,player){
                return event.card;
            },
                content:function (){
                trigger.directHit=true;
            },
            },
            "qqwz_直入":{
                skillAnimation:true,
                audio:["qqwz直入",2],
                unique:true,
                mark:true,
                init:function (player){
        player.storage.qqwz_直入=false;
    },
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.qqwz_直入;
    },
                intro:{
                    content:"limited",
                },
                filterTarget:true,
                content:function (){
        "step 0"
        player.awakenSkill('qqwz_直入');
        player.storage.qqwz_直入=true;
        event.players=game.filterPlayer(function(current){
            return current!=target&&get.distance(current,target,'attack')<=1;
        });
        event.players.sortBySeat(target);
        "step 1"
        if(event.players.length){
            event.current=event.players.shift();
            event.current.animate('target');
            if(event.current.num('he')&&target.isAlive()){
                event.current.chooseToDiscard({subtype:'equip1'},'he','弃置一张武器牌或让'+
                get.translation(target)+'摸一张牌并回复2点体力').set('ai',function(card){
                    if(ai.get.attitude(_status.event.player,_status.event.target)<0) return 7-ai.get.value(card);
                    return -1;
                }).set('target',target);
                event.tempbool=false;
            }
            else{
                event.tempbool=true;
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.tempbool||result.bool==false){
            target.draw(2);
            target.recover();
        }
        event.goto(1);
    },
                ai:{
                    order:5,
                    result:{
                        target:function (player,target){
                if(player.hp>2){
                    if(game.phaseNumber<game.players.length*2) return 0;
                }
                var num=0,players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(players[i]!=target&&get.distance(players[i],target,'attack')<=1){
                        num++;
                    }
                }
                return num;
            },
                    },
                },
            },
            "qqwz_毒箭":{
                audio:["qqwz毒箭",2],
                trigger:{
                    source:"damageBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.player)<=0;
    },
                forced:true,
                filter:function (event,player){
        return event.card&&get.distance(event.player,player,'attack')>1;
    },
                content:function (){
        trigger.num+=2;
    },
            },
            "qqwz_缴械":{
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
        return player.num('he')>0&&event.source&&event.source.get('e')!=undefined&&
            event.card&&event.card.name=='sha';
    },
                check:function (event,player){
        return ai.get.attitude(player,event.source)<=0;
    },
                direct:true,
                priority:5,
                audio:["qqwz缴械",2],
                content:function (){
        'step 0'
        var next=player.chooseToDiscard('he',get.prompt('qqwz_缴械'));
        next.logSkill=['qqwz_缴械',trigger.source];
        next.set('ai',function(card){
            if(ai.get.attitude(_status.event.player,_status.event.getTrigger().source)<0){
                return 6-ai.get.value(card);
            }
            return 0;
        });
        'step 1'
        if(result.bool){
            trigger.source.$give(trigger.source.get('e'),player);
            player.gain(trigger.source.get('e'),trigger.source);
        }
    },
            },
            "qqwz_亡箭":{
                audio:["qqwz亡箭",2],
                trigger:{
                    player:"loseEnd",
                },
                frequent:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                content:function (){
        var num=0;
        for(var i=0;i<trigger.cards.length;i++){
            if(trigger.cards[i].original=='e') num+=2;
        }
        player.recover(num);
    },
                ai:{
                    noe:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                },
            },
            "qqwz_擒拿":{
                audio:["qqwz擒拿",2],
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                filter:function (event,player){
    return player!=event.player;
},
                content:function (){
       trigger.player.skip('phase')
},
            },
            "qqwz_矜持":{
                audio:["qqwz矜持",2],
                trigger:{
                    player:"damageBegin",
                },
                filter:function (event,player){
        return event.source&&event.source.sex=='male';
    },
                direct:true,
                content:function (){
        "step 0"
        var next=player.chooseToDiscard('he','矜持：是否弃置一张牌令伤害-2？',function(card,player){
            return get.type(card)!='equip';
        });
        next.set('ai',function(card){
            var player=_status.event.player;
            if(player.hp==1||_status.event.getTrigger().num>1){
                return 9-ai.get.value(card);
            }
            if(player.hp==2){
                return 8-ai.get.value(card);
            }
            return 7-ai.get.value(card);
        });
        next.logSkill='qqwz_矜持';
        "step 1"
        if(result.bool){
            game.delay(0.5);
            trigger.num-=2;
        }
    },
            },
            "qqwz_毁誉":{
                audio:["qqwz毁誉",2],
                trigger:{
                    player:"useCard",
                },
                filter:function (event,player){
        if(_status.currentPhase!=player) return false;
        if(player.hasSkill('qqwz_毁誉2')) return false;
        if(event.targets.length>1) return false;
        var card=event.card;
        if(card.name=='sha') return true;
        if(get.type(card)=='trick') return true;
        return false;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_毁誉'),function(card,player,target){
            if(player==target) return false;
            var trigger=_status.event.getTrigger();
            return player.canUse(trigger.card,target)&&trigger.targets.contains(target)==false;
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            return ai.get.effect(target,trigger.card,player,player)+1;
        });
        "step 1"
        if(result.bool){
            game.delay(0,200);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        "step 2"
        game.delay();
        player.addSkill('qqwz_毁誉2');
        player.logSkill('qqwz_毁誉',event.target);
        event.target.chooseCard('交给'+get.translation(player)+'一张手牌，或成为'+
        get.translation(trigger.card)+'的额外目标').set('ai',function(card){
            return 5-ai.get.value(card);
        });
        "step 3"
        if(result.bool){
            player.gain(result.cards,event.target);
            event.target.$give(1,player);
            game.delay();
            trigger.untrigger();
            trigger.player=event.target;
            trigger.trigger('useCard');
            game.log(event.target,'成为了',trigger.card,'的使用者');
        }
        else{
            game.log(event.target,'成为了',trigger.card,'的额外目标');
            trigger.targets.push(event.target);
        }
    },
            },
            "qqwz_耿直":{
                audio:["qqwz耿直",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_耿直')).set('ai',function(target){
            return ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            event.target=result.targets[0];
            player.logSkill('qqwz_耿直',result.targets);
        }
        else{
            event.finish();
        }
        "step 2"
        var cards=get.cards();
        var card=cards[0];
        switch(get.type(card,'trick')){
            case 'basic':event.effect='gainMaxHp';break;
            case 'trick':event.effect='draw';break;
            case 'equip':event.effect='recover';break;
            case 'jiguan':event.effect='damage';break;
        }
        if(get.type(card)=='equip'){
            event.target.equip(card);
            event.target.$draw(card);
            game.delay();
        }
        else{
            event.target.gain(cards,'gain2','log');
        }
        "step 3"
        switch(event.effect){
            case 'recover':event.target.recover();break;
        }
        switch(event.effect){
             case 'draw':event.target.draw(3);break;   
        }
         switch(event.effect){
             case 'gainMaxHp':event.target.gainMaxHp();break;   
        }
         switch(event.effect){
             case 'damage':event.target.damage();break;   
        }
    },
                ai:{
                    expose:0.2,
                    threaten:1.2,
                },
            },
            "qqwz_妙玄":{
                audio:["qqwz妙玄",2],
                trigger:{
                    player:"discardAfter",
                },
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(get.position(event.cards[i])=='d'){
                return true;
            }
        }
        return false;
    },
                frequent:true,
                popup:false,
                content:function (){
        "step 0"
        player.draw();
        var cards=[];
        for(var i=0;i<trigger.cards.length;i++){
            if(get.position(trigger.cards[i])=='d'){
                cards.push(trigger.cards[i]);
            }
        }
        player.chooseCardButton(cards,[1,cards.length],'妙玄：将弃置的牌按任意顺序置于牌堆顶（先选择的在上）').set('ai',function(){
            return -1;
        });
        "step 1"
        if(result&&result.bool&&result.links&&result.links.length){
            var cards=result.links.slice(0);
            while(cards.length){
                ui.cardPile.insertBefore(cards.pop(),ui.cardPile.firstChild);
            }
            player.logSkill('qqwz_妙玄');
        }
    },
            },
            "qqwz_诱饵":{
                audio:["qqwz诱饵",2],
                trigger:{
                    player:["phaseEnd","phaseBegin"],
                },
                direct:true,
                filter:function (event,player){
        return player.num('he')>0;
    },
                check:function (event,player){
        return player.num('h','sha')<=player.num('h')/3;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_诱饵'),function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
            if(target.num('he')==0) return 0;
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            game.delay();
            player.logSkill('qqwz_诱饵',result.targets);
            event.target=result.targets[0];
            event.target.discardPlayerCard(player,'hej',true);
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.links[0].name!='sha'&&event.target.num('he')){
            player.recover(2);
            player.gainPlayerCard(2,'he',event.target,true);
        }
    },
                ai:{
                    expose:0.2,
                    threaten:1.4,
                },
            },
            "qqwz_秉正":{
                audio:["qqwz秉正",2],
                trigger:{
                    player:["phaseDiscardEnd","phaseBegin"],
                },
                filter:function (event,player){
        var cards=player.get('h');
        if(cards.length<1) return false;
        var color=get.color(cards[0]);
        for(var i=1;i<cards.length;i++){
            if(get.color(cards[i])!=color) return false;
        }
        return true;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_秉正'),[1,player.num('h')],function(card,player,target){
            return true;
        }).set('ai',function(target){
            return ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_秉正');
            player.showHandcards(get.translation(player)+'发动了【秉正】');
            event.targets=result.targets;
        }
        else{
            event.finish();
        }
        "step 2"
        if(targets&&targets.length){
            player.line(targets,'green');
            game.asyncDraw(targets);
        }
    },
                ai:{
                    expose:0.1,
                },
            },
            "qqwz_慎重":{
                audio:["qqwz慎重",2],
                enable:"phaseUse",
                position:"he",
                filterCard:true,
                selectCard:2,
                prompt:"弃置两张牌并摸一张牌回复1点体力增加1点体力上限",
                check:function (card){return 4-ai.get.useful(card)},
                content:function (){
        player.draw();
        player.recover();
        player.gainMaxHp();
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                },
            },
            "qqwz_安邦":{
                audio:["qqwz安邦",2],
                enable:"phaseUse",
                usable:2,
                filterTarget:function (card,player,target){
        return player!=target&&target.num('e')>0;
    },
                content:function (){
        'step 0'
        player.choosePlayerCard(target,'e',true);
        'step 1'
        if(result.links){
            var num=0,players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(get.distance(target,players[i],'attack')<=1){
                    num++;
                }
            }
            event.num=num;
            target.gain(result.links,'gain2');
        }
        else{
            event.finish();
        }
        'step 2'
        var num2=0,players=game.filterPlayer();
        for(var i=0;i<players.length;i++){
            if(get.distance(target,players[i],'attack')<=1){
                num2++;
            }
        }
        if(event.num>num2){
            player.draw(2);
            player.recover(2);
        }
    },
                ai:{
                    order:7,
                    result:{
                        target:function (player,target){
                if(target.hasSkillTag('noe')) return 1;
                if(target.get('e','1')||target.get('e','4')) return -1;
                if(target.get('e','2')) return -0.7;
                return -0.5;
            },
                    },
                },
            },
            "qqwz_相助":{
                audio:["qqwz相助",2],
                trigger:{
                    player:"damageEnd",
                    source:"damageEnd",
                },
                direct:true,
                filter:function (event,player){
        var nh=player.num('h');
        return game.hasPlayer(function(current){
            return current.num('h')!=nh;
        });
    },
                content:function (){
        'step 0'
        var nh=player.num('h');
        player.chooseTarget(get.prompt('qqwz_相助'),function(card,player,target){
            return _status.event.nh!=target.num('h');
        }).set('ai',function(target){
            var att=ai.get.attitude(_status.event.player,target);
            if(target.num('h')>_status.event.nh) return -att;
            return att;
        }).set('nh',nh);
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_相助',result.targets);
            var target=result.targets[0];
            if(target.num('h')<player.num('h')){
                target.draw(2);
            }
            else{
                target.discard(target.get('h').randomGet());
            }
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "qqwz_阵邀":{
                audio:["qqwz阵邀",2],
                usable:1,
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
        if(event.responded) return false;
        if(!event.filterCard({name:'shan'})&&!!event.filterCard({name:'sha'})) return false;
        var nh=player.num('h');
        return game.hasPlayer(function(current){
            return current!=player&&current.num('h')<nh;
        });
    },
                direct:true,
                prompt:function (){
                return '与一名角色交换手牌视为使用一张闪';
            },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_阵邀'),function(card,player,target){
            return target.num('h')<player.num('h');
        }).set('ai',function(target){
            return ai.get.attitude(player,target)
        });
        "step 1"
        if(result.bool){
            trigger.untrigger();
            trigger.responded=true;
            if(trigger.filterCard({name:'shan'})){
                trigger.result={bool:true,card:{name:'shan'}}
            }
            else{
                trigger.result={bool:true,card:{name:'sha'}}
            }
            player.logSkill('qqwz_阵邀',result.targets);
            player.swapHandcards(result.targets[0]);
        }
    },
                group:["qqwz_阵邀_sha","qqwz_阵邀_tao","qqwz_阵邀_jiu"],
            },
            "qqwz_阵邀_sha":{
                enable:"chooseToUse",
                usable:1,
                viewAs:{
                    name:"sha",
                },
                log:false,
                viewAsFilter:function (player){
        var nh=player.num('h');
        return game.hasPlayer(function(current){
            return current!=player&&current.num('h')<nh;
        });
    },
                prompt:function (){
                return '与一名角色交换手牌视为使用一张杀';
            },
                precontent:function (){
        'step 0'
        player.chooseTarget('选择交换手牌的目标',function(card,player,target){
            return target.num('h')<player.num('h')
        },true).ai=function(target){
            return ai.get.attitude(player,target);
        }
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_阵邀_sha',result.targets);
            player.swapHandcards(result.targets[0]);
        }
    },
                filterCard:function (card){
        return false;
    },
                selectCard:-1,
                ai:{
                    skillTagFilter:function (player,tag,arg){
            var nh=player.num('h');
            return game.hasPlayer(function(current){
                return current!=player&&current.num('h')<nh;
            });
        },
                    order:function (){
            var player=_status.event.player;
            var nh=player.num('h');
            if(game.hasPlayer(function(current){
                return ai.get.attitude(player,current)>0&&current.num('h')<nh;
            })){
                return 2.9;
            }
            return 0;
        },
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    result:{
                        target:function (player,target){
                if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                    if(ai.get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3;
                    }
                }
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function (card){
                if(card.nature) return 1;
            },
                        fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
            },
            "qqwz_阵邀_tao":{
                enable:"chooseToUse",
                usable:1,
                viewAs:{
                    name:"tao",
                },
                viewAsFilter:function (player){
        var nh=player.num('h');
        return game.hasPlayer(function(current){
            return current!=player&&current.num('h')<nh;
        });
    },
                log:false,
                prompt:function (){
                return '与一名角色交换手牌视为使用一张桃';
            },
                precontent:function (){
        'step 0'
        player.chooseTarget('选择交换手牌的目标',function(card,player,target){
            return target.num('h')<player.num('h')
        },true).ai=function(target){
            return ai.get.attitude(player,target);
        }
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_阵邀_tao',result.targets);
            player.swapHandcards(result.targets[0]);
        }
    },
                filterCard:function (card){
        return false;
    },
                selectCard:-1,
                ai:{
                    skillTagFilter:function (player,tag,arg){
            var nh=player.num('h');
            return game.hasPlayer(function(current){
                return current!=player&&current.num('h')<nh;
            });
        },
                    order:function (){
            var player=_status.event.player;
            var nh=player.num('h');
            if(game.hasPlayer(function(current){
                return ai.get.attitude(player,current)>0&&current.num('h')<nh;
            })){
                return _status.event.type=='dying'?0.5:4;
            }
            return 0;
        },
                    save:true,
                    basic:{
                        order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                        useful:[8,6.5],
                        value:[8,6.5],
                    },
                    result:{
                        target:function (player,target){
                // if(player==target&&player.hp<=0) return 2;
                var nd=player.needsToDiscard();
                var keep=false;
                if(nd<=0){
                    keep=true;
                }
                else if(nd==1&&target.hp>=2&&target.num('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2||nd==0) return 0;
                    if(target.hp==2){
                        if(game.hasPlayer(function(current){
                            if(target!=current&&ai.get.attitude(target,current)>=3){
                                if(current.hp<=1) return true;
                                if((mode=='identity'||mode=='versus'||mode=='chess')&&current.identity=='zhu'&&current.hp<=2) return true;
                            }
                        })){
                            return 0;
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=ai.get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=game.countPlayer(function(current){
                            if(current.identity=='fan'){
                                return current.num('h','tao');
                            }
                        });
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
            },
            "qqwz_阵邀_jiu":{
                enable:"chooseToUse",
                usable:1,
                viewAs:{
                    name:"jiu",
                },
                viewAsFilter:function (player){
        var nh=player.num('h');
        return game.hasPlayer(function(current){
            return current!=player&&current.num('h')<nh;
        });
    },
                log:false,
                prompt:function (){
                return '与一名角色交换手牌视为使用一张酒';
            },
                precontent:function (){
        'step 0'
        player.chooseTarget('选择交换手牌的目标',function(card,player,target){
            return target.num('h')<player.num('h')
        },true).ai=function(target){
            return ai.get.attitude(player,target);
        }
        'step 1'
        if(result.bool){
            player.logSkill('qqwz_阵邀_jiu',result.targets);
            player.swapHandcards(result.targets[0]);
        }
    },
                filterCard:function (card){
        return false;
    },
                selectCard:-1,
                ai:{
                    skillTagFilter:function (player,tag,arg){
            var nh=player.num('h');
            return game.hasPlayer(function(current){
                return current!=player&&current.num('h')<nh;
            });
        },
                    order:0,
                    save:true,
                    basic:{
                        useful:function (card,i){
                if(_status.event.player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                        value:function (card,player){
                if(player.hp>1){
                    if(i==0) return 5;
                    return 1;
                }
                if(i==0) return 7.3;
                return 3;
            },
                    },
                    result:{
                        target:function (player,target){
                if(target&&target.isDying()) return 2;
                if(lib.config.mode=='stone'&&!player.isMin()){
                    if(player.getActCount()+1>=player.actcount) return 0;
                }
                var shas=player.get('h','sha');
                if(shas.length>1&&player.getCardUsable('sha')>1){
                    return 0;
                }
                var card;
                if(shas.length){
                    for(var i=0;i<shas.length;i++){
                        if(lib.filter.filterCard(shas[i],target)){
                            card=shas[i];break;
                        }
                    }
                }
                else if(player.hasSha()&&player.needsToDiscard()){
                    if(player.num('h','hufu')!=1){
                        card={name:'sha'};
                    }
                }
                if(card){
                    if(game.hasPlayer(function(current){
                        return (ai.get.attitude(target,current)<0&&
                            target.canUse(card,current,true,true)&&
                            !current.num('e','baiyin')&&
                            ai.get.effect(current,card,target)>0);
                    })){
                        return 1;
                    }
                }
                return 0;
            },
                    },
                    tag:{
                        save:1,
                    },
                },
            },
            "qqwz_善学":{
                audio:["qqwz善学",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                content:function (){
        'step 0'
        var num=player.hp;
        if(!player.hasSkill('qqwz_鸿宴')){
            num=player.maxHp;
        }
        player.chooseTarget([1,num],get.prompt('qqwz_善学')).set('ai',function(target){
            var att=ai.get.attitude(_status.event.player,target);
            if(target.num('he')) return att;
            return att/10;
        });
        'step 1'
        if(result.bool){
            player.logSkill("qqwz_善学",result.targets);
            event.targets=result.targets;
            event.targets.sort(lib.sort.seat);
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.targets.length){
            var target=event.targets.shift();
            target.draw(2);
            event.current=target;
        }
        else{
            event.finish();
        }
        'step 3'
        if(event.current&&event.current.num('he')){
            event.current.chooseCard('选择一张牌置于牌堆顶','he',true);
        }
        else{
            event.goto(2);
        }
        'step 4'
        if(result&&result.cards){
            event.card=result.cards[0];
            event.current.lose(result.cards,ui.special);
            game.broadcastAll(function(player){
                var cardx=ui.create.card();
                cardx.classList.add('infohidden');
                cardx.classList.add('infoflip');
                player.$throw(cardx,1000,'nobroadcast');
            },event.current);
        }
        else{
            event.card=null;
        }
        'step 5'
        if(event.current==game.me) game.delay(0.5);
        'step 6'
        if(event.card){
            event.card.fix();
            ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
        }
        event.goto(2);
    },
            },
            "qqwz_鸿宴":{
                audio:["qqwz鸿宴",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return target.num('he')>0&&target!=player;
    },
                content:function (){
        'step 0'
        if(target.num('e')){
            target.chooseBool('是否将装备区内的所有牌交给'+get.translation(player)+'？').set('ai',function(){
                if(_status.event.player.num('e')>=3) return false;
                return true;
            });
        }
        else{
            target.chooseToDiscard(3,true,'he');
            event.finish();
        }
        'step 1'
        if(result.bool){
            var es=target.get('e');
            player.gain(es,target);
            target.$give(es,player);
            player.removeSkill('qqwz_鸿宴');
        }
        else{
            target.chooseToDiscard(3,true,'he');
        }
    },
                ai:{
                    order:6,
                    result:{
                        target:function (player,target){
                var ne=target.num('e');
                if(!ne) return -2;
                if(ne>=2) return -ne;
                return 0;
            },
                    },
                },
            },
            "qqwz_王召":{
                unique:true,
                global:"qqwz_王召2",
                zhuSkill:true,
            },
            "qqwz_王召2":{
                mod:{
                    attackTo:function (from,to,distance){
                    if(from.group!='wu') return;
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(from!=players[i]&&to!=players[i]&&
                            players[i].hasZhuSkill('qqwz_王召',from)){
                            if(get.distance(players[i],to)<=1) return distance-100;
                        }
                    }
                },
                },
            },
            "qqwz_善民":{
                enable:"phaseUse",
                usable:1,
                audio:["qqwz善民",2],
                filterTarget:function (card,player,target){
        return target!=player&&target.num('he')>0;
    },
                content:function (){
        'step 0'
        target.chooseCard('he',[1,9],'善民：将1~9张牌置于'+get.translation(player)+'的武将牌上',true).set('ai',function(card){
            if(ai.get.attitude(_status.event.player,_status.event.getParent().player)>0){
                return 7-ai.get.value(card);
            }
            return -ai.get.value(card);
        });
        'step 1'
        if(result.bool){
            target.$give(result.cards,player);
            target.lose(result.cards,ui.special);
            player.storage.qqwz_善民_draw=result.cards;
            player.storage.qqwz_善民_draw_source=target;
            player.syncStorage('qqwz_善民_draw');
            player.addSkill('qqwz_善民_draw');
        }
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                if(ai.get.attitude(player,target)>0){
                    return Math.sqrt(target.num('he'));
                }
                return 0;
            },
                        player:1,
                    },
                },
                subSkill:{
                    draw:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        mark:true,
                        intro:{
                            content:"cards",
                        },
                        content:function (){
                var cards=player.storage.qqwz_善民_draw;
                if(cards){
                    player.gain(cards,'gain2');
                    var target=player.storage.qqwz_善民_draw_source;
                    if(target&&target.isAlive()){
                        target.draw(cards.length);
                    }
                }
                delete player.storage.qqwz_善民_draw;
                delete player.storage.qqwz_善民_draw_source;
                player.removeSkill('qqwz_善民_draw');
            },
                        sub:true,
                    },
                },
            },
            "qqwz_奢豪":{
                audio:["qqwz奢豪",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.getHandcardLimit()>0;
    },
                init:function (player){
        player.storage.qqwz_奢豪=0;
    },
                usable:20,
                content:function (){
        player.draw(2);
        player.storage.qqwz_奢豪++;
    },
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                if(player.num('h')<player.getHandcardLimit()){
                    return 1;
                }
                return 0;
            },
                    },
                },
                mod:{
                    maxHandcard:function (player,num){
            return num-player.storage.qqwz_奢豪;
        },
                },
                group:["qqwz_奢豪2","qqwz_奢豪3"],
            },
            "qqwz_奢豪2":{
                trigger:{
                    player:"phaseAfter",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
                player.storage.qqwz_奢豪=0;
            },
            },
            "qqwz_奢豪3":{
                audio:["qqwz奢豪",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        if(player.num('h')) return false;
        return game.hasPlayer(function(current){
            return !current.isLinked();
        });
    },
                content:function (){
        "step 0"
             player.draw(4);
        var num=game.countPlayer(function(current){
            return !current.isLinked();
        });
        player.chooseTarget(get.prompt('qqwz_奢豪'),[1,Math.min(num,player.hp)],function(card,player,target){
            return !target.isLinked();
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_奢豪',result.targets);
            event.targets=result.targets;
            event.num=0;
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.num<event.targets.length){
            event.targets[event.num].link();
            event.num++;
            event.redo();
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "qqwz_罪责":{
                audio:["qqwz罪责",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
        return player.isLinked()&&event.notLink()&&event.nature=='fire';
    },
                content:function (){
        trigger.num+=2;
    },
            },
            "qqwz_掌控":{
                "init2":function (player){
player.storage.qqwz_掌控=[]
},
                trigger:{
                    player:"phaseAfter",
                },
                audio:["qqwz掌控",2],
                forced:true,
                content:function (){
player.gain(player.storage.qqwz_掌控)
player.storage.qqwz_掌控=[]
},
                group:"qqwz_掌控2",
            },
            "qqwz_掌控2":{
                trigger:{
                    global:"loseAfter",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&_status.currentPhase==player
},
                content:function (){
player.storage.qqwz_掌控=player.storage.qqwz_掌控.concat(trigger.cards)
},
            },
            "qqwz_伺机":{
                trigger:{
                    player:"loseEnd",
                },
                audio:["qqwz伺机",2],
                forced:true,
                popup:false,
                content:function (){
trigger.player.logSkill('qqwz_伺机')
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wu') game.players[i].draw()._triggered=null;;
}
   for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='wei') game.players[i].loseHp()._triggered=null;;
}
        for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='shu') game.players[i].recover()._triggered=null;;
}
        for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='qun') game.players[i].loseMaxHp()._triggered=null;;
}
},
                group:"qqwz_伺机2",
            },
            "qqwz_白衣":{
                skillAnimation:true,
                audio:["qqwz白衣",2],
                unique:true,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                filter:function (event,player){
        if(player.storage.qqwz_白衣) return false;
        if(player.num('h')>=player.hp+3) return true;
        if(player.num('h')>=player.hp+2&&game.players.length+game.dead.length>=7) return true;
        return false;
    },
                content:function (){
        player.storage.qqwz_白衣=true;
        player.loseMaxHp(2);
        player.recover(999);
        player.addSkill('qqwz_掌控');
        player.awakenSkill('qqwz_白衣');
    },
            },
            "qqwz_伺机2":{
                trigger:{
                    player:"phaseDiscardBefore",
                },
                audio:["qqwz伺机",2],
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "qqwz_锦帆":{
                skillAnimation:true,
                audio:["qqwz锦帆",2],
                unique:true,
                mark:true,
                trigger:{
                    global:"useCard",
                },
                priority:5,
                filter:function (event,player){
        if(get.type(event.card)!='trick') return false;
        if(get.info(event.card).multitarget) return false;
        if(event.targets.length<2) return false;
        if(player.storage.qqwz_锦帆) return false;
        return true;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz_锦帆'),
            [1,trigger.targets.length],function(card,player,target){
            return _status.event.getTrigger().targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            if(game.phaseNumber>game.players.length*2&&trigger.targets.length>=game.players.length-1){
                return -ai.get.effect(target,trigger.card,trigger.player,_status.event.player);
            }
            return -1;
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_锦帆',result.targets);
            for(var i=0;i<result.targets.length;i++){
                trigger.targets.remove(result.targets[i]);
            }
            game.delay();
        }
    },
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "qqwz_合围":{
                audio:["qqwz合围",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&player.num('he')==0;
},
                content:function (){
trigger.player.die()._triggered=null;
},
                group:["qqwz_合围2","qqwz_合围3"],
            },
            "qqwz_合围2":{
                audio:["qqwz合围",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
return get.type(event.card)=='basic'&&Math.random()<=0.5;
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
            },
            "qqwz_合围3":{
                audio:["qqwz合围",2],
                enable:"phaseUse",
                usable:1,
                position:"he",
                filterCard:true,
                selectCard:2,
                prompt:"弃置两张牌并对全体造成1点神圣伤害",
                check:function (card){return 4-ai.get.useful(card)},
                content:function (){
        for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].damage(1)._triggered=null;;
        };
            player.recover(999);
    };
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                },
            },
            "qqwz_霸业":{
                audio:["qqwz霸业",2],
                group:"qqwz_霸业2",
                trigger:{
                    player:"phaseDrawBegin",
                },
                forced:true,
                content:function (){
        trigger.num+=3;
    },
                ai:{
                    threaten:1.5,
                },
                mod:{
                    maxHandcard:function (player,num){
            if(player.hp<player.maxHp) return num+player.maxHp-player.hp;
        },
                },
            },
            "qqwz_霸业2":{
                trigger:{
                    source:"damageEnd",
                },
                audio:["qqwz霸业",2],
                forced:true,
                filter:function (event,player){
        if(event.getParent().name!='qqwz_霸业'){
            for(var i=0;i<game.players.length;i++){
                if(game.players[i].get('e','1')&&game.players[i]!=event.player) return true;
            }
        }
        return false;
    },
                content:function (){
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].get('e','1')&&game.players[i]!=trigger.player){
                game.players[i].damage(trigger.num);
            }
        }
    },
            },
            "qqwz_控局":{
                audio:["qqwz控局",2],
                enable:"phaseUse",
                usable:2,
                filter:function (event,player){
        return player.num('h')>0;
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                filterCard:true,
                check:function (card){
        return 8-ai.get.value(card);
    },
                discard:false,
                prepare:"give",
                content:function (){
        "step 0"
        target.storage.qqwz_控局=cards[0];
        target.gain(cards[0],player);
        "step 1"
        target.chooseControl('展示手牌','流失体力').ai=function(event,player){
            var cards=player.get('he',{suit:get.suit(player.storage.qqwz_控局)});
            if(cards.length==1) return 0;
            if(cards.length>=2){
                for(var i=0;i<cards.length;i++){
                    if(get.tag(cards[i],'save')) return 1;
                }
            }
            if(player.hp==1) return 0;
            for(var i=0;i<cards.length;i++){
                if(ai.get.value(cards[i])>=8) return 1;
            }
            if(cards.length>2&&player.hp>2) return 1;
            if(cards.length>3) return 1;
            return 0;
        }
        "step 2"
        if(result.control=='展示手牌'){
            target.showHandcards();
        }
        else{
            target.loseHp(2);
            event.finish();
        }
        "step 3"
        target.discard(target.get('he',{suit:get.suit(target.storage.qqwz_控局)}))
        delete target.storage.qqwz_控局;
    },
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                return -target.num('he')-(player.num('h','du')?1:0);
            },
                    },
                    threaten:2,
                },
            },
            "qqwz_谋策":{
                audio:["qqwz谋策",2],
                group:["qqwz_谋策2","qqwz_谋策3"],
                trigger:{
                    target:"useCardToBefore",
                },
                filter:function (event,player){
        if(event.player==player) return false;
        if(event.getParent(2).player&&event.getParent(2).player==player) return false;
        return player.hp!=1;
    },
                frequent:true,
                content:function (){                 
        player.chooseToUse();            
    },
            },
            "qqwz_谋策2":{
                audio:["qqwz谋策",2],
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
        return event.player!=player&&event.player.isAlive();
    },
                logTarget:"player",
                forced:true,
                content:function (){
        'step 0'
        var hs=trigger.player.get('he');
        if(hs.length){
            player.gain(hs.randomGet(),trigger.player);
            trigger.player.$give(1,player);
        }    
        'step 1'
        trigger.player.chooseToUse('谋策：请使用一张锦囊牌，否则受到2点神圣伤害').set('filterCard',function(card,player){
            return get.type(card,'trick')=='trick'&&(lib.filter.cardEnabled(card,player,event.parent.parent)&&lib.filter.cardUsable(card,player,event.parent.parent));
        });
        'step 2'
        if(!result.bool){
            trigger.player.damage(2)._triggered=null;;
        }
    },
            },
            "qqwz_谋策3":{
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "qqwz_诈曹":{
                trigger:{
                    player:"loseHpEnd",
                },
                forced:true,
                audio:["qqwz诈曹",2],
                content:function (){
        player.draw(3);
        if(_status.currentPhase==player){
            player.addTempSkill('qqwz_诈曹2',{player:'phaseAfter'});
        }
        else{
            game.trySkillAudio('qqwz_诈曹',player);
        }
    },
            },
            "qqwz_诈曹2":{
                mod:{
                    targetInRange:function (card,player,target,now){
                    if(card.name=='sha') return true;
                },
                    cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+4;
                },
                },
                trigger:{
                    player:"shaBegin",
                },
                audio:["qqwz诈曹",2],
                forced:true,
                filter:function (event,player){
                return event.card;
            },
                content:function (){
                trigger.directHit=true;
            },
            },
            "qqwz_牺牲":{
                audio:["qqwz牺牲",2],
                group:"qqwz_牺牲2",
                enable:"phaseUse",
                usable:1,
                filterCard:true,
                check:function (card){
        return 8-ai.get.value(card);
    },
                position:"he",
                content:function (){
        player.loseHp(2);
    },
                ai:{
                    order:8,
                    result:{
                        player:function (player){
                if(player.hp<=2) return player.num('h')==0?1:0;
                if(player.num('h',{name:'sha',color:'red'})) return 1;
                return player.num('h')<=player.hp?1:0;
            },
                    },
                    effect:function (card,player){
            if(get.tag(card,'damage')){
                if(player.hasSkill('jueqing')) return [1,1];
                return 1.2;
            }
            if(get.tag(card,'loseHp')){
                if(player.hp<=1) return;
                return [0,0];
            }
        },
                },
            },
            "qqwz_牺牲2":{
                audio:["qqwz牺牲",2],
                trigger:{
                    player:"loseHpEnd",
                },
                forced:true,
                filter:function (event,player){
       return Math.random()<=0.8;
},
                content:function (){
     player.recover();
},
            },
            "qqwz_赤焰":{
                audio:["qqwz赤焰",2],
                group:["qqwz_赤焰2","qqwz_赤焰3"],
                trigger:{
                    player:"damageEnd",
                },
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].damage('fire')._triggered=null;
        };
    };
},
            },
            "qqwz_赤焰2":{
                audio:["qqwz赤焰",2],
                trigger:{
                    source:"damageEnd",
                },
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].damage('fire')._triggered=null;
        };
    };
},
            },
            "qqwz_赤焰3":{
                trigger:{
                    player:"damageBefore",
                },
                audio:["qqwz赤焰",2],
                forced:true,
                unique:true,
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        player.recover();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                    },
                },
            },
            "qqwz_雅逊":{
                init:function (player){
        player.storage.qqwz_雅逊2=[];
    },
                group:"qqwz_雅逊3",
                audio:["qqwz雅逊",2],
                trigger:{
                    target:"useCardToBegin",
                    player:"judgeBefore",
                },
                filter:function (event,player){
        if(player.num('h')==0) return false;
        if(event.parent.name=='phaseJudge'){
            if(lib.skill.qqwz_雅逊.trigger.player=='judgeBefore'){
                return true;
            }
            return event.result&&event.result.judge!=0;
        }
        if(event.name=='judge') return false;
        if(event.targets&&event.targets.length>1) return false;
        if(event.card&&get.type(event.card)=='trick'&&event.player!=player) return true;
    },
                content:function (){
        player.storage.qqwz_雅逊2=player.storage.qqwz_雅逊2.concat(player.get('h'));
        game.addVideo('storage',player,['qqwz_雅逊2',get.cardsInfo(player.storage.qqwz_雅逊2),'cards']);
        player.lose(player.get('h'),ui.special);
        player.addSkill('qqwz_雅逊2');
    },
                ai:{
                    effect:function (card,player,target){
            if(!target.hasFriend()) return;
            if(get.type(card,'trick')=='trick'&&ui.selected.targets.length==0) return [1,1];
        },
                },
            },
            "qqwz_雅逊2":{
                trigger:{
                    global:"phaseAfter",
                },
                forced:true,
                audio:["qqwz雅逊",2],
                content:function (){
                player.gain(player.storage.qqwz_雅逊2);
                player.removeSkill('qqwz_雅逊2');
                player.storage.qqwz_雅逊2=[];
                game.addVideo('storage',player,['qqwz_雅逊2',get.cardsInfo(player.storage.qqwz_雅逊2),'cards']);
            },
                mark:true,
                intro:{
                    content:"cardCount",
                },
            },
            "qqwz_雅逊3":{
                audio:["qqwz雅逊",2],
                trigger:{
                    player:"loseEnd",
                },
                direct:true,
                filter:function (event,player){
        if(player.num('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                content:function (){
        "step 0"
        var num=0;
        for(var i=0;i<trigger.cards.length;i+=2){
            if(trigger.cards[i].original=='h') num+=2;
        }
        player.chooseTarget('选择发动雅逊的目标',[1,num]).ai=function(target){
            var player=_status.event.player;
            if(player==target) return ai.get.attitude(player,target)+10;
            return ai.get.attitude(player,target);
        }
        "step 1"
        if(result.bool){
            player.logSkill('qqwz_雅逊3',result.targets);
            game.asyncDraw(result.targets,2);
        }
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        target:function (card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                    },
                    noh:true,
                },
            },
            "qqwz_妙心":{
                audio:["qqwz妙心",2],
                enable:"phaseUse",
                discard:false,
                filter:function (event,player){
        return player.num('he',{color:'red'})>0;
    },
                prepare:"throw",
                position:"he",
                filterCard:{
                    color:"red",
                },
                filterTarget:function (card,player,target){
        if(player==target) return false;
        if(target.hasJudge('lebu')) return true;
        return lib.filter.targetEnabled({name:'lebu'},player,target);
    },
                check:function (card){
        return 7-ai.get.value(card);
    },
                content:function (){
        if(target.hasJudge('lebu')){
            target.discard(target.getJudge('lebu'));
        }
        else{
            var next=player.useCard({name:'lebu'},target,cards);
            next.animate=false;
            next.audio=false;
        }
        player.draw();
        player.recover();
    },
                ai:{
                    result:{
                        target:function (player,target){
                if(target.hasJudge('lebu')) return -ai.get.effect(target,{name:'lebu'},player,target);
                return ai.get.effect(target,{name:'lebu'},player,target);
            },
                    },
                    order:9,
                },
            },
            "qqwz_娇啸":{
                audio:["qqwz娇啸",2],
                trigger:{
                    target:"shaBefore",
                },
                direct:true,
                priority:5,
                filter:function (event,player){
        if(player.num('he')==0) return false;
        return game.hasPlayer(function(current){
            return current!=event.player&&
                current!=player&&lib.filter.targetEnabled(event.card,event.player,current);
        });
    },
                content:function (){
        "step 0"
        player.draw();
        var next=player.chooseCardTarget({
            position:'he',
            filterCard:lib.filter.cardDiscardable,
            filterTarget:function(card,player,target){
                var trigger=_status.event.getTrigger();
                if(target!=trigger.player&&target!=player){
                    if(player.canUse(trigger.card,target)) return true;
                }
                return false;
            },
            ai1:function(card){
                return ai.get.unuseful(card)+9;
            },
            ai2:function(target){
                if(_status.event.player.num('h','shan')){
                    return -ai.get.attitude(_status.event.player,target);
                }
                if(ai.get.attitude(_status.event.player,target)<5){
                    return 6-ai.get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==1&&player.num('h','shan')==0){
                    return 10-ai.get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==2&&player.num('h','shan')==0){
                    return 8-ai.get.attitude(_status.event.player,target);
                }
                return -1;
            },
            prompt:get.prompt('qqwz_娇啸')
        });
        "step 1"
        if(result.bool){
            player.discard(result.cards);
            player.logSkill(event.name,result.targets);
            trigger.target=result.targets[0];
            trigger.targets.remove(player);
            trigger.targets.push(result.targets[0]);
        }
        else{
            event.finish();
        }
        "step 2"
        trigger.untrigger();
        trigger.trigger('useCardToBefore');
        trigger.trigger('shaBefore');
        game.delay();
    },
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-999;
        },
                },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(target.num('he')==0) return;
                if(card.name!='sha') return;
                var min=1;
                var friend=ai.get.attitude(player,target)>0;
                var vcard={name:'shacopy',nature:card.nature,suit:card.suit};
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(player!=players[i]&&
                        ai.get.attitude(target,players[i])<0&&
                        target.canUse(card,players[i])){
                        if(!friend) return 0;
                        if(ai.get.effect(players[i],vcard,player,player)>0){
                            if(!player.canUse(card,players[0])){
                                return [0,0.1];
                            }
                            min=0;
                        }
                    }
                }
                return min;
            },
                    },
                },
            },
            "qqwz天韵":{
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                audio:["qqwz天韵",2],
                filter:function (event,player){
return !player.storage.qqwz天韵;
    },
                forced:true,
                priority:100,
                content:function (){
"step 0"
player.storage.qqwz天韵=true;
"step 1"
       player.recover(player.maxHp-player.hp);
        player.addSkill('qqwz星移')
        player.addSkill('qqwz飓风');
    },
            },
            "qqwz星移":{
                audio:["qqwz星移",2],
                trigger:{
                    target:"shaBefore",
                },
                direct:true,
                priority:5,
                filter:function (event,player){
        if(player.countCards('he')==0) return false;
        return game.hasPlayer(function(current){
            return get.distance(player,current,'attack')<=2&&current!=event.player&&
                current!=player&&lib.filter.targetEnabled(event.card,event.player,current);
        });
    },
                content:function (){
        "step 0"
        var next=player.chooseCardTarget({
            position:'he',
            filterCard:lib.filter.cardDiscardable,
            filterTarget:function(card,player,target){
                var trigger=_status.event.getTrigger();
                if(get.distance(player,target,'attack')<=2&&
                    target!=trigger.player&&target!=player){
                    if(player.canUse(trigger.card,target)) return true;
                }
                return false;
            },
            ai1:function(card){
                return get.unuseful(card)+9;
            },
            ai2:function(target){
                if(_status.event.player.countCards('h','shan')){
                    return -get.attitude(_status.event.player,target);
                }
                if(get.attitude(_status.event.player,target)<5){
                    return 6-get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==1&&player.countCards('h','shan')==0){
                    return 10-get.attitude(_status.event.player,target);
                }
                if(_status.event.player.hp==2&&player.countCards('h','shan')==0){
                    return 8-get.attitude(_status.event.player,target);
                }
                return -1;
            },
            prompt:get.prompt('liuli')
        });
        "step 1"
        if(result.bool){
            player.discard(result.cards);
            player.logSkill(event.name,result.targets);
            trigger.target=result.targets[0];
            trigger.targets.remove(player);
            trigger.targets.push(result.targets[0]);
        }
        else{
            event.finish();
        }
        "step 2"
        trigger.untrigger();
        trigger.trigger('useCardToBefore');
        trigger.trigger('shaBefore');
        game.delay();
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(target.countCards('he')==0) return;
                if(card.name!='sha') return;
                var min=1;
                var friend=get.attitude(player,target)>0;
                var vcard={name:'shacopy',nature:card.nature,suit:card.suit};
                var players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(player!=players[i]&&
                        get.attitude(target,players[i])<0&&
                        target.canUse(card,players[i])){
                        if(!friend) return 0;
                        if(get.effect(players[i],vcard,player,player)>0){
                            if(!player.canUse(card,players[0])){
                                return [0,0.1];
                            }
                            min=0;
                        }
                    }
                }
                return min;
            },
                    },
                },
            },
            "qqwz飓风":{
                audio:["qqwz飓风",2],
                trigger:{
                    player:"loseEnd",
                },
                forced:true,
                filter:function (event,player){
        return (player.num('h')<Math.min(2));
    },
                content:function (){
     player.draw(Math.min(2)-player.num('h'));
    },
            },
            "qqwz慰安":{
                trigger:{
                    player:"damageEnd",
                },
                priority:1,
                audio:["qqwz慰安",2],
                filter:function (event){
        if(event.card&&(event.card.name=='sha'))  return false;
    },
                forced:true,
                check:function (){
        return false;
    },
                content:function (){
        trigger.source.chooserecoverTurnedOver(true);
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha'){
                    return [1,-2];
                }
            },
                    },
                },
            },
            "qqwz_英才":{
                audio:["qqwz英才",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        var num=player.maxHp;
        trigger.num+=(num);
        player.loseHp();
    },
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-3;
        },
                },
                ai:{
                    threaten:1.3,
                },
            },
            "qqwz乱敌":{
                audio:["qqwz乱敌",2],
                group:["qqwz乱敌2"],
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
        return game.countPlayer(function(current){
            return current!=player;
        })>1;
    },
                check:function (card){return 10-get.value(card)},
                filterCard:true,
                position:"he",
                filterTarget:function (card,player,target){
        if(player==target) return false;
        if(ui.selected.targets.length==1){
            return target.canUse({name:'juedou'},ui.selected.targets[0]);
        }
        return true;
    },
                targetprompt:["先出杀","后出杀"],
                selectTarget:2,
                multitarget:true,
                content:function (){
        player.gainMaxHp();
        targets[1].useCard({name:'juedou'},targets[0],'noai').animate=false;
        game.delay(0.5);
    },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
                if(ui.selected.targets.length==0){
                    return -3;
                }
                else{
                    return get.effect(target,{name:'juedou'},ui.selected.targets[0],target);
                }
            },
                    },
                    expose:0.4,
                    threaten:3,
                },
            },
            "qqwz乱敌2":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                },
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                filter:function (event,player){
        return event.card;
    },
                content:function (){
        trigger.directHit=true;
        player.loseMaxHp();
    },
            },
            "qqwz映花":{
                group:["qqwz映花_a","qqwz映花_b"],
                subSkill:{
                    a:{
                        trigger:{
                            global:"damageEnd",
                        },
                        frequent:true,
                        audio:["qqwz映花",2],
                        filter:function (event,player){
return event.player!=player&&event.player.sex=='female';
            },
                        content:function (){
        player.loseHp()
    },
                        sub:true,
                    },
                    b:{
                        trigger:{
                            global:"damageEnd",
                        },
                        frequent:true,
                        audio:["qqwz映花",2],
                        filter:function (event,player){
return event.player!=player&&event.player.sex=='male';
            },
                        content:function (){
        player.recover()
    },
                        sub:true,
                    },
                },
            },
            "qqwz炎焚":{
                audio:["qqwz炎焚",2],
                trigger:{
                    player:"loseEnd",
                },
                group:"qqwz炎焚_1",
                forced:true,
                filter:function (event,player){
         if(player.countCards('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                content:function (){
       player.loseHp();
    },
                subSkill:{
                    "1":{
                        audio:["qqwz烈酒",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card&&event.card.name=='sha'&&event.player!=player;
    },
                        content:function (){
        player.gainMaxHp();
    },
                        sub:true,
                    },
                },
            },
            "qqwz替汉":{
                audio:["qqwz替汉"],
                trigger:{
                    player:"recoverEnd",
                },
                forced:true,
                content:function (){
            player.draw();
},
                group:["qqwz替汉_1","qqwz替汉_2"],
                subSkill:{
                    "1":{
                        audio:["qqwz替汉"],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                var jk=Math.floor(player.num('he')/2);
                  player.chooseToDiscard(jk,'he',true);
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz替汉",2],
                        filter:function (event,player){
                return player.countCards('h')>=6;
            },
                        content:function (){
                event.target=game.filterPlayer().randomGet(player);
                event.target.turnOver();
            },
                        sub:true,
                    },
                },
            },
            "qqwz王权":{
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                audio:["qqwz王权",2],
                filter:function (event,player){
return player!=event.player&&event.player.group!='qun';
},
                content:function (){
trigger.player.turnOver();
},
                group:["qqwz王权_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz王权",2],
                        usable:1,
                        enable:"chooseToUse",
                        filter:function (event,player){
        return event.type=='dying'&&event.dying&&!event.player!=player&&event.dying.group=='qun';
            },
                        filterTarget:function (card,player,target){
                return target==_status.event.dying;
            },
                        selectTarget:-1,
                        content:function (){
                target.recover(2);
                target.draw(2);
                player.loseHp(3);
            },
                        ai:{
                            order:0.1,
                            skillTagFilter:function (player){
                    if(!_status.event.dying) return false;
                },
                            save:true,
                            result:{
                                target:3,
                            },
                            threaten:1.6,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz韧力":{
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                audio:["qqwz韧力"],
                priority:-500,
                content:function (){
if(trigger.num>1) trigger.num-=1
},
                group:["qqwz韧力_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        audio:["qqwz韧力",2],
                        filter:function (event){
        if(event.card&&(event.card.name=='sha')){
            if(get.color(event.card)=='red') return true;
            if(event.source&&event.source.hasSkill('jiu')) return true;
        }
        return false;
    },
                        forced:true,
                        content:function (){
        player.loseHp();
    },
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                if(card.name=='sha'&&(get.color(card)=='red')){
                    return [1,-2];
                }
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz女权":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["qqwz女权",2],
                content:function (){
        for(var i=0;i<game.players.length;i++){
        if(game.players[i].sex!='male'){
        game.players[i].draw(2);
            game.players[i].recover();
        };
    };
    },
                group:["qqwz女权_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        audio:["qqwz女权",2],
                        filter:function (event,player){
  return event.source.sex=='female';
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                },
            },
            "qqwz鸠酒":{
                audio:["qqwz鸠酒",2],
                group:"qqwz鸠酒_1",
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
               return player!=event.player&&Math.random()<=0.5;
    },
                content:function (){
               trigger.player.loseHp();
                    player.draw();
    },
                subSkill:{
                    "1":{
                        audio:["qqwz鸠酒"],
                        trigger:{
                            player:"loseHpEnd",
                        },
                        forced:true,
                        content:function (){
             
                  player.chooseToDiscard(2,'he',true);
},
                        sub:true,
                    },
                },
            },
            "qqwz祸言":{
                trigger:{
                    global:"gainBegin",
                },
                forced:true,
                audio:["qqwz祸言",2],
                logTarget:"player",
                filter:function (event,player){
        if(event.cards&&event.player!=player){
            return event.player.num('h')>player.num('h');
        }
        return false;
    },
                content:function (){
        player.recover();
    },
                group:["qqwz祸言_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz祸言",2],
                        filter:function (event,player){
                return event.player.num('h')>=5;
            },
                        content:function (){
                player.loseHp(2);
            },
                        sub:true,
                    },
                },
            },
            "qqwz惩恶":{
                trigger:{
                    global:"damageEnd",
                },
                filter:function (event,player){
        return event.num>0&&event.source!=player&&player.getFriends().contains(event.player);
    },
                audio:["qqwz惩恶",2],
                content:function (){
        if(trigger.source!=undefined){    
            trigger.source.damage(trigger.num);
        }
    },
                group:"qqwz惩恶_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"damageEnd",
                        },
                        filter:function (event,player,source){
                return event.num>0&&event.source!=player&&player.getFriends().contains(event.source);
            },
                        forced:true,
                        audio:["qqwz惩恶",2],
                        content:function (){
                player.recover();
            },
                        sub:true,
                    },
                },
            },
            "qqwz惑敌":{
                audio:["qqwz惑敌",2],
                trigger:{
                    global:"shaBegin",
                },
                filter:function (event,player){
return player.getFriends().contains(event.target);
    },
                content:function (){
        'step 0'
        player.draw();
        target.draw();
                event.list=player.getFriends().sortBySeat();
                'step 1'
                if(event.list.length){
                    var target=event.list.shift();
                    player.line(target,'green');
                    target.recover();
                    event.redo();
                }
    },
            },
            "qqwz胡笳":{
                audio:["qqwz胡笳",2],
                skillAnimation:true,
                trigger:{
                    global:"dying",
                },
                forced:true,
                priority:100,
                filter:function (event,player){
            return player.getFriends().contains(event.player);
},
                content:function (){
        var jk=player.hp;
         trigger.player.recover(jk);
         player.removeSkill('qqwz胡笳');
         player.addSkill('qqwz思乡');   
    },
            },
            "qqwz思乡":{
                audio:["qqwz思乡",2],
                forced:true,
                trigger:{
                    player:"phaseDrawBegin",
                },
                content:function (){
                    var list=['qun'];
                    var num=game.countPlayer(function(current){
                        if(list.contains(current.group)){
                            list.remove(current.group);
                            return true;
                        }
                    });
                    trigger.num+=num;
                },
                mod:{
                    maxHandcard:function (player,num){
                        return num+num;
                    },
                },
            },
            "qqwz优民":{
                trigger:{
                    global:"phaseDrawBegin",
                },
                forced:true,
                audio:["qqwz优民",2],
                filter:function (event,player){
return player.getFriends().contains(event.player);                        
},
                content:function (){
                     trigger.num++;
},
                group:["qqwz优民_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz优民",2],
                        trigger:{
                            player:["useCardAfter","respondAfter","discardAfter"],
                        },
                        frequent:true,
                        filter:function (event,player){
                    if(player==_status.currentPhase) return false;
                    if(event.cards){
                        for(var i=0;i<event.cards.length;i++){
                            if(event.cards[i].original!='j') return true;
                        }
                    }
                    return false;
                },
                        content:function (){
                      'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                event.redo();
                            }
                },
                        ai:{
                            threaten:0.7,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz破阵":{
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                audio:["qqwz破阵",3],
                filter:function (event,player){
        if(event._notrigger.contains(event.player)) return false;
        return event.player.countCards('e')>0&&event.player!=player;
    },
                content:function (){
        trigger.player.chooseToDiscard(2,true,'e');
        player.recover();
    },
            },
            "qqws诏辅":{
                mod:{
                    wuxieRespondable:function (){
                        return false;
                    },
                    targetInRange:function (card,player,target,now){
                        var type=get.type(card);
                        if(type=='trick'||type=='delay') return true;
                    },
                },
                trigger:{
                    player:"useCard",
                },
                filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                forced:true,
                audio:["qqwz诏辅",2],
                content:function (){
                },
            },
            "qqwz兵败":{
                skillAnimation:true,
                audio:["qqwz兵败",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                filter:function (event,player){
        return player.getStat('damage')<4;
    },
                content:function (){
       player.loseMaxHp();
        player.draw(2);
        player.recover();
    },
            },
            "qqwz忠贤":{
                trigger:{
                    player:"phaseBegin",
                },
                frequent:true,
                audio:["qqwz忠贤",3],
                filter:function (event,player){
                    return player.hp<player.maxHp;
                },
                content:function (){
                    "step 0"
                    var fg=player.maxHp-player.hp;
              player.viewCards('牌堆顶'+get.cnNumber(fg)+'张牌',get.cards(fg));
                event.list=player.getFriends().sortBySeat();
                'step 1'
                if(event.list.length){
                    var target=event.list.shift();
                    player.line(target,'green');
                    target.draw(fg);
                    event.redo();
                }
                },
            },
            "qqwz焚舰":{
                trigger:{
                    source:"damageEnd",
                },
                audio:["qqwz焚舰",2],
                forced:true,
                filter:function (event,player){
return event.player!=player&&event.nature!='fire';                        
},
                content:function (){
                     trigger.player.damage('fire');
                         player.loseHp();
},
                group:"qqwz焚舰_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        audio:["qqwz焚舰",2],
                        filter:function (event){
                return event.nature=='fire';
            },
                        content:function (){
                player.loseHp();
            },
                        sub:true,
                    },
                },
            },
            "qqwz国母":{
                trigger:{
                    global:"recoverBegin",
                },
                forced:true,
                filter:function (event,player){
return player.getFriends().contains(event.player);                        
},
                content:function (){
                     trigger.num++;
},
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseDrawBegin",
                        },
                        forced:true,
                        filter:function (event,player){
return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     trigger.num++;
},
                        sub:true,
                    },
                },
            },
            "qqwz鞬骑":{
                audio:["qqwz鞬骑",2],
                trigger:{
                    player:"respondEnd",
                },
                filter:function (event,player){
        if(event.card.name!='sha') return false;
    },
                forced:true,
                content:function (){
        player.recover();
    },
                group:"qqwz鞬骑_1",
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        check:function (event,player){
                return !event.getEquip("3");
            },
                        forced:true,
                        audio:["qqwz鞬骑",2],
                        content:function (){
                trigger.num+=2;
            },
                        mod:{
                            globalFrom:function (from,to,distance){
                    return distance-2;
                },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz雄狮":{
                trigger:{
                    source:"damageBegin",
                },
                audio:["qqwz雄狮",2],
                filter:function (event,player){
      if(event.player!='wei') return false;
        return true;
},
                content:function (){
     trigger.num++;
},
                group:["qqwz雄狮_1","qqwz雄狮_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz雄狮",2],
                        filter:function (event,player){
            return player.countCards('h')>=5;
    },
                        content:function (){
                player.loseHp(2);
                player.gainMaxHp();                
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"turnOverBegin",
                        },
                        forced:true,
                        audio:["qqwz雄狮",2],
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "qqwz鬼神":{
                mode:["identity"],
                trigger:{
                    global:"gameStart",
                },
                unique:true,
                forced:true,
                priority:700,
                audio:["qqwz鬼神",2],
                content:function (){
                    'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.addSkill("qqwz鬼神_1");
                                 target.addSkill("qqwz鬼神_2");
                                  target.addSkill("qqwz鬼神_3");
                                event.redo();
                            }
                      
},
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                     if(trigger.num>1) trigger.num=1;
},
                        sub:true,
                    },
                    "2":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                        },
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        check:function (){return false;},
                        content:function (){
                var ex=0;
                if(trigger.card&&trigger.card.name=='sha'){
                    if(player.hasSkill('jiu')) ex++;
                    if(player.hasSkill('luoyi2')) ex++;
                    if(player.hasSkill('reluoyi2')) ex++;
                }
                player.recover(trigger.num+ex);
            },
                        sub:true,
                    },
                },
            },
            "qqwz太平":{
                trigger:{
                    player:"phaseEnd",
                },
                audio:["qqwz太平",2],
                forced:true,
                filter:function (event,player){
     return player.num('h')<=0;
},
                content:function (){
        'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                event.redo();
                            }
        "step 2"
    for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(game.players[i],player)<=0){
game.players[i].turnOver();
}
}
},
            },
            "qqwz玄雷":{
                mod:{
                    cardEnabled:function (card,player){
            if(_status.event.skill!='qqwz玄雷'&&card.name!='shan'&&get.color(card)=='black') return false;
        },
                    cardUsable:function (card,player){
            if(_status.event.skill!='qqwz玄雷'&&card.name!='shan'&&get.color(card)=='black') return false;
        },
                    cardRespondable:function (card,player){
            if(_status.event.skill!='qqwz玄雷'&&card.name!='shan'&&get.color(card)=='black') return false;
        },
                    cardSavable:function (card,player){
            if(_status.event.skill!='qqwz玄雷'&&card.name!='shan'&&get.color(card)=='black') return false;
        },
                    targetInRange:function (card){
            if(get.color(card)=='black'||_status.event.skill=='qqwz玄雷') return true;
        },
                },
                audio:["qqwz玄雷",2],
                enable:["chooseToUse","chooseToRespond"],
                filterCard:{
                    suit:["spade","club"],
                },
                viewAs:{
                    name:"shan",
                    suit:"spade",
                    number:13,
                },
                check:function (){return 1},
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'respondShan')&&current<0) return 0.6
            },
                    },
                    respondShan:true,
                    order:4,
                    useful:-1,
                    value:-1,
                    basic:{
                        useful:[7,2],
                        value:[7,2],
                    },
                },
                group:["qqwz玄雷_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz玄雷",2],
                        trigger:{
                            player:["useCardAfter","respondAfter","discardAfter"],
                        },
                        frequent:true,
                        filter:function (event,player){
                if(player==_status.currentPhase) return false;
                if(event.cards){
                    for(var i=0;i<event.cards.length;i++){
                        if(get.color(event.cards[i])=='black'&&
                        event.cards[i].original!='j') return true;
                    }
                }
                return false;
            },
                        content:function (){
                'step 0'
                player.recover();
                player.chooseTarget(get.prompt('qqwz玄雷_1')).set('ai',function(target){
                    if(get.attitude(_status.event.player,target)>0){
                        return target!=event.player;
                    }
                    return 0;
                });
                'step 1'
                if(result.bool){
                    var target=result.targets[0];
                        player.logSkill('qqwz玄雷_1',target);
                    target.damage(2,'thunder')._triggered=null;
                }
            },
                        ai:{
                            threaten:0.7,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz仙符":{
                audio:["qqwz仙符",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('h')>0;
    },
                chooseButton:{
                    dialog:function (){
            var list=['sha','shan','tao','jiu'];
            for(var i=0;i<list.length;i++){
                list[i]=['basic','',list[i]];
            }
            var list2=['taoyuan','wugu','juedou','huogong','jiedao','tiesuo','guohe','shunshou','wuzhong','wanjian','nanman'];
            for(var i=0;i<list2.length;i++){
                list2[i]=['trick','',list2[i]];
            }
            var dialog=ui.create.dialog();
            dialog.addText('仙符·基本牌');
            dialog.add([list,'vcard']);
            dialog.addText('仙符·锦囊牌');
            dialog.add([list2,'vcard']);
            return dialog;
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            var player=_status.event.player;
            if(Math.random()<0.5){
                var hcard=player.get('h',function(card){
                    return get.suit(card)=='heart';
                });
                for(var i=0;i<hcard.length;i++){
                    if(lib.filter.filterCard(hcard[i])) return button.link[2]==hcard[i].name?1:0;
                }
                return button.link[2]=='sha'?3:0;
            }
            else{
                var rate=Math.random();
                if(player.num('h','sha')&&rate<0.6){
                    return button.link[2]=='sha'?1:0;
                }
                if(player.hp<player.maxHp){
                    if(kzol_sgs.isWeak(player)&&player.num('h',{name:'tao',suit:'heart'})) return button.link[2]=='tao'?5:0;
                    if(player.num('h','tao')&&rate<0.6) return button.link[2]=='tao'?2:0;
                }
                if(player.num('h','jiu')&&rate<0.4){
                    return button.link[2]=='jiu'?3:0;
                }
                if(player.num('h','taoyuan')&&rate<0.8){
                    return button.link[2]=='taoyuan'?9:0;
                }
                if(player.num('h','wugu')&&rate<0.8){
                    return button.link[2]=='wugu'?3:0;
                }
                if(player.num('h','juedou')&&rate<0.4){
                    return button.link[2]=='juedou'?5:0;
                }
                if(player.num('h','huogong')&&rate<0.8){
                    return button.link[2]=='huogong'?1:0;
                }
                if(player.num('h','jiedao')&&rate<0.3){
                    return button.link[2]=='jiedao'?8:0;
                }
                if(player.num('h','tiesuo')&&rate<0.2){
                    return button.link[2]=='tiesuo'?7:0;
                }
                if(player.num('h','guohe')&&rate<0.4){
                    return button.link[2]=='guohe'?7.6:0;
                }
                if(player.num('h','shunshou')&&rate<0.4){
                    return button.link[2]=='shunshou'?7.5:0;
                }
                if(player.num('h','wuzhong')&&rate<0.8){
                    return button.link[2]=='wuzhong'?7.2:0;
                }
                if(player.num('h','wanjian')&&rate<0.5){
                    return button.link[2]=='wanjian'?9:0;
                }
                if(player.num('h','nanman')&&rate<0.2){
                    return button.link[2]=='nanman'?9:0;
                }
                return button.link[2]=='sha'?1:0;
            }
        },
                    backup:function (links,player){
            return {
                filterCard:true,
                selectCard:1,
                audio:false,
                popname:true,
                popup:false,
                direct:true,
                ai1:function(card){
                    if(Math.random()<0.7) return card.name==links[0][2];
                    return 4-ai.get.value(card);
                },
                viewAs:{name:links[0][2]},
                onuse:function(result,player){
                    var next=game.createEvent('guhuoing');
                    next.player=player;
                    next.card=result.cards[0];
                    next.guhuo=links[0][2];
                    next.setContent(lib.skill.qqwz仙符.preGuhuo);
                }
            }
        },
                    prompt:function (links,player){
            return '将一张手牌当'+get.translation(links[0][2])+'使用';
        },
                },
                preGuhuo:function (){
        'step 0'
        player.lose(card,ui.special);
        var node=player.$throw(card);
        node.classList.add('infohidden');
        node.classList.add('infoflip');
        ui.refresh(node);
        player.logSkill('qqwz仙符');
        game.log(player,'声称这张牌是'+'<span class="yellowtext">'+get.translation(event.guhuo)+'</span>');
        event.node=node;
        event.targets=game.players.slice(0);
        event.targets.remove(player);
        event.targets.sort(lib.sort.seat);
        'step 1'
        if(event.targets.length){
            var target=event.targets.shift();
            event.target=target;
            if(event.target.hasSkill('qqwz咒术')){
                event.target.popup('不能质疑!');
                game.log(event.target,'中咒者无法质疑');
                event.redo();
            }
            event.target.chooseBool('仙符:'+get.translation(player)+'声称这张牌是'+get.translation(event.guhuo)+',是否质疑?').ai=function(){
                if(kzol_sgs.isFriend(event.target,player)){
                    if(kzol_sgs.isWeak(event.target)&&Math.random()<0.9) return false;
                    if(kzol_sgs.getKnownCard(player,event.target,event.guhuo)>0) return false;
                    if(ai.get.value(game.createCard(event.guhuo),event.target,'raw')>6) return false;
                    if(kzol_sgs.isWeak(player)) return false;
                    if(Math.random()<0.3){
                        if(card.name==event.guhuo) return false;
                        return true;
                    }
                    return false;
                }
                else{
                    if(kzol_sgs.isWeak(event.target)) return false;
                    if(kzol_sgs.getKnownCard(player,event.target,event.guhuo)>0) return false;
                    if(ai.get.value(game.createCard(event.guhuo),event.target,'raw')>6) return true;
                    if(kzol_sgs.isWeak(player)&&Math.random()<0.7) return true;
                    if(Math.random()<0.15){
                        if(card.name==event.guhuo) return false;
                        return true;
                    }
                    return false;
                }
                return false;
            };
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            event.target.popup('质疑!');
            game.log(event.target,'质疑');
            game.delay(1);
        }
        else{
            event.target.popup('不质疑!');
            game.log(event.target,'不质疑');
            game.delay(1);
            event.goto(1);
        }
        'step 3'
        node=event.node;
        setTimeout(function(){
            node.style.transition='all ease-in 0.2s';
            node.style.transform='perspective(600px) rotateY(90deg) translateX(52px)';
            var onEnd=function(){
                node.classList.remove('infohidden');
                node.style.transition='all 0s';
                ui.refresh(node);
                node.style.transform='perspective(600px) rotateY(-90deg) translateX(52px)';
                ui.refresh(node);
                node.style.transition='';
                ui.refresh(node);
                node.style.transform='';
                node.removeEventListener('webkitTransitionEnd',onEnd);
            }
            node.addEventListener('webkitTransitionEnd',onEnd);
        },200);
        ui.refresh(node);
        game.delay();
        if(card.name==event.guhuo){
            player.line(event.target,'thunder');
            event.target.addSkill('qqwz咒术');
            game.log(event.target,'已中咒!');
            event.finish();
        }
        else{
            event.target.line(player,'fire');
            game.log(event.target,'质疑成功,',player,'的卡牌是',card);
            ui.discardPile.appendChild(card);
            player.recover(2);
            player.storage.qqwz仙符=true;
        }
    },
                ai:{
                    order:10,
                    result:{
                        player:1,
                    },
                    threaten:1.5,
                },
                group:["qqwz仙符_begin","qqwz仙符_sha","qqwz仙符_save","qqwz仙符_wuxie","qqwz仙符_respond","qqwz咒术"],
                subSkill:{
                    begin:{
                        trigger:{
                            player:"useCardBegin",
                        },
                        popup:false,
                        forced:true,
                        filter:function (event){
                return event.skill=='qqwz仙符_backup'||event.skill=='qqwz仙符_sha'||event.skill=='qqwz仙符_save'||event.skill=='qqwz仙符_wuxie';
            },
                        content:function (){
                if(player.storage.qqwz仙符){
                    trigger.untrigger();
                    trigger.finish();
                    ui.clear();
                    player.storage.qqwz仙符=false;
                }
                else{
                    trigger.animate=false;
                    var card=trigger.card;
                    var event=_status.event;
                    var targets=trigger.targets;
                    if(card.name=='wuxie'&&event.getParent().source){
                        var lining=event.getParent().sourcex||event.getParent().source2||event.getParent().source;
                        if(lining==player&&event.getParent().sourcex2){
                            lining=event.getParent().sourcex2;
                        }
                        if(Array.isArray(lining)&&event.getTrigger().name=='jiedao'){
                            player.line(lining[0],'green');
                        }
                        else{
                            player.line(lining,'green');
                        }
                    }
                    else{
                        var config={};
                        if(card.nature=='fire'||
                            (card.classList&&card.classList.contains('fire'))){
                            config.color='fire';
                        }
                        else if(card.nature=='thunder'||
                            (card.classList&&card.classList.contains('thunder'))){
                            config.color='thunder';
                        }
                        if(get.info(card).multitarget&&targets.length>1&&!get.info(card).multiline){
                            player.line2(targets,config);
                        }
                        else{
                            player.line(targets,config);
                        }
                    }
                }
            },
                        sub:true,
                    },
                    sha:{
                        enable:["chooseToUse"],
                        audio:1,
                        filter:function (event,player){
                return event.parent.name!='phaseUse'&&player.num('h');
            },
                        filterCard:true,
                        selectCard:1,
                        check:function (card){
                var player=_status.event.player;
                if(player.num('h','sha')){
                    if(card.name=='sha'){
                        if(get.suit(card)=='sha') return 8;
                        if(Math.random()<0.8) return 1;
                        return 0;
                    }
                }
                if(Math.random()<0.6) return 4-ai.get.value(card);
                return 0;    
            },
                        viewAs:{
                            name:"sha",
                        },
                        onuse:function (result,player){
                var next=game.createEvent('guhuoing');
                next.player=player;
                next.card=result.cards[0];
                next.guhuo='sha';
                next.setContent(lib.skill.qqwz仙符.preGuhuo);
            },
                        sub:true,
                        ai:{
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            order:function (){
                    if(_status.event.player.hasSkillTag('presha',true,null,true)) return 10;
                    return 3;
                },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                            if(get.attitude(player,target)>0){
                                return -6;
                            }
                            else{
                                return -3;
                            }
                        }
                        return -1.5;
                    },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                                natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                                fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                                thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                                poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                            },
                        },
                    },
                    save:{
                        enable:"chooseToUse",
                        audio:1,
                        filter:function (event,player){
                return event.parent.name!='phaseUse'&&player.num('h')>0;
            },
                        filterCard:true,
                        selectCard:1,
                        viewAs:{
                            name:"tao",
                            suit:"heart",
                            number:10,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"heart","number":10,"name":"sha","cardid":"1464568349","_transform":"translateX(0px)","_mouseentercreated":false,"clone":{"name":"sha","suit":"heart","number":10,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":1911},"timeout":1885,"original":"h"}],
                        },
                        check:function (card,event){
                var player=_status.event.player;
                if(player.num('h','tao')){
                    if(card.name=='tao'){
                        if(get.suit(card)=='heart') return 8;
                        if(Math.random()<0.6) return 1;
                        return 0;
                    }
                }
                if(Math.random()<0.6) return 4-ai.get.value(card);
                return 0;
            },
                        onuse:function (result,player){
                var next=game.createEvent('guhuoing');
                next.player=player;
                next.card=result.cards[0];
                next.guhuo='tao';
                next.setContent(lib.skill.qqwz仙符.preGuhuo);
            },
                        ai:{
                            skillTagFilter:function (player){
                    return player.num('h')>0;
                },
                            save:true,
                            basic:{
                                order:function (card,player){
                        if(player.hasSkillTag('pretao')) return 5;
                        return 2;
                    },
                                useful:[8,6.5,5,4],
                                value:[8,6.5,5,4],
                            },
                            result:{
                                target:function (player,target){
                        // if(player==target&&player.hp<=0) return 2;
                        var nd=player.needsToDiscard();
                        var keep=false;
                        if(nd<=0){
                            keep=true;
                        }
                        else if(nd==1&&target.hp>=2&&target.countCards('h','tao')<=1){
                            keep=true;
                        }
                        var mode=get.mode();
                        if(target.hp>=2&&keep&&target.hasFriend()){
                            if(target.hp>2||nd==0) return 0;
                            if(target.hp==2){
                                if(game.hasPlayer(function(current){
                                    if(target!=current&&get.attitude(target,current)>=3){
                                        if(current.hp<=1) return true;
                                        if((mode=='identity'||mode=='versus'||mode=='chess')&&current.identity=='zhu'&&current.hp<=2) return true;
                                    }
                                })){
                                    return 0;
                                }
                            }
                        }
                        if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                        var att=get.attitude(player,target);
                        if(att<3&&att>=0&&player!=target) return 0;
                        var tri=_status.event.getTrigger();
                        if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                            if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                                var num=game.countPlayer(function(current){
                                    if(current.identity=='fan'){
                                        return current.countCards('h','tao');
                                    }
                                });
                                if(num>1&&player==target) return 2;
                                return 0;
                            }
                        }
                        if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                            if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                                return 0;
                            }
                        }
                        if(mode=='stone'&&target.isMin()&&
                        player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                        tri.source!=target.getEnemy()){
                            return 0;
                        }
                        return 2;
                    },
                            },
                            tag:{
                                recover:1,
                                save:1,
                            },
                        },
                        sub:true,
                    },
                    wuxie:{
                        enable:"chooseToUse",
                        audio:1,
                        filter:function (event,player){
                return event.parent.name!='phaseUse'&&player.num('h');
            },
                        filterCard:true,
                        selectCard:1,
                        check:function (card,event){
                var player=_status.event.player;
                if(player.num('h','wuxie')){
                    if(card.name=='wuxie'){
                        if(get.suit(card)=='heart') return 8;
                        if(Math.random()<0.6) return 1;
                        return 0;
                    }
                }
                if(Math.random()<0.6) return 4-ai.get.value(card);
                return 0;
            },
                        viewAs:{
                            name:"wuxie",
                            suit:"club",
                            number:3,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{"vanish":true},"vanishtag":[],"_uncheck":[],"suit":"club","number":3,"name":"chunbing","cardid":"79911871110","clone":{"name":"chunbing","suit":"club","number":3,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2895},"_transform":"translateX(112px)","_mouseentercreated":true,"original":"h"}],
                        },
                        viewAsFilter:function (player){
                return player.num('h')>0;
            },
                        onuse:function (result,player){
                var next=game.createEvent('guhuoing');
                next.player=player;
                next.card=result.cards[0];
                next.guhuo='wuxie';
                next.setContent(lib.skill.qqwz仙符.preGuhuo);
            },
                        sub:true,
                        ai:{
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                    },
                    respond:{
                        audio:false,
                        trigger:{
                            player:"chooseToRespondBegin",
                        },
                        filter:function (event,player){
                if(event.responded) return false;
                return player.num('h');
            },
                        direct:true,
                        content:function (){
                'step 0'
                if(trigger.filterCard({name:'sha'})) event.guhuoname='sha';
                else event.guhuoname='shan';
                player.chooseCard('需要打出一张'+get.translation(event.guhuoname)+','+get.prompt('qqwz仙符')).ai=function(card){
                    if(player.num('h',event.guhuoname)){
                        if(card.name==event.guhuoname){
                            if(get.suit(card)=='sha') return 8;
                            if(Math.random()<0.8) return 1;
                            return 0;
                        }
                    }
                    if(Math.random()<0.6) return 4-ai.get.value(card);
                    return 0;
                };
                'step 1'
                if(result.bool){
                    player.logSkill('nos_guhuo');
                    game.log(player,'声称打出的牌是'+get.translation(event.guhuoname));
                    var card=result.cards[0];
                    player.lose(card,ui.special);
                    var node1=player.$throw(card);
                    node1.classList.add('infohidden');
                    node1.classList.add('infoflip');
                    ui.refresh(node1);
                    event.node1=node1;
                    event.targets=game.players.slice(0);
                    event.targets.remove(player);
                    event.targets.sort(lib.sort.seat);
                    event.guhuocard=card;
                }
                else{
                    event.finish();
                }
                'step 2'
                if(event.targets.length){
                    var target=event.targets.shift();
                    event.target=target;
                    if(event.target.hasSkill('qqwz咒术')){
                        event.target.popup('不能质疑!');
                        game.log(event.target,'中咒者无法质疑');
                        event.redo();
                    }
                    event.target.chooseBool('仙符:'+get.translation(player)+'声称这张牌是'+get.translation(trigger.name)+',是否质疑?').ai=function(){
                        if(kzol_sgs.isFriend(event.target,player)){
                            if(kzol_sgs.isWeak(event.target)&&Math.random()<0.9) return false;
                            if(kzol_sgs.getKnownCard(player,event.target,trigger.name)>0) return false;
                            if(ai.get.value(game.createCard(trigger.name))>6) return false;
                            if(kzol_sgs.isWeak(player)) return false;
                            if(Math.random()<0.3) return true;
                            return false;
                        }
                        else{
                            if(kzol_sgs.isWeak(event.target)) return false;
                            if(kzol_sgs.getKnownCard(player,event.target,trigger.name)<=0) return true;
                            if(ai.get.value(game.createCard(trigger.name))>6) return true;
                            if(kzol_sgs.isWeak(player)&&Math.random()<0.7) return true;
                            if(Math.random()<0.15) return true;
                            return false;
                        }
                        return false;
                    };
                }
                else{
                    event.finish();
                }
                'step 3'
                if(result.bool){
                    event.target.popup('质疑!');
                    game.log(event.target,'质疑');
                    game.delay(1);
                }
                else{
                    event.target.popup('不质疑!');
                    game.log(event.target,'不质疑');
                    game.delay(1);
                    event.goto(2);
                }
                'step 4'
                node1=event.node1;
                setTimeout(function(){
                    node1.style.transition='all ease-in 0.2s';
                    node1.style.transform='perspective(600px) rotateY(90deg) translateX(52px)';
                    var onEnd=function(){
                        node1.classList.remove('infohidden');
                        node1.style.transition='all 0s';
                        ui.refresh(node1);
                        node1.style.transform='perspective(600px) rotateY(-90deg) translateX(52px)';
                        ui.refresh(node1);
                        node1.style.transition='';
                        ui.refresh(node1);
                        node1.style.transform='';
                        node1.removeEventListener('webkitTransitionEnd',onEnd);
                    }
                    node1.addEventListener('webkitTransitionEnd',onEnd);
                },200);
                ui.refresh(node1);
                game.delay();
                if(trigger.filterCard({name:event.guhuocard.name})){
                    player.line(event.target,'thunder');
                    event.target.addSkill('qqwz咒术');
                    game.log(event.target,'已中咒!');
                    game.delay(1);
                    trigger.untrigger();
                    trigger.responded=true;
                    trigger.animate=false;
                    trigger.result={
                        bool:true,
                        card:{name:event.guhuoname},
                        cards:[event.guhuocard],
                    };
                }
                else{
                    game.log(event.target,'质疑成功,',player,'的卡牌失效');
                    trigger.untrigger();
                    trigger.trigger('chooseToRespondBegin');
                    player.recover(2);
                }
            },
                        sub:true,
                    },
                },
            },
            "qqwz咒术":{
                trigger:{
                    player:["phaseBefore","changeHp"],
                },
                forced:true,
                popup:false,
                unique:true,
                content:function (){
        var list=player.get('s');
        list.remove('qqwz咒术');
        if(player.hp==1){
            player.disableSkill('qqwz咒术',list);
            player.markSkill('qqwz咒术');
        }
        else{
            player.enableSkill('qqwz咒术');
            player.unmarkSkill('qqwz咒术');
        }
    },
                "init2":function (player){
        if(player.hp==1){
            var list=player.get('s');
            list.remove('qqwz咒术');
            player.disableSkill('qqwz咒术',list);
            player.markSkill('qqwz咒术');
        }
    },
                marktext:"咒",
                intro:{
                    content:function (st,player){
            var storage=player.disabledSkills.qqwz咒术;
            if(storage&&storage.length){
                var str='失效技能：';
                for(var i=0;i<storage.length;i++){
                    if(lib.translate[storage[i]+'_info']){
                        str+=get.translation(storage[i])+'、';
                    }
                }
                return str.slice(0,str.length-1);
            }
        },
                },
                group:"qqwz咒术_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"recoverBefore",
                        },
                        forced:true,
                        content:function (){
trigger.untrigger();
trigger.finish();
},
                        mod:{
                            maxHandcard:function (player,num){
                    return num-2;
                },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz飞熊":{
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                audio:["qqwz飞熊",2],
                filter:function (event){
return event.nature;
},
                content:function (){
trigger.cancel();
},
                group:"qqwz飞熊_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz飞熊",2],
                        filter:function (event,player){
        return player.num('h')>=4;
    },
                        content:function (){
        player.recover(2);
    },
                        sub:true,
                    },
                },
            },
            "qqwz骁勇":{
                trigger:{
                    player:"useCardAfter",
                },
                audio:["qqwz骁勇",2],
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
},
                content:function (){
     player.useCard(trigger.card,trigger.targets,false)._triggered=null;       
},
                group:["qqwz骁勇_1","qqwz骁勇_2"],
                subSkill:{
                    "1":{
                        audio:["qqwz骁勇",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                          player.draw();
},
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz骁勇",2],
                        trigger:{
                            player:"recoverBefore",
                        },
                        forced:true,
                        content:function (){
                           'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
            player.loseHp(2);
        }
},
                        sub:true,
                    },
                },
            },
            "qqwz百战":{
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                audio:["qqwz百战",2],
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&Math.random()<=0.4;
},
                content:function (){
                     'step 0'
                            event.list=player.getFriends().sortBySeat();
                            var lk=trigger.num;
                             trigger.source.damage(lk);       
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.changeHujia();
                                event.redo();
                            }
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "qqwz孤鹫":{
                trigger:{
                    global:"gameDrawAfter",
                },
                audio:["qqwz孤鹫",2],
                forced:true,
                content:function (){                    
        player.forcemin=true;
    },
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-from.hp;
        },
                    globalTo:function (from,to,distance){
            return distance+from.hp;
        },
                    maxHandcard:function (player,num){
            return 4+player.hp;
        },
                },
            },
            "qqwz祸乱":{
                mode:["identity"],
                trigger:{
                    global:"gameStart",
                },
                audio:["qqwz祸乱",2],
                unique:true,
                forced:true,
                priority:70000,
                filter:function (event,player){
        return player.identity!='zhu';
    },
                content:function (){      
                player.identity='nei';
                player.setIdentity('nei');
                player.identityShown=true;   
                player.draw(2);

    },
                ai:{
                    threaten:8.1,
                },
                group:["qqwz祸乱_1","qqwz祸乱_2"],
                subSkill:{
                    "1":{
                        audio:["qqwz祸乱",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        if(event.source!='qun') return false;
        return true;
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz祸乱",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
               trigger.num++;
    },
                        sub:true,
                    },
                },
            },
            "qqwz逆击":{
                trigger:{
                    player:"changeHp",
                },
                forced:true,
                audio:["qqwz逆击",2],
                filter:function (event,player){
        return player.hp<=3;
    },
                content:function (){
        player.phase();  
},
                group:"qqwz逆击_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:["damageEnd","recoverEnd"],
                        },
                        forced:true,
                        audio:["qqwz逆击",2],
                        filter:function (event,player){
        return player!=event.player;
    },
                        content:function (){
            player.chooseToUse({name:'sha'},'逆击：是否使用一杀？').logSkill='qqwz逆击_1';
    },
                        sub:true,
                    },
                },
            },
            "qqwz月魂":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["qqwz月魂",2],
                content:function (){
        'step 0'
        player.judge();
        'step 1'
        if(result.color=='red'){
            player.recover();
            player.draw();
        }
        'step 2'
        if(result.color=='black'){
              for(var i=0;i<game.players.length;i++){
if(game.players[i]!=player&&game.players[i].sex=='male'&&ai.get.attitude(game.players[i],player)<=0){
game.players[i].damage(2);
};
};
        }
    },
                group:"qqwz月魂_1",
                subSkill:{
                    "1":{
                        audio:["qqwz月魂",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        content:function (){
           "step 0"
     player.chooseTarget('是否发动【月魂】？',function(card,player,target){
return target.sex=='male';
}).ai=function(target){
     var nh=target.countCards('h');
if(target.countCards('h',{name:'du'})==nh) return -1;
if(ai.get.attitude(_status.player,target)<0&&nh>0) return 2;
if(ai.get.attitude(_status.player,target)==0&&nh>0) return 1;
return 0.5;
          };
           'step 1'
           if(result.bool){
player.logSkill('qqwz月魂_1',result.targets[0]);
     player.gainPlayerCard('h',result.targets[0]);
               }
             },
                        sub:true,
                    },
                },
            },
            "qqwz月尘":{
                audio:["qqwz月尘",2],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
    return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                content:function (){
                    var x=player.maxHp-player.hp;
                 player.draw(x);     
},
                group:"qqwz月尘_1",
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        audio:["qqwz月尘",2],
                        filter:function (event,player){
  return event.player.sex=='male'&&event.player!=player;
    },
                        content:function (){
                    var jk=player.maxHp-player.hp;
             trigger.num+=jk;
    },
                        sub:true,
                    },
                },
            },
            "qqwz憾世":{
                audio:["qqwz憾世",2],
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
       var num=0;
for(var i=0;i<game.players.length;i++){
       num++
       }
   return (num>1)
     },
                check:function (card){return 10-ai.get.value(card)},
                filterCard:true,
                position:"he",
                filterTarget:function (card,player,target){
    if(ui.selected.targets.length==1){
return target.canUse({name:'juedou'},ui.selected.targets[0]);
         }
     return true;
       },
                targetprompt:["先出杀","后出杀"],
                selectTarget:2,
                multitarget:true,
                content:function (){
       'step 0'
 targets[0].addSkill('qqwz憾世_1');
 targets[1].addSkill('qqwz憾世_1');
       'step 1'
   targets[1].useCard({name:'juedou'},targets[0]).animate=false;
       game.delay(0.5);
       'step 2'
 targets[0].goMad({player:'phaseAfter'});
 targets[1].goMad({player:'phaseAfter'});
 targets[0].removeSkill('qqwz憾世_1');
 targets[1].removeSkill('qqwz憾世_1');
     },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
      if(ui.selected.targets.length==0){
           return -2.5;
           }
           else{
return ai.get.effect(target,{name:'juedou'},ui.selected.targets[0],target);
               }
             },
                    },
                    expose:0.4,
                    threaten:3,
                },
                group:"qqwz憾世_2",
                subSkill:{
                    "1":{
                        ai:{
                            playernowuxie:true,
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"dying",
                        },
                        audio:["qqwz憾世",2],
                        forced:true,
                        onremove:true,
                        filter:function (event,player){
                return player.hp<=0&&player.num('h')>0;
            },
                        content:function (){
                 player.discard(player.getCards('h'));
                 player.recover(player.maxHp-player.hp);
                  player.loseMaxHp();
            },
                        sub:true,
                    },
                },
            },
            "qqwz据江":{
                trigger:{
                    player:"damageBegin",
                },
                audio:["qqwz据江",2],
                forced:true,
                filter:function (event,player){
        return event.player!=player&&_status.currentPhase==player;
    },
                content:function (){
                            trigger.cancel();
},
                group:["qqwz据江_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseUseBegin",
                        },
                        audio:["qqwz据江",2],
                        forced:true,
                        filter:function (event,player){
        return player.getEnemies().contains(event.player)&&player.num('h')!=event.player.num('h');                  
},
                        content:function (){
                "step 0"
                    if(player.num('h')>trigger.player.num('h')){
                       var ki=player.num('h')-trigger.player.num('h');
                            trigger.player.damage(ki); 
                    };
                "step 1"
                 if(player.num('h')<trigger.player.num('h')){
                       var ku=trigger.player.num('h')-player.num('h');
                            trigger.player.damage(ku); 
                    };
},
                        sub:true,
                    },
                },
            },
            "qqwz汉学":{
                trigger:{
                    global:"phaseDrawBegin",
                },
                forced:true,
                audio:["qqwz汉学",2],
                filter:function (event,player){
                  return player.getFriends().contains(event.player)&&event.player.group=='qun';                        
},
                content:function (){
                     trigger.num++;
},
                group:["qqwz汉学_1","qqwz汉学_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseDiscardBegin",
                        },
                        forced:true,
                        audio:["qqwz汉学",2],
                        filter:function (event,player){
                  return player.getFriends().contains(event.player)&&event.player.group=='qun';                        
},
                        content:function (){
                     trigger.cancel();
},
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz汉学",2],
                        trigger:{
                            global:"loseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
                return player.getFriends().contains(event.player)&&_status.currentPhase!=event.player;
            },
                        content:function (){
                  trigger.player.draw();
            },
                        sub:true,
                    },
                },
            },
            "qqwz鸿德":{
                trigger:{
                    player:"recoverBegin",
                },
                audio:["qqwz鸿德",2],
                forced:true,
                content:function (){
             player.draw();
    },
                group:["qqwz鸿德_1","qqwz鸿德_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseEnd",
                        },
                        usable:2,
                        forced:true,
                        filter:function (event,player){
        return _status.currentPhase!=player&&(player.num('h')<Math.min(4));
    },
                        content:function (){
     player.draw(Math.min(4)-player.num('h'));
    },
                        ai:{
                            threaten:1.8,
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz鸿德",2],
                        trigger:{
                            player:"gainEnd",
                        },
                        filter:function (event,player){
      return _status.currentPhase==player;
    },
                        forced:true,
                        content:function (){
                'step 0'
                 event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.draw();
                                event.redo();
                            }
    },
                        ai:{
                            threaten:1.5,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz平反":{
                enable:"phaseUse",
                filter:function (event,player){
                    var num;
                    if(get.mode()=='identity'){
                        num=get.population('fan');
                    }
                    else{
                        num=1;
                    }
                    if(player.getStat().skill.qqwz平反>=num) return false;
                    return true;
                },
                filterTarget:function (card,player,target){
                    return target.countCards('e')>0;
                },
                content:function (){
                    'step 0'
                    target.draw();
                    'step 1'
                    var goon=get.damageEffect(target,player,target)>=0;
                    if(!goon&&target.hp>=4&&get.attitude(player,target)<0){
                        var es=target.getCards('e');
                        for(var i=0;i<es.length;i++){
                            if(get.equipValue(es[i],target)>=8){
                                goon=true;break;
                            }
                        }
                    }
                    target.chooseControl(function(){
                        if(_status.event.goon) return '选项二';
                        return '选项一';
                    }).set('goon',goon).set('prompt','平反').set('choiceList',['令'+get.translation(player)+'弃置你装备区里的一张牌并流失1点体力','获得你装备区内的所有牌并摸2张牌']);
                    'step 2'
                    if(result.control=='选项一'){
                        player.discardPlayerCard(target,true,'e');
                        target.loseHp();
                        event.finish();
                    }
                    else{
                        target.gain(target.getCards('e'),'gain2');
                        player.draw(2);
                    }
                    'step 3'
                    game.delay(0.5);
                    var fz=player.num('e');
                    target.damage(fz);
                },
                ai:{
                    order:7,
                    result:{
                        target:function (player,target){
                            if(get.damageEffect(target,player,target)>=0) return 2;
                            var att=get.attitude(player,target);
                            if(att==0) return 0;
                            var es=target.getCards('e');
                            if(att>0&&(target.countCards('h')>2||target.needsToDiscard(1))) return 0;
                            if(es.length==1&&att>0) return 0;
                            for(var i=0;i<es.length;i++){
                                var val=get.equipValue(es[i],target);
                                if(val<=4){
                                    if(att>0){
                                        return 1;
                                    }
                                }
                                else if(val>=7){
                                    if(att<0){
                                        return -1;
                                    }
                                }
                            }
                            return 0;
                        },
                    },
                },
                group:"qqwz平反_1",
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageAfter",
                        },
                        audio:["qqwz平反",2],
                        check:function (event,player){
        return get.attitude(player,event.player)<=0;
    },
                        filter:function (event){
        return event.card&&event.card.name=='sha'&&event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                        content:function (){
        player.draw();
        player.useCard({name:'juedou'},trigger.player);
    },
                        ai:{
                            threaten:1.5,
                            expose:0.1,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz妖道":{
                trigger:{
                    player:"phaseUseBegin",
                },
                init:function (player){
player.storage.qqwz妖道=[];
},
                direct:true,
                content:function (){
"step 0"
player.chooseToDiscard('h','是否弃置一张牌以发动技能“妖道”');
"step 1"
if(result.bool){
player.logSkill('qqwz妖道');
if(player.storage.qqwz妖道.length>0){
player.discard(player.storage.qqwz妖道);
delete player.storage.qqwz妖道;
player.storage.qqwz妖道=[];
player.storage.qqwz妖道.length=0;
player.updateMarks();
};
var suit=get.suit(result.cards[0]);
var cards=[];
for(var i=0;i<ui.cardPile.childNodes.length;i++){
var card=ui.cardPile.childNodes[i];
cards.push(card);
if(get.suit(card)==suit||i>3){
break;
}
}
event.cards=cards;
event.suit=suit;
player.showCards(cards);
}
else{
event.finish();
}
"step 2"
if(event.cards&&event.cards.length){
player.gain(event.cards);
player.lose(event.cards);
player.storage.qqwz妖道=player.storage.qqwz妖道.concat(event.cards);
game.log(player,'将',event.cards,'置于武将牌上作为“咒”');
player.markSkill('qqwz妖道');
player.updateMarks();
}
},
                intro:{
                    content:"cards",
                },
                mod:{
                    maxHandcard:function (player,num){
            return num+player.storage.qqwz妖道.length;
        },
                },
                group:["qqwz妖道_1","qqwz妖道_2"],
                subSkill:{
                    "1":{
                        audio:["qqwz妖道",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        prompt:"发动妖道进行判定,若判定花色与伤害来源的牌相同则取消本次伤害,伤害来源翻面,若不同你摸一张牌",
                        filter:function (event,player){
        if(!event.card||(event.card&&event.card.suit==undefined)) return false;
        return event.player!=player;
    },
                        check:function (event,player){
        return 1;
    },
                        priority:-8,
                        unique:true,
                        content:function (){
        'step 0'
        player.judge(ui.special,function(card){
            if(get.suit(card)==get.suit(trigger.card)) return 2;
            return 1;
        });
        'step 1'
        if(get.suit(result.card)==get.suit(trigger.card)){
                trigger.untrigger();
                trigger.finish();
                trigger.source.turnOver();                
        }
        else{
            player.draw();
            player.recover();
        }
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        audio:["qqwz妖道",2],
                        filter:function (event,player){
                return player.storage.qqwz妖道.length>0&&event.nature=='thunder'&&event.nature=='fire';
            },
                        content:function (){
                "step 0"
                player.chooseCardButton(player.storage.qqwz妖道,true);
                "step 1"
                var card=result.links[0];
                card.discard();
                player.$throw(card);
                player.storage.qqwz妖道.remove(card);
                if(!player.storage.qqwz妖道.length){
                    player.unmarkSkill('qqwz妖道');
                }
                else{
                    player.markSkill('qqwz妖道');
                }
                player.syncStorage('qqwz妖道');
                "step 2"
                    trigger.cancel();
                player.draw();
            },
                        sub:true,
                    },
                },
            },
            "qqwz通甲":{
                trigger:{
                    player:"phaseEnd",
                },
                audio:["qqwz通甲",2],
                frequent:true,
                content:function (){
        var cardNum=player.hp-player.num('h');
        if (cardNum>0){
        player.draw(cardNum);            
        }
    },
                group:["qqwz通甲_1","qqwz通甲_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:["useCardAfter","respondAfter"],
                        },
                        silent:true,
                        init:function (player){
                player.storage.qqwz通甲_1=[];
            },
                        intro:{
                            content:function (storage){
                    if(!storage.length){
                        return '未使用或打出过有花色的牌';
                    }
                    else{
                        var str='已使用过'+get.translation(storage[0]+'2');
                        for(var i=1;i<storage.length;i++){
                            str+='、'+get.translation(storage[i]+'2');
                        }
                        str+='牌';
                        return str;
                    }
                },
                        },
                        content:function (){
                var suit=get.suit(trigger.card);
                if(suit){
                    player.storage.qqwz通甲_1.add(suit);
                    player.syncStorage('qqwz通甲_1');
                    player.markSkill('qqwz通甲_1');
                }
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    "2":{
                        trigger:{
                            global:"phaseAfter",
                        },
                        priority:-50,
                        forced:true,
                        audio:["qqwz通甲",2],
                        filter:function (event,player){
                return player.storage.qqwz通甲_1.length>=4;
            },
                        content:function (){
                player.insertPhase();
                player.addTempSkill('guidao',{player:'phaseEnd'});
                player.addTempSkill('jianying',{player:'phaseEnd'});
                player.addTempSkill('jigong',{player:'phaseEnd'});
                player.addTempSkill('luanzhan',{player:'phaseEnd'});
                player.storage.qqwz通甲_1.length=0;
                player.syncStorage('qqwz通甲_1');
                player.unmarkSkill('qqwz通甲_1');
            },
                        sub:true,
                    },
                },
            },
            "qqwz狂傲2":{
                enable:"chooseToUse",
                audio:["qqwz狂傲",2],
                filter:function (event,player){
        return _status.currentPhase!==player&&event.type!='wuxie'&&event.type!='trickuse';
    },
                onChooseToUse:function (event){
        if(!game.online){
            var cards=[];
            if(ui.cardPile.childNodes.length<10){
                var discardcards=get.cards(10);
                for(var i=0;i<discardcards.length;i++){
                    discardcards[i].discard();
                }
            }
            for(var i=0;i<2;i++){
                cards.push(ui.cardPile.childNodes[i]);
            }
            event.set('aocaicards',cards);
        }
    },
                chooseButton:{
                    dialog:function (event,player){
            return ui.create.dialog('狂傲：选择一张卡牌使用',event.aocaicards);
        },
                    filter:function (button,player){
            var evt=_status.event.getParent();
            if(evt&&evt.filterCard){
                return get.type(button.link)=='basic'&&evt.filterCard(button.link,player,evt);
            }
            return false;
        },
                    check:function (button){
            return 1;
        },
                    backup:function (links,player){
            return {
                filterCard:function(){return false},
                selectCard:-1,
                viewAs:links[0],
            }
        },
                    prompt:function (links,player){
            return '选择'+get.translation(links)+'的目标';
        },
                },
                ai:{
                    order:11,
                    save:true,
                    result:{
                        player:function (player){
                if(player.tempSkills.aocai4) return 0;
                if(_status.event.dying) return get.attitude(player,_status.event.dying);
                return 1;
            },
                    },
                },
            },
            "qqwz魔姬":{
                mod:{
                    maxHandcard:function (player,num){
            var hs=player.getCards('h');
            for(var i=0;i<hs.length;i++){
                if(get.color(hs[i])=='black'){
                    num++;
                }
            }
            return num;
        },
                },
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                audio:["qqwz魔姬",2],
                filter:function (event,player){
        return event.player!=player;
    },
                content:function (){
        "step 0"
       trigger.player.addSkill('qqwz黑殇');   
        "step 1"
        if (result.bool) {
                                player.logSkill('qqwz魔姬');
                                if (!trigger.player.isTurnedOver()) trigger.player.turnOver();
                                else trigger.player.loseHp();
                            }
                            else event.finish();
    },
                group:["qqwz魔姬_1","qqwz魔姬_2"],
                subSkill:{
                    "1":{
                        audio:["qqwz魔姬",2],
                        trigger:{
                            global:"phaseDrawAfter",
                        },
                        forced:true,
                        logTarget:"player",
                        filter:function (event,player){
        return event.player.num('he')>0&&event.player!=player&&event.player.group=='qun';
    },
                        content:function (){
                    player.gainPlayerCard(trigger.player,true);
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                return event.player.hasSkill('qqwz黑殇');
            },
                        content:function (){
                trigger.player.loseMaxHp();
            },
                        sub:true,
                    },
                },
            },
            "qqwz黑殇":{
                mark:true,
                intro:{
                    content:"不能使用、打出或弃置黑色牌",
                    nocount:true,
                },
                mod:{
                    cardDiscardable:function (card,player){
            if(player.storage.qqwz黑殇&&player.storage.qqwz黑殇.contains(card)) return false;
        },
                    cardEnabled:function (card,player){
            if(player.storage.qqwz黑殇&&player.storage.qqwz黑殇.contains(card)) return false;
        },
                    cardUsable:function (card,player){
            if(player.storage.qqwz黑殇&&player.storage.qqwz黑殇.contains(card)) return false;
        },
                    cardRespondable:function (card,player){
            if(player.storage.qqwz黑殇&&player.storage.qqwz黑殇.contains(card)) return false;
        },
                    cardSavable:function (card,player){
            if(player.storage.qqwz黑殇&&player.storage.qqwz黑殇.contains(card)) return false;
        },
                },
                group:"qqwz黑殇_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseEnd",
                        },
                        silent:true,
                        content:function (){
                if(player.storage.qqwz黑殇){
                    for(var i=0;i<player.storage.qqwz黑殇.length;i++){
                        if(trigger.cards.contains(player.storage.qqwz黑殇[i])){
                            player.storage.qqwz黑殇.splice(i--,1);
                        }
                    }
                }
                // player.updateMarks();
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
            },
            "qqwz巧智":{
                trigger:{
                    source:"damageEnd",
                },
                audio:["qqwz巧智",2],
                forced:true,
                mark:true,
                filter:function (event,player){
return get.type(event.card)=='trick';
},
                init:function (player){
        player.storage.qqwz巧智=0;
        game.addVideo('storage',player,['qqwz巧智',player.storage.qqwz巧智]);
    },
                content:function (){
           player.storage.qqwz巧智++;
        game.addVideo('storage',player,['qqwz巧智',player.storage.qqwz巧智]);
},
                intro:{
                    content:"mark",
                },
                mod:{
                    maxHandcard:function (player,num){
            return num-=(player.storage.qqwz巧智);
        },
                },
                group:["qqwz巧智_1","qqwz巧智_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        audio:["qqwz巧智",2],
                        forced:true,
                        filter:function (event,player){
        return event.player!=player;
    },
                        content:function (){
                    var xx=player.storage.qqwz巧智;
                          trigger.num+=xx;
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        audio:["qqwz巧智",2],
                        forced:true,
                        filter:function (event,player){
        return event.player!=player&&player.storage.qqwz巧智>=2;
    },
                        content:function (){
                        player.storage.qqwz巧智-=2;
                    trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "qqwz谄辞":{
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                filter:function (event,player){
          return !player.storage.qqwz谄辞&&player.identity=='zhong';
    },
                forced:true,
                derivation:["qqwz谋翼"],
                priority:100,
                content:function (){
        "step 0"
        player.storage.qqwz谄辞=true;
        "step 1"
        var zhu=get.zhu(player);
        zhu.loseMaxHp();
        player.loseMaxHp();
        player.recover(player.maxHp-player.hp);
        player.addSkill('qqwz谋翼');
    },
            },
            "qqwz谋翼":{
                trigger:{
                    player:"damageBegin",
                },
                audio:["qqwz谋翼",2],
                filter:function (event,player){
    return event.player!=player;
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseCardTarget({
            multitarget:true,
            filterTarget:function(card,player,target){
                if(ui.selected.targets.length){
                    var from=ui.selected.targets[0];
                    var judges=from.get('j');
                    for(var i=0;i<judges.length;i++){
                        if(!target.hasJudge(judges[i].viewAs||judges[i].name)) 
                            return true;
                    }
                    if(target.isMin()) return false;
  if((from.get('e','1')&&!target.get('e','1'))||(from.get('e','2')&&!target.get('e','2'))||(from.get('e','3')&&!target.get('e','3'))||(from.get('e','4')&&!target.get('e','4'))||(from.get('e','5')&&!target.get('e','5'))||(from.get('h'))) return true;
                    return false;
                }
                else{
                    return target.num('hej')>0;
                }},
            selectTarget:2,
            filterCard:true,
            selectCard:0,
            prompt:'是否发动谋翼？',
            targetprompt:['被移走','移动目标']
        });
        "step 1"
        if(result.bool==false){
            event.finish();
            return;
        }
        player.discard(result.cards);
        player.logSkill('qqwz谋翼',result.targets,false);
        player.line2(result.targets);
        event.targets=result.targets;
        "step 2"
        game.delay();
        "step 3"
        if(targets.length==2){
            player.choosePlayerCard('hej',function(button){
                if(ai.get.attitude(player,targets[0])>ai.get.attitude(player,targets[1])){
                    return get.position(button.link)=='j'?10:0;
                }
                else{
                    if(get.position(button.link)=='j') return -10;
                    return ai.get.equipValue(button.link);
                }
            },
                                    targets[0]
                                   );
        }
        else{
            event.finish();
        }
        "step 4"
        if(result.bool){
            if(get.position(result.buttons[0].link)=='e'){
                event.targets[1].equip(result.buttons[0].link);
            }
            else if(get.position(result.buttons[0].link)=='h'){
                event.targets[1].gain(result.buttons[0].link);
            }
            else if(result.buttons[0].link.viewAs){
                event.targets[1].addJudge({name:result.buttons[0].link.viewAs},[result.buttons[0].link]);
            }
            else{
                event.targets[1].addJudge(result.buttons[0].link);
            }
            event.targets[0].$give(result.buttons[0].link,event.targets[1])
            game.delay();
        }
    },
                ai:{
                    expose:0.2,
                },
                group:["qqwz谋翼1","qqwz谋翼_2"],
                subSkill:{
                    "2":{
                        trigger:{
                            source:"damageBegin",
                        },
                        filter:function (event,player){
    return event.player!=player;
                },
                        audio:["qqwz谋翼",2],
                        direct:true,
                        content:function (){
        "step 0"
        player.chooseCardTarget({
            multitarget:true,
            filterTarget:function(card,player,target){
                if(ui.selected.targets.length){
                    var from=ui.selected.targets[0];
                    var judges=from.get('j');
                    for(var i=0;i<judges.length;i++){
                        if(!target.hasJudge(judges[i].viewAs||judges[i].name)) 
                            return true;
                    }
                    if(target.isMin()) return false;
  if((from.get('e','1')&&!target.get('e','1'))||(from.get('e','2')&&!target.get('e','2'))||(from.get('e','3')&&!target.get('e','3'))||(from.get('e','4')&&!target.get('e','4'))||(from.get('e','5')&&!target.get('e','5'))||(from.get('h'))) return true;
                    return false;
                }
                else{
                    return target.num('hej')>0;
                }},
            selectTarget:2,
            filterCard:true,
            selectCard:0,
            prompt:'是否发动谋翼？',
            targetprompt:['被移走','移动目标']
        });
        "step 1"
        if(result.bool==false){
            event.finish();
            return;
        }
        player.discard(result.cards);
        player.logSkill('qqwz谋翼_2',result.targets,false);
        player.line2(result.targets);
        event.targets=result.targets;
        "step 2"
        game.delay();
        "step 3"
        if(targets.length==2){
            player.choosePlayerCard('hej',function(button){
                if(ai.get.attitude(player,targets[0])>ai.get.attitude(player,targets[1])){
                    return get.position(button.link)=='j'?10:0;
                }
                else{
                    if(get.position(button.link)=='j') return -10;
                    return ai.get.equipValue(button.link);
                }
            },
                                    targets[0]
                                   );
        }
        else{
            event.finish();
        }
        "step 4"
        if(result.bool){
            if(get.position(result.buttons[0].link)=='e'){
                event.targets[1].equip(result.buttons[0].link);
            }
            else if(get.position(result.buttons[0].link)=='h'){
                event.targets[1].gain(result.buttons[0].link);
            }
            else if(result.buttons[0].link.viewAs){
                event.targets[1].addJudge({name:result.buttons[0].link.viewAs},[result.buttons[0].link]);
            }
            else{
                event.targets[1].addJudge(result.buttons[0].link);
            }
            event.targets[0].$give(result.buttons[0].link,event.targets[1])
            game.delay();
        }
    },
                        ai:{
                            expose:0.2,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz谋翼1":{
                group:["qqwz谋翼1_fff1","qqwz谋翼1_fff2"],
                subSkill:{
                    "fff1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        filter:function (event,player){
return
event.source&&event.source!=player&&event.card&&get.position(event.cards[0])=='d'&&get.itemtype(event.cards)=='cards'&&event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
            },
                        forced:true,
                        content:function (){
                player.storage.qqwz谋翼1=true;
            },
                        sub:true,
                    },
                    "fff2":{
                        trigger:{
                            global:"useCardAfter",
                        },
                        filter:function (event,player){
                return event.player!=player&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card'&&event.targets[0]==player;
            },
                        direct:true,
                        content:function (){
                "step 0"
                if(player.storage.qqwz谋翼1&&trigger.targets.length==1){
                    player.chooseTarget('是否发动【谋翼】？',function(card,player,target){
                        return target!=player;
                    },1);
                }
                else if(!player.storage.qqwz谋翼1&&trigger.targets.length==1&&player.num('he')>0){
                    player.chooseCardTarget({
                        prompt:'是否发动【谋翼】？',
                        filterCard:true,
                        position:'he',
                        filterTarget:function(card,player,target){
                            return target!=player;
                        },
                    }
                                           );
                }
                else if(trigger.targets.length!=1){
                    player.storage.qqwz谋翼1=false;
                    event.finish();
                }
                "step 1"
                if(result.bool){
                    player.discard(result.cards);
                    player.logSkill('qqwz谋翼1',result.targets);
                    player.useCard(trigger.card,result.targets[0]);
                }
                else{
                    player.storage.qqwz谋翼1=false;
            event.finish();
        }
        "step 2"
        player.storage.qqwz谋翼1=false;
            },
                        sub:true,
                    },
                },
            },
            "qqwz祸常":{
                enable:"phaseUse",
                filterCard:function (card){
                    return get.color(card)=='black';
                },
                audio:["qqwz祸常",2],
                filterTarget:function (card, player, target) {
   return player!=target&&target.storage.qqwz祸常_1==undefined&&get.distance(player,target,'attack')<=1;
                },
                line:false,
                check:function (card) {
                    return 6 - ai.get.value(card);
                },
                content:function () {
                    targets[0].storage.qqwz祸常_1=cards[0];
                    targets[0].storage.qqwz祸常=player;
                    player.lose(cards[0], ui.special);
                    player.line(targets[0], 'thunder');
                    targets[0].addSkill('qqwz祸常_1');
                    targets[0].markSkill('qqwz祸常_1');
                    targets[0].syncStorage('qqwz祸常_1');
                },
                ai:{
                    order:5,
                    result:{
                        target:-1,
                    },
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBefore",
                        },
                        priority:19,
                        forced:true,
                        popup:false,
                        mark:true,
                        intro:{
                            content:"cards",
                            onunmark:function (storage,player){
                                if (storage){
                                    ui.discardPile.appendChild(storage);
                                    player.$throw(storage);
                                    delete player.storage.qqwz祸常_1;
                                }
                            },
                        },
                        filter:function (event, player){
                            return player.storage.qqwz祸常_1;
                        },
                        content:function (){
                            'step 0'
                            player.removeSkill('qqwz祸常_1');
                            player.discard(player.storage.qqwz祸常_1);
                            player.judge(function (card) {
                                if (get.color(card)=='red') return 1.5;
                                else return-0.5;
                            });
                            'step 1'
                            if (result.judge<0) {
                                if (player.storage.qqwz祸常.isAlive())
                                    player.storage.qqwz祸常.phase();
                                trigger.finish();
                                player.phaseSkipped = true;
                            }
                            delete player.storage.qqwz祸常_1;
                            delete player.storage.qqwz祸常;
                        },
                        sub:true,
                    },
                },
            },
            "qqwz凝烈":{
                audio:["qqwz凝烈",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('qqwz凝烈'),function(card,player,target){
            return player!=target&&target.num('he')>0;
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qqwz凝烈',result.targets);
            event.target=result.targets[0];
            var nk=trigger.num;
            player.discardPlayerCard(nk,event.target,true);
        }
        else{
            event.finish();
        }
    },
                ai:{
                    expose:0.2,
                },
                mod:{
                    suit:function (card,suit){
             return 'none';
         },
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
                group:"qqwz凝烈_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        forced:true,
                        audio:["qqwz凝烈",2],
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "qqwz医国":{
                trigger:{
                    global:"recoverBefore",
                },
                audio:["qqwz医国",2],
                forced:true,
                filter:function (event,player){
                  return player.getEnemies().contains(event.player);                        
           },
                content:function (){
                     player.judge(function(card){
if(get.suit(card)=='spade') 
{
trigger.player.turnOver();
trigger.cancel();
}
if(get.suit(card)=='club'){
trigger.player.loseHp();
}
if(get.suit(card)=='heart'){
player.draw();
    trigger.num-=1;
}
if(get.suit(card)=='diamond'){
for(var i=0;i<game.players.length;i++) if(ai.get.attitude(player,game.players[i])>0) game.players[i].draw()
}
});
},
                group:"qqwz医国_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        priority:-2,
                        forced:true,
                        audio:["qqwz医国",2],
                        content:function (){
                 trigger.untrigger();
           trigger.finish();
            },
                        sub:true,
                    },
                },
            },
            "qqwz刮骨":{
                audio:["qqwz刮骨",2],
                enable:"phaseUse",
                filterCard:true,
                check:function (card){
        return 9-get.value(card)
    },
                filterTarget:function (card,player,target){
        if(target.hp>=target.maxHp) return false;
        return true;
    },
                content:function (){
        target.recover(target.maxHp-target.hp);
    },
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                if(target.hp==1) return 5;
                if(player==target&&player.countCards('h')>player.hp) return 5;
                return 2;
            },
                    },
                    threaten:2,
                },
                group:"qqwz刮骨_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"loseEnd",
                        },
                        audio:["qqwz刮骨",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getFriends().contains(event.player)&&_status.currentPhase!==event.player;                        
},
                        content:function (){
                     trigger.player.recover(1);
},
                        sub:true,
                    },
                },
            },
            "qqwz豪贵":{
                trigger:{
                    global:"useCardAfter",
                },
                forced:true,
                audio:["qqwz豪贵",2],
                filter:function (event,player){
return(event.card.name=='wanjian'&&event.player!=player&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card');
    },
                content:function (){
        player.gain(trigger.card);
        player.$gain2(trigger.card);
        player.recover();
    },
                group:"qqwz豪贵_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        forced:true,
                        audio:["qqwz豪贵",2],
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "qqwz割据":{
                audio:["qqwz割据",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
        return event.card.name=='wanjian';
    },
                mark:true,
                init:function (player){
          player.storage.qqwz割据=0;
        game.addVideo('storage',player,['qqwz割据',player.storage.qqwz割据]);
},
                content:function (){
        player.storage.qqwz割据++;
        game.addVideo('storage',player,['qqwz割据',player.storage.qqwz割据]);
    },
                intro:{
                    content:"mark",
                },
                group:["qqwz割据_1","qqwz割据_2","qqwz割据_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        audio:["qqwz割据",2],
                        filter:function (event){
        return event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
},
                        forced:true,
                        content:function (){
"step 0"
player.judge(function(card){
if(get.suit(card)=='heart') return 2;
return 1;
})
"step 1"
if(result.judge==1){
trigger.num++;
}
else{
if(result.judge==2){
player.recover();
}
}
},
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz割据",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.storage.qqwz割据>=1&&event.card.name!='wanjian';
    },
                        content:function (){
                  player.storage.qqwz割据-=1;
                  game.addVideo('storage',player,['qqwz割据',player.storage.qqwz割据]);
            },
                        sub:true,
                    },
                    "3":{
                        audio:["qqwz割据",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                  var lo=player.storage.qqwz割据;
                      trigger.num-=lo;
            },
                        sub:true,
                    },
                },
            },
            "qqwz圣名":{
                trigger:{
                    global:"damageAfter",
                },
                forced:true,
                priority:100,
                audio:["qqwz圣名",2],
                filter:function (event,player){
return event.source!=undefined;
},
                content:function (){
if(player!=trigger.source){
player.draw();
trigger.source.draw();
}
else{
player.draw();
};
                    
                },
                mod:{
                    globalTo:function (from,to,distance){
return distance+2;
},
                },
            },
            "qqwz释罪":{
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                audio:["qqwz释罪",2],
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('qqwz释罪')).set('ai',function(target){
            if(get.attitude(_status.event.player,target)>0){
                return 1/Math.sqrt(target.hp+1);
            }
            return 0;
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('qqwz释罪',target);
            target.draw(2);
            target.storage.qqwz释罪_1=player;
            target.addSkill('qqwz释罪_1');
        }
    },
                subSkill:{
                    "1":{
                        mark:"character",
                        intro:{
                            content:"下一次受到超过1点的伤害时，防止此伤害，然后$跳过下个回合的摸牌阶段",
                        },
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                    return event.num>1;
                },
                        priority:-11,
                        content:function (){
                    trigger.cancel();
                    player.storage.qqwz释罪_1.skip('phaseDraw');
                    player.removeSkill('qqwz释罪_1');
                },
                        group:"qqwz释罪_2",
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:["phaseBegin","dieAfter"],
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
                            return event.player==player.storage.qqwz释罪_1;
                        },
                        content:function (){
                            player.removeSkill('qqwz释罪_1');
                        },
                        sub:true,
                    },
                },
            },
            "qqwz诵书":{
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                audio:["qqwz诵书",2],
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                content:function (){
        'step 0'
        var maxval=0;
        var hs=player.getCards('h');
        for(var i=0;i<hs.length;i++){
            maxval=Math.max(maxval,get.value(hs[i]));
        }
        player.chooseTarget(get.prompt('qqwz诵书'),lib.filter.notMe).set('ai',function(target){
            var player=_status.event.player;
            var maxval=_status.event.maxval;
            var dh=target.countCards('h')-player.countCards('h');
            var att=get.attitude(player,target);
            if(target.hasSkill('qingjian')) return false;
            if(dh<=0) return 0;
            if(att>0) return 0.1;
            if(maxval>=8) return 0;
            if(att==0) return 0.2;
            if(dh>=3) return dh;
            if(dh==2){
                if(maxval<=7) return dh;
            }
            if(maxval<=6) return dh;
            return 0;

        }).set('maxval',maxval);
        'step 1'
        if(result.bool){
            player.logSkill('qqwz诵书',result.targets);
            event.target=result.targets[0];
            var hs=player.getCards('h');
            event.target.gain(hs,player);
            player.$give(hs.length,event.target);
        }
        else{
            event.finish();
        }
        'step 2'
        var hs=event.target.getCards('h');
        if(!hs.length){
            event.finish();
            return;
        }
        hs.sort(function(a,b){
            return get.value(b,player,'raw')-get.value(a,player,'raw');
        });
        event.target.chooseCard([1,hs.length],'展示至少一张手牌',true).set('ai',function(card){
            var rand=_status.event.rand;
            var list=_status.event.list;
            if(_status.event.att){
                if(ui.selected.cards.length>=Math.ceil(list.length/2)) return 0;
                var value=get.value(card);
                if(_status.event.getParent().player.isHealthy()){
                    value+=(get.tag(card,'damage')?1.5:0)+(get.tag(card,'draw')?2:0);
                }
                return value;
            }
            if(ui.selected.cards.length>=Math.floor(list.length/2)) return 0;
            return (list.indexOf(card)%2==rand)?1:0;
        }).set('rand',(Math.random()<0.6)?1:0).set('list',hs).set('att',get.attitude(event.target,player)>0);
        'step 3'
        event.target.showCards(result.cards);
        event.cards1=result.cards;
        event.cards2=event.target.getCards('h',function(card){
            return !event.cards1.contains(card);
        });
        'step 4'
        var choice;
        var num1=event.cards1.length;
        var num2=event.cards2.length;
        if(get.attitude(event.target,player)>0&&num1>=num2){
            choice=0;
        }
        else if(num1==num2){
            choice=(Math.random()<0.45)?0:1;
        }
        else if(num1>num2){
            if(num1-num2==1){
                choice=(Math.random()<0.6)?0:1;
            }
            else{
                choice=0;
            }
        }
        else{
            if(num2-num1==1){
                choice=(Math.random()<0.6)?1:0;
            }
            else{
                choice=1;
            }
        }
        player.chooseControl(function(event,player){
            return _status.event.choice;
        }).set('choiceList',['获得'+get.translation(event.target)+'展示的牌',
        '获得'+get.translation(event.target)+'未展示的牌']).set('choice',choice);
        'step 5'
        if(result.index==0){
            player.gain(event.cards1,target);
            target.$give(event.cards1,player);
        }
        else{
            player.gain(event.cards2,target);
            target.$giveAuto(event.cards2,player);
        }
    },
                ai:{
                    expose:0.1,
                },
                group:"qqwz诵书_1",
                subSkill:{
                    "1":{
                        audio:["qqwz诵书",2],
                        trigger:{
                            player:"useCard",
                        },
                        frequent:true,
                        filter:function (event){
        return (get.type(event.card)=='basic');
    },
                        content:function (){
                    player.draw();
                },
                        sub:true,
                    },
                },
            },
            "qqwz请命":{
                trigger:{
                    global:"phaseBefore",
                },
                audio:["qqwz请命",2],
                frequent:true,
                filter:function (event,player){
       return player.getFriends().contains(event.player)&&event.player.hp<event.player.maxHp;                     
},
                content:function (){
                         trigger.player.recover(trigger.player.maxHp-trigger.player.hp);
                            trigger.player.draw();
                            player.phase();
},
                group:"qqwz请命_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"linkBefore",
                        },
                        nopop:true,
                        forced:true,
                        audio:["qqwz请命",2],
                        content:function (){
               trigger.finish();
               trigger.untrigger();
                 },
                        sub:true,
                    },
                },
            },
            "qqwz无责":{
                audio:["qqwz无责",2],
                trigger:{
                    global:"damageBegin",
                },
                filter:function (event,player){
        return player.getFriends().contains(event.player);
},
                content:function (){
     trigger.cancel();
    player.damage()._triggered=null;
                    player.chooseToDiscard('he');
},
                group:"qqwz无责_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseHpBefore",
                        },
                        audio:["qqwz无责",2],
                        forced:true,
                        content:function (){
                trigger.untrigger();
                trigger.finish();
            },
                        sub:true,
                    },
                },
            },
            "qqwz霓凰":{
                trigger:{
                    source:"damageBegin",
                },
                audio:["qqwz霓凰",2],
                forced:true,
                content:function (){
                    for(var i=0;i<game.players.length;i++){
                if(game.players[i].group=='qun'){
                   trigger.num++;
                }
            }
    },
                mod:{
                    globalFrom:function (from,to,distance){
            for(var i=0;i<game.players.length;i++){
                if(game.players[i].group=='qun'){
                    distance--;
                }
            }
            return distance;
        },
                },
                group:"qqwz霓凰_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"gainEnd",
                        },
                        audio:["qqwz霓凰",2],
                        forced:true,
                        content:function () {
   'step 0'
player.judge();      
'step 1'
if(get.number(result.card)>player.hp){
var opp=get.number(result.card);
player.recover(opp);
}
else{
    player.changeHujia(2);
}
            },
                        sub:true,
                    },
                },
            },
            "qqwz贤后":{
                trigger:{
                    player:"compare",
                    target:"compare",
                },
                filter:function (event){
                    return !event.iwhile;
                },
                audio:["qqwz贤后",2],
                forced:true,
                content:function (){
                    if(result.index!=2){
                        player.logSkill('qqwz贤后');
                        if(result.index==0){
                            game.log(player,'拼点牌点数+5');
                            if(player==trigger.player){
                                trigger.num1+=5;
                            }
                            else{
                                trigger.num2+=5;
                            }
                        }
                    }
                },
                group:["qqwz贤后_2","qqwz贤后_1","qqwz贤后_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        audio:["qqwz贤后",2],
                        filter:function (event,player,source){
                            if(!event.source) return false;
        return event.player.hp>event.source.hp;
            },
                        content:function (){
        trigger.num--;
    },
                        sub:true,
                    },
                    "2":{
                        mode:["identity"],
                        trigger:{
                            global:"gameStart",
                        },
                        audio:["qqwz贤后",2],
                        unique:true,
                        forced:true,
                        priority:70000,
                        filter:function (event,player){
        return player.identity!='zhu'&&player.identity!='zhong';
    },
                        content:function (){      
                player.identity='zhong';
                player.setIdentity('zhong');
                player.identityShown=true;   

    },
                        ai:{
                            threaten:8.1,
                        },
                        sub:true,
                    },
                    "3":{
                        audio:["qqwz贤后",2],
                        trigger:{
                            global:"changeHp",
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
return player!=event.player&&(get.translation(event.player.name)=='qqwz汉末龙裔'||get.translation(event.player.name2)=='qqwz汉末龙裔');
},
                        content:function (){
                      trigger.player.recover();
},
                        sub:true,
                    },
                },
            },
            "qqwz定卦":{
                trigger:{
                    player:"phaseUseBegin",
                },
                forced:true,
                audio:["qqwz定卦",2],
                filter:function (event,player){
                    return player.countCards('he',{type:'equip'})>0;
                },
                content:function (){
                    'step 0'
                        var iu=player.num('h');
                        event.cards=get.cards(iu);
                        player.showCards(event.cards);
                    'step 1'
                    var gained=[];
                    for(var i=0;i<event.cards.length;i++){
                        if(get.type(event.cards[i],'trick')=='trick'){
                            gained.push(event.cards[i]);
                        }
                        else{
                            event.cards[i].discard();
                        }
                    }
                    player.gain(gained,'gain2');
                },
                ai:{
                    threaten:1.5,
                },
                group:["qqwz定卦_2","qqwz定卦_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz定卦",2],
                        filter:function (event,player){
        if(event.player==player) return false;
        return event.player.isAlive();
    },
                        unique:true,
                        content:function (){
             player.viewHandcards(trigger.player);
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"judge",
                        },
                        filter:function (event,player){
                    return player.countCards('he')>0;
                },
                        audio:["qqwz定卦",2],
                        content:function (){
                    "step 0"
                    player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
                    get.translation(trigger.player.judging[0])+'，'+get.prompt('qqwz定卦_2'),'he').set('ai',function(card){
                        var trigger=_status.event.getTrigger();
                        var player=_status.event.player;
                        var judging=_status.event.judging;
                        var result=trigger.judge(card)-trigger.judge(judging);
                        var attitude=get.attitude(player,trigger.player);
                        if(attitude==0||result==0) return 0;
                        if(attitude>0){
                            return result-get.value(card)/2;
                        }
                        else{
                            return -result-get.value(card)/2;
                        }
                    }).set('judging',trigger.player.judging[0]);
                    "step 1"
                    if(result.bool){
                        player.respond(result.cards,'highlight');
                    }
                    else{
                        event.finish();
                    }
                    "step 2"
                    if(result.bool){
                        player.logSkill('qqwz定卦_2');
                        if(trigger.player.judging[0].clone){
                            trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                            game.broadcast(function(card){
                                if(card.clone){
                                    card.clone.classList.remove('thrownhighlight');
                                }
                            },trigger.player.judging[0]);
                            game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
                        }
                        trigger.player.judging[0].discard();
                        trigger.player.judging[0]=result.cards[0];
                        if(!get.owner(result.cards[0],'judge')){
                            trigger.position.appendChild(result.cards[0]);
                        }
                        game.log(trigger.player,'的判定牌改为',result.cards[0]);
                        game.delay(2);
                    }
                },
                        ai:{
                            tag:{
                                rejudge:1,
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz诛心":{
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
                    return event.player!=player&&player.getEnemies().contains(event.player)&&ui.cardPile.childElementCount<=player.hp*1000;
                },
                audio:["qqwz诛心",2],
                check:function (event,player){
                    return get.attitude(player,event.player)<0&&get.effect(event.player,{name:'sha'},player,player)>0;
                },
                logTarget:"player",
                skillAnimation:true,
                content:function (){
                    'step 0'
                    'step 3'
                    player.discard(player.getCards('h'));
                        player.loseMaxHp(2);
                        player.recover(3);
                    'step 1'
                    var list=[];
                    for(var i=0;i<ui.cardPile.childElementCount;i++){
                        if(ui.cardPile.childNodes[i].name=='sha'){
                            list.push(ui.cardPile.childNodes[i]);
                            ui.cardPile.childNodes[i].remove();
                            i--;
                        }
                    }
                    event.list=list;
                    event.num=0;
                    'step 2'
                    if(event.list.length&&event.num<player.hp*9){
                        event.num++;
                        player.useCard(event.list.shift(),trigger.player);
                        event.redo();
                    }
                    'step 3'
                    var cards=get.cards(ui.cardPile.childElementCount+1);
                    for(var i=0;i<cards.length;i++){
                        ui.cardPile.insertBefore(cards[i],ui.cardPile.childNodes[get.rand(ui.cardPile.childElementCount)]);
                    }
                
                },
                ai:{
                    threaten:1.5,
                },
                group:["qqwz诛心_2","qqwz诛心_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz诛心",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                        var kj=player.num('h');    
                       trigger.num+=kj;
            },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz诛心",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                      trigger.num++;
            },
                        sub:true,
                    },
                },
            },
            "qqwz风骨":{
                trigger:{
                    gloabl:"useCard",
                },
                filter:function (event,player){
        return event.card.name=='wanjian'&&player!=event.player;
    },
                audio:["qqwz风骨剑",1],
                forced:true,
                content:function (){
        player.loseHp();
        player.draw();
    },
                group:["qqwz风骨_4","qqwz风骨_3","qqwz风骨_2","qqwz风骨_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        audio:["qqwz风骨",3],
                        filter:function (event,player,source){
                            if(!event.source) return false;
                          return !event.nature;
},
                        content:function (){
                            var iu=trigger.num*2;
                  trigger.source.damage(iu);
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        audio:["qqwz风骨",3],
                        filter:function (event,player,source){
                            if(!event.source) return false;
                          return event.nature;
},
                        content:function (){
                            var iu1=trigger.num;
                  trigger.source.damage(iu1);
},
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        forced:true,
                        audio:["qqwz风骨",3],
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            player:"linkBefore",
                        },
                        nopop:true,
                        forced:true,
                        audio:["qqwz风骨",3],
                        content:function (){
                         trigger.cancel();
                 },
                        mod:{
                            suit:function (card,suit){
             return 'none';
         },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz仁道":{
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                filter:function (event,player){
return !player.storage.qqwz仁道;
    },
                audio:["qqwz仁道",2],
                derivation:["qqwz鸿刹"],
                forced:true,
                priority:100,
                content:function (){
"step 0"
player.storage.qqwz仁道=true;
"step 1"
for(var i=0;i<game.players.length;i++){
                if(game.players[i].group=='wu'){
                   player.recover();
                }
            }
        player.addSkill('qqwz鸿刹');
        player.loseMaxHp();
    },
            },
            "qqwz鸿刹":{
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                audio:["qqwz鸿刹",2],
                filter:function (event,player){
            return event.player!=player&&player.getEnemies().contains(event.player)&&event.player.group=='wu';
    },
                content:function (){
                trigger.player.discard(trigger.player.get('h').randomGet());
    },
                group:["qqwz鸿刹_2","qqwz鸿刹_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz鸿刹",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        if(event.source!='wu') return false;
        return true;
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"damageBegin",
                        },
                        forced:true,
                        audio:["qqwz鸿刹",2],
                        filter:function (event,player){
            return player.getEnemies().contains(event.player)&&event.player.group=='wu';
    },
                        content:function (){
            tirgger.player.damage();
    },
                        sub:true,
                    },
                },
            },
            "qqwz鳞甲":{
                audio:["qqwz鳞甲",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                content:function (){
                      trigger.num-=3;
            },
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='juedou'||card.name=='wanqjian'||card.name=='nanman') return false;
        },
                },
                group:"qqwz鳞甲_1",
                subSkill:{
                    "1":{
                        audio:["qqwz鳞甲",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        content:function (){
        player.recover(5);
    },
                        sub:true,
                    },
                },
            },
            "qqwz荒兽":{
                audio:["qqwz鳞甲",2],
                trigger:{
                    player:"damageBegin",
                },
                filter:function (event){
return event.nature;
},
                forced:true,
                content:function (){
                      player.loseHp(5);
            },
                group:["qqwz荒兽_5","qqwz荒兽_4","qqwz荒兽_3","qqwz荒兽_2","qqwz荒兽_1"],
                subSkill:{
                    "1":{
                        audio:["qqwz荒兽",2],
                        trigger:{
                            gloabl:"useCard",
                        },
                        filter:function (event,player){
        return event.card.name=='nanman'&&player!=event.player;
    },
                        forced:true,
                        content:function (){
       player.recover();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz荒兽",2],
                        trigger:{
                            gloabl:"useCard",
                        },
                        filter:function (event,player){
        return event.card.name=='wanjian'&&player!=event.player;
    },
                        forced:true,
                        content:function (){
        player.draw();
    },
                        sub:true,
                    },
                    "3":{
                        audio:["qqwz荒兽",2],
                        trigger:{
                            player:"useCard",
                        },
                        frequent:true,
                        filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                        content:function (){
        player.loseHp();
    },
                        ai:{
                            threaten:1.4,
                            noautowuxie:true,
                        },
                        sub:true,
                    },
                    "4":{
                        audio:["qqwz荒兽",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
             return player.hp<player.maxHp;
},
                        content:function (){
        trigger.num+=(player.maxHp-player.hp);
    },
                        sub:true,
                    },
                    "5":{
                        audio:["qqwz荒兽",2],
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        frequent:true,
                        content:function (){
        trigger.num+=(player.maxHp-player.hp);
    },
                        sub:true,
                    },
                },
            },
            "qqwz陵营":{
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
                if(get.color(event.card)!='red') return false;
                return true;
            },
                audio:["qqwz陵营",2],
                forced:true,
                content:function (){
                player.recover();
            },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                        if(get.color(card)=='red'&&target.isDamaged()) return [1,1];
                    },
                    },
                },
                group:["qqwz陵营_1","qqwz陵营_2"],
                subSkill:{
                    "1":{
                        mod:{
                            cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                            targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            target:"useCardToBegin",
                        },
                        filter:function (event,player){
                if(get.color(event.card)!='black') return false;
                return true;
            },
                        audio:["qqwz陵营",2],
                        forced:true,
                        content:function (){
                player.changeHujia();
            },
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(get.color(card)=='black'&&target.isDamaged()) return [1,1];
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz无绝":{
                trigger:{
                    player:"loseEnd",
                },
                audio:["qqwz无绝",2],
                forced:true,
                filter:function (event,player){
        if(player.num('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                content:function (){
        var num=player.maxHp;
        if(num>0){
            player.draw(num);
        }
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        target:function (card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                    },
                    noh:true,
                    skillTagFilter:function (player,tag){
            if(tag=='noh'){
                if(player.num('h')!=1) return false;
            }
        },
                },
                group:"qqwz无绝_1",
                subSkill:{
                    "1":{
                        audio:["qqwz无绝",2],
                        trigger:{
                            player:"loseEnd",
                        },
                        frequent:true,
                        filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                        content:function (){
           'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                        ai:{
                            noe:true,
                            effect:{
                                target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz求策":{
                audio:["qqwz求策",2],
                trigger:{
                    global:"useCard",
                },
                forced:true,
                filter:function (event,player){
if(event.player==player) return false;
return get.type(event.card)=='trick';
},
                content:function (){
    "step 0"
player.draw();
    "step 1"
    var list=["wuxie"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
},
            },
            "qqwz镇江":{
                audio:["qqwz镇江",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
                            var ko=game.countGroup();
                      player.turnOver();
                      player.recover(ko); 
},
                group:"qqwz镇江_1",
                subSkill:{
                    "1":{
                        audio:["qqwz镇江",2],
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
                        player.getFriends().contains(event.player);
                        },
                        content:function (){
                            var ko=game.countGroup();
                     trigger.player.draw(ko); 
},
                        sub:true,
                    },
                },
            },
            "qqwz失远":{
                derivation:["qqwz固本","qqwz济国"],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["qqwz失远",2],
                content:function (){
               player.removeSkill('qqwz固本');
                player.addSkill('qqwz济国');
     },
                group:"qqwz失远_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["qqwz失远",2],
                        content:function (){
               player.removeSkill('qqwz济国');
                player.addSkill('qqwz固本');
     },
                        sub:true,
                    },
                },
            },
            "qqwz固本":{
                trigger:{
                    player:["turnOverEnd","loseHpEnd"],
                },
                audio:["qqwz固本",2],
                content:function (){
              player.chooseToDiscard(true,'he');
              player.recover(player.MaxHp);
     },
                group:"qqwz固本_1",
                subSkill:{
                    "1":{
                        audio:["qqwz固本",2],
                        trigger:{
                            player:"loseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
                return _status.currentPhase!=player;
            },
                        content:function (){
                  player.draw();
            },
                        sub:true,
                    },
                },
            },
            "qqwz济国":{
                audio:["qqwz济国",2],
                trigger:{
                    player:"useCardBegin",
                },
                forced:true,
                forceunique:true,
                filter:function (event,player){
        var type=get.type(event.card,'equip');
        return event.player!=player&&(type=='equip');
    },
                content:function (){
                  trigger.untrigger();
                  trigger.finish();
    },
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num++;
        },
                },
                group:"qqwz济国_1",
                subSkill:{
                    "1":{
                        audio:["济国",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
       'step 0'
                 event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover(trigger.num);
                                event.redo();
                            }
    },
                        sub:true,
                    },
                },
            },
            "qqwz锐樾":{
                audio:["qqwz锐樾",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
        return get.type(event.card)=='equip';
    },
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num+=player.num('e');
        },
                    maxHandcard:function (player,num){
                        if(player.hp<player.maxHp) return num+=player.num('e');
                    },
                },
                group:"qqwz锐樾_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
                        audio:["qqwz锐樾",2],
                        content:function (){
                             trigger.num+=player.num('e');
            },
                        sub:true,
                    },
                },
            },
            "qqwz仇绝":{
                audio:["qqwz仇绝",2],
                trigger:{
                    global:"dieAfter",
                },
                forced:true,
                filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player);  
},
                content:function (){
           player.addSkill(trigger.player.skills);
           player.recover(trigger.player.hp);
           player.draw(trigger.player.maxHp);
    },
                group:"qqwz仇绝_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        audio:["qqwz仇绝",2],
                        priority:16,
                        content:function (){
                            "step 0"
              player.chooseToDiscard(true,'he');
              trigger.num++;
                      "step 1"
                      var enemies=player.getEnemies();
        var list=game.filterPlayer(function(current){
            return enemies.contains(current);
        }); 
        var target=list.randomGet();
        var po=trigger.num*2;
            player.line(target);
            target.damage(po);
    },
                        sub:true,
                    },
                },
            },
            "qqwz前尘":{
                audio:["qqwz前尘",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                content:function (){
         trigger.num++;
},
                group:["qqwz前尘_1","qqwz前尘_2","qqwz前尘_3"],
                subSkill:{
                    "1":{
                        audio:["qqwz前尘",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        content:function (){
         trigger.num++;
},
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz前尘",2],
                        trigger:{
                            target:"shaBegin",
                        },
                        forced:true,
                        content:function (){
        player.recover();
        var list=["shan"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
                        sub:true,
                    },
                    "3":{
                        audio:["qqwz前尘",2],
                        trigger:{
                            target:"useCardToBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card&&event.card.name=='juedou';
    },
                        content:function (){
     player.changeHujia(player.maxHp-player.hp);  
     var list=["sha"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
                        sub:true,
                    },
                },
            },
            "qqwz锋戮":{
                trigger:{
                    player:"phaseEnd",
                },
                audio:["qqwz锋戮",2],
                forced:true,
                content:function (){
                'step 0'
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.link();
                                event.redo();
                            }
            },
                ai:{
                    threaten:1.2,
                },
                group:"qqwz锋戮_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"damageEnd",
                        },
                        filter:function (event,player){
        return player.getEnemies().contains(event.player)&&event.player.isLinked();;
    },
                        audio:["qqwz锋戮",2],
                        content:function (){
       trigger.player.loseHp(2);
    },
                        sub:true,
                    },
                },
            },
            "qqwz索舟":{
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.isLinked();
    },
                audio:["qqwz索舟",2],
                content:function (){
       player.recover();
       player.draw();
    },
                group:["qqwz索舟_1","qqwz索舟_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBegin",
                        },
                        filter:function (event,player){
        return event.nature&&player.isLinked();
    },
                        audio:["qqwz索舟",2],
                        content:function (){
                trigger.num++;
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        filter:function (event,player){
        return !event.nature&&player.isLinked();
    },
                        audio:["qqwz索舟",2],
                        content:function (){
                trigger.untrigger();
trigger.finish();
    },
                        sub:true,
                    },
                },
            },
            "qqwz知隐":{
                trigger:{
                    player:"phaseEnd",
                },
                audio:["qqwz知隐",2],
                content:function (){
                    player.turnOver();
                    player.recover(player.MaxHp);
                    player.draw(3);
                    player.addTempSkill('qianxing',{player:'phaseBegin'});
    },
                group:"qqwz知隐_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        priority:20,
                        forced:true,
                        audio:["qqwz知隐",2],
                        filter:function (event,player){
                            return player.isTurnedOver();
                        },
                        content:function (){
                            trigger.cancel();
                            game.log(player,'取消了翻面');
                        },
                        sub:true,
                    },
                },
            },
            "qqwz水镜":{
                trigger:{
                    player:"damageBegin",
                },
                audio:["qqwz水镜",2],
                content:function (){
                trigger.untrigger();
                trigger.finish();
    },
                grouo:["qqwz水镜_2","qqwz水镜_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"linkBegin",
                        },
                        forced:true,
                        audio:["qqwz水镜",2],
                        content:function (){
                       player.gainMaxHp();
                var list=get.typeCard('basic');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
                 },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz水镜",2],
                        trigger:{
                            player:"useCard",
                        },
                        frequent:true,
                        filter:function (event){
        return (get.type(event.card)=='basic'&&event.cards[0]&&event.cards[0]==event.card);
    },
                        content:function (){
        var list=get.typeCard('trick');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
    },
                        mod:{
                            suit:function (card,suit){
             return 'none';
         },
                        },
                        ai:{
                            threaten:1.4,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz明杰":{
                audio:["qqwz明杰",2],
                trigger:{
                    global:"phaseBegin",
                },
                frequent:true,
                filter:function (event,player){
            return player.getFriends().contains(event.player);
},
                content:function (){
        "step 0"
        if(player.isUnderControl()){
            game.modeSwapPlayer(player);
        }
        var num=Math.min(5,game.countPlayer());
        var cards=get.cards(num);
        event.cards=cards;
        var switchToAuto=function(){
            _status.imchoosing=false;
            if(event.dialog) event.dialog.close();
            if(event.control) event.control.close();
            var top=[];
            var judges=player.node.judges.childNodes;
            var stopped=false;
            if(!player.countCards('h','wuxie')){
                for(var i=0;i<judges.length;i++){
                    var judge=get.judge(judges[i]);
                    cards.sort(function(a,b){
                        return judge(b)-judge(a);
                    });
                    if(judge(cards[0])<0){
                        stopped=true;break;
                    }
                    else{
                        top.unshift(cards.shift());
                    }
                }
            }
            var bottom;
            if(!stopped){
                cards.sort(function(a,b){
                    return get.value(b,player)-get.value(a,player);
                });
                while(cards.length){
                    if(get.value(cards[0],player)<=5) break;
                    top.unshift(cards.shift());
                }
            }
            bottom=cards;
            for(var i=0;i<top.length;i++){
                ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
            }
            for(i=0;i<bottom.length;i++){
                ui.cardPile.appendChild(bottom[i]);
            }
            player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(bottom.length)+'下');
            game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
            game.delay(2);
        };
        var chooseButton=function(online,player,cards){
            var event=_status.event;
            player=player||event.player;
            cards=cards||event.cards;
            event.top=[];
            event.bottom=[];
            event.status=true;
            event.dialog=ui.create.dialog('按顺序选择置于牌堆顶的牌（先选择的在上）',cards);
            event.switchToAuto=function(){
                event._result='ai';
                event.dialog.close();
                event.control.close();
                _status.imchoosing=false;
            },
            event.control=ui.create.control('ok','pileTop','pileBottom',function(link){
                var event=_status.event;
                if(link=='ok'){
                    if(online){
                        event._result={
                            top:[],
                            bottom:[]
                        }
                        for(var i=0;i<event.top.length;i++){
                            event._result.top.push(event.top[i].link);
                        }
                        for(var i=0;i<event.bottom.length;i++){
                            event._result.bottom.push(event.bottom[i].link);
                        }
                    }
                    else{
                        var i;
                        for(i=0;i<event.top.length;i++){
                            ui.cardPile.insertBefore(event.top[i].link,ui.cardPile.firstChild);
                        }
                        for(i=0;i<event.bottom.length;i++){
                            ui.cardPile.appendChild(event.bottom[i].link);
                        }
                        for(i=0;i<event.dialog.buttons.length;i++){
                            if(event.dialog.buttons[i].classList.contains('glow')==false&&
                                event.dialog.buttons[i].classList.contains('target')==false)
                            ui.cardPile.appendChild(event.dialog.buttons[i].link);
                        }
                        player.popup(get.cnNumber(event.top.length)+'上'+get.cnNumber(event.cards.length-event.top.length)+'下');
                        game.log(player,'将'+get.cnNumber(event.top.length)+'张牌置于牌堆顶');
                    }
                    event.dialog.close();
                    event.control.close();
                    game.resume();
                    _status.imchoosing=false;
                }
                else if(link=='pileTop'){
                    event.status=true;
                    event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆顶的牌';
                }
                else{
                    event.status=false;
                    event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆底的牌';
                }
            })
            for(var i=0;i<event.dialog.buttons.length;i++){
                event.dialog.buttons[i].classList.add('selectable');
            }
            event.custom.replace.button=function(link){
                var event=_status.event;
                if(link.classList.contains('target')){
                    link.classList.remove('target');
                    event.top.remove(link);
                }
                else if(link.classList.contains('glow')){
                    link.classList.remove('glow');
                    event.bottom.remove(link);
                }
                else if(event.status){
                    link.classList.add('target');
                    event.top.unshift(link);
                }
                else{
                    link.classList.add('glow');
                    event.bottom.push(link);
                }
            }
            event.custom.replace.window=function(){
                for(var i=0;i<_status.event.dialog.buttons.length;i++){
                    _status.event.dialog.buttons[i].classList.remove('target');
                    _status.event.dialog.buttons[i].classList.remove('glow');
                    _status.event.top.length=0;
                    _status.event.bottom.length=0;
                }
            }
            game.pause();
            game.countChoose();
        };
        event.switchToAuto=switchToAuto;

        if(event.isMine()){
            chooseButton();
            event.finish();
        }
        else if(event.isOnline()){
            event.player.send(chooseButton,true,event.player,event.cards);
            event.player.wait();
            game.pause();
        }
        else{
            event.switchToAuto();
            event.finish();
        }
        "step 1"
        if(event.result=='ai'||!event.result){
            event.switchToAuto();
        }
        else{
            var top=event.result.top||[];
            var bottom=event.result.bottom||[];
            for(var i=0;i<top.length;i++){
                ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
            }
            for(i=0;i<bottom.length;i++){
                ui.cardPile.appendChild(bottom[i]);
            }
            for(i=0;i<event.cards.length;i++){
                if(!top.contains(event.cards[i])&&!bottom.contains(event.cards[i])){
                    ui.cardPile.appendChild(event.cards[i]);
                }
            }
            player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(event.cards.length-top.length)+'下');
            game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
            game.delay(2);
        }
    },
                ai:{
                    threaten:1.2,
                },
                group:"qqwz明杰_1",
                subSkill:{
                    "1":{
                        audio:["qqwz明杰",2],
                        skillAnimation:true,
                        trigger:{
                            global:"dying",
                        },
                        forced:true,
                        priority:100,
                        filter:function (event,player){
                    if(player.storage.qqwz明杰_1) return false;
            return player.getFriends().contains(event.player);
},
                        content:function (){
                     'step 0'
               trigger.untrigger();
               trigger.finish();
        'step 1'
        player.storage.qqwz明杰_1=true;
        trigger.player.init('三分天下');
         player.addSkill('qqwz明杰_2');
         player.awakenSkill('qqwz明杰_1');
    },
                        sub:true,
                    },
                    "2":{
                        audio:["qqwz明杰",2],
                        skillAnimation:true,
                        trigger:{
                            global:"dying",
                        },
                        forced:true,
                        priority:100,
                        filter:function (event,player){
            return player.getFriends().contains(event.player);
},
                        content:function (){
                     'step 0'
               trigger.untrigger();
               trigger.finish();
        'step 1'
        trigger.player.init('飞鸾翔凤');
        player.removeSkill('qqwz明杰_2');
    },
                        sub:true,
                    },
                },
            },
            "qqwz风袭":{
                audio:["qqwz风袭",2],
                trigger:{
                    global:"loseEnd",
                },
                forced:true,
                filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player);  
},
                content:function (){
                   trigger.player.chooseToDiscard(true,'he');
                   if(trigger.player.num('h')<1){
                       trigger.player.loseHp();
                   }
            },
            },
            "qqwz岢将":{
                trigger:{
                    player:"phaseEnd",
                },
                audio:["qqwz岢将",2],
                forced:true,
                filter:function (event,player){
               return player.num('h')!=player.hp;                  
},
                content:function (){
                "step 0"
                    if(player.num('h')>player.hp){
                       var ki=player.num('h')-player.hp;
                            player.recover(ki); 
                    };
                "step 1"
                 if(player.num('h')<player.hp){
                      for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(game.players[i],player)<=0){
game.players[i].damage();
}
}
                    }
},
            },
            "qqwz诛敌":{
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                audio:["qqwz诛敌",2],
                filter:function (event,player){
            return player.getEnemies().contains(event.player);
                },
                content:function (){
                    "step 0"
                    if(trigger.player.isTurnedOver()){
                        trigger.player.damage()._triggered=null;
                    }
                    "step 1"
                    trigger.player.turnOver();
                },
                group:"qqwz诛敌_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"useCardAfter",
                        },
                        forced:true,
                        audio:["qqwz诛敌",2],
                        filter:function (event,player){
                     var type=get.type(event.card,'equip');
        return event.player!=player&&(type=='equip')&&player.getEnemies().contains(event.player);
                },
                        content:function (){
                    "step 0"
                    if(trigger.player.isTurnedOver()){
                        trigger.player.damage()._triggered=null;
                    }
                    "step 1"
                    trigger.player.turnOver();
                },
                        sub:true,
                    },
                },
            },
            "qqwz暗予":{
                audio:["qqwz暗予",2],
                trigger:{
                    global:"recoverBegin",
                },
                usable:1,
                filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player);  
},
                forced:true,
                content:function (){
                    trigger.untrigger();
                    trigger.finish();
    },
                group:"qqwz暗予_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:["respond","useCard"],
                        },
                        forced:true,
                        usable:2,
                        filter:function (event,player){
    if(get.color(event.card)!='black') return false;
    return event.player!=player&&player.getEnemies().contains(event.player);  
},
                        content:function (){
                trigger.player.loseHp();
},
                        sub:true,
                    },
                },
            },
            "qqwz君佑":{
                audio:["qqwz君佑",2],
                trigger:{
                    player:"changeHp",
                },
                forced:true,
                priority:6,
                filter:function (event,player){
           return player.hp==1;
    },
                content:function (){
        player.init(player.name,'qqwz策马扬鞭');
        player.removeSkill('qqwz君佑');
    },
            },
            "qqwz德论":{
                trigger:{
                    player:"turnOverBegin",
                },
                audio:["qqwz德论",2],
                forced:true,
                content:function (){
        trigger.cancel();
    },
                mod:{
                    suit:function (card,suit){
             return 'none';
         },
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'&&player!=target){
                return false;
            }
        },
                },
            },
            "qqwz撰古":{
                trigger:{
                    player:"useCardAfter",
                    target:"useCardToBegin",
                },
                audio:["qqwz撰古",2],
                filter:function (event,player){
                    if(event.name!='useCard'&&event.player==event.target) return false;
                    return get.color(event.card)=='black';
                },
                init:function (player){
                    player.storage.qqwz撰古=[];
                },
                intro:{
                    content:"cards",
                },
                frequent:true,
                content:function (){
                    var card=get.cards()[0];
                    ui.special.appendChild(card);
                    player.$draw(card);
                    game.delay();
                    player.storage.qqwz撰古.push(card);
                    player.markSkill('qqwz撰古');
                },
                mod:{
                    maxHandcard:function (player,num){
                        return num+player.storage.qqwz撰古.length;
                    },
                },
                group:"qqwz撰古_1",
                subSkill:{
                    "1":{
                        audio:["qqwz撰古",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                    var jk1=Math.floor(player.storage.qqwz撰古.length/3);
         trigger.num+=jk1;
},
                        sub:true,
                    },
                },
            },
            "qqwz博通":{
                trigger:{
                    player:"phaseDrawBegin",
                },
                direct:true,
                audio:["qqwz博通",2],
                filter:function (event,player){
                    return player.storage.qqwz撰古&&player.storage.qqwz撰古.length&&event.num>0;
                },
                locked:false,
                content:function (){
                    "step 0"
                    var four=false;
                    var nofour=!player.hasFriend();
                    if(player.storage.qqwz撰古.length>4){
                        var suits=['club','spade','heart','diamond'];
                        var list=player.getCards('h').concat(player.storage.qqwz撰古);
                        for(var i=0;i<list.length;i++){
                            suits.remove(get.suit(list[i]));
                            if(suits.length==0){
                                four=true;
                                break;
                            }
                        }
                    }
                    var suits2=[];
                    if(four){
                        suits2=['club','spade','heart','diamond'];
                        for(var i=0;i<player.storage.qqwz撰古.length;i++){
                            suits2.remove(get.suit(player.storage.qqwz撰古[i]));
                        }
                    }
                    player.chooseCard('选择任意张手牌与“古”交换',[1,Math.min(player.countCards('h'),player.storage.qqwz撰古.length)]).set('ai',function(card){
                        var val=get.value(card);
                        if(_status.event.four&&!_status.event.nofour){
                            var suits=_status.event.suits2.slice(0);
                            for(var i=0;i<ui.selected.cards.length;i++){
                                suits.remove(get.suit(ui.selected.cards[i]));
                            }
                            if(suits.contains(get.suit(card))){
                                if(val<0) return 10;
                                return 1;
                            }
                            else{
                                return 0;
                            }
                        }
                        else{
                            if(val<0) return 10;
                            if(_status.event.player.skipList.contains('phaseUse')){
                                return val;
                            }
                            return 10-val;
                        }
                    }).set('four',four).set('suits2',suits2).set('nofour',nofour);
                    event.four=four;
                    event.nofour=nofour;
                    "step 1"
                    if(result.bool){
                        player.logSkill('qqwz博通');
                        player.lose(result.cards,ui.special)._triggered=null;
                        player.storage.qqwz撰古=player.storage.qqwz撰古.concat(result.cards);
                        player.syncStorage('qqwz撰古');
                        event.num=result.cards.length;
                    }
                    else{
                        event.finish();
                    }
                    "step 2"
                    var suits2={
                        heart:0,
                        diamond:0,
                        spade:0,
                        club:0
                    };
                    for(var i=0;i<player.storage.qqwz撰古.length;i++){
                        suits2[get.suit(player.storage.qqwz撰古[i])]++;
                    }
                    player.chooseCardButton(player.storage.qqwz撰古,'选择'+event.num+'张牌作为手牌',event.num,true).set('ai',function(button){
                        var val=get.value(button.link);
                        if(_status.event.four||_status.event.nofour){
                            var suits=get.copy(_status.event.suits2);
                            for(var i=0;i<ui.selected.buttons.length;i++){
                                suits[get.suit(ui.selected.buttons[i].link)]--;
                            }
                            var num=suits[get.suit(button.link)];
                            if(_status.event.nofour){
                                for(var i in suits){
                                    if(suits[i]==0) return val;
                                }
                                if(num!=2){
                                    if(val<=0) return 0.01;
                                    return val;
                                }
                                else{
                                    return 0;
                                }
                            }
                            else{
                                if(num>1){
                                    if(val<=0) return 0.01;
                                    return val;
                                }
                                else{
                                    return 0;
                                }
                            }
                        }
                        else{
                            if(val<0) return -10;
                            if(_status.event.player.skipList.contains('phaseUse')){
                                return -val;
                            }
                            return val;
                        }
                    }).set('four',event.four).set('suits2',suits2).set('nofour',event.nofour);
                    if(player==game.me&&!event.isMine()){
                        game.delay(0.5);
                    }
                    "step 3"
                    player.gain(result.links)._triggered=null;
                    for(var i=0;i<result.links.length;i++){
                        player.storage.qqwz撰古.remove(result.links[i]);
                    }
                    player.syncStorage('qqwz撰古');
                    if(player==game.me&&_status.auto){
                        game.delay(0.5);
                    }
                    "step 4"
                    suits2=['club','spade','heart','diamond'];
                    for(var i=0;i<player.storage.qqwz撰古.length;i++){
                        suits2.remove(get.suit(player.storage.qqwz撰古[i]));
                    }
                    if(suits2.length>0){
                        event.finish();
                    }
                    "step 5"
                    event.cards=player.storage.qqwz撰古.slice(0);
                    player.storage.qqwz撰古.length=0;
                    player.unmarkSkill('qqwz撰古');
                    "step 6"
                    if(event.cards.length>1){
                        player.chooseCardButton('将所有“古”交给任意名其他角色',true,event.cards,[1,event.cards.length]).set('ai',function(button){
                            if(ui.selected.buttons.length==0) return 1;
                            return 0;
                        });
                    }
                    else if(event.cards.length==1){
                        event._result={links:event.cards.slice(0),bool:true};
                    }
                    else{
                        event.finish();
                    }
                    "step 7"
                    if(result.bool){
                        for(var i=0;i<result.links.length;i++){
                            event.cards.remove(result.links[i]);
                        }
                        event.togive=result.links.slice(0);
                        player.chooseTarget('将'+get.translation(result.links)+'交给一名其他角色',true,function(card,player,target){
                            return target!=player;
                        }).set('ai',function(target){
                            var att=get.attitude(_status.event.player,target);
                            if(_status.event.enemy){
                                return -att;
                            }
                            else if(att>0){
                                return att/(1+target.countCards('h'));
                            }
                            else{
                                return att/100;
                            }
                        }).set('enemy',get.value(event.togive[0])<0);
                    }
                    else{
                        event.finish();
                    }
                    "step 8"
                    if(result.targets.length){
                        result.targets[0].gain(event.togive,'draw');
                        player.line(result.targets[0],'green');
                        game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张','#g“古”');
                        event.goto(6);
                    }
                },
                ai:{
                    combo:"qqwz撰古",
                },
            },
            "qqwz肱骨":{
                audio:["qqwz肱骨",2],
                trigger:{
                    player:"drawAfter",
                },
                forced:true,
                filter:function (event,player){
                    return event.result.length>1;
                },
                usable:1,
                content:function (){
                    'step 0'
                    player.showCards(get.translation(player)+'摸到的牌',trigger.result);
                    if(!event.isMine()){
                        game.delayx();
                    }
                    'step 1'
                    var list=[];
                    for(var i=0;i<trigger.result.length;i++){
                    var suit=get.suit(trigger.result[0]);
                    var type=get.type(trigger.result[0]);
                    if(trigger.result[i]==trigger.result[0]) continue;
                        if(get.type(trigger.result[i])==type||get.suit(trigger.result[i])==suit){
                            list.push(trigger.result[i]);
                        }
                    }
                    if(list.length){
                        player.draw(game.countGroup());
                    }
                    else{
                        event.finish();
                    }
                },
                ai:{
                    threaten:1.5,
                },
                group:"qqwz肱骨_1",
                subSkill:{
                    "1":{
                        audio:["qqwz肱骨",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        content:function (){
                    "step 0"
                    player.showHandcards();
                    "step 1"
                    if(!trigger.source) return;
                    var cards=player.getCards('h');
                    for(var i=1;i<cards.length;i++){
                        if(get.color(cards[i])!=get.color(cards[0])) return;
                    }
                    trigger.num-=game.countGroup();
                },
                        ai:{
                            "maixie_defend":true,
                            threaten:0.9,
                        },
                        sub:true,
                    },
                },
            },
            "qqwz苦读":{
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
                    return game.roundNumber%4==0;
                },
                audio:["qqwz苦读",2],
                forced:true,
                derivation:["qqwz贤辞"],
                content:function (){
                    player.loseMaxHp(2);
                    player.addSkill('qqwz苦读');
                },
            },
            "qqwz贤辞":{
                audio:["qqwz贤辞",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
player.loseHp();
},
                group:"qqwz贤辞_1",
                subSkill:{
                    "1":{
                        audio:["qqwz贤辞",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
         trigger.num++;
},
                        sub:true,
                    },
                },
            },
            "qqwz凰龙":{
                audio:["qqwz凰龙",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
        if(event.source!='wei') return false;
        return true;
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                group:"qqwz凰龙_1",
                subSkill:{
                    "1":{
                        mod:{
                            maxHandcard:function (player,num){
                        if(player.hp<player.maxHp) return num+=player.num('e')*2;
                    },
                        },
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
                        audio:["qqwz凰龙",2],
                        content:function (){
                             trigger.num+=player.num('e');
            },
                        sub:true,
                    },
                },
            },
            "qqwz激溯":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                    globalFrom:function (from,to,distance){
                        if(_status.currentPhase==from){
                            return distance-from.countUsed();
                        }
                    },
                },
                trigger:{
                    player:"shaBegin",
                },
                audio:["qqwz激溯",2],
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha'&&get.distance(player,target)<=1;
    },
                content:function (){
                       trigger.taregt.damage();
                       trigger.directHit=true;
    },
            },
            "qqwz祸福":{
                audio:["qqwz祸福",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
                if(!event.card||(event.card&&event.card.suit==undefined)) return false;
                return player.hp>1;
            },
                check:function (event,player){
                return 1;
            },
                priority:-8,
                forced:true,
                content:function (){
                'step 0'
                player.judge(ui.special,function(card){
                    if(get.suit(card)==get.suit(trigger.card)) return 2;
                    return 1;
                });
                'step 1'
                if(get.suit(result.card)==get.suit(trigger.card)){
                         player.draw();                         
                }
            },
                group:"qqwz祸福_1",
                subSkill:{
                    "1":{
                        audio:["qqwz祸福",2],
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        filter:function (event,player){
        return get.type(event.card,'trick')=='trick';
    },
                        content:function (){
            player.chooseToDiscard(true,'he');
    },
                        sub:true,
                    },
                },
            },
            "qqwz伏杀":{
                group:"qqwz伏杀_1",
                audio:["qqwz伏杀",2],
                trigger:{
                    global:"recoverBefore",
                },
                filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player)&&event.player.sex=='male';  
},
                priority:10,
                forced:true,
                content:function (){
                    trigger.untrigger();
                    trigger.finish();
    },
                subSkill:{
                    "1":{
                        audio:["qqwz伏杀",2],
                        trigger:{
                            global:"phaseDrawBegin",
                        },
                        filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player)&&event.player.sex=='male';  
},
                        priority:10,
                        forced:true,
                        content:function (){
                    trigger.untrigger();
                    trigger.finish();
    },
                        sub:true,
                    },
                },
            },
            "qqwz卿月":{
                audio:["qqwz卿月",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
return get.color(event.card)=='red'&&event.cards[0]&&event.cards[0]==event.card;
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
                group:"qqwz卿月_1",
                subSkill:{
                    "1":{
                        audio:["qqwz卿月",2],
                        trigger:{
                            target:"useCardToBegin",
                        },
                        filter:function (event,player){
        if(get.color(event.card)!='red') return false;
        if(!event.player) return false;
        if(event.player==player) return false;
        return player.hp>0;
    },
                        forced:true,
                        content:function (){
        player.draw();
    },
                        ai:{
                            effect:{
                                target:function (card,player,target){
                if(get.color(card)=='red'&&target.num('h')>0){
                    return [1,0.5];
                }
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "qqwz斥公":{
                trigger:{
                    global:"phaseEnd",
                },
                audio:["qqwz斥公",2],
                forced:true,
                filter:function (event,player){
return player.getFriends().contains(event.player)&&event.player.hp!=player.hp;                        
},
                content:function (){
                     trigger.player.draw(2);
                     trigger.player.recover();
                     player.draw(2);
                     player.recover();
},
                group:"qqwz斥公_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseEnd",
                        },
                        audio:["qqwz斥公",2],
                        forced:true,
                        filter:function (event,player){
return player.getFriends().contains(event.player)&&event.player.num('h')>0;                        
},
                        content:function (){
                     trigger.player.draw(2);
                     trigger.player.recover();
                     player.draw(2);
                     player.recover();
},
                        sub:true,
                    },
                },
            },
            "qqwz微审":{
                audio:["qqwz微审",2],
                trigger:{
                    target:"shaBegin",
                },
                filter:function (event,player){
        return event.player!=player;
    },
                content:function (){
        player.loseHp();
        trigger.player.damage()._triggered=null;
    },
                group:"qqwz微审_1",
                subSkill:{
                    "1":{
                        audio:["qqwz微审",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.num('h')==0&&player.hp<player.maxHp;
    },
                        content:function (){
           player.phase();
},
                        sub:true,
                    },
                },
            },
			},
			translate:{
            "qqwz斩将攫石":"斩将攫石",
            "qqwz幻惑众心":"幻惑众心",
            "qqwz专擅朝政":"专擅朝政",
            "qqwz经达权变":"经达权变",
            "qqwz汉末龙裔":"汉末龙裔",
            "qqwz身陷囹圄":"身陷囹圄",
            "qqwz月下琵琶":"月下琵琶",
            "qqwz妙笔为龙":"妙笔为龙",
            "qqwz登极至尊":"登极至尊",
            "qqwz真龙之意":"真龙之意",
            "qqwz披坚持锐":"披坚持锐",
            "qqwz驭魂千机":"驭魂千机",
            "qqwz不鏖遗民":"不鏖遗民",
            "qqwz陷阵克敌":"陷阵克敌",
            "qqwz坐也思君":"坐也思君",
            "qqwz一战而就":"一战而就",
            "qqwz孤注一掷":"孤注一掷",
            "qqwz烈火焚城":"烈火焚城",
            "qqwz监军谋国":"监军谋国",
            "qqwz眉颦笑浅":"眉颦笑浅",
            "qqwz独饮醉卧":"独饮醉卧",
            "qqwz祸乱朝纲":"祸乱朝纲",
            "qqwz夜袭许昌":"夜袭许昌",
            "qqwz师表海内":"师表海内",
            "qqwz刚直谏上":"刚直谏上",
            "qqwz淯水香魂":"淯水香魂",
            "qqwz善战无前":"善战无前",
            "qqwz威震塞外":"威震塞外",
            "qqwz吴王光耀":"吴王光耀",
            "qqwz披星踏浪":"披星踏浪",
            "qqwz望君早归":"望君早归",
            "qqwz魅影剑舞":"魅影剑舞",
            "qqwz矫情之花":"矫情之花",
            "qqwz豪饮鲸吞":"豪饮鲸吞",
            "qqwz魂佑江东":"魂佑江东",
            "qqwz策马扬鞭":"策马扬鞭",
            "qqwz缔造联盟":"缔造联盟",
            "qqwz锦运绵长":"锦运绵长",
            "qqwz才猷蕴借":"才猷蕴借",
            "qqwz杀身成仁":"杀身成仁",
            "qqwz神行太保":"神行太保",
            "qqwz刹那芳华":"刹那芳华",
            "qqwz溺酒残戮":"溺酒残戮",
            "qqwz旋战回击":"旋战回击",
            "qqwz缘后雅志":"缘后雅志",
            "qqwz醉酒提矛":"醉酒提矛",
            "qqwz旋击敌寇":"旋击敌寇",
            "qqwz伏路断道":"伏路断道",
            "qqwz倚虎弄权":"倚虎弄权",
            "qqwz狂直之士":"狂直之士",
            "qqwz傲世轻物":"傲世轻物",
            "qqwz安国将军":"安国将军",
            "qqwz临阵献策":"临阵献策",
            "qqwz宴诛权臣":"宴诛权臣",
            "qqwz饕餮盛宴":"饕餮盛宴",
            "qqwz溯江激战":"溯江激战",
            "qqwz折冲将军":"折冲将军",
            "qqwz英姿雄发":"英姿雄发",
            "qqwz烈焰燃天":"烈焰燃天",
            "qqwz思君两欢":"思君两欢",
            "qqwz同气连枝":"同气连枝",
            "qqwz盖世之才":"盖世之才",
            "qqwz惊鸿绝艳":"惊鸿绝艳",
            "qqwz战天斗地":"战天斗地",
            "qqwz洞口之战":"洞口之战",
            "qqwz超然卓绝":"超然卓绝",
            "qqwz忻忻得意":"忻忻得意",
            "qqwz蓝田生玉":"蓝田生玉",
            "qqwz随能所任":"随能所任",
            "qqwz破天焚舰":"破天焚舰",
            "qqwz雍容雅步":"雍容雅步",
            "qqwz杵枪摧敌":"杵枪摧敌",
            "qqwz大贤良师":"大贤良师",
            "qqwz蹯踞西疆":"蹯踞西疆",
            "qqwz从容啸咤":"从容啸咤",
            "qqwz英风劲气":"英风劲气",
            "qqwz游历吴中":"游历吴中",
            "qqwz心术不正":"心术不正",
            "qqwz狡黠颖慧":"狡黠颖慧",
            "qqwz曲辞谄媚":"曲辞谄媚",
            "qqwz仙山游医":"仙山游医",
            "qqwz箭击曹营":"箭击曹营",
            "qqwz宽释请命":"宽释请命",
            "qqwz凰梦汉回":"凰梦汉回",
            "qqwz为夫弑敌":"为夫弑敌",
            "qqwz悍然嗜血":"悍然嗜血",
            "qqwz挥剑驭火":"挥剑驭火",
            "qqwz出镇江夏":"出镇江夏",
            "qqwz林历扬名":"林历扬名",
            "qqwz艳绝无双":"艳绝无双",
            "qqwz如损如篪":"如损如篪",
            "qqwz山林隐士":"山林隐士",
            "qqwz诗音共赏":"诗音共赏",
            "qqwz摆宴欲诛":"摆宴欲诛",
            "qqwz_魔将":"魔将",
            "qqwz_魔将_info":"你受到伤害后，你可以令其封印技能1回合，然后你回复1点体力，让其失去1点体力上限，你造成伤害时20%令其直接死亡",
            "qqwz_魔将2":"魔将",
            "qqwz_魔将2_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_惑心":"惑心",
            "qqwz_惑心_info":"你的回合开始时，你随机获得\"机关\",\"基本\",\"锦囊\",\"食物\"牌各一张，名其他角色的准备阶段和回合结束，若你已受伤，你可以与该角色拼点，若你赢，该角色受到1点体力流失伤害",
            "qqwz_惑心2":"惑心",
            "qqwz_惑心2_info":"",
            "qqwz_雷鸣":"雷鸣",
            "qqwz_雷鸣_info":"每当你使用或打出一张【闪】，可令任意一名角色进行一次判定，若结果为红色，其受到2点雷电伤害，然后你回复2点体力；若结果为黑色，其受到4点雷电伤害且你摸3张牌",
            "qqwz_天道":"天道",
            "qqwz_天道_info":"任意一名角色的判定生效前，你可以打出一张牌替换之",
            "qqwz_虎狼":"虎狼",
            "qqwz_虎狼_info":"摸牌阶段，你可以摸3张牌然后改为进行一次判定：你获得此判定牌，且于此回合的出牌阶段，你可以将任意一张与此判定牌不同颜色的手牌当【决斗】使用。你使用决斗可以多结算2次，你使用决斗造成的伤害+2",
            "qqwz_虎狼2":"虎狼",
            "qqwz_虎狼2_info":"",
            "qqwz_虎狼3":"虎狼",
            "qqwz_虎狼3_info":"你使用的杀均结算两次，你使用杀无次数限制",
            "qqwz_虎狼4":"虎狼",
            "qqwz_虎狼4_info":"锁定技，你的【杀】额外造成1点伤害",
            "qqwz_箭阵":"箭阵",
            "qqwz_箭阵_info":"出牌阶段，你可以将任意两张花色不同的手牌当【万箭齐发】使用。你使用或打出的万箭齐发造成的伤害+1",
            "qqwz_箭阵2":"箭阵",
            "qqwz_箭阵2_info":"你使用杀伤害加1",
            "qqwz_名门":"名门",
            "qqwz_名门_info":"你始终跳过弃牌阶段并可以摸2张牌回复2点体力，你不能被乐不思蜀选做目标",
            "qqwz_酗酒":"酗酒",
            "qqwz_酗酒_info":"你可将你的任意一张♠手牌当【酒】使用。摸牌阶段你多摸3张牌",
            "qqwz_酗酒2":"酗酒",
            "qqwz_酗酒2_info":"摸牌阶段，你可以额外摸一张牌",
            "qqwz_色欲":"色欲",
            "qqwz_色欲_info":"当你对女性角色造成伤害时，其失去1点体力和一点体力上限并翻面，然后你摸2张牌",
            "qqwz_掌权":"掌权",
            "qqwz_掌权_info":"每当一名其他角色回合结束后，若你已受伤你回复1点体力失去1点体力上限",
            "qqwz_暴凌":"暴凌",
            "qqwz_暴凌_info":"你造成的伤害+x（x=你当前的体力）",
            "qqwz_绝命":"绝命",
            "qqwz_绝命_info":"在你的回合，除你以外，只有处于濒死状态的角色才能使用【桃】。回合结束阶段，你亮出牌堆顶10张牌获得其中的黑色牌",
            "qqwz_绝命2":"绝命",
            "qqwz_绝命2_info":"",
            "qqwz_危局":"危局",
            "qqwz_危局_info":"出牌阶段，可令除你外的所有角色依次对与其距离最近的另一名角色使用一张【杀】，无法如此做者失去2点体力。每回合1次，你使用锦囊牌多结算一次效果",
            "qqwz_暗幕":"暗幕",
            "qqwz_暗幕_info":"当一名其他角色回复体力时，取消结算，延迟类和黑色锦囊无法对你产生效果",
            "qqwz_危局2":"危局",
            "qqwz_危局2_info":"你使用的基本牌均结算两次<br>75%概率防止你流失体力或受到伤害",
            "qqwz_绝命3":"绝命",
            "qqwz_绝命3_info":"",
            "qqwz_暗幕2":"暗幕",
            "qqwz_暗幕2_info":"锁定技，你不能成为延时类锦囊的目标",
            "qqwz_万化":"万化",
            "qqwz_万化_info":"所有人都展示武将牌后，你随机获得5张未加入游戏的武将牌，选一张置于你面前并声明该武将的一项技能，你拥有该技能且同时将性别和势力属性变成与该武将相同知道该化身被替换。在你的每个准备阶段和结束后，你可以替换化身牌，你须为新的化身重新声明一项技能（你不可声明锁定技、觉醒技或主公技）。",
            "qqwz_万化2":"万化",
            "qqwz_万化2_info":"",
            "qqwz_万化3":"万化",
            "qqwz_万化3_info":"",
            "qqwz_归魂":"归魂",
            "qqwz_归魂_info":"你体力值每次发生变化，可获得2张新化身牌。",
            "qqwz_仙道":"仙道",
            "qqwz_仙道_info":"锁定技，你在回合结束后随机获得一个势力角色的所有技能，你的红色牌可以当桃使用",
            "qqwz_仙道2":"仙道",
            "qqwz_仙道2_info":"你可以将一张红色牌当[桃]使用",
            "qqwz_离歌":"离歌",
            "qqwz_离歌_info":"一名角色每受到伤害，你可以摸一张牌，然后弃一张牌并令其进行一次判定，判定结果为：♥该角色回复2点体力；♦︎该角色摸3张牌；♣伤害来源弃5张牌；♠伤害来源受到2点体力流失伤害",
            "qqwz_月琴":"月琴",
            "qqwz_月琴_info":"当你造成1次伤害，你可以令其进行一次判定，判定结果为：♥该角色翻面；♦︎该角色流失1点体力；♣你增加2点体力上限；♠你回复2点体力",
            "qqwz_长恨":"长恨",
            "qqwz_长恨_info":"锁定技，杀死你的角色失去当前的所有技能直到游戏结束然后其死亡。",
            "qqwz_谋诛":"谋诛",
            "qqwz_谋诛_info":"出牌阶段你可以多使用2张杀,当你使用【杀】指定一名角色为目标后，其暂时封印技能，你摸2张牌，当你对其造成伤害时若其没有手牌则此伤害+5.你无视其防具",
            "qqwz_谋诛2":"谋诛",
            "qqwz_谋诛2_info":"",
            "qqwz_谋诛3":"谋诛",
            "qqwz_谋诛3_info":"",
            "qqwz_皇令":"皇令",
            "qqwz_皇令_info":"出牌阶段，你可以将所有手牌(至少一张)交给一名其他角色。若如此做，你令该角色与你指定的另一名有手牌的角色拼点。视为拼点赢的角色对没赢的角色使用一张【杀】然后没赢的角色死亡你摸2张牌。每阶段限一次。",
            "qqwz_定数":"定数",
            "qqwz_定数_info":"当你成为杀的目标时，你摸2张牌此杀对你无效，你受到的伤害最多为1，你始终跳过弃牌阶段，你受到属性伤害时摸2张牌然后此伤害无效",
            "qqwz_定数2":"定数",
            "qqwz_定数2_info":"你受到的伤害至多为1<br>你始终跳过弃牌阶段",
            "qqwz_定数3":"定数",
            "qqwz_定数3_info":"你始终跳过弃牌阶段",
            "qqwz_定数4":"定数",
            "qqwz_定数4_info":"",
            "qqwz_谋篡":"谋篡",
            "qqwz_谋篡_info":"其他角色的准备阶段，你可以摸2张牌，然后增加1点体力上限，并可以对其使用1张决斗",
            "qqwz_妄尊":"妄尊",
            "qqwz_妄尊_info":"摸牌阶段，你多摸x张牌，x=你当前的体力上限，你始终跳过弃牌阶段",
            "qqwz_妄尊2":"妄尊",
            "qqwz_妄尊2_info":"你始终跳过弃牌阶段",
            "qqwz_狮枪":"狮枪",
            "qqwz_狮枪_info":"当你使用【杀】指定角色后其处于封印状态，你对于体力值不大于你的角色距离为1，你使用杀可以指定1~4个目标，当你造成伤害后可以回复1点体力获得1张基本牌，你使用或打出的杀不能被闪抵消，你使用杀或决斗造成的伤害+3",
            "qqwz_狮枪2":"狮枪",
            "qqwz_狮枪2_info":"",
            "qqwz_狮枪3":"狮枪",
            "qqwz_狮枪3_info":"锁定技，你的【杀】额外造成1点伤害",
            "qqwz_升龙":"升龙",
            "qqwz_升龙_info":"你可以将[杀]当[闪]，或[闪]当[杀]使用或打出，出牌阶段,你可以额外打出2张杀",
            "qqwz_飞燕":"飞燕",
            "qqwz_飞燕_info":"每当你发动“升龙”使用或打出一张手牌时，你可以立即获得对方的1张手牌。每当你打出1张闪你可以使用一张杀",
            "qqwz_飞燕2":"飞燕",
            "qqwz_飞燕2_info":"",
            "qqwz_飞燕3":"飞燕",
            "qqwz_飞燕3_info":"",
            "qqwz_飞燕4":"飞燕",
            "qqwz_飞燕4_info":"每当你使用或打出一张闪，你可以使用一张杀",
            "qqwz_排兵":"排兵",
            "qqwz_排兵_info":"当你于出牌阶段内使用【杀】或【决斗】指定目标后，你可以选择一项：1.摸2张牌回复2点体力；2.此牌造成的伤害+X（X为你手牌和装备牌的数量）",
            "qqwz_排兵2":"排兵",
            "qqwz_排兵2_info":"",
            "qqwz_傀儡":"傀儡",
            "qqwz_傀儡_info":"出牌阶段[若你的体力上限不小于5]你可以弃置一张牌失去5点体力上限，若如此做，你指定一名角色，获得其所有手牌装备牌和判定牌然后其死亡。每回合限一次",
            "qqwz_驭魂":"驭魂",
            "qqwz_驭魂_info":"结束阶段，你可以随机获得一张锦囊牌并回复1点体力增加1点体力上限",
            "qqwz_蝎心":"蝎心",
            "qqwz_蝎心_info":"其他角色的出牌阶段开始时，你可以弃置一张手牌然后你对其造成2点神圣伤害流失1点体力且本回合该角色无法回复体力。",
            "qqwz_蝎心2":"蝎心",
            "qqwz_蝎心2_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_乱政":"乱政",
            "qqwz_乱政_info":"当你杀死一名角色后，你可于此回合结束后摸三张牌并进行一个额外回合",
            "qqwz_乱政2":"乱政",
            "qqwz_乱政2_info":"",
            "qqwz_狮枪闪":"狮枪",
            "qqwz_狮枪闪_info":"你使用或打出的杀无法被闪响应",
            "qqwz_舍粮":"舍粮",
            "qqwz_舍粮_info":"回合开始和结束阶段，若你的武将牌上没有牌，你可以摸5张牌。若如此做，你将5张牌置于武将牌上，称为“粮”；当“粮”移至其他区域后，若你的武将牌上没有“粮”，你回复体力至体力上限并摸3张牌，你跳过弃牌阶段",
            "qqwz_渡世":"渡世",
            "qqwz_渡世_info":"当你受到1点伤害后，或其他角色受到你造成的1点伤害后，受到伤害的角色可以获得一张“粮”",
            "qqwz_顺道":"顺道",
            "qqwz_顺道_info":"出牌阶段，你可以弃置1张'粮'令一名角色摸2张牌",
            "qqwz_舍粮2":"舍粮",
            "qqwz_舍粮2_info":"",
            "qqwz_舍粮3":"舍粮",
            "qqwz_舍粮3_info":"你始终跳过弃牌阶段",
            "qqwz_计筹":"计筹",
            "qqwz_计筹_info":"出牌阶段开始时，你可以弃置任意张装备牌，然后亮出牌堆顶5倍数量的牌，你获得其中的锦囊牌，你不能被延迟类锦囊选中",
            "qqwz_星蝶":"星蝶",
            "qqwz_星蝶_info":"锁定技，若你的装备区没有防具牌，视为你装备着【八卦阵】；若你的装备区没有坐骑牌，你的手牌上限+x(x=你当前的体力)；若你的装备区没有宝物牌，你使用锦囊牌无距离限制，每当你使用或打出一张非转化非延迟类锦囊牌你可以获得一张锦囊牌",
            "qqwz_星蝶2":"星蝶",
            "qqwz_星蝶2_info":"每当你使用一张非转化的普通锦囊牌，可以摸一张牌",
            "qqwz_将酒":"将酒",
            "qqwz_将酒_info":"锁定技，你的【酒】均视为【决斗】",
            "qqwz_破敌":"破敌",
            "qqwz_破敌_info":"出牌阶段，你可以与一名角色拼点。若你赢，你获得以下技能直到回合结束：无视与该角色的距离；无视防具且可使用任意数量的【杀】且你使用杀不可被闪抵消且伤害+2。若你没赢，你本回合使用杀造成伤害后其死亡。每回合限一次",
            "qqwz_破敌2":"破敌",
            "qqwz_破敌2_info":"",
            "qqwz_破敌3":"破敌",
            "qqwz_破敌3_info":"当你用杀造成伤害后，其死亡",
            "qqwz_破敌4":"破敌",
            "qqwz_破敌4_info":"",
            "qqwz_破敌5":"破敌",
            "qqwz_破敌5_info":"锁定技，你的【杀】额外造成1点伤害",
            "qqwz_篱下":"篱下",
            "qqwz_篱下_info":"锁定技，当一名其他角色成为基本牌或普通锦囊牌的目标时，若其与你的距离为1且你既不是此牌的使用者也不是目标，你也成为此牌的目标",
            "qqwz_散财":"散财",
            "qqwz_散财_info":"锁定技，当你对区域里有牌的其他角色造成伤害后，你获得其手牌、装备区里的各2张牌,你的手牌上限+X(X=你当前的体力上限)你受到的伤害+1",
            "qqwz_策定":"策定",
            "qqwz_策定_info":"出牌阶段，你可以交给任一其他角色一张装备牌或【杀】或1张基本牌，该角色进行二选一：1. 视为对其攻击范围内的另一名由你指定的角色使用一张【杀】和决斗。2. 摸2张牌。每回合限一次。",
            "qqwz_殉道":"殉道",
            "qqwz_殉道_info":"锁定技，你的回合外，你每受到一次伤害，任何伤害对你无效，直到该回合结束。",
            "qqwz_殉道2":"殉道",
            "qqwz_殉道2_info":"",
            "qqwz_殉道3":"殉道",
            "qqwz_殉道3_info":"你免疫体力流失伤害",
            "qqwz_殉道4":"殉道",
            "qqwz_殉道4_info":"你免疫体力流失伤害",
            "qqwz_繁华":"繁华",
            "qqwz_繁华_info":"摸牌阶段摸牌时，你可以额外摸3张牌若如此做，你本回合每次使用基本牌都可以获得一张锦囊牌",
            "qqwz_繁华2":"繁华",
            "qqwz_繁华2_info":"",
            "qqwz_汉室":"汉室",
            "qqwz_汉室_info":"弃牌阶段,你增加1点体力上限然后跳过弃牌阶段，其他角色与你计算距离始终+2，出牌阶段你可以用2张花色相同的手牌当桃使用(每回合限2次)",
            "qqwz_汉室2":"汉室",
            "qqwz_汉室2_info":"出牌阶段，你可以将两张花色一样的牌当桃使用，每回合限2次",
            "qqwz_威视":"威视",
            "qqwz_威视_info":"一名其他角色的准备阶段，你可以与该角色拼点，若你赢，该角色本回合使用的牌不能指定除该角色外的角色为目标,且此人每使用一张牌60%流失1点体力",
            "qqwz_威视2":"威视",
            "qqwz_威视2_info":"",
            "qqwz_牵连":"牵连",
            "qqwz_牵连_info":"当你成为【杀】的目标时，你可以令另1~3名其他角色选择一项：①、交给你一张【闪】；②、成为此【杀】的额外目标然后你回复1点体力。",
            "qqwz_抵命":"抵命",
            "qqwz_抵命_info":"锁定技，你的【桃】均视为【过河拆桥】",
            "qqwz_毒谋":"毒谋",
            "qqwz_毒谋_info":"结束阶段开始时，你可以对没有手牌的1~5名角色造成2点体力流失伤害",
            "qqwz_火牢":"火牢",
            "qqwz_火牢_info":"限定技。出牌阶段，你可以令所有其他角色各选择一项：弃置至少X张牌(X为该角色的上家以此法弃置牌的数量+2)；或受到你对其造成的4点火焰伤害",
            "qqwz_火刑":"火刑",
            "qqwz_火刑_info":"其他角色失去或使用牌后，你可以令其受到2点神圣火焰伤害，每回合限2次",
            "qqwz_破计":"破计",
            "qqwz_破计_info":"锁定技，你使用的普通锦囊牌不能被无懈可击响应；你不能成为其他角色的延时类锦囊的目标且回合结束你摸2张牌",
            "qqwz_诛族":"诛族",
            "qqwz_诛族_info":"出牌阶段限2次，你可以展示一张锦囊牌并将之置于牌堆顶，然后令有手牌的一名其他角色选择一项：弃置3张锦囊牌；或弃置2张非锦囊牌",
            "qqwz_去病":"去病",
            "qqwz_去病_info":"出牌阶段限1次,你可以弃置一张手牌令一名角色受到1点神圣伤害然后你回复1点体力,你每次受到伤害后回复1点体力",
            "qqwz_医心":"医心",
            "qqwz_医心_info":"回合外,你可以将一张红色牌当[桃]使用，当你回复体力后你恢复体力至体力上限",
            "qqwz_缓图":"缓图",
            "qqwz_缓图_info":"你使用或打出一张牌后50%摸一张牌回复1点体力，你使用或打出基本牌40%外执行1次效果",
            "qqwz_缓图2":"缓图",
            "qqwz_缓图2_info":"你使用的基本牌均结算两次<br>75%概率防止你流失体力或受到伤害",
            "qqwz_鸿鹄":"鸿鹄",
            "qqwz_鸿鹄_info":"锁定技，每当你受到一次伤害，你可以摸1张牌回复1点体力，当一名角色的牌因弃置而置入弃牌堆时，你可以将其中的任意张牌交给其他角色",
            "qqwz_鸿鹄2":"鸿鹄",
            "qqwz_鸿鹄2_info":"当其他角色的牌因弃置而置入弃牌堆时，你可以将其中的任意张牌交给其他角色",
            "qqwz_隔墙":"隔墙",
            "qqwz_隔墙_info":"一名其他角色的结束阶段，你可以选择一项：将其装备区里的1张牌移动至你装备区里的相应位置（可替换原装备）并令其翻面；或摸2张牌。",
            "qqwz_投曹":"投曹",
            "qqwz_投曹_info":"限定技。出牌阶段，你可以将装备区里的所有牌交给一名其他角色，然后该角色选择一项：令你回复X点体力并摸X张牌;或对其攻击范围内的X名角色各造成2点伤害(X为你以此法交给该角色的牌的数量)。",
            "qqwz_罪业":"罪业",
            "qqwz_罪业_info":"出牌阶段限一次，你可以展示所有手牌，若其中包含不止一种颜色，则你选择一种颜色并弃置该颜色的所有手牌，然后你可以获得至多X名角色的各2张牌（X为你以此法弃置的手牌数）。若你以此法弃置的牌不少于5张，则你失去1点体力上限，你跳过弃牌阶段且免疫体力流失伤害",
            "qqwz_罪业2":"罪业",
            "qqwz_罪业2_info":"你始终跳过弃牌阶段",
            "qqwz_罪业3":"罪业",
            "qqwz_罪业3_info":"你免疫体力流失伤害",
            "qqwz_推卸":"推卸",
            "qqwz_推卸_info":"当你受到伤害时,若此伤害大于1则你可以令一名其他角色摸2张牌，然后你摸一张牌流失1点体力取消本次伤害",
            "qqwz_谗言":"谗言",
            "qqwz_谗言_info":"出牌阶段开始时，你可以摸z张牌。若如此做，此回合你的手牌上限改为X(X为你此阶段造成的伤害数,z=你当前的体力)且本回合你每次造成伤害可以摸一张牌",
            "qqwz_谗言2":"谗言",
            "qqwz_谗言2_info":"",
            "qqwz_乱国":"乱国",
            "qqwz_乱国_info":"你每使用一张基本牌可以视为打出一张五谷丰登，你每使用一张机关牌可以视为打出一张决斗，你每使用一张锦囊牌可以视为打出一张南蛮入侵，你每使用一张食物牌可以回复1点体力，其他角色回合开始时，你摸一张牌进行一个额外回合",
            "qqwz_乱国锦囊":"乱国",
            "qqwz_乱国锦囊_info":"",
            "qqwz_乱国基本":"乱国",
            "qqwz_乱国基本_info":"",
            "qqwz_乱国机关":"乱国",
            "qqwz_乱国机关_info":"",
            "qqwz_乱国延迟锦囊":"乱国",
            "qqwz_乱国延迟锦囊_info":"",
            "qqwz_乱国回合":"乱国",
            "qqwz_乱国回合_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_并起":"并起",
            "qqwz_并起_info":"出牌阶段，你可以指定1~4名除你之外的角色，令这些角色各摸4张牌，每选定一名角色你摸2张牌回复3点体力",
            "qqwz_让梨":"让梨",
            "qqwz_让梨_info":"摸牌阶段，你可以额外摸3张牌，你始终跳过弃牌阶段",
            "qqwz_儒门":"儒门",
            "qqwz_儒门_info":"当你即将受到伤害时，若伤害来源的体力值小于你，则此伤害=0",
            "qqwz_让梨2":"让梨",
            "qqwz_让梨2_info":"你始终跳过弃牌阶段",
            "qqwz_秉忠":"秉忠",
            "qqwz_秉忠_info":"当你因弃置失去一张手牌时，你可以弃置1名其他角色的2张牌。",
            "qqwz_孤援":"孤援",
            "qqwz_孤援_info":"当一名角色受到伤害时，你可以令一名角色摸1张牌然后你回复2点体力",
            "qqwz_妖艳":"妖艳",
            "qqwz_妖艳_info":"锁定技，准备阶段，你令所有其他角色的非锁定技失效直到回合结束，当你收到伤害时若次伤害来源为男性角色则取消本次伤害并令其失去1点体力",
            "qqwz_醉魂":"醉魂",
            "qqwz_醉魂_info":"出牌阶段，你可以弃置一张装备牌，然后令一名角色翻面并摸1张牌然后你摸一张牌",
            "qqwz_妖艳2":"妖艳",
            "qqwz_妖艳2_info":"你对女性角色、女性角色对你使用【杀】时，都需连续使用两张【闪】才能抵消。",
            "qqwz_战神":"战神",
            "qqwz_战神_info":"锁定技,你的闪可以当杀使用或打出，你使用的[决斗]需要2张[杀]响应,回合结束若你本回合造成的伤害大于或等于4则你可以选择一名角色令其受到4点神圣伤害，你使用或打出杀不能被闪抵消，你受到的伤害最多为1，你免疫致死，你无视其防具",
            "qqwz_战神决斗":"战神",
            "qqwz_战神决斗_info":"",
            "qqwz_战神闪杀":"战神",
            "qqwz_战神闪杀_info":"",
            "qqwz_战神伤害":"战神",
            "qqwz_战神伤害_info":"",
            "qqwz_战神绝境":"战神",
            "qqwz_战神绝境_info":"你受到的伤害至多为1<br>你始终跳过弃牌阶段",
            "qqwz_战神免致死":"战神",
            "qqwz_战神免致死_info":"",
            "qqwz_无前":"无前",
            "qqwz_无前_info":"锁定技.你造成伤害后可以获得1张决斗，你使用决斗造成伤害70%令其死亡，一名角色获得牌时你60%摸一张牌，回合开始阶段你增加x点护甲(x=你装备区里的牌数)当一名其他角色受到伤害时你的体力+1",
            "qqwz_无前2":"无前",
            "qqwz_无前2_info":"你使用的杀均结算两次，你使用杀无次数限制",
            "qqwz_无前3":"无前",
            "qqwz_无前3_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_无前4":"无前",
            "qqwz_无前4_info":"日轮啊，化作甲胄，游戏开始前，你获得∞点护甲，你的体力不会流失，体力上限不会被扣除，你不会被即死",
            "qqwz_无前5":"无前",
            "qqwz_无前5_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_战神无视防具":"战神",
            "qqwz_战神无视防具_info":"",
            "qqwz_进击":"进击",
            "qqwz_进击_info":"每当你使用【杀】对一名角色造成伤害后，你可以弃置该角色装备区里的一张牌，若此牌是坐骑牌，你于此牌置入弃牌堆时获得之。你的出牌阶段，你计算与其他角色距离始终为1，且使用杀可以额外指定6个目标",
            "qqwz_进击2":"进击",
            "qqwz_进击2_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_进击3":"进击",
            "qqwz_进击3_info":"",
            "qqwz_白马":"白马",
            "qqwz_白马_info":"锁定技，只要你的体力值大于6点，你的进攻距离+2；只要你的体力值为4点或更低，你的防御距离+3，回合结束，直到你的回合开始你不能成为他们使用卡牌的目标且其他角色每使用1张装备牌你可以摸2张牌",
            "qqwz_白马2":"白马",
            "qqwz_白马2_info":"",
            "qqwz_英雄":"英雄",
            "qqwz_英雄_info":"你的准备阶段开始时，场上的吴国角色摸2张牌，你的结束阶段，全场魏国势受到2点神圣火焰伤害，当你被翻面时，全场群雄势力翻面",
            "qqwz_英雄2":"英雄",
            "qqwz_英雄2_info":"准备阶段，场上的吴国角色摸一张牌",
            "qqwz_英雄3":"英雄",
            "qqwz_英雄3_info":"准备阶段，场上的吴国角色摸一张牌",
            "qqwz_急援":"急援",
            "qqwz_急援_info":"主公技，锁定技，濒死阶段，吴势力角色对你使用的[桃]额外回复2点体力并你摸2张牌，当你受到伤害时若此伤害来源是吴势力则取消本次伤害，改为回复2点体力摸1张牌",
            "qqwz_急援2":"急援",
            "qqwz_急援2_info":"主公技，锁定技，濒死阶段，吴势力角色对你使用的[桃]额外回复一点体力",
            "qqwz_权衡":"权衡",
            "qqwz_权衡_info":"出牌阶段，你可以弃置任意张牌并摸等量X2的牌，每回合限3次你的手牌上限=你当前的体力上限",
            "qqwz_权衡2":"权衡",
            "qqwz_权衡2_info":"锁定技，摸牌阶段摸牌时，你额外摸一张牌；你的手牌上限不会因体力值的减少而减少。",
            "qqwz_踏浪":"踏浪",
            "qqwz_踏浪_info":"你可以将一张牌当[过河拆桥]使用，你不能被过河拆桥和乐不思蜀选做目标，你受到伤害时若手牌不等于0则取消本次伤害，你造成伤害时若其手牌=0则其流失3点体力",
            "qqwz_踏浪2":"踏浪",
            "qqwz_踏浪2_info":"锁定技，你不能成为[顺手牵羊]和[乐不思蜀]的目标",
            "qqwz_踏浪3":"踏浪",
            "qqwz_踏浪3_info":"你使用的基本牌均结算两次<br>75%概率防止你流失体力或受到伤害",
            "qqwz_踏浪4":"踏浪",
            "qqwz_踏浪4_info":"",
            "qqwz_揣测":"揣测",
            "qqwz_揣测_info":"出牌阶段，你可以令1名角色选择一种花色并展示你的一张手牌，若选择的花色与展示的不同，该角色受到来自你的2点神圣伤害。结算结束后该角色获得展示的牌。每阶段限3次",
            "qqwz_焦凤":"焦凤",
            "qqwz_焦凤_info":"你可以将一张红色的手牌当[乐不思蜀]使用，锁定技，每当你使用或打出一张红色牌，你摸一张牌然后你的手牌上限便+1，直到你的回合结束",
            "qqwz_焦凤2":"焦凤",
            "qqwz_焦凤2_info":"锁定技，每当你使用或打出一张红色牌，你的手牌上限便+1，直到你的回合结束",
            "qqwz_流年":"流年",
            "qqwz_流年_info":"你不能成为【杀】和【乐不思蜀】的目标，当你受到伤害后，你可以弃置一张牌回复1点体力",
            "qqwz_鸳鸯":"鸳鸯",
            "qqwz_鸳鸯_info":"出牌阶段，你可以弃置1张牌并选择1名已经受伤的男性角色，你回复1点体力且本回合可以多使用2张杀，其回复2点体力并增加1点体力上限摸2张牌，每阶段限一次",
            "qqwz_影剑2":"影剑",
            "qqwz_影剑2_info":"锁定技，每当一名其他角色使用一张基本牌或锦囊牌，你获得一张与之同名的牌",
            "qqwz_影剑":"影剑",
            "qqwz_影剑_info":"每当你失去一张装备牌，可以摸两张牌，其他角色使用装备牌时你可以随机将一件装备牌置于你的装备区，你可以无限装备武器牌",
            "qqwz_影剑3":"影剑",
            "qqwz_影剑3_info":"",
            "qqwz_鸳鸯2":"鸳鸯",
            "qqwz_鸳鸯2_info":"",
            "qqwz_绿荫":"绿荫",
            "qqwz_绿荫_info":"出牌阶段，你可以将你的任意一张♥或♦手牌当【无中生有】使用。每回合限3次",
            "qqwz_花落":"花落",
            "qqwz_花落_info":"当你受到伤害时，本次伤害无效并反弹目标本次伤害的神圣伤害，你的黑桃牌均视为红桃牌",
            "qqwz_花落2":"花落",
            "qqwz_花落2_info":"锁定技，你的黑桃牌均视为红桃",
            "qqwz_铁壁":"铁壁",
            "qqwz_铁壁_info":"每当一名角色的手牌于回合外被弃置时，你可以受到1点伤害，然后该角色摸3张牌你摸一张牌。",
            "qqwz_冷血":"冷血",
            "qqwz_冷血_info":"锁定技,当你进入濒死阶段时70%回复全部体力",
            "qqwz_奋命":"奋命",
            "qqwz_奋命_info":"当一名角色受到伤害时若其是吴王光耀则取消伤害，然后你受到2点伤害",
            "qqwz_烈士":"烈士",
            "qqwz_烈士_info":"出牌阶段，你可以和一名角色拼点，若你赢，你获得以下技能直到回合结束：攻击范围无限；可额外使用一张【杀】；使用【杀】时可额外指定1~7个目标，若你没赢，你摸2张牌。每回合限一次。",
            "qqwz_烈士2":"烈士",
            "qqwz_烈士2_info":"",
            "qqwz_酣战":"酣战",
            "qqwz_酣战_info":"你造成伤害时，取消本次伤害令其失去1点体力上限和1点体力",
            "qqwz_睥睨":"睥睨",
            "qqwz_睥睨_info":"回合开始阶段你随机召唤一名东吴虎将然后你失去1点体力上限,回合结束阶段你随机召唤一名东吴英才然后你失去此技能并失去1点体力上限",
            "qqwz_魂佑":"魂佑",
            "qqwz_魂佑_info":"你的回合结束阶段，场上的吴国角色摸2张牌,魏国角色受到2点伤害",
            "qqwz_虎踞":"虎踞",
            "qqwz_虎踞_info":"摸牌阶段，你可以额外摸2张牌，你计算与其他角色距离始终-2",
            "qqwz_军霸2":"军霸",
            "qqwz_军霸2_info":"你受到的伤害始终为1，你不能被延迟类锦囊牌选中，你始终跳过弃牌阶段",
            "qqwz_军霸3":"军霸",
            "qqwz_军霸3_info":"",
            "qqwz_转日":"转日",
            "qqwz_转日_info":"每当你使用（指定目标后）或被使用（成为目标后）一张【决斗】或【杀】时，你可以摸一张牌回复1点体力。当你受到决斗造成的伤害时取消之并摸一张牌",
            "qqwz_转日2":"转日",
            "qqwz_转日2_info":"当你用杀造成伤害后，其死亡",
            "qqwz_卧虎":"卧虎",
            "qqwz_卧虎_info":"觉醒技，准备阶段，若你的体力不等于你的手牌，你须流失3点体力，并永久获得技能“虎踞”和“庇佑”。",
            "qqwz_庇佑":"庇佑",
            "qqwz_庇佑_info":"准备阶段开始时，若你已受伤，你可令1名其他角色执行一项：摸X张牌增加X点护甲，然后弃置一张牌；或受到X点伤害，然后弃置X张牌（X为你已损失的体力值，若你装备区里牌的数量不小于你的体力值，则X改为你的体力上限）",
            "qqwz_联盟":"联盟",
            "qqwz_联盟_info":"出牌阶段，你可以令一名角色获得你的全部手牌，然后你摸2张牌，每回合1次，回合结束你可以摸3张牌",
            "qqwz_联盟2":"联盟",
            "qqwz_联盟2_info":"结束阶段，你可以摸一张牌",
            "qqwz_人杰":"人杰",
            "qqwz_人杰_info":"锁定技，你的回合内，其他角色的手牌对你可见；每当你造成或受到伤害时，你可以置换任意两名角色的手牌",
            "qqwz_人杰2":"人杰",
            "qqwz_人杰2_info":"",
            "qqwz_施财":"施财",
            "qqwz_施财_info":"摸牌阶段你可以额外摸2张牌并回复1点体力,然后全体武将摸2张牌",
            "qqwz_明谏":"明谏",
            "qqwz_明谏_info":"出牌阶段，你可以将你手牌中的一张装备牌置于一名其他角色装备区里，然后你摸2张牌并回复1点体力。(其可以无限装备)",
            "qqwz_暗谏":"暗谏",
            "qqwz_暗谏_info":"",
            "qqwz_修政":"修政",
            "qqwz_修政_info":"其他角色的弃牌阶段结束时，你可将其弃置的一张牌返回其手牌，然后获得其弃置的其它牌,被动效果:你没有装备区",
            "qqwz_魂佑2":"魂佑",
            "qqwz_魂佑2_info":"准备阶段，场上的吴国角色摸一张牌",
            "qqwz_芙蓉":"芙蓉",
            "qqwz_芙蓉_info":"弃牌阶段开始时，你可以将一张与你本回合使用的牌颜色均不同的手牌置于武将牌上：若你有至少2张“芙蓉”牌，你移去“芙蓉”牌并选择一名男性角色，该角色受到4点神圣伤害并弃置其装备区的所有牌",
            "qqwz_沉鱼":"沉鱼",
            "qqwz_沉鱼_info":"回合结束阶段获得技能“花落”和“流年”直到你的回合开始。",
            "qqwz_狂傲":"狂傲",
            "qqwz_狂傲_info":"当你于回合外需要使用或打出一张基本牌时，你可以观看牌堆顶的十张牌。若你观看的牌中有此牌，你可以使用打出之。",
            "qqwz_杀令":"杀令",
            "qqwz_杀令_info":"你可以将基本牌当作任意基本牌使用或打出",
            "qqwz_杀令2":"杀令",
            "qqwz_杀令2_info":"",
            "qqwz_举国":"举国",
            "qqwz_举国_info":"出牌阶段，你可以弃置1张牌对你攻击范围内的一名其他角色造成1点伤害。每回合限5次",
            "qqwz_合纵":"合纵",
            "qqwz_合纵_info":"摸牌阶段摸牌时，你可以少摸一张牌，然后指定至多三名其他角色各摸一张牌。",
            "qqwz_连横":"连横",
            "qqwz_连横_info":"一名角色的判定牌生效前，你可令其观看你的手牌。若如此做，该角色选择你的一张牌，令你打出此牌代替之然后你可以摸2张牌。",
            "qqwz_料敌":"料敌",
            "qqwz_料敌_info":"每当你因使用、打出或弃置而失去一张牌时，你可以摸一张牌回复2点体力。",
            "qqwz_致死":"致死",
            "qqwz_致死_info":"锁定技，准备阶段，你选择一项：1.移去“引敌”牌，将手牌补至体力上限数；2.将“引敌”牌交给一名体力值不大于你的其他角色，其回复3点体力，摸等量的牌",
            "qqwz_引敌":"引敌",
            "qqwz_引敌_info":"结束阶段开始时，你可以将至少一张牌置于武将牌上",
            "qqwz_冷兵":"冷兵",
            "qqwz_冷兵_info":"你使用【杀】可以多选择1名距离为1的角色为目标，触发此效果你可以摸2张牌",
            "qqwz_迅疾":"迅疾",
            "qqwz_迅疾_info":"出牌阶段限一次，你可以弃置一张牌并选择一名其他角色，然后本回合你计算与其的距离视为1然后其失去1点体力上限",
            "qqwz_迅疾2":"迅疾",
            "qqwz_迅疾2_info":"",
            "qqwz_年华":"年华",
            "qqwz_年华_info":"一名其他角色的出牌阶段开始时，若你不在其攻击范围内，你可以令该角色的锦囊牌均视为【毒】，直到该角色以此法使用了一张【毒】或回合结束。若如此做，则直到回合结束，视为你在其攻击范围内,然后你回复1点体力",
            "qqwz_朝露":"朝露",
            "qqwz_朝露_info":"出牌阶段限一次，你可以弃置一张基本牌，然后选择一项：弃置场上一张武器牌，然后你回复2点体力并获得其弃置的武器牌；或将场上的一张防具牌移动到你的装备区里（可替换原防具）",
            "qqwz_残戮":"残戮",
            "qqwz_残戮_info":"摸牌阶段开始时，你可以放弃摸牌，改为摸x张牌回复x点体力（x为已受伤的角色数量)",
            "qqwz_血仇":"血仇",
            "qqwz_血仇_info":"当你受到伤害时，若你没有手牌，则此伤害=0",
            "qqwz_丧命":"丧命",
            "qqwz_丧命_info":"出牌阶段限1次，你可以展示所有手牌，若黑色牌不少于红色牌，则视为你使用了一张【桃】",
            "qqwz_凌风":"凌风",
            "qqwz_凌风_info":"当你失去牌时,你可以依次弃置一至两名其他角色的共计两张牌。每回合限5次",
            "qqwz_御风":"御风",
            "qqwz_御风_info":"每当你失去一次装备区里的牌时，你可以执行下列两项中的一项：1.视为对任意一名其他角色使用一张【杀】（此【杀】不计入每回合的使用限制）；2.对与你距离1以内的一名其他角色造成2点伤害",
            "qqwz_携手":"携手",
            "qqwz_携手_info":"出牌阶段，你可以选择两名角色，交换他们装备区里的所有牌。以此法交换的装备数差不能超过X(X为你当前的体力上限)。每回合限2次。",
            "qqwz_招亲":"招亲",
            "qqwz_招亲_info":"当有角色进入濒死状态时，你可以展示该角色的一张手牌：若此牌不为食物牌，则该角色弃掉这张牌并回复全部体力。",
            "qqwz_镇军":"镇军",
            "qqwz_镇军_info":"当你于出牌阶段内使用【杀】指定一个目标后，你可以将其至多X张牌扣置于该角色的武将牌旁（X为其体力值*2）。若如此做，你本回合造成伤害时若其没有手牌则受到伤害+2",
            "qqwz_镇军血":"镇军",
            "qqwz_镇军血_info":"",
            "qqwz_定心":"定心",
            "qqwz_定心_info":"出牌阶段限2次，你可以选择两名手牌数不同的其他角色，令其中手牌多的角色将1张手牌交给手牌少的角色，然后若这两名角色手牌数不相等，你摸2张牌或回复3点体力",
            "qqwz_魂忆":"魂忆",
            "qqwz_魂忆_info":"你死亡时，可以令一名其他角色（杀死你的角色除外）摸5张牌，然后令其回复全部体力。",
            "qqwz_佳酿":"佳酿",
            "qqwz_佳酿_info":"结束阶段开始时，若你拥有手牌，你可以将至少一张手牌置于你的武将牌上，称为“佳酿”。当一名角色处于濒死状态时，你可以移去一张“佳酿”，视为该角色使用一张【酒】,当你移除佳酿时你回复2点体力",
            "qqwz_佳酿2":"佳酿",
            "qqwz_佳酿2_info":"",
            "qqwz_烈火":"烈火",
            "qqwz_烈火_info":"你受到伤害后对其反弹2点神圣火焰伤害，你免疫受到的火焰伤害",
            "qqwz_烈火2":"烈火",
            "qqwz_烈火2_info":"你可以立即获得对你造成伤害的牌",
            "qqwz_弓彰":"弓彰",
            "qqwz_弓彰_info":"出牌阶段，你可以弃置一张牌，令你的攻击范围无限且出杀不能被闪抵消，直到回合结束，然后若你以此法弃置的牌为装备牌，你可以弃置一名其他角色的2张牌然后你摸2张牌。每回合限一次。",
            "qqwz_弓彰2":"弓彰",
            "qqwz_弓彰2_info":"",
            "qqwz_直入":"直入",
            "qqwz_直入_info":"限定技，出牌阶段，你可以选择一名角色，令攻击范围内含有该角色的所有角色各选择一项：1.弃置一张武器牌；2.令其摸2张牌回复1点体力。",
            "qqwz_毒箭":"毒箭",
            "qqwz_毒箭_info":"当你对目标角色造成伤害时，若你不在其攻击范围内，则此伤害+2",
            "qqwz_缴械":"缴械",
            "qqwz_缴械_info":"每当你受到杀造成的一次伤害后，你可以弃置一张牌，然后获得伤害来源装备区里的全部牌",
            "qqwz_亡箭":"亡箭",
            "qqwz_亡箭_info":"每当你失去一张装备牌，可以回复2点体力",
            "qqwz_擒拿":"擒拿",
            "qqwz_擒拿_info":"当一名其他角色回复体力时，你令其失去下一个回合",
            "qqwz_矜持":"矜持",
            "qqwz_矜持_info":"每当你受到一名男性角色造成的伤害时，你可以弃置一张非装备牌，令此伤害-2。",
            "qqwz_毁誉":"毁誉",
            "qqwz_毁誉_info":"出牌阶段，当你使用【杀】或普通锦囊牌指定唯一目标时，你可令可以成为此牌目标的另一名其他角色选择一项：交给你一张牌并成为此牌的使用者;或成为此牌的额外目标。",
            "qqwz_耿直":"耿直",
            "qqwz_耿直_info":"结束阶段，你可以令一名角色摸一张并展示之，若是装备牌，其立即装备之并回复一点体力，若是锦囊牌则摸3张牌，若是基本牌则增加1点体力上限，若是机关牌则受到1点伤害",
            "qqwz_妙玄":"妙玄",
            "qqwz_妙玄_info":"每当你的牌被弃置，你摸一张牌然后可以将其按任意顺序置于牌堆顶",
            "qqwz_诱饵":"诱饵",
            "qqwz_诱饵_info":"结束阶段和回合开始时，你可以令一名其他角色弃置你的一张牌，若此牌不为【杀】，你获得该角色的2张牌并回复2点体力。",
            "qqwz_秉正":"秉正",
            "qqwz_秉正_info":"结束阶段和回合开始时，你可以展示所有手牌，若均为同一颜色，则你令至多X名角色各摸1张牌(X为你的手牌数)。",
            "qqwz_慎重":"慎重",
            "qqwz_慎重_info":"出牌阶段，你可以弃置两张牌，然后摸一张牌回复1体力增加1点体力上限。",
            "qqwz_安邦":"安邦",
            "qqwz_安邦_info":"出牌阶段限2次，你可以选择一名其他角色装备区里的一张牌，令其将此牌收回手牌。然后若该角色攻击范围内的角色数因此减少，则你摸2张牌回复2点体力",
            "qqwz_相助":"相助",
            "qqwz_相助_info":"当你造成或受到伤害后，你可以选择一项：1. 弃置手牌数大于你的一名角色的一张手牌；2. 令手牌数小于你的一名角色摸2张牌",
            "qqwz_阵邀":"阵邀",
            "qqwz_阵邀_info":"每回合限一次，每当你需要使用或打出一张基本牌时，你可以与一名手牌数少于你的角色交换手牌。若如此做，视为你使用或打出了此牌",
            "qqwz_阵邀_sha":"阵邀",
            "qqwz_阵邀_sha_info":"",
            "qqwz_阵邀_tao":"阵邀",
            "qqwz_阵邀_tao_info":"",
            "qqwz_阵邀_jiu":"阵邀",
            "qqwz_阵邀_jiu_info":"",
            "qqwz_善学":"善学",
            "qqwz_善学_info":"结束阶段开始时，你可以令至多X名角色依次摸2张牌并将一张牌置于牌堆顶（X为你的体力值）；若你已失去技能“鸿宴”，则将X改为你的体力上限",
            "qqwz_鸿宴":"鸿宴",
            "qqwz_鸿宴_info":"出牌阶段限一次，你可以令一名有牌的其他角色选择一项：令你获得其装备区里所有的牌，然后你失去技能“鸿宴”，直到游戏结束；或弃置3张牌",
            "qqwz_王召":"王召",
            "qqwz_王召_info":"主公技，锁定技，你距离为1的角色视为在其他吴势力角色的攻击范围内",
            "qqwz_王召2":"王召",
            "qqwz_王召2_info":"",
            "qqwz_善民":"善民",
            "qqwz_善民_info":"出牌阶段限一次，你可以选择一名有牌的其他角色，该角色将其一至九张牌置于你的武将牌上。若如此做，你的下准备阶段，你获得武将牌上的所有牌，然后其摸等量的牌",
            "qqwz_奢豪":"奢豪",
            "qqwz_奢豪_info":"出牌阶段，若你的手牌上限大于0，你可以摸2张牌，然后你本回合的手牌上限-1。结束阶段开始时，若你没有手牌，则你可以横置至多X名角色的武将牌（X为你的体力值上限）然后你可以摸4张牌",
            "qqwz_奢豪2":"奢豪",
            "qqwz_奢豪2_info":"",
            "qqwz_奢豪3":"奢豪",
            "qqwz_奢豪3_info":"",
            "qqwz_罪责":"罪责",
            "qqwz_罪责_info":"锁定技，当你受到火焰伤害时，若你处于“连环状态”且你是传导伤害的起点，则此伤害+2",
            "qqwz_掌控":"掌控",
            "qqwz_掌控_info":"结束阶段，你获得其他角色本回合失去的牌",
            "qqwz_掌控2":"掌控",
            "qqwz_掌控2_info":"",
            "qqwz_伺机":"伺机",
            "qqwz_伺机_info":"你每次,打出或失去牌时，全场的吴国武将摸一张牌，全场魏国武将失去1点体力,全场蜀国武将回复1点体力,全场群雄武将失去1点体力上限，你始终跳过弃牌阶段",
            "qqwz_白衣":"白衣",
            "qqwz_白衣_info":"觉醒技，准备阶段开始时，若你的手牌数比体力值多3（人数不少于7时改为2）或更多，你须减2点体力上限回复全部体力并获得技能【掌控】",
            "qqwz_伺机2":"伺机",
            "qqwz_伺机2_info":"你始终跳过弃牌阶段",
            "qqwz_锦帆":"锦帆",
            "qqwz_锦帆_info":"当一名角色使用的锦囊牌指定了至少两名角色为目标时，你可以令此牌对其中任意名角色无效。你不能被延迟类锦囊选中",
            "qqwz_合围":"合围",
            "qqwz_合围_info":"你造成非神圣伤害时若其手牌=0则其死亡，你使用或打出基本牌50%额外结算1次，出牌阶段，你可以弃置2张牌视为对全体造成1点神圣伤害然后回复全部体力(限一次)",
            "qqwz_合围2":"合围",
            "qqwz_合围2_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "qqwz_合围3":"合围",
            "qqwz_合围3_info":"出牌阶段，你可以弃置两张牌，然后摸一张牌。",
            "qqwz_霸业":"霸业",
            "qqwz_霸业_info":"锁定技，摸牌阶段摸牌时，你额外摸3张牌；你的手牌上限不会因体力值的减少而减少。你造成伤害时，若场上角色装备区内有防具牌，令该名角色也受到等量伤害。",
            "qqwz_霸业2":"霸业",
            "qqwz_霸业2_info":"",
            "qqwz_控局":"控局",
            "qqwz_控局_info":"出牌阶段限2次，你可以展示一张手牌并将此牌交给一名其他角色。然后该角色选择一项：展示其手牌并弃置所有与此牌花色相同的牌，或失去2点体力。",
            "qqwz_谋策":"谋策",
            "qqwz_谋策_info":"每当你于出牌阶段外成为其他角色使用牌的目标后，若你的体力值不为1，你可以立即使用1张牌，其他角色回合结束阶段须交给你一张牌，然后使用一张锦囊牌，或受到2点神圣伤害。你不能被延迟类锦囊选中",
            "qqwz_谋策2":"谋策",
            "qqwz_谋策2_info":"其他角色回合结束阶段须交给你一张牌，然后使用一张锦囊牌，或受到2点神圣伤害。",
            "qqwz_谋策3":"谋策",
            "qqwz_谋策3_info":"锁定技，你不能成为延时类锦囊的目标",
            "qqwz_诈曹":"诈曹",
            "qqwz_诈曹_info":"锁定技 每当你失去体力后，你摸三张牌增加1点体力上限。然后若此时是你的出牌阶段，则直到回合结束，你使用【杀】无距离限制且不能被【闪】响应，你可以额外使用4张【杀】。",
            "qqwz_诈曹2":"诈曹",
            "qqwz_诈曹2_info":"",
            "qqwz_牺牲":"牺牲",
            "qqwz_牺牲_info":"出牌阶段限一次，你可以弃置一张牌，然后失去2点体力。当你受到体力流失伤害后80%回复1点体力",
            "qqwz_牺牲2":"牺牲",
            "qqwz_牺牲2_info":"你使用的基本牌均结算两次<br>75%概率防止你流失体力或受到伤害",
            "qqwz_赤焰":"赤焰",
            "qqwz_赤焰_info":"每当你造成伤害时，你可以对全场造成1点神圣火焰伤害，你受到伤害后反弹其1点神圣火焰伤害，你受到火焰伤害均视为回复体力",
            "qqwz_赤焰2":"赤焰",
            "qqwz_赤焰2_info":"你可以对全场，造成1点体力流失伤害，每回合10次",
            "qqwz_赤焰3":"赤焰",
            "qqwz_赤焰3_info":"锁定技，你防止即将受到的火焰伤害，改为回复1点体力",
            "qqwz_雅逊":"雅逊",
            "qqwz_雅逊_info":"每当一张延时类锦囊牌或其他角色使用的普通锦囊牌生效时，若你是此牌的唯一目标，你可以将所有手牌置于你的武将牌上，若如此做，此回合结束时，你获得你武将牌上的所有牌。当你失去最后的手牌时，你可以令至多X名角色各摸2张牌（X为你此次失去的手牌数*2）。",
            "qqwz_雅逊2":"雅逊",
            "qqwz_雅逊2_info":"",
            "qqwz_雅逊3":"雅逊",
            "qqwz_雅逊3_info":"当你失去最后的手牌时，你可以令至多X名角色各摸一张牌（X为你此次失去的手牌数）。",
            "qqwz_妙心":"妙心",
            "qqwz_妙心_info":"出牌阶段,你可以选择一项：将一张方片花色牌当做【乐不思蜀】使用；或弃置一张方片花色牌并弃置场上的一张【乐不思蜀】。选择完成后，你摸一张牌。",
            "qqwz_娇啸":"娇啸",
            "qqwz_娇啸_info":"当你成为[杀]的目标时你摸一张牌然后可以弃置一张牌将其转移给一名其他角色，此角色不能是[杀]的使用者，你计算与其他角色距离为1",
            "qqwz天韵":"天韵",
            "qqwz天韵_info":"限定技，当你首次进入濒死状态时，你将体力恢复至上限，并获得技能\"飓风\"、\"星移\"",
            "qqwz星移":"星移",
            "qqwz星移_info":"当你成为[杀]的目标时，可以弃置一张牌将其转移给与你计算距离不大于2的一名其他角色，此角色不能是[杀]的使用者",
            "qqwz飓风":"飓风",
            "qqwz飓风_info":"你的手牌数始终不小于3",
            "qqwz慰安":"慰安",
            "qqwz慰安_info":"锁定技，当任意一名角色使用【杀】对你造成伤害时，该角色回复1点体力或翻面。",
            "qqwz_英才":"英才",
            "qqwz_英才_info":"摸牌阶段，你可以额外摸X张牌(X=你当前的体力上限)然后你流失1点体力，你计算与其其他角色距离始终-3",
            "qqwz乱敌":"乱敌",
            "qqwz乱敌_info":"出牌阶段，你可以弃一张牌，视为一名角色对另一名角色使用一张[决斗],然后你可以增加1点体力上限，每阶段限一次,被动效果:你使用杀不能被闪抵消但会减少你的1点体力上限",
            "qqwz乱敌2":"乱敌",
            "qqwz乱敌2_info":"",
            "qqwz映花":"映花",
            "qqwz映花_info":"每当一名女性角色受到伤害后,你流失1点体力,每当一名男性角色受伤后,你回复1点体力",
            "qqwz炎焚":"炎焚",
            "qqwz炎焚_info":"每当你失去最后一张手牌你流失1点体力,你每使用杀造成伤害后可以增加1点体力上限",
            "qqwz替汉":"替汉",
            "qqwz替汉_info":"当你回复体力后你可以摸一张牌，你受到伤害后弃置X张牌(X=你当前手牌数的50%,向下取整),回合结束时若你的手牌大于或等于6则你可以令随机一名角色翻面",
            "qqwz王权":"王权",
            "qqwz王权_info":"其他非群雄角色回合开始时你令其翻面,当一名群雄角色濒死时你令其复活回复2点体力摸2张牌,然后你流失3点体力(每回合限1次)",
            "qqwz韧力":"韧力",
            "qqwz韧力_info":"你受到的伤害若大于1则-1,当你受到红色杀或酒杀造成的伤害时,你流失2点体力",
            "qqwz女权":"女权",
            "qqwz女权_info":"你的回合开始场上所有女性角色回复1点体力,摸2张牌,女性角色无法对你造成伤害",
            "qqwz鸠酒":"鸠酒",
            "qqwz鸠酒_info":"当你成为其他角色使用牌的目标时40%令其流失1点体力然后你摸1张牌，你流失体力后弃置2张牌",
            "qqwz祸言":"祸言",
            "qqwz祸言_info":"其他角色获得牌时,若其手牌大于你则你回复1点体力,你的回合结束时,若你手牌大于或等于5则你流失2点体力",
            "qqwz惩恶":"惩恶",
            "qqwz惩恶_info":"每当其他友方角色受到伤害时,若有伤害来源你流失1点体力对其造成等量的伤害,每当其他友方角色造成伤害后你回复1点体力",
            "qqwz惑敌":"惑敌",
            "qqwz惑敌_info":"当友方成为杀得目标时,你令其和你一起摸一张牌,令全体友方回复1点体力",
            "qqwz胡笳":"胡笳",
            "qqwz胡笳_info":"觉醒技,当其他友方角色即将死亡之前,你令其复活恢复X点体力,然后你获得技能'思乡'失去技能'胡笳'(X=你当前的体力)",
            "qqwz思乡":"思乡",
            "qqwz思乡_info":"你的手牌上限和摸牌数量+X(X=场上群雄势力存活角色数量)",
            "qqwz优民":"优民",
            "qqwz优民_info":"全场友方摸牌+1，你的回合外，每当你因使用、打出或弃置而失去一张牌时，你可以令全场友方回复1点体力",
            "qqwz破阵":"破阵",
            "qqwz破阵_info":"每当你造成伤害后若受伤目标有装备牌,你回复1点体力令受伤角色弃置2张装备牌(若不足2张则全弃)",
            "qqws诏辅":"诏辅",
            "qqws诏辅_info":"你使用的非延迟锦囊牌不能被无懈可击相应并且不限制距离",
            "qqwz兵败":"兵败",
            "qqwz兵败_info":"回合结束阶段,若你本回合造成的伤害小于4,则你失去1点体力上限,回复1点体力摸2张牌",
            "qqwz忠贤":"忠贤",
            "qqwz忠贤_info":"回合开始阶段，你可以观看牌堆顶X张牌,然后令全场友方摸X张牌（X为你已损失体力）",
            "qqwz焚舰":"焚舰",
            "qqwz焚舰_info":"你造成的非火焰伤害后附加1火焰伤害,然后你流失1点体力,你受到火焰伤害后流失1点体力",
            "qqwz国母":"国母",
            "qqwz国母_info":"友方全体摸牌+1,回复+1",
            "qqwz鞬骑":"鞬骑",
            "qqwz鞬骑_info":"每当你使用或打出杀后,你回复1点体力.当你造成伤害时若其角色没有装备防御马则此伤害+2,你计算与其他角色距离始终-2",
            "qqwz雄狮":"雄狮",
            "qqwz雄狮_info":"你对魏国武将造成的伤害+1,你无法被翻面，回合结束阶段,若你的手牌大于或等于5则你流失2点体力增加1点体力上限",
            "qqwz鬼神":"鬼神",
            "qqwz鬼神_info":"全场友方使用杀指定目标不可被闪抵消,全场友方受到伤害最多为1,全体友方造成伤害后会回复等量的体力",
            "qqwz太平":"太平",
            "qqwz太平_info":"回合结束阶段,若你没有手牌则令全体友方回复1点体力并令全场敌方武将翻面",
            "qqwz玄雷":"玄雷",
            "qqwz玄雷_info":"你的黑色牌皆视为闪，每当你在回合外失去或使用一张黑色牌时你回复1点体力,选择一名角色对其造成2点神圣雷电伤害",
            "qqwz仙符":"仙符",
            "qqwz仙符_info":"你可以扣置一张手牌当一张基本牌或非延时类锦囊牌使用或打出。其他角色依次选择是否质疑。一旦有其他角色质疑则翻开此牌：若为假则此牌作废，若为真，则质疑角色获得技能“咒术”",
            "qqwz咒术":"咒术",
            "qqwz咒术_info":"若你体力值为1则你失去全部其他技能,你无法质疑仙符,无法回复体力并且手牌上限-2",
            "qqwz飞熊":"飞熊",
            "qqwz飞熊_info":"你免疫所有属性伤害,回合结束阶段,若你的手牌不小于4则你回复2点体力",
            "qqwz骁勇":"骁勇",
            "qqwz骁勇_info":"你使用或打出杀额外执行一次效果，当你受到伤害后你摸一张牌,你回复体力时你获得一张装备牌并流失2点体力",
            "qqwz百战":"百战",
            "qqwz百战_info":"延迟类锦囊无法对你使用,你受到伤害时40%反弹伤害来源等量伤害并令友方全体获得1点护甲",
            "qqwz孤鹫":"孤鹫",
            "qqwz孤鹫_info":"[锁定技]你没有装备区,你的攻击距离,防御距离,手牌上限+x(x=你当前的体力)",
            "qqwz祸乱":"祸乱",
            "qqwz祸乱_info":"游戏开始阶段,若你不为主公则你将你的身份强制改为内奸并摸2张牌,群雄武将对你造成的伤害+1,你造成的伤害始终+1",
            "qqwz逆击":"逆击",
            "qqwz逆击_info":"当你的体力小于或等于3时,你立刻进行一个额外回合,每当一名其他角色回复体力或受到伤害后,你可以立刻使用一张杀",
            "qqwz月魂":"月魂",
            "qqwz月魂_info":"你的回合开始时你进行一次判定[若结果为红色则你回复1点体力摸一张牌,若结果为黑色则你令全场敌方男性武将受到2点伤害],回合结束阶段你可以获得任意一名男性角色一张手牌",
            "qqwz憾世":"憾世",
            "qqwz憾世_info":"出牌阶段你可以选择弃一张牌，并选择两名角色，若如此做视为其中一名角色对另一名角色使用一张【决斗】，且此【决斗】不能被【无懈可击】响应,结算后两名角色进入混乱状态;濒死阶段若你拥有手牌,则你弃置全部手牌回复体力至体力上限,然后失去1点体力上限",
            "qqwz月尘":"月尘",
            "qqwz月尘_info":"当你受到伤害后,你摸X张牌,当你对男性角色造成伤害时你令该伤害+X(X=你损失的体力)",
            "qqwz据江":"据江",
            "qqwz据江_info":"在你的回合内你免疫一切伤害,当一名敌方角色回合开始时若其手牌与你不等则你对其造成X点伤害(X=你与其手牌的差距)",
            "qqwz汉学":"汉学",
            "qqwz汉学_info":"全场友方群雄角色的摸牌阶段+1,且跳过弃牌阶段,当一名其他友方角色在回合外失去牌时你令其摸一张牌",
            "qqwz鸿德":"鸿德",
            "qqwz鸿德_info":"当你回复体力时你可以摸一张牌,当你于回合内获得牌时你令全场友方摸一张牌(每回合限2次),当你于回合外失去牌时,若你的手牌数小于四,你将手牌补至四张",
            "qqwz平反":"平反",
            "qqwz平反_info":"出牌阶段限X次,你可以令一名装备区里有牌的角色摸一张牌，然后其选择一项：1.令你弃置其装备区里的一张牌并流失1点体力；2.获得其装备区里的所有牌并令你摸2张牌，若如此做，你对其造成z点伤害（X为场上存活的反贼数,Z=你装备区里的牌数）,当你的〔杀〕造成伤害后，你可以摸一张牌并视为对被伤害目标发起〔决斗〕",
            "qqwz妖道":"妖道",
            "qqwz妖道_info":"当你受到伤害时,你可以进行一次判定,若花色与即将对你造成伤害的牌花色相同,则取消本次伤害,令伤害来源翻面，若花色不同则你回复1点体力摸一张牌;你的出牌阶段开始，你可以弃置一张牌，然后依次展示牌堆顶的牌，直到花色相同（最多5张），然后你将这些牌置于你武将上（若你的武将上已经有“咒”标记，你须弃置之），称为“咒”，每有一张“咒”，你的手牌上限+1，当你受到法术伤害时若你的咒不小于1,则你失去1张咒,取消本次伤害摸一张牌",
            "qqwz通甲":"通甲",
            "qqwz通甲_info":"当你累计使用或打出了4种不同花色的牌后，你于本回合结束后获得一个额外回合并获得技能[\"鬼道\",\"急攻\",\"渐营\",\"乱战\"]直到你的回合结束,回合结束阶段，你可以根据当前体力值补充手牌",
            "qqwz狂傲2":"狂傲",
            "qqwz狂傲2_info":"",
            "qqwz魔姬":"魔姬",
            "qqwz魔姬_info":"你的黑色牌不占用手牌上限,每当一名群雄角色摸牌后,你获得其一张牌,当你造成伤害后你令目标翻面且获得技能[黑殇](黑殇:你无法使用或打出任何黑色手牌)若其已翻面则令其流失1点体力,当你造成伤害时若其拥有技能黑殇则令其失去1点体力上限,",
            "qqwz黑殇":"黑殇",
            "qqwz黑殇_info":"你无法使用,打出和弃置黑色手牌",
            "qqwz巧智":"巧智",
            "qqwz巧智_info":"每当你使用锦囊牌造成伤害后,你获得一枚'智'标记,你造成的伤害+x,手牌上限-x(x=当前'智'标记的数量)当你受到伤害时若你的'智'标记不小于2,则失去2枚'智'标记免疫本次伤害",
            "qqwz谄辞":"谄辞",
            "qqwz谄辞_info":"当你首次进入濒死状态时,若你的身份为忠臣,则你将体力回复置体力上限,令主公和你一同失去1点体力上限,然后你失去技能'谄辞'获得技能'谋翼'",
            "qqwz谋翼":"谋翼",
            "qqwz谋翼_info":"但你造成伤害和受伤时,你可以将场上任意一张牌移至相应位置;当一名其他角色的卡牌指定你为唯一目标并且该卡牌结算之后，若你没有因为该卡牌而受到伤害，你可以弃置一张牌，指定一名其他角色，视为你对其使用了一张相同的卡牌；若你因为此卡牌而受到伤害，则无需弃牌",
            "qqwz谋翼1":"谋翼",
            "qqwz谋翼1_info":"",
            "qqwz祸常":"祸常",
            "qqwz祸常_info":"出牌阶段,你可以将1张黑色的手牌置于1名在你攻击范围内的其他角色的武将牌上。到该角色回合开始阶段前进行判定，若为黑色，则跳过该角色的回合并由你进行一个额外的回合。判定之后将该牌置入弃牌堆",
            "qqwz凝烈":"凝烈",
            "qqwz凝烈_info":"每当你受到伤害时，可弃置一名角色的X张牌（X=本次伤害,且最少为1）,你不会被翻面和进入混乱状态且无法成为延迟类锦囊的目标",
            "qqwz医国":"医国",
            "qqwz医国_info":"当一名敌方角色回复体力时,你进行一次判定,[红桃:你摸一张牌,令该回复量-1,黑桃:你令其终止本次回复并令其翻面,梅花:你令其流失1点体力,方片:全场友方摸一张牌],你免疫一切除真实伤害外的物理伤害",
            "qqwz刮骨":"刮骨",
            "qqwz刮骨_info":"出牌阶段,你可以弃置一张牌,令一名损失体力的角色回复体力至体力上限,当其他友方角色在回合外失去牌时,你令其回复1点体力",
            "qqwz豪贵":"豪贵",
            "qqwz豪贵_info":"你无法被翻面,若其他角色使用的【万箭齐发】在结算完时进入弃牌堆，你立即获得之并回复1点体力",
            "qqwz割据":"割据",
            "qqwz割据_info":"当你造成伤害时,你进行一次判定,若不为红桃,伤害加一,否则你回复1点体力,每当你使用或打出一张万箭齐发你获得一枚'据'标记,当你受到伤害时若你拥有'据'此伤害-x(x=当前‘据’的数量)当你使用除万箭齐发之外的牌造成伤害后你失去一枚'据'",
            "qqwz圣名":"圣名",
            "qqwz圣名_info":"当一名其他角色造成伤害时，该角色和你各摸一张牌；当你造成伤害时，你摸一张牌,你的防御距离+2",
            "qqwz释罪":"释罪",
            "qqwz释罪_info":"结束阶段，你可以选择一名角色令其摸2张牌。直到你的下回合开始，该角色下一次受到超过1点的伤害时，防止此伤害，然后你跳过下个回合的摸牌阶段",
            "qqwz诵书":"诵书",
            "qqwz诵书_info":"出牌阶段开始时，你可以将所有手牌交给一名其他角色，然后该角色亮出任意数量的手牌（至少一张），令你选择一项：1.获得其亮出的手牌；2.获得其未亮出的手牌,每当你使用或打出一张基本牌你摸一张牌",
            "qqwz请命":"请命",
            "qqwz请命_info":"当其他友方角色的回合开始时,若其已受伤,你可以令其回复体力至体力上限并摸3张牌,如此照做你进行一个额外回合,你无法被横置",
            "qqwz无责":"无责",
            "qqwz无责_info":"你无法流失体力,当其他友方角色即将受到伤害时,你令其取消本次伤害,自己受到1点真实伤害并弃置1张牌",
            "qqwz霓凰":"霓凰",
            "qqwz霓凰_info":"当你获得牌后,你进行一次判定,若本次判定牌点数大于等于你的体力值,则你回复此牌点数的体力,若小于则你增加2点护甲,你造成的伤害和进攻距离+X(X=场上存活群雄武将的数量)",
            "qqwz贤后":"贤后",
            "qqwz贤后_info":"当汉末龙裔的体力值发生变化后你令其回复1点体力,体力值小于你的武将对你造成的伤害始终-1,你的拼点点数+5,回合开始时,你的身份若不为忠臣或主公,则你将你的身份变成忠臣",
            "qqwz定卦":"定卦",
            "qqwz定卦_info":"出牌阶段开始前,你可以亮出牌顶I张牌(I=你当前的手牌数)你获得其中的锦囊牌,其他角色回合结束时你可以观看其手牌,你的判定阶段你可以打出一张牌代替之",
            "qqwz诛心":"诛心",
            "qqwz诛心_info":"一名敌方角色的结束阶段，若牌堆剩余牌数不大于你体力值的1000倍，则你可以失去2点体力上限,弃置全部手牌,回复3点体力然后依次对其使用牌堆中所有的【杀】(不超过自身体力值的9倍),然后洗牌,你造成的伤害+X(X=你当前的手牌),自身受到的伤害+1",
            "qqwz风骨":"风骨",
            "qqwz风骨_info":"你反弹受到的2倍物理伤害,反弹等量法术伤害,当一名角色使用万箭齐发时你流失1点体力,你免疫翻面,横置,混乱等负面状态",
            "qqwz仁道":"仁道",
            "qqwz仁道_info":"当你首次进入濒死阶段时,你回复X点体力失去1点体力上限,获得技能'鸿刹'(X=场上存活吴势力武将)",
            "qqwz鸿刹":"鸿刹",
            "qqwz鸿刹_info":"所有敌方角色回合结束时需额外弃置一张手牌,敌方吴势力武将受到伤害前额外受到1点伤害,吴势力武将无法对你造成伤害",
            "qqwz鳞甲":"鳞甲",
            "qqwz鳞甲_info":"你无法成为南蛮入侵,万箭齐发,决斗的目标,你受到伤害始终-3,你的回合结束时你回复5点体力",
            "qqwz荒兽":"荒兽",
            "qqwz荒兽_info":"你造成的伤害+X(X=你损失的体力),你摸牌时额外摸X张牌,你每使用一张锦囊牌你流失1点体力,当你受到属性伤害时你额外流失5点体力,其他角色使用南蛮入侵时你回复1点体力,其他角色使用万箭齐发时你摸一张牌",
            "qqwz陵营":"陵营",
            "qqwz陵营_info":"你无法成为延迟类锦囊牌的目标,当你成为红色牌的目标时你回复一点体力,当你成为黑色牌的目标时你增加1点护甲,你使用或打出杀无数量限制",
            "qqwz无绝":"无绝",
            "qqwz无绝_info":"当你失去最后一张手牌时,你将手牌补至体力上限,当你失去装备区里的牌时,你随即装备一张装备牌",
            "qqwz求策":"求策",
            "qqwz求策_info":"当你成为其他角色使用锦囊牌的目标时,你获得一张无懈可击并摸一张牌",
            "qqwz镇江":"镇江",
            "qqwz镇江_info":"当你的回合结束时你回复X点体力并翻面,当友方回合结束时你令其摸X张牌(X=全场势力数量)",
            "qqwz失远":"失远",
            "qqwz失远_info":"你的回合开始时你失去技能[固本]获得技能[济国],你的回合结束阶段,你失去技能[济国]获得技能[固本]",
            "qqwz固本":"固本",
            "qqwz固本_info":"当你翻面或流失体力后,你可以弃置一张牌回复全部体力,你每在回合外失去一张牌你摸一张牌",
            "qqwz济国":"济国",
            "qqwz济国_info":"你使用的装备牌没有效果,你受伤后全场友方回复等量体力,且你可以额外使用一张杀",
            "qqwz锐樾":"锐樾",
            "qqwz锐樾_info":"你每使用一张装备牌,你随机装备一件装备(每回合限3次),你的手牌上限,摸牌数量,使用杀的次数+x(x=你装备区的牌数)",
            "qqwz仇绝":"仇绝",
            "qqwz仇绝_info":"当敌方武将死亡时,你获得其全部技能回复其等量体力并摸其体力上限等量的手牌;当你受到伤害时你可以弃置一张牌令本次伤害+1,并令随机敌方受到本次伤害*2的伤害",
            "qqwz前尘":"前尘",
            "qqwz前尘_info":"你受到和造成的伤害+1,当你成为决斗或杀的目标时:你摸2张杀增加X点护甲或你回复1点体力摸一张闪,(x=你当前损失的体力)",
            "qqwz索舟":"索舟",
            "qqwz索舟_info":"你的回合开始时,若你处于连环状态你回复1点体力摸一张牌,你处于连环状态时免疫物理伤害且受到的属性伤害+1",
            "qqwz锋戮":"锋戮",
            "qqwz锋戮_info":"你的回合结束时你令全场敌方进入连环状态,当敌方武将受伤时若其处于连环状态其额外流失2点体力",
            "qqwz知隐":"知隐",
            "qqwz知隐_info":"你的回合结束时你翻面回复全部体力并摸3张牌进入潜行状态,若你处于翻面状态时你无法被翻面",
            "qqwz水镜":"水镜",
            "qqwz水镜_info":"你免疫一切除真实伤害外的伤害,当你进入连环状态时你增加1点体力上限随机获得一张基本牌,你无法进入混乱状态,当你使用一张基本牌后你获得一张锦囊牌",
            "qqwz明杰":"明杰",
            "qqwz明杰_info":"当其他友方角色死亡时,你令其免疫本次死亡并变身为[三分天下](共可触发2次,第二次触发时变身目标改为飞鸾翔凤),友方回合开始前你可以进行一次观星",
            "qqwz风袭":"风袭",
            "qqwz风袭_info":"每当敌方角色失去牌时你令其额外弃置一张牌,若其没有手牌则你令其失去1点体力",
            "qqwz君佑":"君佑",
            "qqwz君佑_info":"当你的体力为1时你获得副将策马扬鞭,然后你失去此技能",
            "qqwz卿月":"卿月",
            "qqwz卿月_info":"你使用或打出的红色牌额外执行一次效果,当你成为红色牌的目标时你摸一张牌",
            "qqwz岢将":"岢将",
            "qqwz岢将_info":"当你的回合结束时,若你的手牌数小于你的体力你对全场敌方武将造成1点伤害,若大于你的体力则你回复全部体力",
            "qqwz诛敌":"诛敌",
            "qqwz诛敌_info":"每当敌方武将回合结束或使用装备牌时,你令其翻面如果其已翻面则受到1点真实伤害",
            "qqwz暗予":"暗予",
            "qqwz暗予_info":"敌方角色使用或打出黑色牌后你令其流失1点体力(每回合限2次),敌方角色即将回复体力时取消其回复(每回合限1次)",
            "qqwz伏杀":"伏杀",
            "qqwz伏杀_info":"全场敌方男性无法回复体力,当敌方男性目标回合开始时你令其跳过摸牌阶段",
            "qqwz祸福":"祸福",
            "qqwz祸福_info":"每当你使用一张牌后你可以进行一次判定,若判定牌花色和使用花色相同则你摸一张牌,当你受到锦囊牌的伤害时你需弃置一张牌",
            "qqwz凰龙":"凰龙",
            "qqwz凰龙_info":"你的装备区里每有一张牌,你的手牌上限+2,摸牌上限+1,全场魏势力武将无法对你造成伤害",
            "qqwz苦读":"苦读",
            "qqwz苦读_info":"准备阶段开始时,若当前游戏轮数不小于4,你减少2点体力上限获得技能'贤辞'",
            "qqwz激溯":"激溯",
            "qqwz激溯_info":"每当你使用一张牌,你本回合的进攻距离+1,当你使用杀指定目标时若其与你的距离不大于1则令其额外受到1点伤害且无法被闪响应",
            "qqwz贤辞":"贤辞",
            "qqwz贤辞_info":"你使用或打出的牌额外执行一次效果且你会因此失去1点体力,你所造成的伤害+1",
            "qqwz肱骨":"肱骨",
            "qqwz肱骨_info":"(每回合限一次)每当你摸取不少于两张牌后,你展示摸到的牌,若这些牌类别或花色均相同,你摸X张牌,当你受到伤害前若你拥有手牌且颜色相同则本次伤害-X(X=全场势力数量)",
            "qqwz撰古":"撰古",
            "qqwz撰古_info":"当你使用黑色牌后,或你成为其他角色使用黑色牌的目标后,你可以将牌堆顶的一张牌置于武将牌上,称为'古',你每有一张'古',手牌上限+1且造成伤害+X(X=当前古的数量除以3向下取整)",
            "qqwz博通":"博通",
            "qqwz博通_info":"摸牌阶段摸牌或回合结束后,你可以用任意张牌替换等量的“古”,然后若你的“古”包含四种花色,你将所有“古”交给任意名其他角色",
            "qqwz德论":"德论",
            "qqwz德论_info":"你使用或打出的锦囊牌不可被无懈可击响应,且你无法被翻面和进入混乱状态",
            "qqwz微审":"微审",
            "qqwz微审_info":"当你造成伤害后,若你已受伤且没有手牌则你进行一个额外回合,当你成为杀得目标时你流失1点体力对目标造成1点真实伤害",
            "qqwz斥公":"斥公",
            "qqwz斥公_info":"其他友方角色出牌阶段结束时,若其体力值不等于你或其拥有手牌,你与其一起摸2张牌回复1点体力",
			},
		},'<span>千秋万载</span>');
	};
	if(lib.config.mode=='wangzhezhizhan'?lib.config['extension_扩展ol_wzzz_ytjs_disable']!=true:lib.config['extension_扩展ol_wzzz_ytjs_enable']!=false){
		var character={
            "醉玉颓山":["male","wei",6,["慷慨"],[]],
            "业火红莲":["male","wu",4,["天火","琴音","炎神"],[]],
            "白衣渡江":["male","wu",7,["白衣","圣光"],["zhu"]],
            "一统江山":["male","wei",8,["千影","归心"],["zhu"]],
            "观星唤雨":["male","shu",6,["星辰","晨雾","暴风"],[]],
            "战神金刚":["male","qun",5,["暴走","神怒","无前","邪神"],[]],
            "狂傲不羁":["male","shu",10,["fangu","善谋","勇谋"],[]],
            "魏王称帝":["male","wei",4,["放生","送葬","颂威"],["zhu"]],
            "恢拓洪业":["male","wei",4,["宏图","明主","兴衰","魏统"],["zhu"]],
            "绰约多姿":["female","wei",4,["情逝","无情"],[]],
            "烈帝后裔":["male","shu",5,["死战","北地","绝地"],["zhu"]],
            "从征四方":["male","wei",6,["变阵","伏阵","镇魂"],[]],
            "符檄擅声":["male","wei",5,["songwen","口诛"],[]],
            "猛勇精进":["male","wei",6,["突进","军御"],[]],
            "枪碎星河":["female","shu",6,["淑德","枪魂","擎龙"],[]],
            "胸中兵甲":["male","shu",6,["谣言","控蛮"],[]],
            "浴火蛮神":["female","shu",8,["象阵","巨刃","蛮神","万象"],[]],
            "明以举贤":["male","wei",5,["王佐","御虎"],[]],
            "神兵天降":["male","wei",7,["qibing","天险","积粮"],[]],
            "抬棺决死":["male","wei",6,["抬棺","决死"],[]],
            "鬼谋乱世":["male","wei",5,["怂乱","千虑","zhenlue"],[]],
            "婉娩流逸":["female","wei",6,["旧情","默书","答书","至臻"],[]],
            "挥剑惊石":["male","wei",5,["战勋","举兵"],[]],
            "泰山捧日":["male","wei",5,["伏兵","刚直","伏龙","智魏"],[]],
            "镇卫江夏":["male","wei",6,["镇守"],[]],
            "七步绝章":["male","wei",6,["落梅","妙笔"],["zhu"]],
            "十二奇策":["male","wei",6,["外愚","妙策"],[]],
            "精练策数":["male","wei",8,["权宜","起兵"],[]],
            "勇不可当":["male","wei",6,["酷法","御敌","天法","刑策"],[]],
            "清流雅望":["male","wei",5,["中正","法定"],[]],
            "下辩扬威":["male","wei",7,["驹骑","虎豹","讨敌"],[]],
            "挥毫代诏":["male","wei",6,["墨心","辅佐","越鸿","幕诏"],[]],
            "猛击劈浪":["male","wei",7,["劈浪"],[]],
            "魏武霸业":["male","wei",9,["雄才","护主"],["zhu"]],
            "辅政平乱":["male","wei",6,["料敌","谋士","逆天"],[]],
            "身先士卒":["male","wei",7,["獠牙","mashu","偷营","骁驭"],[]],
            "势如破竹":["male","wei",7,["虎痴","狂拳"],[]],
            "破虏大将":["male","wei",7,["厚兵","破虏"],[]],
            "烽火乱世":["male","shu",6,["胆略","承志"],[]],
            "挤眉弄眼":["male","shu",6,["后主","简政","愚智"],["zhu"]],
            "轻舞花烛":["female","shu",6,["助威","归吴"],[]],
            "虎将无双":["male","shu",8,["虎将"],[]],
            "白眉智士":["male","shu",6,["协睦","蛮兵","协盟"],[]],
            "一言不发":["male","shu",4,["不言","洞察"],[]],
            "老骥伏枥":["male","shu",6,["先锋","迟暮","果敢"],[]],
            "一合而斩":["male","shu",7,["潜行","mashu","斩首"],[]],
            "立嗣陷危":["male","shu",8,["危嗣"],["zhu"]],
            "大展宏图":["male","shu",7,["过目","展图"],[]],
            "持权贪贿":["male","shu",4,["祸乱","贿赂"],[]],
            "舐犊情深":["female","shu",6,["昭烈","智心"],[]],
            "断石酬志":["male","shu",7,["仁王","御驾"],["zhu"]],
            "单刀赴会":["male","shu",8,["烈武","恩断","匡汉"],[]],
            "寒光凛然":["male","shu",8,["绝尘","横枪","咫尺","沧海"],[]],
            "西凉雄狮":["male","shu",9,["西凉"/*,"骑乘"*/],[]],
            "心系君魂":["female","wei",6,["诏书","禅心","颛命","文德"],[]],
            "空城退敌":["male","shu",5,["险计","星象","空琴","敌疑"],[]],
            "一世风华":["male","wei",6,["惊天","遗策","悟法","锦计"],[]],
            "佳期若梦":["male","wei",6,["狼顾","改命","shenmou","伟略"],[]],
            "谑浪笑傲":["male","shu",7,["辩论","使臣"],[]],
            "任城威王":["male","wei",7,["驰骋","将威"],[]],
            "时之彦士":["male","wei",7,["迂回","趋向","战机"],[]],
            "决意巾帼":["female","wei",7,["玉碎","孤险","筹策","决意"],[]],
            "忠贯白日":["male","shu",6,["忠胆","宣武"],[]],
            "三分天下":["male","shu",5,["燃火","八卦","看穿","行阵","成竹"],[]],
            "娇花照水":["female","wei",6,["惊鸿","qing1","文昭","华秋"],[]],
            "战场虎子":["male","shu",7,["青龙","虎跃"],[]],
            "飞鸾翔凤":["male","shu",6,["铁索","落凤","凤狱","凤鸣"],[]],
            "挥兵指刃":["male","wei",7,["麟才","罡星","傲睨"],[]],
            "持刀破敌":["male","shu",6,["兵戎","讨羌"],[]],
            "望闻问切":["male","wei",6,["病疾","兵谋","济民"],[]],
            "攻城略地":["male","shu",6,["蛮王","复燃","豪野","蛮酋"],[]],
            "资优神童":["male","wei",7,["仁爱","神童"],[]],
            "萧疏伊人":["female","shu",5,["存嗣","闺秀"],[]],
            "骁勇小将":["male","shu",7,["龙行"],[]],
            "凤舞九天":["female","shu",6,["血舞","龙啸","继武"],[]],
            "坚石铁壁":["male","wei",10,["玄武","磐石","铁銿"],[]],
            "自信不疑":["male","shu",5,["持傲","粮道"],[]],
            "没金饮羽":["male","shu",5,["穿杨"],[]],
            "遣将征兵":["male","wei",6,["粮尽"],[]],
            "勇往直前":["male","wei",7,["擒敌","双勇"],[]],
            "怒目而视":["male","wei",6,["抛戟","横冲","戟魂"],[]],
            "擐甲推锋":["male","wei",7,["急锋"],[]],
            "枪舞乾坤":["female","shu",5,["乾坤"],[]],
            "御蜀屏障":["male","wei",8,["精算","御卫"],[]],
            "神速破敌":["male","wei",7,["速清"],[]],
            "讨平叛乱":["male","shu",5,["兴国"],[]],
            "恩怨如火":["male","shu",7,["怨火","惑予"],[]],
            "雄猛震世":["male","shu",8,["豪气","真假","狂狮"],[]],
            "父魂子魄":["male","shu",7,["继魄"],[]],
            "秉心公亮":["male","shu",6,["裨阙","仪务"],[]],
            "温婉华贵":["female","shu",5,["连绵","宴邀","千秋"],[]],
            "琴瑟天音":["female","shu",7,["玲华","仙升"],["zhu"]],
            "明辨忠奸":["female","wei",5,["智鉴","悭俭"],[]],
            "夏花绚烂":["female","shu",5,["采樵","呢喃"],[]],
            "临渊隙书":["male","shu",5,["授印","自援","授书"],[]],
            "字字珠玑":["male","wei",6,["合阔","绝解"],[]],
            "含泪桃花":["female","shu",4,["蜀魂","煌天","武曲"],["zhu"]],
            "七窍玲珑":["female","shu",5,["智囊"],[]],
            "雅俊无双":["male","wei",3,["英逝","明谏","忠擎"]],
		};
		for(var i in character){
			var c=character[i];
			if(lib.config.mode=='wangzhezhizhan'){
				var skill=c[3][c[3].length-1];
				lib.translate[skill+'_append']='<b><p align=center>以下为奋发技，当你体力小于等于X时发动<br>(X为体力上限的一半+1)</b>';
				c[3].push('wzzz_回天');
			};
			if(c[4]==undefined) c[4]=[];
			c[4].push('ext:扩展ol/'+i+'.jpg');
			c[4].push('qqwz');
			c[4].push('forbidai');
			if(c[5]==undefined) c[5]=[];
			c[5].push(c[1]);
		};
		game.addCharacterPack({
			character:character,
			skill:{
            "慷慨":{
                audio:["慷慨",2],
                trigger:{
                    global:"shaBegin",
                },
                filter:function (event,player){
        return get.distance(player,event.target)<=99;
    },
                check:function (event,player){
        return ai.get.attitude(player,event.target)>=0;
    },
                content:function (){
        "step 0"
        player.draw(2);
        player.recover();
        if(trigger.target!=player){
            player.chooseCard(true,'he','交给'+get.translation(trigger.target)+'一张牌').set('ai',function(card){
                if(get.position(card)=='e') return -1;
                if(card.name=='shan') return 1;
                if(get.type(card)=='equip') return 0.5;
                return 0;
            });
        }
        else{
            event.finish();
        }
        "step 1"
        trigger.target.gain(result.cards);
        player.$give(result.cards,trigger.target);
        game.delay();
        event.card=result.cards[0];
        if(get.type(event.card)!='equip') event.finish();
        "step 2"
        if(!trigger.target.isMin()){
            trigger.target.chooseBool('是否装备'+get.translation(event.card)+'？').set('ai',function(){
                var current=_status.event.player.get('e',{subtype:get.subtype(_status.event.card)});
                if(current&&current.length){
                    return ai.get.equipValue(event.card)>ai.get.equipValue(current[0]);
                }
                return true;
            }).set('card',event.card);
        }
        else{
            event.finish();
        }
        "step 3"
        if(result.bool){
            trigger.target.equip(event.card);
        }
    },
                ai:{
                    threaten:1.1,
                },
            },
            "天火":{
                unique:true,
                enable:"phaseUse",
                audio:["天火",2],
                animationColor:"fire",
                skillAnimation:"legend",
                filter:function (event,player){
        return !player.storage.天火;
    },
                filterTarget:function (card,player,target){
        var length=ui.selected.cards.length;
        return (length==0||length==4);
    },
                filterCard:function (card){
        var suit=get.suit(card);
        for(var i=0;i<ui.selected.cards.length;i++){
            if(get.suit(ui.selected.cards[i])==suit) return false;
        }
        return true;
    },
                complexCard:true,
                mark:true,
                selectCard:[0,4],
                line:"fire",
                check:function (){return -1},
                selectTarget:function (){
        if(ui.selected.cards.length==4) return 1;
        if(ui.selected.cards.length==0) return [1,3];
        game.uncheck('target');
        return [1,3];
    },
                content:function (){
        player.awakenSkill('天火');
        if(cards.length==4){
            player.loseHp(2);
            target.damage('fire',3);
        }
        else{
            target.damage('fire');
        }
    },
                intro:{
                    content:"limited",
                },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                if(target.hasSkillTag('nofire')) return 0;
                if(lib.config.mode=='versus') return -1;
                if(player.hasUnknown()) return 0;
                return get.damageEffect(target,player);
            },
                    },
                },
            },
            "琴音":{
                audio:["琴音",2],
                trigger:{
                    player:"phaseDiscardEnd",
                },
                direct:true,
                filter:function (event,player){
        return event.cards&&event.cards.length>1
    },
                content:function (){
        "step 0"
        if(typeof event.count!='number'){
            // event.count=trigger.cards.length-1;
            event.count=1;
        }
        var recover=0,lose=0;
        for(var i=0;i<game.players.length;i++){
            if(!game.players[i].isOut()){
                if(game.players[i].hp<game.players[i].maxHp){
                    if(ai.get.attitude(player,game.players[i])>0){
                        if(game.players[i].hp<2){
                            lose--;
                            recover+=0.5;
                        }
                        lose--;
                        recover++;
                    }
                    else if(ai.get.attitude(player,game.players[i])<0){
                        if(game.players[i].hp<2){
                            lose++;
                            recover-=0.5;
                        }
                        lose++;
                        recover--;
                    }
                }
                else{
                    if(ai.get.attitude(player,game.players[i])>0){
                        lose--;
                    }
                    else if(ai.get.attitude(player,game.players[i])<0){
                        lose++;
                    }
                }
            }
        }
        var prompt=get.prompt('琴音')+'（剩余'+get.cnNumber(event.count)+'次）';
        player.chooseControl('失去体力','回复体力','cancel',
        ui.create.dialog(get.prompt('琴音'),'hidden')).ai=function(){
            if(lose>recover&&lose>0) return 0;
            if(lose<recover&&recover>0) return 1;
            return 2;
        }
        "step 1"
        if(result.bool==false||result.control=='cancel'){
            event.finish();
        }
        else{
            player.logSkill('琴音');
            event.bool=(result.control=='回复体力');
            event.num=0;
            event.players=game.players.slice(0);
        }
        "step 2"
        if(event.num<event.players.length){
            var target=event.players[event.num];
            if(event.bool){
                target.recover(2);
                player.draw(3);
            }
            else{
                target.loseHp(2);
                player.gainMaxHp();
            }
            event.num++;
            event.redo();
        }
        "step 3"
        if(event.count>1){
            event.count--;
            event.goto(0);
        }
    },
                ai:{
                    expose:0.1,
                    threaten:2,
                },
            },
            "白衣":{
                audio:["白衣",2],
                group:"白衣2",
                trigger:{
                    player:"phaseDrawBefore",
                },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        "step 1"
        event.cards=get.cards(10);
        if(event.isMine()==false){
            event.dialog=ui.create.dialog('白衣',event.cards);
            game.delay(2);
        }
        "step 2"
        if(event.dialog) event.dialog.close();
        var dialog=ui.create.dialog('白衣',event.cards);
        player.chooseButton([0,5],dialog,true).filterButton=function(button){
            for(var i=0;i<ui.selected.buttons.length;i++){
                if(get.suit(button.link)==get.suit(ui.selected.buttons[i].link)) return false;
            }
            return true;
        }
        "step 3"
        var cards2=[];
        for(var i=0;i<result.buttons.length;i++){
            cards2.push(result.buttons[i].link);
            cards.remove(result.buttons[i].link);
        }
        player.gain(cards2);
        if(cards2.length) player.$gain(cards2);
        for(var i=0;i<cards.length;i++){
            ui.discardPile.appendChild(cards[i]);
        }
        game.delay(2);
    },
                ai:{
                    threaten:1.2,
                },
            },
            "圣光":{
                audio:["圣光",2],
                enable:"phaseUse",
                usable:3,
                filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h');
    },
                content:function (){
        "step 0"
        target.loseHp()._triggered=null;
        player.recover()._triggered=null;
        event.videoId=lib.status.videoId++;
        var cards=target.getCards('h');
        if(player.isOnline2()){
            player.send(function(cards,id){
                ui.create.dialog('圣光',cards).videoId=id;
            },cards,event.videoId);
        }
        event.dialog=ui.create.dialog('圣光',cards);
        event.dialog.videoId=event.videoId;
        if(!event.isMine()){
            event.dialog.style.display='none';
        }
        player.chooseButton().set('filterButton',function(button){
            return get.suit(button.link)=='heart';
        }).set('dialog',event.videoId);
        "step 1"
        if(result.bool){
            event.card=result.links[0];
            var func=function(card,id){
                var dialog=get.idDialog(id);
                if(dialog){
                    for(var i=0;i<dialog.buttons.length;i++){
                        if(dialog.buttons[i].link==card){
                            dialog.buttons[i].classList.add('selectedx');
                        }
                        else{
                            dialog.buttons[i].classList.add('unselectable');
                        }
                    }
                }
            }
            if(player.isOnline2()){
                player.send(func,event.card,event.videoId);
            }
            else if(event.isMine()){
                func(event.card,event.videoId);
            }
            player.chooseControl('弃置','置于牌堆顶');
        }
        else{
            if(player.isOnline2()){
                player.send('closeDialog',event.videoId);
            }
            event.dialog.close();
            event.finish();
        }
        "step 2"
        if(player.isOnline2()){
            player.send('closeDialog',event.videoId);
        }
        event.dialog.close();
        var card=event.card;
        if(result.control=='置于牌堆顶'){
            target.lose(card);
            player.showCards(card,'置于牌堆顶');
        }
        else{
            target.discard(card);
            event.finish();
        }
        "step 3"
        event.card.fix();
        ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
        game.log(player,'将',event.card,'置于牌堆顶');
    },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.countCards('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "归心":{
                audio:["归心",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                check:function (event,player){
        if(player.isTurnedOver()) return true;
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].num('he')&&game.players[i]!=player&&
                ai.get.attitude(player,game.players[i])<=0){
                num++;
            }
            if(game.players[i].num('j')&&game.players[i]!=player&&
                ai.get.attitude(player,game.players[i])<=0){
                num++;
            }
            if(num>=2) return true;
        }
        return false;
    },
                content:function (){
        "step 0"
        var targets=game.players.slice(0);
        targets.remove(player);
        targets.sort(lib.sort.seat);
        event.targets=targets;
        event.num=0;
        "step 1"
        if(num<event.targets.length){
            if(event.targets[num].num('hej')){
                player.gainPlayerCard(2,event.targets[num],'hej',true);
            }
            event.num++;
            event.redo();
        }
        "step 2"
        player.turnOver();
    },
                ai:{
                    maixie:true,
                    threaten:function (player,target){
            if(target.hp==1) return 2.5;
            return 1;
        },
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkill('jueqing')) return [1,-2];
                    if(target.hp==1) return;
                    if(target.isTurnedOver()) return [0,3];
                    var num=0;
                    for(var i=0;i<game.players.length;i++){
                        if(game.players[i].num('he')&&game.players[i]!=player&&
                            ai.get.attitude(player,game.players[i])<=0){
                            num++;
                        }
                        if(game.players[i].num('j')&&game.players[i]!=player&&
                            ai.get.attitude(player,game.players[i])>0){
                            num++;
                        }
                        if(num>2) return [0,1];
                        if(num==2) return [0.5,1];
                    }
                }
            },
                    },
                },
            },
            "千影":{
                enable:"chooseToUse",
                filter:function (event,player){
        return _status.currentPhase!=player;
    },
                filterCard:function (card){
        return get.color(card)==('red','black');
    },
                position:"he",
                viewAs:{
                    name:"tao",
                    suit:"club",
                    number:2,
                },
                prompt:"将一张牌当桃使用",
                check:function (card){return 15-ai.get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            return player.num('he',{color:('red','black')})>0&&_status.currentPhase!=player;
        },
                    threaten:1.5,
                    save:true,
                    basic:{
                        order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                        useful:[8,6.5],
                        value:[8,6.5],
                    },
                    result:{
                        target:function (player,target){
                // if(player==target&&player.hp<=0) return 2;
                var nh=target.num('h');
                var keep=false;
                if(nh<=target.hp){
                    keep=true;
                }
                else if(nh==target.hp+1&&target.hp>=2&&target.num('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2) return 0;
                    if(target.hp==2){
                        for(var i=0;i<game.players.length;i++){
                            if(target!=game.players[i]&&ai.get.attitude(target,game.players[i])>=3){
                                if(game.players[i].hp<=1) return 0;
                                if(mode=='identity'&&game.players[i].isZhu&&game.players[i].hp<=2) return 0;
                            }
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=ai.get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=0;
                        for(var i=0;i<game.players.length;i++){
                            if(game.players[i].identity=='fan'){
                                num+=game.players[i].num('h','tao');
                                if(num>2) return 2;
                            }
                        }
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
                mod:{
                    globalTo:function (from,to,distance){
            return distance+2;
        },
                },
            },
            "星辰":{
                audio:["星辰",2],
                group:"xingchen7",
                unique:true,
                trigger:{
                    global:"gameDrawAfter",
                    player:"phaseBegin",
                },
                forced:true,
                check:function (event,player){
        return player.hp<=1;
    },
                filter:function (event,player){
        return !player.storage.星辰;
    },
                content:function (){
        "step 0"
        player.gain(get.cards(20))._triggered=null;
        "step 1"
        if(player==game.me){
            game.addVideo('delay',null);
        }
        player.chooseCard('选择十张牌作为星',10,true).ai=function(card){
            return ai.get.value(card);
        };
        "step 2"
        player.lose(result.cards,ui.special)._triggered=null;
        player.storage.星辰=result.cards;
        game.addVideo('storage',player,['星辰',get.cardsInfo(player.storage.星辰),'cards']);
    },
                mark:true,
                intro:{
                    mark:function (dialog,content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()){
                    dialog.add(content);
                }
                else{
                    return '共有'+get.cnNumber(content.length)+'张星';
                }
            }
        },
                    content:function (content,player){
            if(content&&content.length){
                if(player==game.me||player.isUnderControl()){
                    return get.translation(content);
                }
                return '共有'+get.cnNumber(content.length)+'张星';
            }
        },
                },
            },
            "晨雾":{
                unique:true,
                trigger:{
                    player:"phaseEnd",
                },
                priority:1,
                direct:true,
                filter:function (event,player){
        return player.storage.星辰&&player.storage.星辰.length;
    },
                audio:["晨雾",2],
                content:function (){
        "step 0"
        player.chooseTarget('选择角色获得晨雾标记',
        [1,Math.min(game.players.length,player.storage.星辰.length)]).ai=function(target){
            if(target.isMin()) return 0;
            if(target.hasSkill('biantian2')) return 0;
            var att=ai.get.attitude(player,target);
            if(att>=4){
                if(target.hp==1&&target.maxHp>2) return att;
                if(target.hp==2&&target.maxHp>3&&target.num('he')==0) return att*0.7;
                return 0;
            }
            return -1;
        }
        "step 1"
        if(result.bool){
            var length=result.targets.length;
            for(var i=0;i<length;i++){
                result.targets[i].addSkill('chenwu2');
                result.targets[i].popup('晨雾');
            }
            player.logSkill('晨雾',result.targets,'thunder');
            game.log(player,'对',result.targets,'发动了晨雾')
            player.chooseCardButton('弃置'+get.cnNumber(length)+'枚星',length,player.storage.星辰,true);
        }
        else{
            event.finish();
        }
        "step 2"
        for(var i=0;i<result.links.length;i++){
            player.storage.星辰.remove(result.links[i]);
        }
        if(player.storage.星辰.length==0){
            player.unmarkSkill('星辰');
        }
        game.addVideo('storage',player,['星辰',get.cardsInfo(player.storage.星辰),'cards']);
        player.discard(result.links);
    },
                group:"chenwu3",
            },
            "暴风":{
                unique:true,
                audio:["暴风",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        return player.storage.星辰&&player.storage.星辰.length;
    },
                content:function (){
        "step 0"
        player.chooseTarget('选择一名角色获得暴风标记').ai=function(target){
            return -1;
        }
        "step 1"
        if(result.bool){
            var length=result.targets.length;
            for(var i=0;i<length;i++){
                result.targets[i].addSkill('baofeng2');
                result.targets[i].popup('暴风');
            }
            player.logSkill('暴风',result.targets,'fire');
            player.chooseCardButton('弃置'+get.cnNumber(length)+'枚星',length,player.storage.星辰,true);
        }
        else{
            event.finish();
        }
        "step 2"
        for(var i=0;i<result.links.length;i++){
            player.storage.星辰.remove(result.links[i]);
        }
        if(player.storage.星辰.length==0){
            player.unmarkSkill('星辰');
        }
        game.addVideo('storage',player,['星辰',get.cardsInfo(player.storage.星辰),'cards']);
        player.discard(result.links);
    },
            },
            "暴走":{
                trigger:{
                    source:"damageEnd",
                    player:"damageEnd",
                },
                forced:true,
                mark:true,
                audio:["暴走",2],
                filter:function (event){
        return event.num>0;
    },
                init:function (player){
        player.storage.暴走=4;
        game.addVideo('storage',player,['暴走',player.storage.暴走]);
    },
                content:function (){
        player.storage.暴走+=trigger.num;
        game.addVideo('storage',player,['暴走',player.storage.暴走]);
    },
                intro:{
                    content:"mark",
                },
            },
            "神怒":{
                audio:["神怒",2],
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.神怒&&player.storage.暴走>=6;
    },
                init:function (player){
        player.storage.神怒=false;
    },
                skillAnimation:true,
                animationColor:"metal",
                mark:true,
                content:function (){
        "step 0"
        player.unmark('神怒');
        player.storage.神怒=false;
        player.storage.暴走-=6;
        event.targets=game.players.slice(0);
        event.targets.remove(player);
        event.targets.sort(lib.sort.seat);
        event.targets2=event.targets.slice(0);
        player.turnOver();
        "step 1"
        if(event.targets.length){
            event.targets.shift().damage(2);
            event.redo();
        }
        "step 2"
        if(event.targets2.length){
            var cur=event.targets2.shift();
            if(cur&&cur.num('he')){
                cur.chooseToDiscard('he',true,6);
            }
            event.redo();
        }
    },
                intro:{
                    content:"limited",
                },
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                var num=0;
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]!=player){
                        if(game.players[i].ai.shown==0) return 0;
                        num+=ai.get.damageEffect(game.players[i],player,player)>0?1:-1;
                    }
                }
                return num;
            },
                    },
                },
            },
            "无前":{
                audio:["无前",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.storage.暴走>=1;
    },
                content:function (){
        player.storage.暴走-=2;
        player.addTempSkill('wushuang','phaseAfter');
    },
                ai:{
                    order:5,
                    result:{
                        player:function (player){
                if(!player.storage.shenfen) return 0;
                var cards=player.get('h','sha');
                if(cards.length){
                    for(var i=0;i<game.players.length;i++){
                        if(player.canUse('sha',game.players[i])&&
                        ai.get.effect(game.players[i],cards[0],player,player)>0&&
                        game.players[i].num('h','shan')){
                            return 1;
                        }
                    }
                }
                return 0;
            },
                    },
                },
            },
            "邪神":{
                trigger:{
                    player:"turnOverBefore",
                },
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    noturnOver:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'turnOver')) return [0,0];
            },
                    },
                },
                group:["魔神"],
            },
            "放生":{
                audio:["放生",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event, player) {
        return event.source != undefined;
    },
                check:function (event, player) {
        return (ai.get.attitude(player, event.source) <= 0);
    },
                content:function () {
        'step 0'
        trigger.source.judge(function (card) {
            player.storage.放生 = get.color(card);
            var num = 0;
            if (player.storage.放生 == 'red')
            player.draw(2);
            player.gainMaxHp();
        });
        'step 1'
        if (player.storage.放生 == 'black')
            trigger.source.loseMaxHp(2)._triggered=null;
    },
            },
            "送葬":{
                audio:["送葬",2],
                trigger:{
                    global:"dieAfter",
                },
                frequent:true,
                content:function (){
        player.draw(5);
        player.recover(888)._triggered=null;
    },
            },
            "颂威":{
                unique:true,
                global:"songwei5",
                zhuSkill:true,
            },
            "魔神":{
                audio:["魔神",2],
                rigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
        if(event.num<=1) return false;
        if(event.parent.player.num('s','unequip')) return false;
        return true;
    },
                priority:-10,
                content:function (){
        trigger.num--;
    },
            },
            "chenwu3":{
                trigger:{
                    player:["phaseBegin","dieBegin"],
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hasSkill('chenwu2')){
                game.players[i].removeSkill('chenwu2');
                game.players[i].popup('chenwu2');
            }
            if(game.players[i].hasSkill('baofeng2')){
                game.players[i].removeSkill('baofeng2');
                game.players[i].popup('baofeng2');
            }
        }
    },
            },
            "chenwu2":{
                trigger:{
                    player:["damageBefore","loseHpBefor"],
                },
                filter:function (event){
        if(event.nature!='thunder') return true;
        return false;
    },
                mark:true,
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    nofire:true,
                    nodamage:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'damage')&&!get.tag(card,'thunderDamage')) return [0,0];
            },
                    },
                },
                intro:{
                    content:"已获得辰雾标记",
                },
            },
            "baofeng2":{
                trigger:{
                    player:"damageBegin",
                },
                filter:function (event){
        if(event.nature=='fire') return true;
        return false;
    },
                mark:true,
                intro:{
                    content:"已获得暴风标记",
                },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'fireDamage')) return 1.5;
            },
                    },
                },
            },
            "宏图":{
                audio:["宏图",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('宏图')).set('ai',function(target){
            var player=_status.event.player;
            if(ai.get.attitude(player,target)>0){
                return ai.get.recoverEffect(target,player,player)+1;
            }
            return 0;
        });
        'step 1'
        if(result.bool){
            player.logSkill('宏图',result.targets);
            var target=result.targets[0];
            event.target=target;
            target.judge(function(card){
                if(target.hp==target.maxHp){
                    if(get.color(card)=='red') return 0;
                }
                if(get.color(card)=='red') return 1.5;
                return 1;
            });
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.color){
            if(result.color=='red'){
                if(event.target.hp<event.target.maxHp) event.target.recover();
            }
            else{
                event.target.gainMaxHp(trigger.num);
                event.target.draw(trigger.num);
            }
        }
    },
            },
            "明主":{
                audio:["明主",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target;
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                filterCard:true,
                selectCard:-1,
                discard:false,
                lose:true,
                content:function (){
        player.$give(cards.length,target);
        target.gain(cards);
        target.addTempSkill('mingzhu2',{player:'phaseAfter'});
        player.recover();
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                if(player.num('h')==1&&player.num('h','du')) return -1;
                if(player.hp<=2&&player.num('h','shan')) return 0;
                if(target.num('h')+player.num('h')>target.hp+2) return 0;
                if(ai.get.attitude(player,target)>3) return 1;
                return 0;
            },
                    },
                },
            },
            "mingzhu2":{
                mark:true,
                intro:{
                    content:"手牌上限+2，与其他角色计算距离-2",
                },
                mod:{
                    maxHandcard:function (player,num){
                    return num+2;
                },
                    globalFrom:function (fiom,to,distance){
                    return distance-2;
                },
                },
            },
            "兴衰":{
                skillAnimation:true,
                audio:["兴衰",2],
                trigger:{
                    player:"dying",
                },
                priority:6,
                zhuSkill:true,
                filter:function (event,player){
        if(player.storage.xingshuai) return false;
        if(player.hp>0) return false;
        if(!player.hasZhuSkill('xingshuai')) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].group=='wei') return true;
        }
        return false;
    },
                init:function (player){
        if(player.hasZhuSkill('xingshuai')){
            player.markSkill('xingshuai');
            player.storage.xingshuai=false;
        }
    },
                intro:{
                    content:"limited",
                },
                unique:true,
                content:function (){
        'step 0'
        player.storage.xingshuai=true;
        player.unmarkSkill('xingshuai');
        var targets=get.players();
        targets.remove(player);
        event.targets=targets;
        event.damages=[];
        'step 1'
        if(event.targets.length){
            var current=event.targets.shift();
            if(current.group=='wei'){
                current.chooseBool('是否令'+get.translation(player)+'回复一点体力？').set('ai',function(){
                    return ai.get.attitude(_status.event.player,_status.event.target)>2;
                }).set('target',player);
                event.current=current;
            }
            else{
                event.redo();
            }
        }
        else{
            event.goto(3);
        }
        'step 2'
        if(result.bool){
            event.damages.push(event.current);
            event.current.line(player,'green');
            game.log(event.current,'令',player,'回复一点体力');
        }
        if(event.targets.length){
            event.goto(1);
        }
        'step 3'
        if(event.damages.length){
            player.recover(event.damages.length);
        }
        'step 4'
        if(event.damages.length){
            event.damages.shift().damage('nosource');
            event.redo();
        }
    },
            },
            "情逝":{
                audio:["情逝",2],
                trigger:{
                    player:["loseEnd","changeHp"],
                },
                forced:true,
                filter:function (event,player){
        return (player.num('h')<Math.min(player.maxHp-player.hp));
    },
                content:function (){
        player.draw(Math.min(player.maxHp-player.hp)-player.num('h'));
        player.gainMaxHp();
        player.recover();
    },
                ai:{
                    noh:true,
                    skillTagFilter:function (player,tag){
            if(tag=='noh'&&player.maxHp-player.hp<player.num('h')){
                return false;
            }
        },
                },
            },
            "无情":{
                group:["无情_1"],
                trigger:{
                    source:"damageBefore",
                },
                forced:true,
                audio:["无情",2],
                priority:16,
                check:function (){return false;},
                content:function (){
        trigger.untrigger();
        trigger.finish();
        var ex=0;
        if(trigger.card&&trigger.card.name=='sha'){
            if(player.hasSkill('jiu')) ex++;
            if(player.hasSkill('luoyi2')) ex++;
            if(player.hasSkill('reluoyi2')) ex++;
        }
        trigger.player.loseHp(trigger.num+ex);
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].loseMaxHp(1);
        };
    };
},
                        sub:true,
                    },
                },
            },
            "songwei5":{
                audio:["颂威",2],
                forceaudio:true,
                trigger:{
                    player:"judgeEnd",
                },
                filter:function (event,player){
                if(player.group!='wei') return false;
                if(get.color(event.result.card)!='black') return false;
                return game.hasPlayer(function(target){
            return player!=target&&target.hasZhuSkill('颂威',player);
                });
},
                direct:true,
                content:function (){
        'step 0'
        var list=[];
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].hasZhuSkill('颂威',player)){
                list.push(game.players[i]);
            }
        }
        event.list=list;
        'step 1'
        if(event.list.length){
            var current=event.list.shift();
            event.current=current;
            player.chooseBool(get.prompt('颂威',current)).set('choice',ai.get.attitude(player,current)>0);
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            player.logSkill('颂威',event.current);
            event.current.draw();
        }
        event.goto(1);
    },
            },
            "死战":{
                audio:["死战",2],
                enable:"phaseUse",
                filterCard:true,
                selectCard:-1,
                filter:function (event,player){
        if(!player.num('h')) return false;
        if(player.storage.死战>=5) return false;
        return true;
    },
                viewAs:{
                    name:"juedou",
                    suit:"spade",
                    number:2,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"spade","number":2,"name":"shujinsan","cardid":"3104181470","_transform":"translateX(0px)","clone":{"name":"shujinsan","suit":"spade","number":2,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":5063},"timeout":5023,"original":"h"}],
                },
                group:["sizhan2","sizhan3","sizhan4"],
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                if(player.num('h')>=3||target.num('h')>=3) return 0;
                if(player.num('h','tao')) return 0;
                if(target.num('h','sha')>1) return 0;
                return -1.5;
            },
                        player:function (player,target){
                if(ai.get.damageEffect(target,player,target)>0&&ai.get.attitude(player,target)>0&&ai.get.attitude(target,player)>0){
                    return 0;
                }
                var hs1=target.get('h','sha');
                var hs2=player.get('h','sha');
                if(hs1.length>hs2.length+1){
                    return -2;
                }
                var hsx=target.get('h');
                if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                    return -2;
                }
                if(hsx.length>3&&hs2.length==0){
                    return -2;
                }
                if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                    return -2;
                }
                return -0.5;
            },
                    },
                    basic:{
                        order:5,
                        useful:1,
                        value:4.5,
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "sizhan2":{
                trigger:{
                    player:"phaseBefore",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
        player.storage.死战=0;
    },
            },
            "sizhan3":{
                trigger:{
                    player:"damageAfter",
                    source:"damageAfter",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
        return event.parent.skill=='死战';
    },
                content:function (){
        player.storage.sizhan2=trigger.player;
    },
            },
            "sizhan4":{
                trigger:{
                    player:"juedouAfter",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
        return event.skill=='死战';
    },
                content:function (){
        if(player.storage.sizhan2==player){
            player.draw(2);
            player.storage.死战+=2;
        }
        else if(player.storage.sizhan2){
            if(player.storage.sizhan2.isAlive()){
                game.asyncDraw([player,player.storage.sizhan2]);
            }
            else{
                player.draw();
            }
            player.storage.死战++;
        }
        else{
            player.draw();
            player.storage.死战++;
        }
        delete player.storage.sizhan2;
    },
            },
            "绝地":{
                trigger:{
                    player:"damageEnd",
                },
                audio:["绝地",2],
                forced:true,
                content:function (){
                    player.loseHp();
                },
                group:"绝地_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBefore",
                        },
                        audio:["绝地",2],
                        frequent:true,
                        filter:function (event,player){
       return player.hp<player.maxHp;                     
},
                        content:function (){
                         player.recover();
                         player.draw(player.hp-player.num('h'));
},
                        sub:true,
                    },
                },
            },
            "北地":{
                unique:true,
                group:["北地_1","北地_2","北地_3"],
                zhuSkill:true,
                subSkill:{
                    "1":{
                        audio:["北地",2],
                        trigger:{
                            player:"chooseToRespondBegin",
                        },
                        filter:function (event,player){
        if(event.responded) return false;
        if(!player.hasZhuSkill('北地')) return false;
        if(!player.num('he')) return false;
        if(event.filterCard({name:'sha'},player,event)==false) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].group=='shu') return true;
        }
        return false;
    },
                        direct:true,
                        content:function (){
        "step 0"
        var yep=false;
        if(!player.storage.jijianging){
            for(var i=0;i<game.players.length;i++){
                var nh=game.players[i].num('h');
                if(game.players[i].group=='shu'&&ai.get.attitude(game.players[i],player)>1&&(nh>=4||(nh>=3&&game.players[i].num('h','sha')))){
                    yep=true;break;
                }
            }
        }
        var next=player.chooseToDiscard(get.prompt('北地'),'he');
        next.set('ai',function(card){
            if(_status.event.yep) return 5-ai.get.value(card);
            return 0;
        });
        next.set('yep',yep);
        next.logSkill='北地'
        "step 1"
        if(!result.bool){
            event.finish();
        }
        "step 2"
        if(event.current==undefined) event.current=player.next;
        if(event.current==player){
            event.finish();
        }
        else if(event.current.group=='shu'){
            player.storage.jijianging=true;
            var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张杀？',{name:'sha'});
            next.set('ai',function(){
                var event=_status.event;
                return (ai.get.attitude(event.player,event.source)-2);
            });
            next.set('source',player);
            next.autochoose=lib.filter.autoRespondSha;
        }
        else{
            event.current=event.current.next;
            event.redo();
        }
        "step 3"
        player.storage.jijianging=false;
        if(result.bool){
            event.finish();
            trigger.result=result;
            trigger.responded=true;
            trigger.animate=false;
            event.current.draw();
            if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                event.current.ai.shown+=0.3;
                if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
            }
        }
        else{
            event.current=event.current.next;
            event.goto(2);
        }
    },
                        sub:true,
                    },
                    "2":{
                        audio:["北地",2],
                        enable:"chooseToUse",
                        filter:function (event,player){
        if(event.filterCard&&!event.filterCard({name:'sha'},player,event)) return false;
        if(!player.hasZhuSkill('北地')) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].group=='shu'&&game.players[i]!=player){
                return lib.filter.cardUsable({name:'sha'},player);
            }
        }
        return false;
    },
                        filterCard:true,
                        position:"he",
                        check:function (card){
        var player=_status.event.player;
        for(var i=0;i<game.players.length;i++){
            var nh=game.players[i].num('h');
            if(game.players[i].group=='shu'&&ai.get.attitude(game.players[i],player)>1&&(nh>=4||(nh>=3&&game.players[i].num('h','sha')))){
                return 5-ai.get.value(card);
            }
        }
        return 0;
    },
                        filterTarget:function (card,player,target){
        if(_status.event._backup&&
            typeof _status.event._backup.filterTarget=='function'&&
            !_status.event._backup.filterTarget({name:'sha'},player,target)){
            return false;
        }
        return player.canUse({name:'sha'},target);
    },
                        content:function (){
        "step 0"
        if(event.current==undefined) event.current=player.next;
        if(event.current==player){
            player.addSkill('jijiang3');
            event.getParent(2).step=0;
            event.finish();
        }
        else if(event.current.group=='shu'){
            var next=event.current.chooseToRespond('是否替'+get.translation(player)+'对'+get.translation(target)+'使用一张杀',
            function(card){
                var evt=_status.event.getParent();
                return evt.player.canUse(card,evt.target)&&card.name=='sha';
            });
            next.set('ai',function(card){
                var event=_status.event;
                return ai.get.effect(event.target,card,event.source,event.player);
            });
            next.set('source',player);
            next.set('target',target);
            next.autochoose=lib.filter.autoRespondSha;
        }
        else{
            event.current=event.current.next;
            event.redo();
        }
        "step 1"
        if(result.bool){
            event.finish();
            event.current.draw();
            if(result.cards&&result.cards.length==1&&result.cards[0].name=='sha'){
                player.useCard(result.cards[0],target).animate=false;
            }
            else{
                player.useCard({name:'sha'},target).animate=false;
            }
            if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                event.current.ai.shown+=0.3;
                if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
            }
        }
        else{
            event.current=event.current.next;
            event.goto(0);
        }
    },
                        ai:{
                            result:{
                                target:function (player,target){
                if(player.hasSkill('jijiang3')) return 0;
                return ai.get.effect(target,{name:'sha'},player,target);
            },
                            },
                            order:function (){
            return lib.card.sha.ai.order-0.1;
        },
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"phaseDrawBegin",
                        },
                        audio:["北地一",2],
                        forced:true,
                        filter:function (event,player){
return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     trigger.num++;
},
                        sub:true,
                    },
                },
            },
            "血舞":{
                audio:["血舞",2],
                enable:"phaseUse",
                usable:2,
                filter:function (event,player){
        return player.hp<player.maxHp&&player.num('he',{color:'red'})>0;
    },
                filterTarget:function (card,player,target){
        return player!=target&&get.distance(player,target,'attack')<=1;
    },
                position:"he",
                filterCard:function (card){
      return get.color(card)=='red';
    },
                content:function (){
        "step 0"
        target.damage(2,'fire')._triggered=null;
        "step 1"
        target.chooseToDiscard(2,'he',true);
    },
            },
            "龙啸":{
                audio:["龙啸",2],
                trigger:{
                    player:"shaMiss",
                },
                forced:true,
                content:function (){
        "step 0"
        player.draw();
        "step 1"
        player.addTempSkill('wushuang','phaseAfter');
        player.addTempSkill('wusheng','phaseAfter');
        player.addTempSkill('paoxiao','phaseAfter');
    },
            },
            "继武":{
                skillAnimation:true,
                audio:["继武",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                filter:function (event,player){
        return player.getStat('damage')>=3;
    },
                content:function (){
        "step 0"
        player.gainMaxHp();
        player.draw(3);
        "step 1"
        player.loseHp(3);
         var card=get.cardPile('qinglong','field');
        if(card){
            player.gain(card,'gain2','log');
        }
    },
            },
            "惊鸿":{
                audio:["惊鸿",2],
                group:["惊鸿_1"],
                trigger:{
                    player:["phaseBegin","phaseEnd"],
                },
                frequent:true,
                content:function (){
        "step 0"
        if(event.cards==undefined) event.cards=[];
        player.judge(function(card){
            if(get.color(card)=='red') return 1.5;
            return -1.5;
        },ui.special);
        "step 1"
        if(result.judge>0){
            event.cards.push(result.card);
            if(lib.config.autoskilllist.contains('惊鸿')){
                player.chooseBool('是否再次发动？');
            }
            else{
                event._result={bool:true};
            }
        }
        else{
            for(var i=0;i<event.cards.length;i++){
                if(get.position(event.cards[i])!='s'){
                    event.cards.splice(i,1);i--;
                }
            }
            player.gain(event.cards);
            if(event.cards.length){
                player.$draw(event.cards);
            }
            event.finish();
        }
        "step 2"
        if(result.bool){
            event.goto(0);
        }
        else{
            player.gain(event.cards);
            if(event.cards.length){
                player.$draw(event.cards);
            }
        }
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"judge",
                        },
                        priority:-1,
                        forced:true,
                        filter:function (event, player) {
                player.addTempSkill('惊鸿_2', 'judgeAfter');
                return get.color(player.judging[0]) == 'red';
            },
                        content:function () {
                player.gain(player.judging[0]);
                player.$gain2(player.judging[0]);
            },
                        sub:true,
                    },
                    "2":{
                        mod:{
                            suit:function (card, suit) {
                    if (suit == 'spade') return 'heart';
                },
                        },
                        sub:true,
                    },
                },
            },
            "qing2":{
                mod:{
                    globalFrom:function (from,to,distance){
            for(var i=0;i<game.players.length;i++){
                if(game.players[i].sex=='male'){
                    distance--;
                }
            }
            return distance;
        },
                },
            },
            "qing1":{
                audio:["倾国",2],
                group:["qing2","qing4"],
            },
            "qing4":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha'&&get.color(card)=='black') return true;
        },
                },
                trigger:{
                    player:"shaBegin",
                },
                audio:["倾国",2],
                forced:true,
                filter:function (event,player){
        return event.card&&get.color(event.card)=='black';
    },
                content:function (){
        trigger.directHit=true;
    },
            },
            "狼顾":{
                audio:["狼顾",2],
                trigger:{
                    player:"damageEnd",
                },
                direct:true,
                filter:function (event,player){
        return (event.source&&event.source.num('hej'));
    },
                content:function (){
        "step 0"
        player.recover()._triggered=null;
        player.choosePlayerCard(get.prompt('狼顾',trigger.source),trigger.source,ai.get.buttonValue,'he');
        "step 1"
        if(result.bool){
            player.logSkill('狼顾',trigger.source);
            player.gain(result.links[0]);
            trigger.source.$give(1,player);
            player.draw(1);
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(player.num('he')>1&&get.tag(card,'damage')){
                    if(ai.get.attitude(target,player)<0) return [1,1];
                }
            },
                    },
                },
                mod:{
                    maxHandcard:function (player,num){
            return 4+num;
        },
                },
            },
            "改命":{
                audio:["改命",2],
                trigger:{
                    global:"judge",
                },
                direct:true,
                filter:function (event,player){
        return player.num('he')>0;
    },
                content:function (){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('reguicai'),'he').set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=ai.get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result-ai.get.value(card)/2;
            }
            else{
                return -result-ai.get.value(card)/2;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.logSkill('改命');
            if(trigger.player.judging[0].clone){
                trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                game.broadcast(function(card){
                    if(card.clone){
                        card.clone.classList.remove('thrownhighlight');
                    }
                },trigger.player.judging[0]);
                game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
            }
            ui.discardPile.appendChild(trigger.player.judging[0]);
            trigger.player.judging[0]=result.cards[0];
            if(!get.owner(result.cards[0],'judge')){
                trigger.position.appendChild(result.cards[0]);
            }
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
            game.delay(2);
        }
          "step 3"
          player.draw(1);
          player.recover();
},
                ai:{
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "变阵":{
                audio:["变阵",2],
                group:["bianzhen1","bianzhen2","bianzhen3","bianzhen4"],
                ai:{
                    threaten:3,
                },
            },
            "bianzhen1":{
                audio:["变阵",2],
                trigger:{
                    player:"phaseJudgeBefore",
                },
                filter:function (event,player){
        return player.num('h')>0;
    },
                direct:true,
                frequent:true,
                content:function (){
        "step 0"
        if(player.num('j')==0&&(!event.isMine()||!lib.config.autoskilllist.contains('bianzhen1'))){
            event.finish();
        }
        else{
            var next=player.chooseToDiscard('是否发动变阵跳过判定阶段？');
            next.set('ai',ai.get.unuseful2);
            next.set('logSkill','变阵');
        }
        "step 1"
        if(result.bool){
            trigger.untrigger();
            trigger.finish(); 
            player.recover();
        }
    },
            },
            "bianzhen2":{
                audio:["变阵",2],
                trigger:{
                    player:"phaseDrawBefore",
                },
                filter:function (event,player){
        return player.num('h')>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var check,i,num=0,num2=0;
        for(i=0;i<game.players.length;i++){
            if(player!=game.players[i]&&game.players[i].num('h')){
                var att=ai.get.attitude(player,game.players[i]);
                if(att<=0){
                    num++;
                }
                if(att<0){
                    num2++;
                }
            }
        }
        check=(num>=2&&num2>0);

        player.chooseCardTarget({
            ai1:function(card){
                var evt=_status.event;
                if(!evt.check) return 0;
                return 6-ai.get.useful(card);
            },
            ai2:function(target){
                var evt=_status.event;
                if(!evt.check) return 0;
                return 1-ai.get.attitude(evt.player,target);
            },
            filterTarget:function(card,player,target){
                return target.num('h')>0;
            },
            selectTarget:[0,2],
            filterCard:true,
            prompt:'是否发动变阵跳过摸牌阶段？',
            check:check,
            target:target
        });
        "step 1"
        if(result.bool){
            player.logSkill('变阵',result.targets);
            player.discard(result.cards);
            event.targets=result.targets;
            player.recover();
        }
        else{
            event.finish();
        }
        "step 2"
        game.delay();
        "step 3"
        for(var i=0;i<event.targets.length;i++){
            player.gain(event.targets[i].get('h').randomGet());
            event.targets[i].$give(1,player);
        }
        trigger.finish();
        trigger.untrigger();
        game.delay();
        "step 4"
        if(result.bool) game.delay();
    },
                ai:{
                    expose:0.2,
                },
            },
            "bianzhen3":{
                audio:["变阵",2],
                trigger:{
                    player:"phaseUseBefore",
                },
                filter:function (event,player){
        return player.num('h')>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var check;
        for(var i=0;i<game.players.length;i++){
            if(ai.get.attitude(player,game.players[i])>0&&game.players[i].num('j')){
                check=true;break;
            }
        }
        if(!check){
            if(player.num('h')>player.hp+1){
                check=false;
            }
            else if(player.num('h',{name:['wuzhong']})){
                check=false;
            }
            else{
                check=true;
            }
        }
        player.chooseCardTarget({
            ai1:function(card){
                if(!_status.event.check) return 0;
                return 7-ai.get.useful(card);
            },
            ai2:function(target){
                if(!_status.event.check) return 0;
                var player=_status.event.player;
                if(ui.selected.targets.length==0){
                    if(target.num('j')&&ai.get.attitude(player,target)>0) return 10;
                    if(ai.get.attitude(player,target)<0){
                        for(var i=0;i<game.players.length;i++){
                            if(ai.get.attitude(player,game.players[i])>0){
                                if((target.get('e','1')&&!game.players[i].get('e','1'))||
                                (target.get('e','2')&&!game.players[i].get('e','2'))||
                                (target.get('e','3')&&!game.players[i].get('e','3'))||
                                (target.get('e','4')&&!game.players[i].get('e','4'))||
                                (target.get('e','5')&&!game.players[i].get('e','5'))) return -ai.get.attitude(player,target);
                            }
                        }
                    }
                    return 0;
                }
                return -ai.get.attitude(player,target)*ai.get.attitude(player,ui.selected.targets[0]);
            },
            multitarget:true,
            filterTarget:function(card,player,target){
                if(ui.selected.targets.length){
                    var from=ui.selected.targets[0];
                    var judges=from.get('j');
                    for(var i=0;i<judges.length;i++){
                        if(!target.hasJudge(judges[i].viewAs||judges[i].name)) return true;
                    }
                    if(target.isMin()) return false;
                    if((from.get('e','1')&&!target.get('e','1'))||
                        (from.get('e','2')&&!target.get('e','2'))||
                        (from.get('e','3')&&!target.get('e','3'))||
                        (from.get('e','4')&&!target.get('e','4'))||
                        (from.get('e','5')&&!target.get('e','5'))) return true;
                    return false;
                }
                else{
                    return target.num('ej')>0;
                }
            },
            selectTarget:2,
            filterCard:true,
            prompt:'是否发动变阵跳过出牌阶段？',
            targetprompt:['被移走','移动目标'],
            check:check,
            target:target
        });
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        trigger.untrigger();
        trigger.finish();
        player.discard(result.cards);
        player.logSkill('变阵',result.targets,false);
        player.line2(result.targets);
        player.draw();
        event.targets=result.targets;
        "step 2"
        game.delay();
        "step 3"
        if(targets.length==2){
            player.choosePlayerCard('ej',function(button){
                var player=_status.event.player;
                var targets0=_status.event.targets0;
                var targets1=_status.event.targets1;
                if(ai.get.attitude(player,targets0)>ai.get.attitude(player,targets1)){
                    return get.position(button.link)=='j'?10:0;
                }
                else{
                    if(get.position(button.link)=='j') return -10;
                    return ai.get.equipValue(button.link);
                }
            },targets[0]).set('targets0',targets[0]).set('targets1',targets[1]).set('filterButton',function(button){
                var targets1=_status.event.targets1;
                if(get.position(button.link)=='j'){
                    return !targets1.hasJudge(button.link.viewAs||button.link.name);
                }
                else{
                    return !targets1.num('e',{subtype:get.subtype(button.link)});
                }
            });
        }
        else{
            event.finish();
        }
        "step 4"
        if(result.bool){
            var link=result.links[0];
            if(get.position(link)=='e'){
                event.targets[1].equip(link);
            }
            else if(link.viewAs){
                event.targets[1].addJudge({name:link.viewAs},[link]);
            }
            else{
                event.targets[1].addJudge(link);
            }
            event.targets[0].$give(link,event.targets[1])
            game.delay();
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "bianzhen4":{
                audio:["变阵",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                direct:true,
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        var discard=player.num('h')>player.hp;
        var next=player.chooseToDiscard('是否发动变阵跳过弃牌阶段？');
        next.logSkill='变阵';
        next.ai=function(card){
            if(discard){
                return 100-ai.get.useful(card);
            }
            else{
                return -1;
            }
        };
        "step 1"
        if(result.bool){
            trigger.untrigger();
            trigger.finish();
            player.gainMaxHp();
        }
    },
            },
            songwen:{
                audio:["颂文",2],
                enable:"phaseUse",
                usable:5,
                filter:function (){
        for(var i=0;i<game.players.length;i++){
            if(!game.players[i].storage.songwen) return true;
        }
        return false;
    },
                init:function (player){
        player.storage.songwen=false;
    },
                filterTarget:function (card,player,target){
        return (!target.storage.songwen&&target.num('h')!=target.hp);
    },
                content:function (){
        if(target.num('h')>target.hp){
            target.chooseToDiscard(2,'he',true);
        }
        else{
            target.draw(2);
        }
    },
                ai:{
                    order:7,
                    threaten:1.5,
                    expose:0.2,
                    result:{
                        target:function (player,target){
                if(target.num('h')<target.hp){
                    if(target.num('h')<=2) return 1;
                }
                else if(target.num('h')>target.hp){
                    if(target.num('h')<=3) return -1;
                }
            },
                    },
                },
            },
            "口诛":{
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                audio:["口诛",2],
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].storage.口诛){
                game.players[i].addSkill('kouzhu2');
            }
        }
        player.chooseCardTarget({
            filterCard:true,
            filterTarget:function(card,player,target){
                return player!=target&&!target.storage.口诛;
            },
            ai1:function(card){
                return 7-ai.get.value(card);
            },
            ai2:function(target){
                var num=target.hasSkillTag('maixie')?2:0;
                return -ai.get.attitude(_status.event.player,target)-num;
            },
            prompt:get.prompt('口诛')
        });
        "step 1"
        if(result.bool){
            player.logSkill('口诛',result.targets[0]);
            result.targets[0].addSkill('kouzhu2');
            result.targets[0].storage.口诛=[result.cards[0],player];
            player.lose(result.cards[0],result.targets[0].node.special);
            player.$give(1,result.targets[0]);
        }
    },
                ai:{
                    threaten:1.7,
                    expose:0.3,
                },
            },
            "kouzhu2":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                mark:true,
                content:function (){ 
        "step 0"
        if(player.storage.口诛[1].isAlive()&&player.num('he'))
        { player.chooseCard(get.translation(player.storage.口诛[1])+ '的笔伐为'+get.translation(player.storage.口诛[0]),
       function(card){ return get.type(card,'trick')==_status.event.type; }).set('ai',function(card){ return 8-ai.get.value(card); }).set('type',get.type(player.storage.口诛[0],'trick')); 
        } 
        else{ 
            event.directfalse=true;
        } 
        "step 1" 
        if(result.bool&&!event.directfalse){ 
            player.storage.口诛[1].gain(result.cards); player.$give(result.cards,player.storage.口诛[1]); player.gain(player.storage.口诛[0],'draw2'); 
        } 
        else{ 
      ui.discardPile.appendChild(player.storage.口诛[0]);
      game.log(player.storage.口诛[0],'进入弃牌堆');             
      player.$throw(player.storage.口诛[0],1000); player.loseHp();player.loseMaxHp();player.draw(2);
        }
        player.removeSkill('kouzhu2'); 
        delete player.storage.口诛; 
    },
                intro:{
                    name:"笔伐",
                    content:"已成为笔伐目标",
                },
            },
            "突进":{
                audio:["突进",2],
                trigger:{
                    global:"phaseEnd",
                },
                check:function (event,player){
        return ai.get.damageEffect(event.player,player,player)>0;
    },
                filter:function (event,player){
        return event.player.isAlive()&&event.player!=player&&player.num('h',{type:'basic'});
    },
                direct:true,
                content:function (){
        "step 0"
        var nono=(Math.abs(ai.get.attitude(player,trigger.player))<3);
        if(ai.get.damageEffect(trigger.player,player,player)<=0){
            nono=true;
        }
        var next=player.chooseToDiscard(get.prompt('突进',trigger.player));
        next.set('ai',function(card){
            if(_status.event.nono) return 0;
            return 8-ai.get.useful(card);
        });
        next.set('logSkill',['突进',trigger.player]);
        next.set('nono',nono);
        "step 1"
        if(result.bool){
            var nono=(ai.get.damageEffect(trigger.player,player,trigger.player)>=0);
            trigger.player.chooseToDiscard('he',{type:'equip'}).set('ai',function(card){
                if(_status.event.nono){
                    return 0;
                }
                if(_status.event.player.hp==1) return 10-ai.get.value(card);
                return 9-ai.get.value(card);
            }).set('nono',nono);
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.draw(2);
            player.recover();
        }
        else{
            trigger.player.damage();
            trigger.player.loseHp();
        }
    },
                ai:{
                    expose:0.3,
                    threaten:1.3,
                },
            },
            "淑德":{
                audio:["淑德",2],
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event,player){
        if(event.player==player||_status.currentPhase==player) return false;
        for(var i=0;i<event.cards.length;i++){
            if(get.type(event.cards[i])=='basic'){
                return true;
            }
        }
        return false;
    },
                frequent:true,
                content:function (){
        "step 0"
        if(trigger.delay==false) game.delay();
        "step 1"
        player.draw();
    },
                ai:{
                    threaten:1.5,
                },
            },
            "枪魂":{
                audio:["枪魂",2],
                enable:"phaseUse",
                usable:1,
                content:function (){
         "step 0"
        player.judge(function(card){
            if(get.color(card)=='red') return 2;
            return 1;
        })
        "step 1"
        if(result.judge==1){
           var list=["sha"];
           player.gain(game.createCard(list.randomGet()));
           player.$draw();
           player.gain(game.createCard(list.randomGet()));
           player.$draw();
           player.gain(game.createCard(list.randomGet()));
           player.$draw();
           player.addTempSkill('paoxiao','phaseAfter');
        }
        else{
            if(result.judge==2){
                player.recover(10);
                player.draw(3);
            }
        }
    },
                ai:{
                    result:{
                        player:1,
                    },
                    order:11,
                },
            },
            "谣言":{
                audio:["谣言",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        for(var i=0;i>game.players.length;i++){
            if(game.players[i].hp>target.hp) return false;
        }
        return true;
    },
                check:function (card){return 7-ai.get.value(card);},
                position:"he",
                filterCard:true,
                content:function (){
        target.damage(2);
    },
                ai:{
                    result:{
                        target:function (player,target){
                if(target.num('j')&&ai.get.attitude(player,target)>0){
                    return 1;
                }
                if(target.num('e')){
                    return -1;
                }
                return ai.get.damageEffect(target,player);
            },
                    },
                    order:7,
                },
            },
            "控蛮":{
                audio:["控蛮",2],
                trigger:{
                    source:"damageBefore",
                },
                check:function (event,player){
        if(ai.get.damageEffect(event.player,player,player)<0) return true;
        var att=ai.get.attitude(player,event.player);
        if(att>0&&event.player.num('j')) return true;
        if(event.num>1){
            if(att<0) return false;
            if(att>0) return true;
        }
        var cards=event.player.get('e');
        for(var i=0;i<cards.length;i++){
            if(ai.get.equipValue(cards[i])>=6) return true;
        }
        return false;
    },
                content:function (){
        if(trigger.player.num('hej')){
            player.gainPlayerCard(2,trigger.player,'hej',true);
        }
        trigger.untrigger();
        trigger.finish();
    },
            },
            "象阵":{
                unique:true,
                locked:true,
                group:["xiangzhen1","xiangzhen2","xiangzhen3"],
                ai:{
                    effect:{
                        target:function (card){
                if(card.name=='nanman') return [0,1];
            },
                    },
                },
            },
            "xiangzhen1":{
                audio:["象阵",2],
                trigger:{
                    target:"useCardToBefore",
                },
                forced:true,
                priority:15,
                filter:function (event,player){
        return (event.card.name=='nanman');
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
            },
            "xiangzhen2":{
                trigger:{
                    global:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
        return (event.card.name=='nanman'&&event.player!=player&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card');
    },
                content:function (){
        player.gain(trigger.card);
        player.$gain2(trigger.card);
   player.recover();
    },
            },
            "xiangzhen3":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&event.card.name=='nanman';
    },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
            },
            "巨刃":{
                audio:["巨刃",4],
                trigger:{
                    source:"damageEnd",
                },
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                forced:true,
                content:function (){
               trigger.player.damage('fire');
              player.draw();
    },
                group:"巨刃_1",
                subSkill:{
                    "1":{
                        audio:["巨刃",4],
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card&&get.color(event.card)=='red';
               },
                        content:function (){
               trigger.directHit=true;
               },
                        sub:true,
                    },
                },
            },
            "抛戟":{
                audio:["抛戟",2],
                group:["pao1"],
                enable:"phaseUse",
                usable:1,
                filterCard:function (card){
        return get.subtype(card)=='equip1';
        return get.subtype(card)=='equip2';
        return get.subtype(card)=='equip3';
        return get.subtype(card)=='equip4';
        return get.subtype(card)=='equip5';
    },
                selectCard:[0,1],
                filterTarget:function (card,player,target){
        if(player==target) return false;
        return get.distance(player,target,'attack')<=1;
    },
                content:function (){
        "step 0"
        if(cards.length==0){
            player.loseHp();
            player.gainMaxHp();
            player.draw();
        }
        "step 1"
        target.loseHp(2);
        target.loseMaxHp();
    },
                check:function (card){
        return 10-ai.get.value(card);
    },
                position:"he",
                ai:{
                    order:8,
                    result:{
                        player:function (player,target){
                if(player.get('he','1','2','3','4','5')) return 0;
                if(player.hp>=target.hp) return -0.9;
                if(player.hp<=2) return -10;
                return -2;
            },
                        target:function (player,target){
                if(!player.get('he','1','2','3','4','5')){
                    if(player.hp<2) return 0;
                    if(player.hp==2&&target.hp>=2) return 0;
                }
                return ai.get.damageEffect(target,player);
            },
                    },
                },
                threaten:1.3,
            },
            "pao1":{
                audio:["抛戟",2],
                trigger:{
                    player:"loseEnd",
                },
                frequent:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                content:function (){
        var num=0;
        for(var i=0;i<trigger.cards.length;i++){
            if(trigger.cards[i].original=='e') num+=2;
        }
        player.recover(num);
    },
                ai:{
                    noe:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                },
            },
            "王佐":{
                audio:["王佐",2],
                trigger:{
                    player:"damageEnd",
                },
                direct:true,
                filter:function (event,player){
        return event.num>0
    },
                content:function (){
        "step 0"
        player.chooseTarget(2,get.prompt('王佐'),[trigger.num],function(card,player,target){
            return target.num('h')<Math.min(target.maxHp);
        }).set('ai',function(target){
            var att=ai.get.attitude(_status.event.player,target);
            if(att>3){
                return Math.min(target.maxHp)-target.num('h');
            }
            return att/3;
        });
        "step 1"
        if(result.bool){
            player.logSkill('王佐',result.targets);
            for(var i=0;i<result.targets.length;i++){
                result.targets[i].draw(Math.min(result.targets[i].maxHp)-result.targets[i].num('h'));
            }
        }
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'damage')&&target.hp>1){
                    if(player.hasSkill('jueqing')) return [1,-2];
                    var max=0;
                    for(var i=0;i<game.players.length;i++){
                        if(ai.get.attitude(target,game.players[i])>0){
                            max=Math.max(Math.min(5,game.players[i].hp)-game.players[i].num('h'),max);
                        }
                    }
                    switch(max){
                        case 0:return 2;
                        case 1:return 1.5;
                        case 2:return [1,2];
                        default:return [0,max];
                    }
                }
                if((card.name=='tao'||card.name=='caoyao')&&
                    target.hp>1&&target.num('h')<=target.hp) return [0,0];
            },
                    },
                },
            },
            qibing:{
                audio:["奇兵",2],
                trigger:{
                    global:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
        return (event.card.name=='shunshou'&&event.player!=player&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card');
    },
                content:function (){
        player.gain(trigger.card);
        player.$gain2(trigger.card);
        player.recover();
        player.draw();
    },
                group:["qibing2"],
            },
            "qibing2":{
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-99;
        },
                },
            },
            "天险":{
                audio:["天险",2],
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
        return event.card&&event.card.name=='juedou';
    },
                content:function (){
     trigger.player.loseHp();          
    },
            },
            "积粮":{
                audio:["积粮",2],
                trigger:{
                    player:"loseEnd",
                },
                frequent:true,
                filter:function (event,player){
        return _status.currentPhase!=player;
    },
                content:function (){
        player.draw();
    },
            },
            "抬棺":{
                audio:["抬棺",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('he')>0;
    },
                filterTarget:function (card,player,target){
        return target!=player&&target.num('he')>0;
    },
                filterCard:function (card){
       return get.color(card)=='black';
    },
                content:function (){
        'step 0'
        target.chooseToDiscard(2,'he',true);
        player.draw();
        'step 1'       
         player.useCard({name:'juedou'},target);
          player.recover();
    },
                ai:{
                    order:2,
                    result:{
                        target:function (player,target){
                if(ai.get.effect(target,{name:'juedou'},player,player)<=0){
                    return 0;
                }
                if(target.hp<player.hp){
                    if(player.num('h')>player.hp) return -0.1;
                    return 0;
                }
                var hs1=target.get('h','sha');
                var hs2=player.get('h','sha');
                if(hs1.length>hs2.length){
                    return 0;
                }
                var hsx=target.get('h');
                if(hsx.length>2&&hs2.length<=1&&hsx[0].number<6){
                    return 0;
                }
                if(hsx.length>3&&hs2.length<=1){
                    return 0;
                }
                if(hs1.length>hs2.length-1&&hs1.length>0&&(hs2.length<=1||hs1[0].number>hs2[0].number)){
                    return 0;
                }
                return -1;
            },
                    },
                },
            },
            "怂乱":{
                audio:["怂乱",2],
                unique:true,
                enable:"phaseUse",
                usable:1,
                animationColor:"thunder",
                skillAnimation:"epic",
                filter:function (event,player){
        return !player.storage.怂乱&&player.num('h',{color:'black'})>0;
    },
                init:function (player){
        player.storage.怂乱=false;
    },
                filterTarget:function (card,player,target){
        if(ui.selected.targets.length){
            return target.num('h')>0&&target.distanceTo(ui.selected.targets[0])<=1;
        }
        return true;
    },
                filterCard:{
                    color:"black",
                },
                mark:true,
                discard:false,
                delay:0,
                check:function (card){return 6-ai.get.value(card);},
                selectTarget:2,
                multitarget:true,
                content:function (){
        'step 0'
        player.$give(cards,targets[0]);
        player.unmark('怂乱');
        player.storage.怂乱=false;
        targets[0].gain(cards,player);
        'step 1'
        targets[0].chooseToCompare(targets[1]);
        'step 2'
        if(result.bool){
            targets[0].chooseToDiscard('he',999,true);
            targets[1].loseHp(2);
        }
        else{
            targets[1].chooseToDiscard('he',999,true);
            targets[0].loseHp(2);
        }
    },
                intro:{
                    content:"limited",
                },
                ai:{
                    expose:0.4,
                    order:4,
                    result:{
                        target:function (player,target){
                if(player.hasUnknown()) return 0;
                if(ui.selected.targets.length) return -1;
                return -0.5;
            },
                    },
                },
            },
            "千虑":{
                audio:["千虑",2],
                unique:true,
                trigger:{
                    player:"damageEnd",
                },
                animationColor:"fire",
                skillAnimation:"legend",
                filter:function (event,player){
        return !player.storage.千虑;
    },
                init:function (player){
        player.storage.千虑=false;
    },
                mark:true,
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('千虑'),function(card,player,target){
            return target.sex=='male'&&target!=player;
        }).set('ai',function(target){
            if(!_status.event.goon) return 0;
            var player=_status.event.player;
            var att=ai.get.attitude(player,target);
            if(att<=1) return 0;
            var mode=get.mode();
            if(mode=='identity'||(mode=='versus'&&_status.mode=='four')){
                if(target.name&&lib.character[target.name]){
                    for(var i=0;i<lib.character[target.name][3].length;i++){
                        if(lib.skill[lib.character[target.name][3][i]].zhuSkill){
                            return att*2;
                        }
                    }
                }
            }
            return att;
        }).set('goon',!player.hasUnknown());
        'step 1'
        if(result.bool){
            player.unmarkSkill('千虑');
            player.storage.千虑=true;
            player.logSkill('千虑',result.targets);
            var target=result.targets[0];
            target.gainMaxHp(true);
            target.draw(4);
            var mode=get.mode();
            if(mode=='identity'||(mode=='versus'&&_status.mode=='four')){
                if(target.name&&lib.character[target.name]){
                    var skills=lib.character[target.name][3];
                    target.storage.zhuSkill_千虑=[];
                    for(var i=0;i<skills.length;i++){
                        var info=lib.skill[skills[i]];
                        if(info.zhuSkill){
                            target.storage.zhuSkill_千虑.push(skills[i]);
                            if(info.init){
                                info.init(target);
                            }
                            if(info.init2){
                                info.init2(target);
                            }
                        }
                    }
                }
            }
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "旧情":{
                audio:["旧情",2],
                trigger:{
                    global:"dying",
                },
                priority:6,
                filter:function (event,player){
        return event.player.hp<=0;
    },
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('旧情'),function(card,player,target){
            return target!=_status.event.getTrigger().player;
        }).set('ai',function(target){
            var player=_status.event.player;
            var trigger=_status.event.getTrigger();
            if(ai.get.attitude(player,trigger.player)>0){
                var att1=ai.get.attitude(target,player);
                var att2=ai.get.attitude(target,trigger.player);
                var att3=ai.get.attitude(player,target);
                if(att3<0) return 0;
                return att1/2+att2+att3;
            }
            else{
                return 0;
                // return ai.get.attitude(player,target);
            }
        });
        'step 1'
        if(result.bool){
            event.target=result.targets[0];
            event.target.draw(8);
            player.logSkill('旧情',event.target);
        }
        else{
            event.finish();
        }
        'step 2'
        var target=event.target;
        var tosave=trigger.player;
        var att=ai.get.attitude(target,tosave);
        var hastao=target.num('h','tao');
        target.chooseToDiscard(4,true,'he').set('ai',function(card){
            var hastao=_status.event.hastao;
            var att=_status.event.att;
            if(!hastao&&att>0){
                var suit=get.suit(card);
                for(var i=0;i<ui.selected.cards.length;i++){
                    if(get.suit(ui.selected.cards[i])==suit){
                        return -4-ai.get.value(card);
                    }
                }
            }
            if(att<0&&ui.selected.cards.length==3){
                var suit=get.suit(card);
                for(var i=0;i<ui.selected.cards.length;i++){
                    if(get.suit(ui.selected.cards[i])==suit){
                        return -ai.get.value(card);
                    }
                }
                return -10-ai.get.value(card);
            }
            return -ai.get.value(card);
        }).set('hastao',hastao).set('att',att);
        'step 3'
        if(result.cards&&result.cards.length==4){
            var suits=[];
            for(var i=0;i<result.cards.length;i++){
                suits.add(get.suit(result.cards[i]));
            }
            if(suits.length==4){
                event.target.useCard({name:'tao'},trigger.player);
            }
        }
    },
            },
            "默书":{
                intro:{
                    content:"cards",
                },
                init:function (player){
        player.storage.默书 =[];
    },
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        return player.storage.默书.length>0&&player.countCards('h')>0;
    },
                content:function (){
        if(player.storage.默书.length&&player.countCards('h')){
            var card=player.storage.默书.shift();
            card={name:card.name,nature:card.nature,suit:card.suit,number:card.number};
            if(lib.filter.cardEnabled(card)){
                if(game.hasPlayer(function(current){
                    return player.canUse(card,current);
                })){
                    lib.skill.默书_3.viewAs=card;
                    var next=player.chooseToUse();
                    if(next.isOnline()){
                        player.send(function(card){
                            lib.skill.默书_3.viewAs=card;
                        },card)
                    }
                    next.logSkill='默书';
                    next.set('openskilldialog','默书：将一张手牌当'+get.translation(card)+'使用');
                    next.set('norestore',true);
                    next.set('_backupevent','默书_3');
                    next.backup('默书_3');
                }
            }
            event.redo();
        }
    },
                group:["默书_1","默书_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseAfter",
                        },
                        silent:true,
                        content:function (){
                player.storage.默书.length=0;
                player.unmarkSkill('默书');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    "2":{
                        trigger:{
                            player:"useCard",
                        },
                        silent:true,
                        filter:function (event,player){
                if(_status.currentPhase!=player) return false;
                if(event.parent.parent.name!='phaseUse') return false;
                var type=get.type(event.card);
                return player.storage.默书.length<5&&(type=='basic'||type=='trick');
            },
                        content:function (){
                player.storage.默书.add(trigger.card);
                if(player.hasSkill('默书')) player.markSkill('默书');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    "3":{
                        filterCard:true,
                        selectCard:1,
                        popname:true,
                        sub:true,
                    },
                },
            },
            "战勋":{
                audio:["战勋",2],
                trigger:{
                    global:"dieAfter",
                },
                forced:true,
                unique:true,
                content:function (){
        player.gainMaxHp(2);
        player.recover();
        player.draw(3);
    },
                ai:{
                    threaten:1.5,
                },
            },
            "举兵":{
                skillAnimation:true,
                audio:["举兵",1],
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        return player.maxHp>game.players.length&&player.hp<player.maxHp&&!player.storage.举兵;
    },
                forced:true,
                unique:true,
                content:function (){
        var num=player.maxHp-player.num('h');
        if(num>0){
            player.draw(num);
        }
        player.addSkill('内乱');
        player.addSkill('危重');
        player.storage.举兵=true;
    },
            },
            "危重":{
                audio:["危重",1],
                trigger:{
                    player:["gainMaxHpEnd","loseMaxHpEnd","loseHpEnd","gainHpEnd","recoverEnd","damageEnd"],
                },
                forced:true,
                content:function (){
        player.draw();
    },
            },
            "内乱":{
                audio:["内乱",1],
                trigger:{
                    player:"phaseEnd",
                },
                content:function (){
        player.chooseToDiscard(2,true);
        player.recover();
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(card.name=='guiyoujie') return [0,1];
            },
                    },
                },
            },
            "伏兵":{
                trigger:{
                    player:["phaseEnd","phaseBegin"],
                },
                forced:true,
                audio:["伏兵",2],
                init:function (player){
                    player.storage.伏兵=[];
                    player.storage.伏兵_2=[];
                },
                filter:function (event,player){
                    return player.countCards('h')>0;
                },
                intro:{
                    content:"cards",
                    mark:function (dialog,content,player){
                        if(content&&content.length){
                            dialog.addAuto(content);
                            if(player.isUnderControl(true)){
                                var str='';
                                for(var i=0;i<player.storage.伏兵_2.length;i++){
                                    str+=get.translation(player.storage.伏兵_2[i]);
                                    if(i<player.storage.伏兵_2.length-1){
                                        str+='、';
                                    }
                                }
                                dialog.add('<div class="text center">'+str+'</div>')
                            }
                        }
                    },
                },
                content:function (){
                    'step 0'
                    var list1=[],list2=[],list3=[];
                    for(var i=0;i<lib.inpile.length;i++){
                        var type=get.type(lib.inpile[i]);
                        if(type=='basic'){
                            list1.push(['基本','',lib.inpile[i]]);
                        }
                        else if(type=='trick'){
                            list2.push(['锦囊','',lib.inpile[i]]);
                        }
                        else if(type=='delay'){
                            list3.push(['锦囊','',lib.inpile[i]]);
                        }
                    }
                    player.chooseButton([get.prompt('伏兵'),[list1.concat(list2).concat(list3),'vcard']]).set('filterButton',function(button){
                        var player=_status.event.player;
                        if(player.storage.伏兵_2&&player.storage.伏兵_2.contains(button.link[2])) return false;
                        return true;
                    }).set('ai',function(button){
                        var rand=_status.event.rand*2;
                        switch(button.link[2]){
                            case 'sha':return 5+rand[1];
                            case 'tao':return 4+rand[2];
                            case 'lebu':return 3+rand[3];
                            case 'shan':return 4.5+rand[4];
                            case 'wuzhong':return 4+rand[5];
                            case 'shunshou':return 3+rand[6];
                            case 'nanman':return 2+rand[7];
                            case 'wanjian':return 2+rand[8];
                            default:return rand[9];
                        }
                    }).set('rand',[Math.random(),Math.random(),Math.random(),Math.random(),
                    Math.random(),Math.random(),Math.random(),Math.random()],Math.random());
                    'step 1'
                    if(result.bool){
                        player.storage.伏兵_2.push(result.links[0][2]);
                        player.logSkill('伏兵');
                        player.chooseCard('h','选择一张手牌作为“陷阱”',true);
                        if(player.isOnline2()){
                            player.send(function(storage){
                                game.me.storage.伏兵_2=storage;
                            },player.storage.伏兵_2);
                        }
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    if(result.bool){
                        var card=result.cards[0];
                        player.lose(card,ui.special);
                        player.draw(2);
                        player.storage.伏兵.push(card);
                        player.syncStorage('伏兵');
                        player.markSkill('伏兵');
                        player.$give(card,player);
                    }
                },
                group:"伏兵_2",
                subSkill:{
                    "2":{
                        trigger:{
                            global:["useCard","respondEnd"],
                        },
                        priority:15,
                        audio:["伏兵",2],
                        filter:function (event,player){
                    if(_status.currentPhase==player) return false;
                    if(event.name=='respond'){
                        if(event.getParent(2).name!='sha') return false;
                    }
                    return player.storage.伏兵_2&&player.storage.伏兵_2.contains(event.card.name);
                },
                        direct:true,
                        content:function (){
                    "step 0"
                    player.gainMaxHp();
                    var effect=0;
                    if(trigger.card.name=='wuxie'||trigger.name=='respond'){
                        if(get.attitude(player,trigger.player)<-1){
                            effect=-1;
                        }
                    }
                    else if(trigger.targets&&trigger.targets.length){
                        for(var i=0;i<trigger.targets.length;i++){
                            effect+=get.effect(trigger.targets[i],trigger.card,trigger.player,player);
                        }
                    }
                    var str='设伏：是否令'+get.translation(trigger.player);
                    if(trigger.targets&&trigger.targets.length){
                        str+='对'+get.translation(trigger.targets);
                    }
                    str+='的'+get.translation(trigger.card)+'失效？'
                    var next=player.chooseBool(str,function(){
                        var player=_status.event.player;
                        var trigger=_status.event.getTrigger();
                        if(_status.event.effect<0){
                            if(trigger.card.name=='sha'){
                                var target=trigger.targets[0];
                                if(target==player){
                                    return !player.countCards('h','shan');
                                }
                                else{
                                    return target.hp==1||(target.countCards('h')<=2&&target.hp<=2);
                                }
                            }
                            else{
                                return true;
                            }
                        }
                        return false;
                    });
                    next.set('effect',effect);
                    "step 1"
                    if(result.bool){
                        player.logSkill('伏兵');
                        var index=player.storage.伏兵_2.indexOf(trigger.card.name);
                        if(index!=-1){
                            var card=player.storage.伏兵[index];
                            card.discard();
                            player.$throw(card);
                            player.storage.伏兵.splice(index,1);
                            player.storage.伏兵_2.splice(index,1);
                            if(player.storage.伏兵.length==0){
                                player.unmarkSkill('伏兵');
                            }
                            else{
                                player.syncStorage('伏兵');
                                player.markSkill('伏兵');
                                if(player.isOnline2()){
                                    player.send(function(storage){
                                        game.me.storage.伏兵_2=storage;
                                    },player.storage.伏兵_2);
                                }
                            }
                        }
                        game.delay(2);
                        if(trigger.name=='respond'){
                            if(trigger.parent.result){
                                trigger.parent.result.bool=false;
                            }
                        }
                        else{
                            trigger.cancel();
                        }
                    }
                    else{
                        event.finish();
                    }
                    "step 2"
                    game.broadcastAll(ui.clear);
                },
                        ai:{
                            threaten:1.8,
                            expose:0.3,
                        },
                        sub:true,
                    },
                },
            },
            "刚直":{
                audio:["刚直",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
        if(!event.source) return false;
        var nh1=player.num('h');
        var nh2=event.source.num('h');
        if(nh1==nh2) return false;
        if(nh2<nh2) return false;
        if(nh2>nh2&&event.source.isDead()) return false;
        return true;
    },
                direct:true,
                content:function (){
        "step 0"
        var num1=player.num('h');
        var num2=trigger.source.num('h');
        if(num1>num2){
            var next=player.chooseToDiscard([num2,num1],'刚直：是否弃置至少'+(num2)+'张手牌,并对'+get.translation(trigger.source)+'造成二点伤害？');
            next.logSkill=['刚直',trigger.source];
            next.set('ai',function(card){
                var trigger=_status.event.getTrigger();
                var player=_status.event.player;
                if(ui.selected.cards.length>=_status.event.num){
                    return -1;
                }
                if(ai.get.damageEffect(trigger.source,player,player)>0&&_status.event.num<=2){
                    return 8-ai.get.value(card);
                }
                return -1;
            });
            next.set('num',num2);
        }
        else{
            event.draw=true;
            event.num=Math.min(num2)-num1;
            player.chooseBool(get.prompt('刚直'));
        }
        "step 1"
        if(result.bool){
            if(event.draw){
                player.logSkill('刚直',trigger.source);
                player.draw(event.num);
            }
            else{
                trigger.source.damage(2,player);
                player.recover();
            }
        }
    },
            },
            "镇守":{
                trigger:{
                    global:"useCardToBefore",
                },
                audio:["镇守",2],
                direct:true,
                priority:5,
                filter:function (event,player){
        if(player==event.target||player==event.player) return false;
        if(!player.countCards('he')) return false;
        if(event.targets.length>1) return false;
        if(!event.target) return false;
        if(event.target.hp>=player.hp) return false;

        var card=event.card;
        if(card.name=='sha') return true;
        if(get.type(card)=='trick') return true;
        return false;
    },
                content:function (){
        "step 0"
        var save=false;
        if(ai.get.attitude(player,trigger.target)>2){
            if(trigger.card.name=='sha'){
                if(player.countCards('h','shan')||player.getEquip(2)||
                trigger.target.hp==1||player.hp>trigger.target.hp+1){
                    if(!trigger.target.countCards('h','shan')||trigger.target.countCards('h')<player.countCards('h')){
                        save=true;
                    }
                }
            }
            else if(trigger.card.name=='juedou'&&trigger.target.hp==1){
                save=true;
            }
            else if(trigger.card.name=='shunshou'&&
                ai.get.attitude(player,trigger.player)<0&&
                ai.get.attitude(trigger.player,trigger.target)<0){
                save=true;
            }
        }
        var next=player.chooseToDiscard('he',get.prompt('zhenwei'));
        next.logSkill=['镇守',trigger.target];
        next.set('ai',function(card){
            if(_status.event.aisave){
                return 7-ai.get.value(card);
            }
            return 0;
        });
        next.set('aisave',save);
        "step 1"
        if(result.bool){
            player.chooseControl('转移','失效',function(){
                var trigger=_status.event.getTrigger();
                var player=_status.event.player;
                if(trigger.card.name=='sha'){
                    if(player.countCards('h','shan')) return '转移';
                }
                else if(trigger.card.name=='juedou'){
                    if(player.countCards('h','sha')) return '转移';
                }
                return '失效';
            }).set('prompt','将'+get.translation(trigger.card)+'转移给你，或令其失效');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.control=='转移'){
            player.draw(2);
            trigger.target=player;
            trigger.targets.length=0;
            trigger.targets.push(player);
            trigger.untrigger();
            trigger.trigger('useCardToBefore');
            trigger.trigger(trigger.card.name+'Before');
            trigger.player.line(player);
        }
        else{
            if(get.itemtype(trigger.card)=='card'){
                trigger.player.$gain2(trigger.card);
                if(!trigger.player.storage.镇守2){
                    trigger.player.storage.镇守2=[trigger.card];
                }
                else{
                    trigger.player.storage.镇守2.push(trigger.card);
                }
                ui.special.appendChild(trigger.card);
                trigger.player.markSkill('镇守2');
            }
            trigger.untrigger();
            trigger.finish();
            trigger.player.addSkill('镇守2');
        }
        game.delay();
    },
                ai:{
                    threaten:1.1,
                },
            },
            "仁爱":{
                trigger:{
                    global:"damageBefore",
                },
                audio:["仁爱",2],
                priority:6,
                filter:function (event,player){
        return event.player!=player&&event.player.hp<player.hp&&player.num('he',{type:'equip'})>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var next=player.chooseToDiscard(get.prompt('仁爱',trigger.player),{type:'equip'},'he');
        next.logSkill=['仁爱',trigger.player];
        next.set('ai',function(card){
            var player=_status.event.player;
            if(ai.get.attitude(player,_status.event.getTrigger().player)>3){
                return 11-ai.get.value(card);
            }
            return -1;
        });
        "step 1"       
         if(result.bool){
                 player.recover();
                    }
                    else{
                        event.finish();
                    }
        "step 2"
        trigger.cancel();
    },
                ai:{
                    expose:0.5,
                },
            },
            "神童":{
                trigger:{
                    player:["damageEnd","recoveryEnd"],
                },
                direct:true,
                audio:["神童",2],
                group:["神童_1","神童_2"],
                content:function (){
        "step 0"
        event.cards=get.cards(8);
        event.videoId=lib.status.videoId++;
        game.broadcastAll(function(player,id,cards){
            var str;
            if(player==game.me&&!_status.auto){
                str='神童：选择任意张点数小于13的牌';
            }
            else{
                str='神童';
            }
            var dialog=ui.create.dialog(str,cards);
            dialog.videoId=id;
        },player,event.videoId,event.cards);
        event.time=get.utc();
        game.addVideo('showCards',player,['神童',get.cardsInfo(event.cards)]);
        game.addVideo('delay',null,2);
        "step 1"
        var next=player.chooseButton([0,4]);
        next.set('dialog',event.videoId);
        next.set('filterButton',function(button){
            var num=0
            for(var i=0;i<ui.selected.buttons.length;i++){
                num+=get.number(ui.selected.buttons[i].link);
            }
            return (num+get.number(button.link)<=13);
        });
        next.set('ai',function(button){
            return ai.get.value(button.link,_status.event.player);
        });
        "step 2"
        if(result.bool&&result.links){
            player.logSkill('神童');
            var cards2=[];
            for(var i=0;i<result.links.length;i++){
                cards2.push(result.links[i]);
                cards.remove(result.links[i]);
            }
            for(var i=0;i<cards.length;i++){
                ui.discardPile.appendChild(cards[i]);
            }
            event.cards2=cards2;
        }
        else{
            event.finish();
        }
        var time=1000-(get.utc()-event.time);
        if(time>0){
            game.delay(0,time);
        }
        "step 3"
        game.broadcastAll('closeDialog',event.videoId);
        var cards2=event.cards2;
        player.gain(cards2);
        player.$draw(cards2);
        game.log(player,'获得了',cards2)
        game.delay(2);
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkill('jueqing')) return [1,-2];
                    var hasfriend=false;
                    for(var i=0;i<game.players.length;i++){
                        if(game.players[i]!=target&&ai.get.attitude(game.players[i],target)>=0){
                            hasfriend=true;break;
                        }
                    }
                    if(!hasfriend) return;
                    if(target.hp>=4) return [1,2];
                    if(target.hp==3) return [1,1.5];
                    if(target.hp==2) return [1,0.5];
                }
            },
                    },
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"gainEnd",
                        },
                        audio:["神童",2],
                        filter:function (event,player){
                return event.cards&&event.cards.length>1;
            },
                        content:function (){
                 'step 0'
                 event.list=player.getFriends().sortBySeat();
                 player.recover();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                event.redo();
                            }
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"loseEnd",
                        },
                        audio:["神童",2],
                        filter:function (event,player){
                return event.cards&&event.cards.length>1;
            },
                        content:function (){
                 'step 0'
                 event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.draw();
                                event.redo();
                            }
            },
                        sub:true,
                    },
                },
            },
            "精算":{
                trigger:{
                    player:"phaseUseEnd",
                },
                frequent:true,
                filter:function (event,player){
        return get.cardCount(true,player)<=player.hp;
    },
                content:function (){
        var num=get.cardCount(true,player);
        if(num>0){
            player.draw(num);
        }
    },
                audio:["精算",2],
                init:function (player){player.storage.精算=true},
                intro:{
                    content:function (storage,player){
            if(_status.currentPhase==player) return '已使用'+get.cardCount(true,player)+'张牌';
        },
                },
            },
            "can2":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
        player.storage.迂回=0;
    },
            },
            "迂回":{
                audio:["迂回",2],
                trigger:{
                    player:"useCard",
                },
                direct:true,
                filter:function (event,player){
        if(!event.targets) return false;
        if(_status.currentPhase!=player) return false;
        var type=get.type(event.card,'trick');
        if(type!='basic'&&type!='trick'&&type!=='equip') return false;
        return game.hasPlayer(function(target){
            return !event.targets.contains(target)&&target.num('he')>0;
        });
    },
                content:function (){
        'step 0'
         player.chooseTarget(get.prompt('迂回'),function(card,player,target){
                    return target.num('he')>0;
                }).set('ai',function(target){
                    var player=_status.event.player;
                    if(target==player) return 2;
                    if(ai.get.attitude(player,target)<=0){
                        return 1
                    }
                    return 0.5;
                });
        'step 1'
        if(result.bool){
            player.storage.迂回++;
            if(!event.isMine()) game.delay();
            player.logSkill('迂回',result.targets);
            player.discardPlayerCard(result.targets[0],true,'he');
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        player.draw();
    },
                group:"can2",
            },
            "趋向":{
                group:"quxiang2",
                trigger:{
                    player:"phaseEnd",
                },
                audio:["趋向",2],
                check:function (event,player){
        return player.storage.迂回>=player.num('h');
    },
                prompt:function (event,player){
        if(typeof player.storage.迂回!='number'){
            '趋向：是否摸'+get.cnNumber(0)+'张牌并将手牌弃置至'+get.cnNumber(0)+'张？';
        }
        return '趋向：是否摸'+get.cnNumber(player.storage.迂回)+'张牌并将手牌弃置至'+get.cnNumber(player.storage.迂回)+'张？';
    },
                content:function (){
        'step 0'
        player.draw(player.storage.迂回);
        'step 1'
        if(typeof player.storage.迂回!='number'){
            player.storage.迂回=0;
        }
        var dh=player.num('h')-player.storage.迂回;
        if(dh>0){
            player.chooseToDiscard(dh,true);
        }
    },
            },
            "quxiang2":{
                audio:["趋向",2],
                trigger:{
                    player:"phaseEnd",
                },
                prompt:function (event,player){
        if(typeof player.storage.迂回!='number'){
            '趋向：是否增加1点体力上限并将体力回复至至'+get.cnNumber(0)+'点？';
        }
        return '趋向：是否增加1点体力上限并将体力回复至至'+get.cnNumber(player.storage.迂回)+'点？';
    },
                content:function (){
        'step 0'
        player.gainMaxHp(1);
        'step 1'
        if(typeof player.storage.迂回!='number'){
            player.storage.迂回=0;
        }
        var dh=player.storage.迂回;
        if(dh>0){
            player.recover(dh,true);
        }
    },
            },
            "落梅":{
                unique:true,
                gainable:true,
                group:["luomei1","luomei2"],
            },
            "luomei1":{
                audio:["落梅",2],
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event,player){
                if(event.player==player) return false;
                for(var i=0;i<event.cards.length;i++){
                    if(get.position(event.cards[i])=='d'){
                        return true;
                    }
                }
                return false;
            },
                frequent:"check",
                check:function (event,player){
                for(var i=0;i<event.cards.length;i++){
                    if(get.position(event.cards[i])=='d'){
                        if(event.cards[i].name=='du') return false;
                    }
                }
                return true;
            },
                content:function (){
                "step 0"
                if(trigger.delay==false) game.delay();
                "step 1"
                var cards=[];
                for(var i=0;i<trigger.cards.length;i++){
                    if(get.position(trigger.cards[i])=='d'){
                        cards.push(trigger.cards[i]);
                    }
                }
                if(cards.length){
                    player.gain(cards);
                    player.$gain2(cards);
                    game.log(player,'发动落梅，获得了',cards);
             player.recover();
                }
            },
            },
            "luomei2":{
                audio:["落梅",2],
                trigger:{
                    global:"judgeAfter",
                },
                frequent:"check",
                check:function (event,player){
                return event.result.card.name!='du';
            },
                filter:function (event,player){
                if(event.player==player) return false;
                if(event.result.card.parentNode.id!='discardPile') return false;
            },
                content:function (){
                player.gain(trigger.result.card);
                player.$gain2(trigger.result.card);
                player.recover();
            },
            },
            "妙笔":{
                group:["miaobi1","miaobi2","miaobi3"],
            },
            "miaobi1":{
                audio:["妙笔",2],
                enable:"chooseToUse",
                filter:function (event,player){
        if(player.classList.contains('turnedover')) return false;
        if(event.parent.name=='phaseUse'){
            return lib.filter.filterCard({name:'jiu'},player,event);
        }
        if(event.type!='dying') return false;
        if(player!=event.dying) return false;
        return true;
    },
                content:function (){
        if(_status.event.getParent(2).type=='dying'){
            event.dying=player;
        }
        player.turnOver();
        player.recover();
        player.useCard({name:'tao'},player);
    },
                ai:{
                    save:true,
                    skillTagFilter:function (player){
            return player.hp<=0&&!player.isTurnedOver();
        },
                    order:5,
                    result:{
                        player:function (player){
                if(_status.event.parent.name=='phaseUse'){
                    if(player.num('h','jiu')>0) return 0;
                    if(player.num('e','zhuge')&&player.num('h','sha')>1) return 0;
                    if(!player.num('h','sha')) return 0;
                    var targets=[];
                    var target;
                    for(var i=0;i<game.players.length;i++){
                        if(ai.get.attitude(player,game.players[i])<0){
                            if(player.canUse('sha',game.players[i],true,true)){
                                targets.push(game.players[i]);
                            }
                        }
                    }
                    if(targets.length){
                        target=targets[0];
                    }
                    else{
                        return 0;
                    }
                    var num=ai.get.effect(target,{name:'sha'},player,player);
                    for(var i=1;i<targets.length;i++){
                        var num2=ai.get.effect(targets[i],{name:'sha'},player,player);
                        if(num2>num){
                            target=targets[i];
                            num=num2;
                        }
                    }
                    if(num<=0) return 0;
                    var e2=target.get('e','2');
                    if(e2){
                        if(e2.name=='tengjia'){
                            if(!player.num('h',{name:'sha',nature:'fire'})&&!player.num('e','zhuque')) return 0;
                        }
                        if(e2.name=='renwang'){
                            if(!player.num('h',{name:'sha',color:'red'})) return 0;
                        }
                        if(e2.name=='baiyin') return 0;
                    }
                    if(player.num('e','guanshi')&&player.num('he')>2) return 1;
                    return target.num('h')>3?0:1;
                }
                if(player==_status.event.dying||player.isTurnedOver()) return 3;
            },
                    },
                    effect:{
                        target:function (card,player,target){
                if(card.name=='guiyoujie') return [0,0.5];
                if(target.isTurnedOver()){
                    if(get.tag(card,'damage')){
                        if(player.hasSkill('jueqing')) return [1,-2];
                        if(target.hp==1) return;
                        return [1,target.num('h')/2];
                    }
                }
            },
                    },
                },
            },
            "miaobi2":{
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                popup:false,
                silent:true,
                filter:function (event,player){
        return player.classList.contains('turnedover');
    },
                content:function (){
        player.storage.妙笔=true;
    },
            },
            "miaobi3":{
                audio:["妙笔",2],
                trigger:{
                    player:"damageAfter",
                },
                check:function (event,player){
                return player.isTurnedOver();
            },
                filter:function (event,player){
                if(player.storage.妙笔){
                    return true;
                }
                return false;
            },
                content:function (){
                player.storage.妙笔=false;
                player.turnOver();
           player.gainMaxHp();
           player.draw(2);
            },
            },
            "外愚":{
                audio:["外愚",2],
                trigger:{
                    player:["damageEnd","losehpEnd"],
                },
                content:function (){
        "step 0"
        player.draw();
        "step 1"
        player.showHandcards();
        "step 2"
        if(!trigger.source) return;
        var cards=player.get('h');
        for(var i=1;i<cards.length;i++){
            if(get.color(cards[i])!=get.color(cards[0])){
        trigger.source.chooseToDiscard(1);
        player.recover();
        player.draw();
            }
        }
    },
                ai:{
                    threaten:0.9,
                },
                mod:{
                    wuxieRespondable:function (){
                        return false;
                    },
                },
                group:"外愚_1",
                subSkill:{
                    "1":{
                        enable:"phaseUse",
                        usable:1,
                        audio:["外愚",2],
                        filterTarget:function (card,player,target){
                return player!=target;
            },
                        filter:function (event,player){
                for(var i=0;i<game.players.length;i++){
                    return game.players[i].num('hej')>0;
                }
            },
                        prompt:"请选择1名角色",
                        content:function (){
                "step 0"
                target.chooseControl('basic','equip','trick','delay').ai=function(event){
                    switch(Math.floor(Math.random()*6)){
                        case 0:return 'equip';
                        case 1:case 4:case 5:return 'basic';
                        case 2:return 'trick';
                        case 3:return 'delay';
                    }
                };
                "step 1"
                game.log(target,'选择了'+get.translation(result.control));
                event.choice=result.control;
                target.popup(event.choice);
                var players=[];
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]!=player&&game.players[i].num('hej')){
                        players.push(game.players[i]);
                    }
                }
                if(!players.length){
                    event.finish();
                    return;
                }
                var target1=players.randomGet();
                event.card=target.get('hej').randomGet();
                target1.showCards(event.card);
                game.delay();
                "step 2"
                if(get.type(event.card)!=event.choice){
                    target.loseMaxHp();
                    if(player.hp<player.maxHp){
                        player.recover();
                    }
                    else{
                        event.finish();    
                    }    
                }
            },
                        ai:{
                            order:8,
                            result:{
                                target:function (player,target){
                        return ai.get.attitude(player,target);
                    },
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                },
            },
            "妙策":{
                enable:"phaseUse",
                audio:["妙策",2],
                filter:function (event,player){
        return player.num('h')>0
    },
                chooseButton:{
                    dialog:function (){
            var list=['taoyuan','wugu','juedou','huogong','jiedao','tiesuo','guohe','shunshou','wuzhong','wanjian','nanman'];
            for(var i=0;i<list.length;i++){
                list[i]=['锦囊','',list[i]];
            }
            return ui.create.dialog([list,'vcard']);
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            var player=_status.event.player;
            var recover=0,lose=1;
            for(var i=0;i<game.players.length;i++){
                if(!game.players[i].isOut()){
                    if(game.players[i].hp<game.players[i].maxHp){
                        if(ai.get.attitude(player,game.players[i])>0){
                            if(game.players[i].hp<2){
                                lose--;
                                recover+=0.5;
                            }
                            lose--;
                            recover++;
                        }
                        else if(ai.get.attitude(player,game.players[i])<0){
                            if(game.players[i].hp<2){
                                lose++;
                                recover-=0.5;
                            }
                            lose++;
                            recover--;
                        }
                    }
                    else{
                        if(ai.get.attitude(player,game.players[i])>0){
                            lose--;
                        }
                        else if(ai.get.attitude(player,game.players[i])<0){
                            lose++;
                        }
                    }
                }
            }
            if(lose>recover&&lose>0) return (button.link[2]=='nanman')?1:-1;
            if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
            return (button.link[2]=='wuzhong')?1:-1;
        },
                    backup:function (links,player){
            return {
                filterCard:true,
                selectCard:-1,
                audio:["妙策",2],
                popname:true,
                viewAs:{name:links[0][2]},
            }
        },
                    prompt:function (links,player){
            return '将全部手牌当作'+get.translation(links[0][2])+'使用';
        },
                },
                ai:{
                    order:1,
                    result:{
                        player:function (player){
                var num=0;
                var cards=player.get('h');
                if(cards.length>=3&&player.hp>=3) return 0;
                for(var i=0;i<cards.length;i++){
                    num+=Math.max(0,ai.get.value(cards[i],player,'raw'));
                }
                num/=cards.length;
                num*=Math.min(cards.length,player.hp);
                return 12-num;
            },
                    },
                    threaten:1.6,
                },
                group:"妙策_1",
                subSkill:{
                    "1":{
                        enable:"chooseToUse",
                        audio:["妙策",2],
                        filterCard:function (card){
        return get.color(card);
    },
                        viewAsFilter:function (player){
        return player.num('h')>0;
    },
                        viewAs:{
                            name:"wuxie",
                            suit:"spade",
                            number:4,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"spade","number":4,"name":"shencaojie","cardid":"9304423458","_transform":"translateX(0px)","_mouseentercreated":false,"clone":{"name":"shencaojie","suit":"spade","number":4,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":5474},"timeout":5463,"original":"h"}],
                        },
                        prompt:"将一张手牌当无懈可击使用",
                        check:function (card){return 8-ai.get.value(card)},
                        threaten:1.2,
                        mod:{
                            targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'&&player!=target){
                return false;
            }
        },
                        },
                        ai:{
                            playernowuxie:true,
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                },
            },
            "起兵":{
                skillAnimation:true,
                audio:["起兵",2],
                unique:true,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                filter:function (event,player){
        return !player.hasSkill('族裔')&&player.storage.权宜&&player.storage.权宜.length>=9;
    },
                content:function (){
        "step 0"
        player.chooseControl('recover_hp','draw_card',function(event,player){
            if(player.hp>=2) return 'draw_card';
            return 'recover_hp';
        });
        "step 1"
        if(result.control=='draw_card'){
            player.draw(4);
            player.gainMaxHp(4);
        }
        else{
            player.gainMaxHp();
            player.recover(3);
        }
        "step 2"
        player.loseMaxHp();
        player.addSkill('族裔');
    },
            },
            "权宜":{
                audio:["权宜",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                frequent:true,
                locked:false,
                init:function (player){
        player.storage.权宜=[];
    },
                filter:function (event){
        return event.num>0;
    },
                content:function (){
        "step 0"
        player.draw(2);
        player.recover();
        "step 1"
        if(player.num('he')){
            player.chooseCard('将'+get.cnNumber(trigger.num)+'张手牌置于武将牌上作为“权”',trigger.num,true);
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.cards&&result.cards.length){
            player.lose(result.cards,ui.special);
            player.storage.权宜=player.storage.权宜.concat(result.cards);
            player.syncStorage('权宜');
            player.markSkill('权宜');
            game.log(player,'将',result.cards,'置于武将牌上作为“权”');
        }
    },
                intro:{
                    content:"cards",
                },
                mod:{
                    maxHandcard:function (player,num){
            return num+=(player.storage.权宜.length*2);
        },
                },
                ai:{
                    maixie:true,
                    threaten:0.8,
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkill('jueqing')) return [1,-2];
                    var hasfriend=false;
                    for(var i=0;i<game.players.length;i++){
                        if(game.players[i]!=target&&ai.get.attitude(game.players[i],target)>=0){
                            hasfriend=true;break;
                        }
                    }
                    if(!hasfriend) return;
                    if(target.hp>=4) return [0.5,get.tag(card,'damage')*2];
                    if(!target.hasSkill('族裔')&&target.hp>1) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==3) return [0.5,get.tag(card,'damage')*1.5];
                    if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
                }
            },
                    },
                },
            },
            "族裔":{
                enable:"phaseUse",
                usable:1,
                audio:["族裔",2],
                filterTarget:true,
                filter:function (event,player){
        return player.storage.权宜.length>0;
    },
                content:function (){
        "step 0"
        player.chooseCardButton(player.storage.权宜,true);
        "step 1"
        var card=result.links[0];
        player.discard(card);
        player.storage.权宜.remove(card);
        if(!player.storage.权宜.length){
            player.unmarkSkill('权宜');
        }
        else{
            player.markSkill('权宜');
        }
        player.syncStorage('权宜');
        "step 2"
        target.draw(2);
        target.gainMaxHp();
        "step 3"
        if(target.num('h')>player.num('h')){
         target.damage();
        }
    },
                ai:{
                    order:1,
                    result:{
                        target:function (player,target){
                if(player!=target) return 0;
                if(player.num('h')+2<=player.hp+player.storage.权宜.length) return 1;
                return 0;
            },
                    },
                },
            },
            "酷法":{
                enable:"phaseUse",
                audio:["酷法",2],
                usable:1,
                filterCard:true,
                selectCard:[1,Infinity],
                filter:function (event,player){
        return player.num('h')>0;
    },
                check:function (card){
        if(ui.selected.cards.length) return -1;
        var val=ai.get.value(card);
        if(get.type(card)=='basic') return 8-ai.get.value(card);
        return 5-ai.get.value(card);
    },
                filterTarget:function (card,player,target){
        return player!=target;
    },
                content:function (){
        "step 0"
        var types=[];
        for(var i=0;i<cards.length;i++){
            types.add(get.type(cards[i],'trick'));
        }
        target.chooseToDiscard(function(card){
            return !_status.event.types.contains(2,get.type(card,'trick'));
        }).set('ai',function(card){
            if(_status.event.player.isTurnedOver()) return -1;
            return 8-ai.get.value(card);
        }).set('types',types).set('dialog',['弃置一张与'+get.translation(player)+'弃置的牌类别均不同的牌，或失去1点体力上限，流失1点体力，并将武将牌翻面','hidden',cards]);
        "step 1"
        if(!result.bool){
            target.turnOver();
            target.loseHp(cards.length);
            target.loseMaxHp();
        }
    },
                ai:{
                    order:2,
                    expose:0.3,
                    threaten:1.8,
                    result:{
                        target:function (player,target){
                if(target.isTurnedOver()) return 2;
                return -1/(target.num('h')+1);
            },
                    },
                },
            },
            "御敌":{
                audio:["御敌",2],
                trigger:{
                    player:["damageAfter","loseHpEnd"],
                },
                direct:true,
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        var next=player.chooseToDiscard(get.prompt('御敌'));
        next.logSkill='御敌';
        next.set('ai',function(card){
            return 7-ai.get.value(card);
        });
        "step 1"
        if(result.bool){
            var type=get.type(result.cards[0],'trick');
            if(trigger.source){
                trigger.source.chooseToDiscard('弃置一张'+get.translation(type)+'牌或令'+get.translation(player)+'回复一点体力',function(card){
                    return get.type(card,'trick')==_status.event.type;
                }).set('ai',function(card){
                    if(ai.get.recoverEffect(_status.event.getParent().player,_status.event.player,_status.event.player)<0){
                        return 7-ai.get.value(card);
                    }
                    return 0;
                }).set('type',type);
            }
            else{
                event.recover=true;
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.recover){
            player.recover();
            player.draw();
        }
        else if(result.bool){
            player.draw();
            player.gainMaxHp();
        }
        else{
            player.recover();
            player.draw();
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage'&&target.num('h'))){
                    return 0.8
                }
            },
                    },
                },
            },
            "中正":{
                enable:"phaseUse",
                usable:5,
                audio:["中正",2],
                filter:function (event,player){
        return player.num('h')>0;
    },
                filterTarget:function (card,player,target){
        return target.hp<target.maxHp&&!target.tempSkills.zhongzheng2;
    },
                filterCard:true,
                check:function (card){
        return 6-ai.get.value(card);
    },
                content:function (){
        "step 0"
        target.judge(function(card){
            return get.color(card)=='black'?1:-1;
        });
        "step 1"
        if(result.bool){
            target.draw(target.maxHp-target.hp);
            target.addTempSkill('zhongzheng2','phaseAfter');
        }
        else{
            player.turnOver();
            player.loseHp();
        }
    },
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                if(player.isTurnedOver()) return 1;
                if(target.hp<target.maxHp-1) return 1;
                return 0;
            },
                    },
                },
            },
            "zhongzheng2":{
            },
            "法定":{
                audio:["法定",2],
                trigger:{
                    global:["turnOverAfter","loseHpEnd"],
                },
                filter:function (event,player){
        if(event.name=='link') return event.player.isLinked();
        return true;
    },
                check:function (event,player){
        return ai.get.attitude(player,event.player)>0;
    },
                content:function (){
        var num=player.maxHp-player.num('h');
        if(num>0){
            player.line(trigger.player,'green');
            trigger.player.draw(num);
            trigger.player.recover();
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "驹骑":{
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-(from.maxHp-from.hp);
        },
                    globalTo:function (from,to,distance){
            return distance+(from.maxHp-from.hp);
        },
                },
            },
            "虎豹":{
                audio:["虎豹",2],
                trigger:{
                    source:"damageBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.player)<0;
    },
                filter:function (event,player){
        return event.card&&event.card.name=='sha'&&player.get('e','1');
    },
                content:function (){
        'step 0'
        var num=1;
        var info=get.info(player.get('e','1'));
        if(info&&info.distance&&info.distance.attackFrom){
            num-=info.distance.attackFrom;
        }
        if(trigger.player.num('h')<num){
            event.directfalse=true;
        }
        else{
            trigger.player.chooseToDiscard(num,'弃置'+get.cnNumber(num)+'张手牌，或令杀的伤害+X').set('ai',function(card){
                var player=_status.event.player;
                if(player.hp==1){
                    if(get.type(card)=='basic'){
                        return 8-ai.get.value(card);
                    }
                    else{
                        return 10-ai.get.value(card);
                    }
                }
                else{
                    if(num>2){
                        return 0;
                    }
                    return 8-ai.get.value(card);
                }
            });
        }
        'step 1'
        if(!event.directfalse&&result.bool){
            var e1=player.get('e','1');
            if(e1){
                player.discard(e1);
            }
        }
        else{
            trigger.num+=3;
        }
    },
            },
            "墨心":{
                audio:["墨心",2],
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
        if(event.responded) return false;
        if(!event.filterCard({name:'shan'})) return false;
        if(event.parent.name!='sha') return false;
        var hs=player.get('he',{color:'black'});
        for(var i=0;i<hs.length;i++){
            if(get.type(hs[i])!='basic'){
                break;
            }
        }
        if(i==hs.length) return false;
        return true;
    },
                direct:true,
                content:function (){
        "step 0"
        player.chooseCard(get.prompt('墨心'),'he',function(card){
            return get.type(card)!='basic'&&get.color(card)=='black';
        }).set('ai',function(card){
            if(!_status.event.player.num('h','shan')){
                return 8-ai.get.value(card);
            }
            return 6-ai.get.value(card);
        });
        "step 1"
        if(result.bool){
            trigger.untrigger();
            trigger.responded=true;
            trigger.result={bool:true,card:{name:'shan'}}
            player.lose(result.cards,ui.special);
            player.$throw(result.cards);
            event.card=result.cards[0];
            player.logSkill('墨心');
            player.draw(2);
        }
        else{
            event.finish();
        }
        'step 2'
        if(player==game.me&&event.card){
            game.delay();
        }
        'step 3'
        if(event.card){
            ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
        }
    },
                group:["moxin_count","moxin_count2","moxin_sha","moxin_jiu","moxin_tao"],
            },
            "moxin_count":{
                init:function (player){
        player.storage.墨心={};
    },
                trigger:{
                    global:"phaseBegin",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
        player.storage.墨心={};
    },
            },
            "moxin2":{
            },
            "moxin_count2":{
                trigger:{
                    player:"useCard",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
                if(!player.storage.墨心) player.storage.墨心={};
                switch(trigger.card.name){
                    case 'sha':player.storage.墨心.sha=true;break;
                    case 'tao':player.storage.墨心.tao=true;break;
                    case 'jiu':player.storage.墨心.jiu=true;break;
                }
            },
            },
            "moxin_sha":{
                enable:"chooseToUse",
                viewAs:{
                    name:"sha",
                    suit:"club",
                    number:5,
                },
                viewAsFilter:function (player){
                if(!player.storage.墨心) player.storage.墨心={};
                if(player.storage.墨心.sha) return false;
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        return true;
                    }
                }
                return false;
},
                precontent:function (){
                'step 0'
                var card=event.result.cards[0];
                event.card=card;
                player.$throw(card,1000);
                game.log(player,'将',card,'置于牌堆顶');
                event.result.cards.length=0;
                player.lose(card);
                'step 1'
                game.delay();
                'step 2'
                ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            },
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                ai:{
                    skillTagFilter:function (player,tag,arg){
                    if(arg!='use') return false;
                    if(!player.storage.墨心) player.storage.墨心={};
                    if(player.storage.墨心.sha) return false;
                    var hs=player.get('he',{color:'black'});
                    for(var i=0;i<hs.length;i++){
                        if(get.type(hs[i])!='basic'){
                            return true;
                        }
                    }
                    return false;
                },
                    order:2.9,
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    result:{
                        target:function (player,target){
                    if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                        if(ai.get.attitude(player,target)>0){
                            return -6;
                        }
                        else{
                            return -3.05+(kzol_sgs.getDefenseSha(target,player))/30;
                        }
                    }
                    return -1.55+(kzol_sgs.getDefenseSha(target,player))/30;
                },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                        natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                        fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                        thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                        poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                    },
                },
            },
            "moxin_tao":{
                enable:"chooseToUse",
                viewAs:{
                    name:"tao",
                    suit:"spade",
                    number:6,
                },
                viewAsFilter:function (player){
                if(!player.storage.墨心) player.storage.墨心={};
                if(player.storage.墨心.tao) return false;
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        return true;
                    }
                }
                return false;
            },
                precontent:function (){
                'step 0'
                var card=event.result.cards[0];
                event.card=card;
                player.$throw(card,1000);
                game.log(player,'将',card,'置于牌堆顶');
                event.result.cards.length=0;
                player.lose(card);
                'step 1'
                game.delay();
                'step 2'
                ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            },
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                ai:{
                    order:4,
                    skillTagFilter:function (player){
                    if(!player.storage.墨心) player.storage.墨心={};
                    if(player.storage.墨心.tao) return false;
                    var hs=player.get('he',{color:'black'});
                    for(var i=0;i<hs.length;i++){
                        if(get.type(hs[i])!='basic'){
                            return true;
                        }
                    }
                    return false;
                },
                    save:true,
                    basic:{
                        order:function (card,player){
                        if(player.hasSkillTag('pretao')) return 5;
                        return 2;
                    },
                        useful:[8,6.5],
                        value:[8,6.5],
                    },
                    result:{
                        target:function (player,target){
                        // if(player==target&&player.hp<=0) return 2;
                        var nh=target.num('h');
                        var keep=false;
                        if(nh<=target.hp){
                            keep=true;
                        }
                        else if(nh==target.hp+1&&target.hp>=2&&target.num('h','tao')<=1){
                            keep=true;
                        }
                        var mode=get.mode();
                        if(target.hp>=2&&keep&&target.hasFriend()){
                            if(target.hp>2) return 0;
                            if(target.hp==2){
                                for(var i=0;i<game.players.length;i++){
                                    if(target!=game.players[i]&&ai.get.attitude(target,game.players[i])>=3){
                                        if(game.players[i].hp<=1) return 0;
                                        if(mode=='identity'&&game.players[i].isZhu&&game.players[i].hp<=2) return 0;
                                    }
                                }
                            }
                        }
                        if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                        var att=ai.get.attitude(player,target);
                        if(att<3&&att>=0&&player!=target) return 0;
                        var tri=_status.event.getTrigger();
                        if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                            if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                                var num=0;
                                for(var i=0;i<game.players.length;i++){
                                    if(game.players[i].identity=='fan'){
                                        num+=game.players[i].num('h','tao');
                                        if(num>2) return 2;
                                    }
                                }
                                if(num>1&&player==target) return 2;
                                return 0;
                            }
                        }
                        if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                            if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                                return 0;
                            }
                        }
                        if(mode=='stone'&&target.isMin()&&
                        player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                        tri.source!=target.getEnemy()){
                            return 0;
                        }
                        return 2;
                    },
                    },
                    tag:{
                        recover:1,
                        save:1,
                    },
                },
            },
            "moxin_jiu":{
                enable:"chooseToUse",
                viewAs:{
                    name:"jiu",
                    suit:"club",
                    number:5,
                },
                viewAsFilter:function (player){
                if(!player.storage.墨心) player.storage.墨心={};
                if(player.storage.墨心.jiu) return false;
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        return true;
                    }
                }
                return false;
            },
                precontent:function (){
                'step 0'
                var card=event.result.cards[0];
                event.card=card;
                player.$throw(card,1000);
                game.log(player,'将',card,'置于牌堆顶');
                event.result.cards.length=0;
                player.lose(card);
                'step 1'
                game.delay();
                'step 2'
                ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            },
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                ai:{
                    skillTagFilter:function (player){
                    if(!player.storage.墨心) player.storage.墨心={};
                    if(player.storage.墨心.jiu) return false;
                    if(player.hp>0) return false;
                    var hs=player.get('he',{color:'black'});
                    for(var i=0;i<hs.length;i++){
                        if(get.type(hs[i])!='basic'){
                            return true;
                        }
                    }
                    return false;
                },
                    save:true,
                    basic:{
                        useful:function (card,i){
                        if(_status.event.player.hp>1){
                            if(i==0) return 5;
                            return 1;
                        }
                        if(i==0) return 7.3;
                        return 3;
                    },
                        value:function (card,player){
                        if(player.hp>1){
                            if(i==0) return 5;
                            return 1;
                        }
                        if(i==0) return 7.3;
                        return 3;
                    },
                    },
                    order:function (){
                    return lib.card.sha.ai.order+0.2;
                },
                    result:{
                        target:function (player,target){
                        if(target&&target.hp<=0) return 2;
                        if(lib.config.mode=='stone'&&!player.isMin()){
                            if(player.getActCount()+1>=player.actcount) return 0;
                        }
                        var shas=player.get('h','sha');
                        if(shas.length>1){
                            if(player.num('e','zhuge')) return 0;
                            if(player.hasSkill('paoxiao')) return 0;
                            if(player.hasSkill('fengnu')) return 0;
                            if(!player.getStat().card.sha){
                                if(player.hasSkill('tanlin3')) return 0;
                                if(player.hasSkill('zhaxiang2')) return 0;
                            }
                        }
                        var card;
                        if(shas.length){
                            for(var i=0;i<shas.length;i++){
                                if(lib.filter.filterCard(shas[i],target)){
                                    card=shas[i];break;
                                }
                            }
                        }
                        if(card){
                            for(var i=0;i<game.players.length;i++){
                                if(ai.get.attitude(target,game.players[i])<0&&
                                    target.canUse(card,game.players[i],true,true)&&
                                    !game.players[i].num('e','baiyin')){
                                    if(ai.get.effect(game.players[i],card,target)>0) return 1;
                                }
                            }
                        }
                        return 0;
                    },
                    },
                    tag:{
                        save:1,
                    },
                },
            },
            "moxin_sha_old":{
                enable:"phaseUse",
                discard:false,
                prepare:"throw",
                filter:function (event,player){
                if(!player.storage.墨心) player.storage.墨心={};
                if(player.storage.墨心.sha) return false;
                if(!lib.filter.filterCard({name:'sha'},player,event)){
                    return false;
                }
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        break;
                    }
                }
                if(i==hs.length) return false;
                for(var i=0;i<game.players.length;i++){
                    if(player.canUse('sha',game.players[i])) return true;
                }
                return false;
            },
                position:"he",
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                filterTarget:function (card,player,target){
                return player.canUse('sha',target);
            },
                check:function (card){
                return 6-ai.get.value(card);
            },
                content:function (){
                game.log(player,'将',cards,'置于牌堆顶');
                ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
                player.useCard({name:'sha'},targets);
            },
                ai:{
                    order:2,
                    result:{
                        target:function (player,target){
                        return ai.get.effect(target,{name:'sha'},player,target);
                    },
                    },
                },
            },
            "moxin_tao_old":{
                enable:"chooseToUse",
                discard:false,
                prepare:"throw",
                filter:function (event,player){
                if(!player.storage.墨心) player.storage.墨心={};
                if(player.storage.墨心.tao) return false;
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        break;
                    }
                }
                if(i==hs.length) return false;
                if(event.type=='dying'){
                    return event.filterCard({name:'tao'},player);
                }
                if(event.getParent().name!='phaseUse') return false;
                if(!lib.filter.filterCard({name:'tao'},player,event)){
                    return false;
                }
                return player.hp<player.maxHp;
            },
                position:"he",
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                filterTarget:function (card,player,target){
                if(_status.event.type=='dying'){
                    return target==_status.event.dying;
                }
                return player==target;
            },
                selectTarget:-1,
                check:function (card){
                return 8-ai.get.value(card);
            },
                content:function (){
                game.log(player,'将',cards,'置于牌堆顶');
                ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
                player.useCard({name:'tao'},targets).delayx=false;
            },
                ai:{
                    skillTagFilter:function (player){
                    if(!player.storage.墨心) player.storage.墨心={};
                    if(player.storage.墨心.tao) return false;
                    var hs=player.get('he',{color:'black'});
                    for(var i=0;i<hs.length;i++){
                        if(get.type(hs[i])!='basic'){
                            return true;
                        }
                    }
                    return false;
                },
                    threaten:1.5,
                    save:true,
                    order:9,
                    result:{
                        target:function (player,target){
                        return ai.get.effect(target,{name:'tao'},player,target);
                    },
                    },
                },
            },
            "moxin_jiu_old":{
                enable:"chooseToUse",
                discard:false,
                prepare:"throw",
                filter:function (event,player){
                if(!lib.filter.filterCard({name:'jiu'},player,event)){
                    return false;
                }
                if(player.storage.墨心.jiu) return false;
                var hs=player.get('he',{color:'black'});
                for(var i=0;i<hs.length;i++){
                    if(get.type(hs[i])!='basic'){
                        break;
                    }
                }
                if(i==hs.length) return false;
                if(event.type=='dying'){
                    return event.filterCard({name:'jiu'},player);
                }
                if(event.getParent().name!='phaseUse') return false;
                return true;
            },
                position:"he",
                filterCard:function (card){
                return get.type(card)!='basic'&&get.color(card)=='black';
            },
                filterTarget:function (card,player,target){
                if(_status.event.type=='dying'){
                    return target==_status.event.dying;
                }
                return player==target;
            },
                selectTarget:-1,
                check:function (card){
                if(_status.event.type=='dying'){
                    return 8-ai.get.value(card);
                }
                return 6-ai.get.value(card);
            },
                content:function (){
                game.log(player,'将',cards,'置于牌堆顶');
                ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
                player.useCard({name:'jiu'},targets).delayx=false;
            },
                ai:{
                    save:true,
                    skillTagFilter:function (player){
                    if(!player.storage.墨心) player.storage.墨心={};
                    if(player.storage.墨心.jiu) return false;
                    if(player.hp>0) return false;
                    var hs=player.get('he',{color:'black'});
                    for(var i=0;i<hs.length;i++){
                        if(get.type(hs[i])!='basic'){
                            return true;
                        }
                    }
                    return false;
                },
                    order:function (){
                    return lib.card.sha.ai.order+0.2;
                },
                    result:{
                        target:function (player,target){
                        return ai.get.effect(target,{name:'jiu'},player,target);
                    },
                    },
                },
            },
            "辅佐":{
                audio:["辅佐",2],
                trigger:{
                    global:"useCardEnd",
                },
                usable:2,
                filter:function (event){
        return get.color(event.card)=='black';
    },
                content:function (){        
        player.recover();
        player.draw();
        player.turnOver();
    },
                ai:{
                    expose:0.2,
                },
            },
            "诏书":{
                enable:"phaseUse",
                usable:5,
                audio:["诏书",2],
                check:function (card){
        return 8-get.value(card);
    },
                filterCard:true,
                discard:false,
                lose:false,
                content:function (){
        'step 0'
        player.showCards(cards);
        'step 1'
        if(player.storage.诏书_2){
            event.target=player;
        }
        else{
            var targets=game.filterPlayer();
            targets.remove(player);
            targets.sort(function(a,b){
                return Math.max(1,get.distance(player,a))-Math.max(1,get.distance(player,b));
            });
            var distance=Math.max(1,get.distance(player,targets[0]));
            for(var i=1;i<targets.length;i++){
                if(Math.max(1,get.distance(player,targets[i]))>distance){
                    targets.splice(i);break;
                }
            }
            player.chooseTarget(true,function(card,player,target){
                return _status.event.targets.contains(target);
            }).set('ai',function(target){
                return get.attitude(_status.event.player,target);
            }).set('targets',targets);
        }
        'step 2'
        if(!event.target){
            event.target=result.targets[0];
            player.line(result.targets,'green');
        }
        if(!event.target){
            event.finish();
            return;
        }
        var list=['sha','sha','sha','shan','tao','jiu'];
        if(player.storage.诏书1){           list=list.concat(['taoyuan','wugu','juedou','huogong','jiedao','tiesuo','guohe','shunshou','wuzhong','wanjian','nanman']);
        }
        for(var i=0;i<list.length;i++){
            if(i<=6){
                if(i==1){
                    list[i]=['基本','',list[i],'fire'];
                }
                else if(i==2){
                    list[i]=['基本','',list[i],'thunder'];
                }
                else{
                    list[i]=['基本','',list[i]];
                }
            }
            else{
                list[i]=['锦囊','',list[i]];
            }
        }
        var choice;
        if(get.attitude(event.target,player)<=0){
            choice='shan';
        }
        else{
            if(!player.storage.诏书){
                var nh=player.countCards('h');
                if(nh>=5){
                    choice='jiu';
                }
                else if(nh<=2){
                    choice='sha';
                }
                else{
                    choice=Math.random()<0.5?'sha':'jiu';
                }
            }
            else{
                var recover=0,lose=1,players=game.filterPlayer();
                for(var i=0;i<players.length;i++){
                    if(!players[i].isOut()&&players[i]!=player){
                        if(players[i].hp<players[i].maxHp){
                            if(get.attitude(player,players[i])>0){
                                if(players[i].hp<2){
                                    lose--;
                                    recover+=0.5;
                                }
                                lose--;
                                recover++;
                            }
                            else if(get.attitude(player,players[i])<0){
                                if(players[i].hp<2){
                                    lose++;
                                    recover-=0.5;
                                }
                                lose++;
                                recover--;
                            }
                        }
                        else{
                            if(get.attitude(player,players[i])>0){
                                lose--;
                            }
                            else if(get.attitude(player,players[i])<0){
                                lose++;
                            }
                        }
                    }
                }
                if(lose>recover&&lose>0){
                    choice=Math.random()<0.7?'nanman':'wanjian';
                }
                else if(lose<recover&&recover>0){
                    choice='taoyuan';
                }
                else{
                    choice=Math.random()<0.5?'wuzhong':'shunshou';
                }
            }
        }
        event.target.chooseButton(['诏书',[list,'vcard']],true).set('ai',function(button){
            return button.link[2]==_status.event.choice?1:0;
        }).set('choice',choice);
        'step 3'
        var chosen=result.links[0][2];
        var nature=result.links[0][3];
        var fakecard={name:chosen,suit:cards[0].suit,number:cards[0].number,nature:nature};
        event.target.showCards(game.createCard(fakecard),get.translation(event.target)+'声明了'+get.translation(chosen));
        player.storage.诏书=cards[0];
        player.storage.诏书_card=fakecard;
        game.broadcastAll(function(name){
            lib.skill.诏书_2.viewAs=fakecard;
        },fakecard);
    },
                ai:{
                    order:9,
                    result:{
                        player:1,
                    },
                },
                intro:{
                    content:function (storage,player){
            if(player.storage.诏书_2){
                return '出牌阶段限一次，你可以展示一张手牌，然后你声明一张基本牌或普通锦囊牌的牌名。在此出牌阶段内，你可以将此手牌当声明的牌使用且你不能被选择为目标';
            }
            else{
                return '出牌阶段限一次，你可以展示一张手牌，然后选择距离最近的一名其他角色，该角色声明一张基本牌或普通锦囊牌的牌名。在此出牌阶段内，你可以将此手牌当声明的牌使用且你不能被选择为目标';
            }
        },
                },
                group:["诏书_2","诏书_3"],
                subSkill:{
                    "2":{
                        enable:"phaseUse",
                        audio:["诏书",2],
                        filter:function (event,player){
                if(!player.storage.诏书) return false;
                var name=player.storage.诏书_card.name;
                if(name=='tao'||name=='shan'||name=='wuzhong'||name=='jiu') return false;
                return player.getCards('h').contains(player.storage.诏书);
            },
                        filterCard:function (card,player){
                return card==player.storage.诏书;
            },
                        selectCard:-1,
                        popname:true,
                        filterTarget:function (card,player,target){
                if(player==target) return false;
                return lib.filter.filterTarget(player.storage.诏书_card,player,target);
            },
                        check:function (card){
                return 8-get.value(card);
            },
                        ai:{
                            order:6,
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        silent:true,
                        content:function (){
                delete player.storage.诏书;
                delete player.storage.诏书_card;
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
            },
            "禅心":{
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                frequent:true,
                audio:["禅心",2],
                content:function (){
        'step 0'
        if(player.storage.诏书1&&player.storage.诏书_2){
            player.draw();
            player.recover();
            event.finish();
        }
        else{
            var list=['draw_card','更改描述'];
            var prompt;
            if(player.storage.诏书1){
                prompt='摸一张牌或更改诏书的描述<br><br><div class="text">更改描述：将“选择距离最近的一名其他角色，该角色”改为“你”';
            }
            else{
                prompt='摸一张牌或更改诏书的描述<br><br><div class="text">更改描述：将“基本牌”改为“基本牌或锦囊牌”';
            }
            player.chooseControl(list,function(){
                if(!_status.event.player.hasSkill('诏书')) return 'draw_card';
                return '更改描述';
            }).set('prompt',prompt);
        }
        'step 1'
        if(result.control=='draw_card'){
            player.draw();
            player.recover();
        }
        else{
            game.log(player,'更改了','【诏书】','的描述');
            player.popup('更改描述');
            player.markSkill('诏书');
            if(player.storage.诏书1){
                player.storage.诏书_2=true;
            }
            else{
                player.storage.诏书1=true;
            }
        }
    },
            },
            "pilang2":{
                audio:["劈浪",2],
                trigger:{
                    player:"damageEnd",
                },
                content:function (){
        player.draw();
        player.gainMaxHp();
    },
            },
            "劈浪":{
                audio:["劈浪",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=(player.maxHp-player.hp);
    },
                group:["pilang2"],
            },
            "雄才":{
                audio:["雄才",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                priority:5,
                filter:function (event,player){
  return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0])=='d';
if(event.player==player&&!event.player.skills) return false;
return true;
},
                forced:true,
                direct:true,
                content:function (){
        "step 0"
        if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0])=='d'){
            player.chooseControl('摸一张牌回复2点体力','获得本次造成伤害的牌并增加1点体力上限','cancel2').ai=function(){
                var trigger=_status.event.getTrigger();
                if(trigger.cards.length==1&&trigger.cards[0].name=='sha') return 0;
                return 1;
            };
        }
        else{
            player.chooseControl('摸一张牌回复1点体力','cancel2');
        }
        "step 1"
        if(result.control=='获得本次造成伤害的牌并增加1点体力上限'){
            player.logSkill('雄才');
            player.gain(trigger.cards);
            player.$gain2(trigger.cards);
            player.gainMaxHp(1);
        }
        else if(result.control=='摸一张牌回复2点体力'){
            player.logSkill('雄才');
            player.draw();
            player.recover(2)._triggered=null;
        }
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage')&&player!=target) return [1,1];
            },
                    },
                },
            },
            "护主":{
                audio:["护主",2],
                unique:true,
                zhuSkill:true,
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
        if(event.responded) return false;
        if(player.storage.护主) return false;
        if(!player.hasZhuSkill('hujia')) return false;
        if(event.filterCard({name:'shan'})==false) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].group=='wei') return true;
        }
        return false;
    },
                check:function (event,player){
        if(ai.get.damageEffect(player,event.player,player)>=0) return false;
        return true;
    },
                content:function (){
        "step 0"
        if(event.current==undefined) event.current=player.next;
        if(event.current==player){
            event.finish();
        }
        else if(event.current.group=='wei'){
            if((event.current==game.me&&!_status.auto)||(
                ai.get.attitude(event.current,player)>2)||
                event.current.isOnline()){
                player.storage.护主=true;
                var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
                next.set('ai',function(){
                    var event=_status.event;
                    return (ai.get.attitude(event.player,event.source)-2);
                });
                next.autochoose=lib.filter.autoRespondShan;
                next.set('source',player);
            }
        }
        "step 1"
        player.storage.护主=false;
        if(result.bool){
            event.finish();
            trigger.result=result;
            trigger.responded=true;
            trigger.animate=false;
            if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                event.current.ai.shown+=0.3;
                if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
            }
        }
        else{
            event.current=event.current.next;
            event.goto(0);
        }
    },
            },
            "料敌":{
                audio:["料敌",2],
                trigger:{
                    player:["damageEnd","loseHpEnd","loseMaxHpEnd"],
                },
                direct:true,
                filter:function (event,player){
        return (event.source&&event.source.num('he'));
    },
                content:function (){
        "step 0"
        event.num=trigger.num;
        "step 1"
        if(num==0||trigger.source.num('he')==0){
            event.finish();
            return;
        }
        event.num--;
        player.choosePlayerCard(get.prompt('料敌',trigger.source),trigger.source,ai.get.buttonValue,'he');
        "step 2"
        if(result.bool){
            player.logSkill('料敌',trigger.source);
            player.gain(result.links[0],trigger.source);
            trigger.source.$give(player);
            trigger.source.damage(2)._triggered=null;
            event.goto(1);
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(player.num('he')>1&&get.tag(card,'damage')){
                    if(player.hasSkill('jueqing')) return [1,-1.5];
                    if(ai.get.attitude(target,player)<0) return [1,1];
                }
            },
                    },
                },
            },
            "谋士":{
                audio:["谋士",2],
                trigger:{
                    global:"judge",
                },
                direct:true,
                filter:function (event,player){
        return player.num('he')>0;
    },
                content:function (){
        "step 0"
        player.recover();
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('谋士'),'he').set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var player=_status.event.player;
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=ai.get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result-ai.get.value(card)/2;
            }
            else{
                return -result-ai.get.value(card)/2;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.logSkill('谋士');
            if(trigger.player.judging[0].clone){
                trigger.player.judging[0].clone.classList.remove('thrownhighlight');
                game.broadcast(function(card){
                    if(card.clone){
                        card.clone.classList.remove('thrownhighlight');
                    }
                },trigger.player.judging[0]);
                game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
            }
            ui.discardPile.appendChild(trigger.player.judging[0]);
            trigger.player.judging[0]=result.cards[0];
            if(!get.owner(result.cards[0],'judge')){
                trigger.position.appendChild(result.cards[0]);
            }
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
            game.delay(2);
        }
    },
                ai:{
                    tag:{
                        rejudge:1,
                    },
                },
            },
            "獠牙":{
                audio:["獠牙",2],
                trigger:{
                    player:["phaseEnd","phaseBegin"],
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget([1,5],get.prompt('獠牙'),[1,2,3,4,5],function(card,player,target){
            return target.num('he')>0&&player!=target&&target.num('he')!=player.num('he');
        },function(target){
            var att=ai.get.attitude(_status.event.player,target);
            if(target.hasSkill('tuntian')) return att/10;
            return 1-att;
        });
        "step 1"
        if(result.bool){
            player.logSkill('獠牙',result.targets);
            for(var i=0;i<result.targets.length;i++){
                player.gain([1,5],result.targets[i].get('he').randomGet(),result.targets[i]);
                result.targets[i].$give([1,5],player);
            }
            trigger.num-=result.targets.length
        }
    },
                ai:{
                    threaten:1.6,
                    expose:0.2,
                },
            },
            "偷营":{
                audio:["偷营",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
                return player!=target&&target.num('he')>0&&player.num('he')>=target.num('he');
            },
                prompt:"请选择1名角色",
                content:function (){
                "step 0"    
                var num=target.num('he')
                player.chooseToDiscard(num,true);
                "step 1"
                player.gain(target.get('he'));
                target.$give(target.get('he'),player);
                var num=target.num('he');
                target.damage('thunder',num,true);
            },
                ai:{
                    order:9.5,
                    result:{
                        target:function (player,target){
                        return ai.get.damageEffect(target,player);
                    },
                    },
                    expose:0.2,
                },
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='bingliang'||card.name=='lebu'||card.name=='shandian') return false;
        },
                },
            },
            "虎痴":{
                audio:["虎痴",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                check:function (event,player){
        if(player.num('h','sha')) return true;
        return Math.random()<0.5;
    },
                content:function (){
        "step 0"
        player.addTempSkill('huchi2',{player:'phaseBefore'});
        trigger.untrigger();
        trigger.finish();
        "step 1"
        event.cards=get.cards(10);
        player.showCards(event.cards,'虎痴');
        "step 2"
        for(var i=0;i<cards.length;i++){
            if(get.type(cards[i],'trick')=='trick'&&cards[i].name!='juedou'){
                ui.discardPile.appendChild(cards[i]);
                cards.splice(i,1);i--;
            }
            else if(get.type(cards[i])=='equip'&&get.subtype(cards[i])!='equip1'){
                ui.discardPile.appendChild(cards[i]);
                cards.splice(i,1);i--;
            }
        }
        player.gain(cards,'gain2');
    },
            },
            "huchi2":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&event.notLink();
    },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
            },
            "狂拳":{
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='bingliang'||card.name=='lebu'||card.name=='shandian'||card.name=='guohe') return false;
        },
                },
            },
            "惊天":{
                audio:["惊天",2],
                trigger:{
                    player:"judgeEnd",
                },
                frequent:true,
                filter:function (event,player){
        if(get.owner(event.result.card)){
            return false;
        }
        if(event.nogain&&event.nogain(event.result.card)){
            return false;
        }
        return true;
    },
                content:function (){
        player.gain(trigger.result.card);
        player.$gain2(trigger.result.card);
        player.draw(get.cards(player.maxHp-player.hp));
        player.recover(player.maxHp-player.hp);
    },
                group:"jingtian2",
            },
            "jingtian2":{
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
            },
            "遗策":{
                audio:["遗策",2],
                group:"yice3",
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                frequent:true,
                filter:function (event){
        return (event.num>0)
    },
                content:function (){
        "step 0"
        event.num=1;
        event.count=1;
        "step 1"
        player.gain(get.cards(player.maxHp-player.hp));
        player.$draw(player.MaxHp-player.Hp);
        "step 2"
        player.chooseCardTarget({
            filterCard:true,
            selectCard:[1,2],
            filterTarget:function(card,player,target){
                return player!=target&&target!=event.temp;
            },
            ai1:function(card){
                if(ui.selected.cards.length>0) return -1;
                if(card.name=='du') return 20;
                return (_status.event.player.num('h')-_status.event.player.hp);
            },
            ai2:function(target){
                var att=ai.get.attitude(_status.event.player,target);
                if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
                    return 1-att;
                }
                return att-4;
            },
            prompt:'请选择要送人的卡牌'
        });
        "step 3"
        if(result.bool){
            player.lose(result.cards,ui.special);
            if(result.targets[0].hasSkill('yice2')){
                result.targets[0].storage.yice2=result.targets[0].storage.yice2.concat(result.cards);
            }
            else{
                result.targets[0].addSkill('yice2');
                result.targets[0].storage.yice2=result.cards;
            }
            player.$give(result.cards.length,result.targets[0]);
            player.line(result.targets,'green');
            game.addVideo('storage',result.targets[0],['yice2',get.cardsInfo(result.targets[0].storage.yice2),'cards']);
            if(num==1){
                event.temp=result.targets[0];
                event.num++;
                event.goto(2);
            }
            else if(event.count<trigger.num){
                delete event.temp;
                event.num=1;
                event.count++;
                event.goto(1);
            }
        }
        else if(event.count<trigger.num){
            delete event.temp;
            event.num=1;
            event.count++;
            event.goto(1);
        }
    },
                ai:{
                    maixie:true,
                    result:{
                        effect:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkill('jueqing')) return [1,-2];
                    if(player.hp>=4) return [1,get.tag(card,'damage')*2];
                    if(target.hp==3) return [1,get.tag(card,'damage')*1.5];
                    if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
                }
            },
                    },
                    threaten:0.6,
                },
            },
            "yice2":{
                trigger:{
                    player:"phaseDrawBegin",
                },
                forced:true,
                mark:true,
                popup:"遗策拿牌",
                content:function (){
        player.$draw(player.storage.yice2.length);
        player.gain(player.storage.yice2);
        delete player.storage.yice2;
        player.removeSkill('yice2');
        game.delay();
    },
                intro:{
                    content:"cardCount",
                },
            },
            "yice3":{
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
    if(trigger.num>1) trigger.num=1
},
            },
            "厚兵":{
                audio:["厚兵",2],
                trigger:{
                    player:"phaseDrawBefore",
                },
                direct:true,
                content:function (){
        "step 0"
        event.cards=get.cards(5);
        player.chooseCardButton(event.cards,3,'选择获得三张牌').set('ai',ai.get.buttonValue);
        "step 1"
        if(result.bool){
            player.logSkill('厚兵');
            trigger.untrigger();
            trigger.finish();
            var choice=[];
            for(var i=0;i<result.links.length;i++){
                choice.push(result.links[i]);
                cards.remove(result.links[i]);
            }
            for(var i=0;i<cards.length;i++){
                ui.cardPile.appendChild(cards[i]);
            }
            player.gain(choice,'draw');
            game.log(player,'获得了三张牌')
        }
    },
            },
            "破虏":{
                audio:["破虏",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                    source:"damageEnd",
                },
                filter:function (event){
        return event.num&&event.source&&event.player&&
        event.player.isAlive()&&event.source.isAlive()&&event.source!=event.player;
    },
                check:function (event,player){
        if(event.player==player) return ai.get.attitude(player,event.source)>-3;
        return ai.get.attitude(player,event.player)>-3;
    },
                content:function (){
        "step 0"
        game.asyncDraw([trigger.player,trigger.source],trigger.num);
        player.recover(trigger.num);
        player.addTempSkill(trigger.source.skills.randomGet())
        player.addTempSkill(trigger.player.skills.randomGet())
        "step 1"
        game.delay();
    },
            },
            "gui1":{
                audio:["鬼雄",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                filter:function (event, player) {
    return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0])=='d';
    },
                content:function (){
        player.draw();
        player.recover();
        player.gainMaxHp();
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player){
                if(player.hasSkill('jueqing')) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
                check:function (event,player){
        return !kzol_sgs.needKongcheng(player,true);
    },
            },
            "护驾":{
                audio:["护驾",2],
                unique:true,
                zhuSkill:true,
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
        if(event.responded) return false;
        if(player.storage.护驾) return false;
        if(!player.hasZhuSkill('hujia')) return false;
        if(event.filterCard({name:'shan'})==false) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].group=='wei') return true;
        }
        return false;
    },
                check:function (event,player){
        if(ai.get.damageEffect(player,event.player,player)>=0) return false;
        return true;
    },
                content:function (){
        "step 0"
        if(event.current==undefined) event.current=player.next;
        if(event.current==player){
            event.finish();
        }
        else if(event.current.group=='wei'){
            if((event.current==game.me&&!_status.auto)||(
                ai.get.attitude(event.current,player)>2)||
                event.current.isOnline()){
                player.storage.护驾=true;
                var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
                next.set('ai',function(){
                    var event=_status.event;
                    return (ai.get.attitude(event.player,event.source)-2);
                });
                next.autochoose=lib.filter.autoRespondShan;
                next.set('source',player);
            }
        }
        "step 1"
        player.storage.护驾=false;
        if(result.bool){
            event.finish();
            trigger.result=result;
            trigger.responded=true;
            trigger.animate=false;
            if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                event.current.ai.shown+=0.3;
                if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
            }
        }
        else{
            event.current=event.current.next;
            event.goto(0);
        }
    },
            },
            fangu:{
                audio:["反骨",2],
                group:"fangu2",
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                content:function (){
        player.recover(trigger.num);
        player.draw(trigger.num);
    },
            },
            "善谋":{
                audio:["善谋",2],
                unique:true,
                enable:"phaseUse",
                filter:function (event,player){
        return !player.storage.善谋;
    },
                init:function (player){
        player.storage.善谋=false;
    },
                mark:true,
                intro:{
                    content:"limited",
                },
                skillAnimation:"legend",
                animationColor:"metal",
                content:function (){
        'step 0'
        var shas=player.get('h','sha');
        var num;
        if(player.hp>=4&&shas.length>=3){
            num=3;
        }
        else if(player.hp>=3&&shas.length>=2){
            num=2;
        }
        else{
            num=1
        }
        player.awakenSkill('善谋');
        player.storage.善谋=true;
        player.chooseControl('一','二','三','四','五','六','七','八','九',function(){
            return get.cnNumber(_status.event.goon,true);
        }).set('prompt','失去任意点体力').set('goon',num);
        'step 1'
        var num;
        switch(result.control){
            case '一':num=1;break;
            case '二':num=2;break;
            case '三':num=3;break;
            case '四':num=4;break;
            case '五':num=5;break;
            case '六':num=6;break;
            case '七':num=7;break;
            case '八':num=8;break;
            case '九':num=9;break;
        }
        player.storage.shanmou2=num;
        player.loseHp(num);
        player.addTempSkill('shanmou2','phaseAfter');
    },
                ai:{
                    order:2,
                    result:{
                        player:function (player){
                if(player.hp==1) return 0;
                var shas=player.get('h','sha');
                if(!shas.length) return 0;
                var card=shas[0];
                if(!lib.filter.cardEnabled(card,player)) return 0;
                if(lib.filter.cardUsable(card,player)) return 0;
                var mindist;
                if(player.hp>=4&&shas.length>=3){
                    mindist=4;
                }
                else if(player.hp>=3&&shas.length>=2){
                    mindist=3;
                }
                else{
                    mindist=2;
                }
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hp<=mindist-1&&
                    get.distance(player,game.players[i],'attack')<=mindist&&
                    player.canUse(card,game.players[i],false)&&
                    ai.get.effect(game.players[i],card,player,player)>0){
                        return 1;
                    }
                }
                return 0;
            },
                    },
                },
            },
            "shanmou2":{
                onremove:function (player){
                delete player.storage.shanmou2;
            },
                mod:{
                    cardUsable:function (card,player,num){
                    if(typeof player.storage.shanmou2=='number'&&card.name=='sha'){
                        return num+player.storage.shanmou2;
                    }
                },
                    globalFrom:function (from,to,distance){
                    if(typeof from.storage.shanmou2=='number'){
                        return distance-from.storage.shanmou2;
                    }
                },
                },
            },
            "fangu2":{
                trigger:{
                    source:"recoverBefore",
                },
                forced:true,
                content:function (){
       trigger.num++
},
            },
            "xingchen7":{
                trigger:{
                    player:"loseEnd",
                },
                frequent:true,
                filter:function (event,player){
        if(player.num('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                content:function (){
        var num=player.maxHp;
        if(num>0){
            player.draw(num);
        }
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        target:function (card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                    },
                    noh:true,
                    skillTagFilter:function (player,tag){
            if(tag=='noh'){
                if(player.num('h')!=1) return false;
            }
        },
                },
            },
            "病疾":{
                audio:["病疾",2],
                enable:"phaseUse",
                usable:1,
                position:"he",
                filterCard:true,
                selectCard:function (){
        var player=_status.event.player;
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp<game.players[i].maxHp){
                num++;
            }
        }
        return [1,Math.min(num,player.maxHp-player.hp)];
    },
                filterTarget:function (card,player,target){
        return target.hp<target.maxHp;
    },
                filter:function (event,player){
        return player.hp<player.maxHp;
    },
                selectTarget:function (){
        return ui.selected.cards.length;
    },
                check:function (card){
        if(get.color(card)=='black') return -1;
        return 9-ai.get.value(card);
    },
                content:function (){
        "step 0"
        target.recover();
        target.draw();
        "step 1"
        if(target==player){
            for(var i=0;i<cards.length;i++){
                if(get.color(cards[i])=='black'){
                    player.gainMaxHp();
                    player.draw(2);
                    break;
                }
            }
        }
    },
                ai:{
                    result:{
                        target:1,
                    },
                    order:6,
                },
            },
            "兵谋":{
                audio:["兵谋",2],
                trigger:{
                    global:"discardAfter",
                },
                filter:function (event){
        if(_status.currentPhase!=event.player){
            for(var i=0;i<event.cards.length;i++){
                if(event.cards[i].original=='h') return true;
            }
        }
        return false;
    },
                check:function (event,player){
        return ai.get.attitude(player,event.player)>2;
    },
                content:function (){
        "step 0"
        player.line(trigger.player,'green');
        "step 1"
        trigger.player.draw(2);
        trigger.player.gainMaxHp();
        player.loseHp();
    },
            },
            "险计":{
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(target.num('h')==0){
                if(card.name=='sha'||card.name=='juedou'||card.name=='nanman'||card.name=='wanjian') return false;
            }
        },
                },
                group:"xianji1",
                ai:{
                    noh:true,
                    skillTagFilter:function (player,tag){
            if(tag=='noh'){
                if(player.num('h')!=1) return false;
            }
        },
                },
            },
            "xianji1":{
                audio:["险计",2],
                trigger:{
                    player:"loseEnd",
                },
                forced:true,
                filter:function (event,player){
                if(player.num('h')) return false;
                for(var i=0;i<event.cards.length;i++){
                    if(event.cards[i].original=='h') return true;
                }
                return false;
            },
                content:function (){},
            },
            "星象":{
                audio:["星象",2],
                trigger:{
                    player:["phaseBegin","phaseEnd"],
                },
                frequent:true,
                content:function (){
        "step 0"
        if(player.isUnderControl()){
            game.modeSwapPlayer(player);
        }
        var num=Math.min(5,game.countPlayer());
        var cards=get.cards(num);
        event.cards=cards;
        var switchToAuto=function(){
            _status.imchoosing=false;
            if(event.dialog) event.dialog.close();
            if(event.control) event.control.close();
            var top=[];
            var judges=player.node.judges.childNodes;
            var stopped=false;
            if(!player.countCards('h','wuxie')){
                for(var i=0;i<judges.length;i++){
                    var judge=get.judge(judges[i]);
                    cards.sort(function(a,b){
                        return judge(b)-judge(a);
                    });
                    if(judge(cards[0])<0){
                        stopped=true;break;
                    }
                    else{
                        top.unshift(cards.shift());
                    }
                }
            }
            var bottom;
            if(!stopped){
                cards.sort(function(a,b){
                    return get.value(b,player)-get.value(a,player);
                });
                while(cards.length){
                    if(get.value(cards[0],player)<=5) break;
                    top.unshift(cards.shift());
                }
            }
            bottom=cards;
            for(var i=0;i<top.length;i++){
                ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
            }
            for(i=0;i<bottom.length;i++){
                ui.cardPile.appendChild(bottom[i]);
            }
            player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(bottom.length)+'下');
            game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
            game.delay(2);
        };
        var chooseButton=function(online,player,cards){
            var event=_status.event;
            player=player||event.player;
            cards=cards||event.cards;
            event.top=[];
            event.bottom=[];
            event.status=true;
            event.dialog=ui.create.dialog('按顺序选择置于牌堆顶的牌（先选择的在上）',cards);
            event.switchToAuto=function(){
                event._result='ai';
                event.dialog.close();
                event.control.close();
                _status.imchoosing=false;
            },
            event.control=ui.create.control('ok','pileTop','pileBottom',function(link){
                var event=_status.event;
                if(link=='ok'){
                    if(online){
                        event._result={
                            top:[],
                            bottom:[]
                        }
                        for(var i=0;i<event.top.length;i++){
                            event._result.top.push(event.top[i].link);
                        }
                        for(var i=0;i<event.bottom.length;i++){
                            event._result.bottom.push(event.bottom[i].link);
                        }
                    }
                    else{
                        var i;
                        for(i=0;i<event.top.length;i++){
                            ui.cardPile.insertBefore(event.top[i].link,ui.cardPile.firstChild);
                        }
                        for(i=0;i<event.bottom.length;i++){
                            ui.cardPile.appendChild(event.bottom[i].link);
                        }
                        for(i=0;i<event.dialog.buttons.length;i++){
                            if(event.dialog.buttons[i].classList.contains('glow')==false&&
                                event.dialog.buttons[i].classList.contains('target')==false)
                            ui.cardPile.appendChild(event.dialog.buttons[i].link);
                        }
                        player.popup(get.cnNumber(event.top.length)+'上'+get.cnNumber(event.cards.length-event.top.length)+'下');
                        game.log(player,'将'+get.cnNumber(event.top.length)+'张牌置于牌堆顶');
                    }
                    event.dialog.close();
                    event.control.close();
                    game.resume();
                    _status.imchoosing=false;
                }
                else if(link=='pileTop'){
                    event.status=true;
                    event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆顶的牌';
                }
                else{
                    event.status=false;
                    event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆底的牌';
                }
            })
            for(var i=0;i<event.dialog.buttons.length;i++){
                event.dialog.buttons[i].classList.add('selectable');
            }
            event.custom.replace.button=function(link){
                var event=_status.event;
                if(link.classList.contains('target')){
                    link.classList.remove('target');
                    event.top.remove(link);
                }
                else if(link.classList.contains('glow')){
                    link.classList.remove('glow');
                    event.bottom.remove(link);
                }
                else if(event.status){
                    link.classList.add('target');
                    event.top.unshift(link);
                }
                else{
                    link.classList.add('glow');
                    event.bottom.push(link);
                }
            }
            event.custom.replace.window=function(){
                for(var i=0;i<_status.event.dialog.buttons.length;i++){
                    _status.event.dialog.buttons[i].classList.remove('target');
                    _status.event.dialog.buttons[i].classList.remove('glow');
                    _status.event.top.length=0;
                    _status.event.bottom.length=0;
                }
            }
            game.pause();
            game.countChoose();
        };
        event.switchToAuto=switchToAuto;

        if(event.isMine()){
            chooseButton();
            event.finish();
        }
        else if(event.isOnline()){
            event.player.send(chooseButton,true,event.player,event.cards);
            event.player.wait();
            game.pause();
        }
        else{
            event.switchToAuto();
            event.finish();
        }
        "step 1"
        if(event.result=='ai'||!event.result){
            event.switchToAuto();
        }
        else{
            var top=event.result.top||[];
            var bottom=event.result.bottom||[];
            for(var i=0;i<top.length;i++){
                ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
            }
            for(i=0;i<bottom.length;i++){
                ui.cardPile.appendChild(bottom[i]);
            }
            for(i=0;i<event.cards.length;i++){
                if(!top.contains(event.cards[i])&&!bottom.contains(event.cards[i])){
                    ui.cardPile.appendChild(event.cards[i]);
                }
            }
            player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(event.cards.length-top.length)+'下');
            game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
            game.delay(2);
        }
    },
                ai:{
                    threaten:1.2,
                },
            },
            "铁索":{
                group:["tiesuo1","tiesuo2"],
            },
            "tiesuo1":{
                audio:["铁索",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('h',{color:'black'})>0;
    },
                filterCard:function (card){
        return get.color(card)=='black';
    },
                viewAs:{
                    name:"tiesuo",
                    suit:"spade",
                    number:6,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"spade","number":6,"name":"qibaodao","cardid":"7231088470","_transform":"translateX(257.28000000000003px)","_mouseentercreated":false,"clone":{"name":"qibaodao","suit":"spade","number":6,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":9525},"timeout":9485,"original":"h"}],
                },
                prompt:"将一张黑色牌当铁锁连环使用",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    wuxie:function (){
            if(Math.random()<0.5) return 0;
        },
                    basic:{
                        useful:4,
                        value:4,
                        order:7,
                    },
                    result:{
                        target:function (player,target){
                if(target.isLinked()) return 1;
                if(ai.get.attitude(player,target)>=0) return -1;
                // if(player.isMin()) return -1;
                if(ui.selected.targets.length) return -1;
                for(var i=0;i<game.players.length;i++){
                    if(ai.get.attitude(player,game.players[i])<=-1&&
                        game.players[i]!=target&&!game.players[i].isLinked()){
                        return -1;
                    }
                }
                return 0;
            },
                    },
                    tag:{
                        multitarget:1,
                        multineg:1,
                        norepeat:1,
                    },
                },
            },
            "tiesuo2":{
                audio:["铁索",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('h',{color:'black'})>0;
    },
                filterCard:function (card){
        return get.color(card)=='black';
    },
                check:function (card){
        return 5-ai.get.useful(card);
    },
                content:function (){
        player.draw();
        player.recover();
    },
                discard:false,
                prompt:"将一张黑色牌置于弃牌堆并摸一张牌回复1点体力",
                delay:0.5,
                prepare:function (cards,player){
        player.$throw(cards,1000);
    },
                ai:{
                    basic:{
                        order:1,
                    },
                    result:{
                        player:1,
                    },
                },
            },
            "落凤":{
                audio:["落凤",2],
                unique:true,
                enable:"chooseToUse",
                mark:true,
                skillAnimation:true,
                animationStr:"落凤",
                animationColor:"fire",
                init:function (player){
        player.storage.落凤=false;
    },
                filter:function (event,player){
        if(player.storage.落凤) return false;
        if(event.type=='dying'){
            if(player!=event.dying) return false;
            return true;
        }
        else if(event.parent.name=='phaseUse'){
            return true;
        }
        return false;
    },
                content:function (){
        'step 0'
        player.hp=Math.min(player.maxHp);
        player.draw(3);
        player.discard(player.get('hej'));
        player.awakenSkill('落凤');
        player.storage.落凤=true;
        'step 1'
        if(player.isLinked()) player.link();
        'step 2'
        if(player.isTurnedOver()) player.turnOver();
    },
                ai:{
                    order:1,
                    skillTagFilter:function (player){
            if(player.storage.落凤) return false;
            if(player.hp>0) return false;
        },
                    save:true,
                    result:{
                        player:function (player){
                if(player.hp==0) return 10;
                if(player.hp<=2&&player.num('he')<=1) return 10;
                return 0;
            },
                    },
                    threaten:function (player,target){
            if(!target.storage.落凤) return 0.6;
        },
                },
                intro:{
                    content:"limited",
                },
            },
            "燃火":{
                audio:["燃火",2],
                group:"ranhuo2",
                enable:"chooseToUse",
                filterCard:function (card){
        return get.color(card)=='red';
    },
                viewAs:{
                    name:"huogong",
                    nature:"fire",
                    suit:"heart",
                    number:9,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"heart","number":9,"name":"sha","cardid":"7281232321","clone":{"name":"sha","suit":"heart","number":9,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":290},"timeout":275,"original":"h"}],
                },
                viewAsFilter:function (player){
        if(!player.num('h',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当火攻使用",
                check:function (card){
        var player=_status.currentPhase;
        if(player.num('h')>player.hp){
            return 6-ai.get.value(card);
        }
        return 4-ai.get.value(card)
    },
                ai:{
                    basic:{
                        order:4,
                        value:[3,1],
                        useful:1,
                    },
                    wuxie:function (target,card,player,current,state){
            if(ai.get.attitude(current,player)>=0&&state>0) return false;
        },
                    result:{
                        player:function (player){
                var nh=player.num('h');
                if(nh<=player.hp&&nh<=4&&_status.event.name=='chooseToUse'){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'})){
                        return -10;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -10;
                        if(viewAs&&viewAs.name=='huogong') return -10;
                    }
                }
                return 0;
            },
                        target:function (player,target){
                if(target.hasSkill('huogong2')||target.num('h')==0) return 0;
                if(player.num('h')<=1) return 0;
                if(target==player){
                    if(typeof _status.event.filterCard=='function'&&
                        _status.event.filterCard({name:'huogong'})){
                        return -1.5;
                    }
                    if(_status.event.skill){
                        var viewAs=get.info(_status.event.skill).viewAs;
                        if(viewAs=='huogong') return -1.5;
                        if(viewAs&&viewAs.name=='huogong') return -1.5;
                    }
                    return 0;
                }
                return -1.5;
            },
                    },
                    tag:{
                        damage:1,
                        fireDamage:1,
                        natureDamage:1,
                        norepeat:1,
                    },
                },
            },
            "ranhuo2":{
                audio:["燃火",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                unique:true,
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        player.gainMaxHp();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                    },
                },
            },
            "八卦":{
                audio:["八卦",2],
                group:"yiqunbagua2",
                inherit:"bagua_skill",
                filter:function (event,player){
        if(!event.filterCard({name:'shan'})) return false;
        if(event.getParent().player.num('s','unequip')) return false;
        if(player.get('e','2')) return false;
        return true;
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(player==target&&get.subtype(card)=='equip2'){
                    if(ai.get.equipValue(card)<=8) return 0;
                }
                if(target.get('e','2')) return;
                if(player.hasSkill('unequip')) return;
                if(get.tag(card,'respondShan')) return [0.5,0];
            },
                    },
                },
                trigger:{
                    player:"chooseToRespondBegin",
                },
                check:function (event,player){
        if(ai.get.damageEffect(player,event.player,player)>=0) return false;
        return true;
    },
                content:function (){
        "step 0"
        player.judge('bagua',function(card){return (get.color(card)=='red')?1.5:-0.5});
        "step 1"
        if(result.judge>0){
            trigger.untrigger();
            trigger.responded=true;
            trigger.result={bool:true,card:{name:'shan'}}
        }
    },
            },
            "yiqunbagua2":{
                audio:["八卦",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                filter:function (event){
        return event.nature=='thunder';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        player.recover(2);
        player.draw();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.tag(card,'thunderDamage')){
                    return [0,2];
                }
            },
                    },
                },
            },
            "看穿":{
                audio:["看穿",2],
                group:"kanchuan2",
                enable:"chooseToUse",
                filterCard:function (card){
        return get.color(card)=='black';
    },
                viewAsFilter:function (player){
        return player.num('h',{color:'black'})>0;
    },
                viewAs:{
                    name:"wuxie",
                    suit:"club",
                    number:2,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"club","number":2,"name":"nanman","cardid":"7865904370","clone":{"name":"nanman","suit":"club","number":2,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":855},"timeout":810,"original":"h"}],
                },
                prompt:"将一张黑色手牌当无懈可击使用",
                check:function (card){return 8-ai.get.value(card)},
                threaten:1.2,
                ai:{
                    basic:{
                        useful:[6,4],
                        value:[6,4],
                    },
                    result:{
                        player:1,
                    },
                    expose:0.2,
                },
            },
            "kanchuan2":{
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'&&player!=target){
                return false;
            }
        },
                },
                ai:{
                    playernowuxie:true,
                },
            },
            "胆略":{
                audio:["胆略",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return target.canUse({name:'sha'},player)&&target.num('he');
    },
                content:function (){
        "step 0"
        target.chooseToUse({name:'sha'},player,-1,'胆略：对'+get.translation(player)+'使用一张杀，或令其弃置你的两张牌，并失去1点体力上限').set('targetRequired',true);
        "step 1"
        if(result.bool==false&&target.num('he')>0){
            player.discardPlayerCard(2,target,'he',true);
            target.loseMaxHp();
        }
        else{
            event.finish();
        }
    },
                ai:{
                    order:4,
                    expose:0.2,
                    result:{
                        target:-1,
                        player:function (player,target){
                if(target.num('h')==0) return 0;
                if(target.num('h')==1) return -0.1;
                if(player.hp<=2) return -2;
                if(player.num('h','shan')==0) return -1;
                return -0.5;
            },
                    },
                    threaten:1.1,
                },
            },
            "承志":{
                skillAnimation:true,
                audio:["承志",2],
                unique:true,
                priority:-10,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                filter:function (event,player){
        if(player.storage.承志) return false;
        return player.num('h')>=4;
    },
                content:function (){
        "step 0"
        player.awakenSkill('承志');
        player.chooseControl('承志_回血','承志_摸牌',function(event,player){
            if(player.hp>=2) return '承志_摸牌';
            return '承志_回血';
        });
        "step 1"
        if(result.control=='承志_摸牌'){
            player.draw(9);
        }
        else{
            player.recover(99);
        }
        "step 2"
        player.loseMaxHp();
        player.storage.承志=true;
        if(player.hp>player.maxHp) player.hp=player.maxHp;
        player.update();
        player.addSkill('麒麟');
    },
            },
            "麒麟":{
                audio:["麒麟",2],
                group:["qilin2","qilin3"],
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"juedou",
                    suit:"heart",
                    number:13,
                },
                viewAsFilter:function (player){
        if(!player.num('he',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当决斗使用或打出",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    basic:{
                        order:5,
                        useful:1,
                        value:4.5,
                    },
                    result:{
                        target:-1.5,
                        player:function (player,target){
                        if(ai.get.damageEffect(target,player,target)>0&&ai.get.attitude(player,target)>0&&ai.get.attitude(target,player)>0){
                            return 0;
                        }
                        var hs1=target.get('h','sha');
                        var hs2=player.get('h','sha');
                        if(hs1.length>hs2.length+1){
                            return -2;
                        }
                        var hsx=target.get('h');
                        if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
                            return -2;
                        }
                        if(hsx.length>3&&hs2.length==0){
                            return -2;
                        }
                        if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
                            return -2;
                        }
                        return -0.5;
                    },
                    },
                    tag:{
                        respond:2,
                        respondSha:2,
                        damage:1,
                    },
                },
            },
            "qilin2":{
                audio:["麒麟",2],
                enable:"chooseToUse",
                filterCard:function (card){
        return get.color(card)=='black';
    },
                viewAsFilter:function (player){
        return player.num('he',{color:'black'})>0;
    },
                viewAs:{
                    name:"wuxie",
                },
                prompt:"将一张黑色牌当无懈可击使用",
                check:function (card){return 8-ai.get.value(card)},
                threaten:1.2,
                ai:{
                    basic:{
                        useful:[6,4],
                        value:[6,4],
                    },
                    result:{
                        player:1,
                    },
                    expose:0.2,
                },
            },
            "qilin3":{
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='bingliang'||card.name=='lebu'||card.name=='shandian') return false;
        },
                },
            },
            "后主":{
                audio:["后主",2],
                trigger:{
                    target:"useCardToBefore",
                },
                forced:true,
                filter:function (event,player){
        return event.card.name=='sha';
    },
                content:function (){
        "step 0"
        var eff=ai.get.effect(player,trigger.card,trigger.player,trigger.player);
        trigger.player.chooseToDiscard(function(card){
            return get.type(card)=='basic';
        }).set('ai',function(card){
            if(_status.event.eff>0){
                return 10-ai.get.value(card);
            }
            return 0;
        }).set('eff',eff);
        "step 1"
        if(result.bool==false){
            trigger.finish();
            trigger.untrigger();
            player.draw();
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha'){
                    if(_status.event.name=='xiangle') return;
                    var bs=player.get('h',{type:'basic'});
                    if(bs.length<2) return 0;
                    if(player.hasSkill('jiu')||player.hasSkill('tianxianjiu')) return;
                    if(bs.length<=3&&player.num('h','sha')<=1){
                        for(var i=0;i<bs.length;i++){
                            if(bs[i].name!='sha'&&ai.get.value(bs[i])<7){
                                return [1,0,1,-0.5];
                            }
                        }
                        return 0;
                    }
                    return [1,0,1,-0.5];
                }
            },
                    },
                },
            },
            "简政":{
                audio:["简政",2],
                trigger:{
                    player:"phaseUseBefore",
                },
                filter:function (event,player){
                    return player.countCards('h')>0&&!player.hasSkill('jianzheng3');
                },
                direct:true,
                content:function (){
                    "step 0"
                    player.draw();
                    var fang=player.hp>=2&&player.countCards('h')<=player.hp+1;
                    player.chooseTarget(get.prompt('简政'),function(card,player,target){
                        return target!=player;
                    }).set('ai',function(target){
                        if(!_status.event.fang) return -1;
                        if(target.hasJudge('lebu')) return -1;
                        return get.attitude(player,target)-4;
                    }).set('fang',fang);
                    "step 1"
                    if(result.bool){
                        player.logSkill('简政',result.targets);
                        trigger.cancel();
                        player.addSkill('jianzheng2');
                        player.storage.简政=result.targets[0];
                    }
                },
            },
            "jianzheng2":{
                trigger:{
                    player:"phaseAfter",
                },
                forced:true,
                audio:["简政",2],
                priority:-50,
                content:function (){
                    "step 0"
                    player.chooseToDiscard(true);
                    "step 1"
                    var target=player.storage.简政;
                    target.markSkillCharacter('简政',player,'简政','进行一个额外回合');
                    target.insertPhase();
                    target.addSkill('jianzheng3');
                    player.removeSkill('jianzheng2');
                    delete player.storage.简政;
                },
            },
            "jianzheng3":{
                trigger:{
                    player:["phaseAfter","phaseCancelled"],
                },
                forced:true,
                popup:false,
                audio:["简政",2],
                content:function (){
                    player.unmarkSkill('简政');
                    player.removeSkill('jianzheng3');
                },
            },
            "愚智":{
                skillAnimation:true,
                audio:["愚智",2],
                unique:true,
                zhuSkill:true,
                keepSkill:true,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                filter:function (event,player){
        if(!player.hasZhuSkill('愚智'))return false;
        if(player.storage.愚智) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp<player.hp) return false;
        }
        return true;
    },
                content:function (){
        player.storage.愚智=true;
        player.maxHp++;
        player.update();
        player.recover();
        if(player.hasSkill('愚智')){
            player.addSkill('栋梁');
        }
        else{
            player.addAdditionalSkill('愚智','栋梁');
        }
        if(!player.isZhu){
            player.storage.zhuSkill_愚智=['栋梁'];
        }
        else{
            event.trigger('zhuUpdate');
        }
        player.awakenSkill('愚智');
    },
            },
            "栋梁":{
                audio:["栋梁",2],
                skillAnimation:"epic",
                trigger:{
                    player:["phaseBegin","phaseUseBegin","phaseDiscardBegin"],
                },
                priority:5,
                init:function (player){
                player.storage.栋梁=[];
            },
                check:function (event,player){
                return 1;
            },
                intro:{
                    nocount:true,
                    onunmark:function (content,player){
                    player.storage.栋梁=[];
                },
                    content:function (content,player){
                    var str='当前技能：';
                    var skill=player.additionalSkills.栋梁;
                    if(skill){
                        str+=get.translation(skill);
                    }
                    else{
                        str+='无';
                    }                    
                    return str;
                },
                    mark:function (dialog,content,player){
                    var skill=player.additionalSkills.栋梁;
                    dialog.add('<div class="text center">当前技能</div>');
                    if(skill){
                        dialog.add('<div><div class="skill">【'+get.translation(skill)+
                        '】</div><div>'+lib.translate[skill+'_info']+'</div></div>');
                    }
                    else{
                        dialog.add('无');
                    }
                },
                },
                mark:true,
                unique:true,
                content:function (){            
                if(event.created) return;
                event.created=true;
                if(event.isMine()){                
                    var node=ui.create.div('.add_skill');
                    event.node=node;
                    event.node.style.width='400px';
                    event.node.style.height='30px';
                    event.node.style.lineHeight='30px';
                    event.node.style.fontFamily='xinwei';
                    event.node.style.fontSize='30px';
                    event.node.style.padding='10px';
                    event.node.style.left='calc(50% - 200px)';
                    event.node.style.top='calc(50% - 20px)';
                    event.node.style.whiteSpace='nowrap';
                    event.node.innerHTML='';
                    event.node.contentEditable=true;
                    event.node.style.webkitUserSelect='text';
                    event.node.style.textAlign='center';            
                    var skillName=function(e){                
                        var skills=[];
                        for(var i in lib.character){ 
                            for(var j=0;j<lib.character[i][3].length;j++){ 
                                if(player.skills.contains(lib.character[i][3][j])) continue;
                                var info=lib.skill[lib.character[i][3][j]];
                                if(info&&(info.forced||info.mod||info.locked)){
                                    var name=event.node.innerHTML;
                                    if(get.translation(lib.character[i][3][j])!=name) continue;
                                    skills.add(lib.character[i][3][j]); 
                                }    
                            } 
                        }
                        if(skills.length){
                            ui.window.removeChild(event.node);    
                            ui.window.removeChild(text);
                            ui.window.removeChild(button);                        
                            var skills2=skills.randomGet();
                            player.addSkill(skills2);
                            player.skills.remove(skills2);
                            var skill=player.additionalSkills.栋梁;
                            if(skill){
                                player.removeSkill(player.additionalSkills.栋梁);
                            }                            
                            player.additionalSkills.栋梁=skills2;    
                            player.popup(skills2);
                            ui.clear();
                            game.resume();
                            return;    
                        }
                        else{
                            var name=event.node.innerHTML;
                            alert(name+'不是一个'+'有效的锁定技，请重新输入');
                            ui.clear();
                            return;    
                        }
                    };
                    ui.window.appendChild(event.node);
                    var text=ui.create.div();
                    text.style.width='400px';
                    text.style.height='30px';
                    text.style.lineHeight='30px';
                    text.style.fontFamily='xinwei';
                    text.style.fontSize='30px';
                    text.style.padding='10px';
                    text.style.left='calc(50% - 200px)';
                    text.style.top='calc(50% - 80px)';
                    text.innerHTML='请宣言1个锁定技名称';
                    text.style.textAlign='center';
                    ui.window.appendChild(text);
                    var button=ui.create.div('.menubutton.highlight.large','确定',skillName);
                    button.style.width='70px';
                    button.style.left='calc(50% - 35px)';
                    button.style.top='calc(50% + 60px)';
                    ui.window.appendChild(button);
                    for(var i in lib.element.event){
                        event.parent[i]=lib.element.event[i];
                    }
                    event.parent.custom={
                        add:{},
                        replace:{}
                   }
                    game.pause();
                }
                else{                    
                    var skills=[];
                    for(var i in lib.character){ 
                        for(var j=0;j<lib.character[i][3].length;j++){ 
                            if(player.skills.contains(lib.character[i][3][j])) continue;
                            var info=lib.skill[lib.character[i][3][j]];
                            if(info&&(info.forced||info.mod||info.locked)){
                                skills.add(lib.character[i][3][j]); 
                            }    
                        } 
                    }
                    var skills2=skills.randomGet();
                    player.addSkill(skills2);
                    player.skills.remove(skills2);
                    var skill=player.additionalSkills.栋梁;
                    if(skill){
                        player.removeSkill(player.additionalSkills.栋梁);
                    }                            
                    player.additionalSkills.栋梁=skills2;    
                    player.popup(skills2);
                }
            },
                ai:{
                    threaten:6,
                },
            },
            "助威":{
                audio:["助威",2],
                trigger:{
                    global:"recoverAfter",
                },
                direct:true,
                filter:function (event,player){
        return _status.currentPhase==event.player;
    },
                content:function (){
        'step 0'
        if(player==trigger.player){
            player.chooseControl('摸两张','摸两张回复体力','cancel2',function(){
                return '摸两张';
            }).set('prompt',get.prompt('助威'));
            event.single=true;
        }
        else{
            player.chooseTarget(get.prompt('助威'),function(card,player,target){
                return target==_status.event.player||target==_status.event.target;
            }).set('target',trigger.player).set('ai',function(target){
                var player=_status.event.player;
                if(player==target) return 1;
                return ai.get.attitude(player,target)-1.5;
            });
        }
        'step 1'
        if(event.single){
            if(result.control!='cancel2'){
                player.logSkill('助威',player);
                if(result.control=='摸两张'){
                    player.draw(2);
                }
                else{
                    player.draw(2);
                    player.recover();
                    player.storage.助威=player;
                }
            }
        }
        else if(result.bool){
            var target=result.targets[0];
            player.logSkill('助威',target);
            if(target==player){
                target.draw(2);
            }
            else{
                target.draw(2);
                target.recover();
                target.storage.助威=player;
            }
        }
    },
                ai:{
                    expose:0.1,
                },
            },
            "归吴":{
                skillAnimation:true,
                animationColor:"fire",
                audio:["归吴",2],
                unique:true,
                forceunique:true,
                trigger:{
                    player:"phaseBegin",
                },
                filter:function (event,player){
        if(player.storage.归吴) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].storage.助威==player&&game.players[i].isDamaged()){
                return true;
            }
        }
        return false;
    },
                forced:true,
                content:function (){
        player.storage.归吴=true;
        player.loseHp(3);
        player.recover();
        player.addSkill('观武');
        player.awakenSkill('归吴');
    },
            },
            "观武":{
                audio:["观武",2],
                trigger:{
                    player:"loseEnd",
                },
                usable:3,
                frequent:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                content:function (){
            player.draw(3);
        player.recover(2)._triggered=null;
    },
                ai:{
                    noe:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                    },
                },
            },
            "虎将":{
                trigger:{
                    player:["phaseBefore","changeHp"],
                },
                forced:true,
                popup:false,
                unique:true,
                content:function (){
        if(!player.storage.虎将){
            player.storage.虎将=[];
            if(player.hasSkill('叫阵')){
                player.storage.虎将.push('叫阵');
            }
            if(player.hasSkill('横扫')){
                player.storage.虎将.push('横扫');
            }
            if(player.hasSkill('清兵')){
                player.storage.虎将.push('清兵');
            }
        }
        if(player.storage.虎将.contains('叫阵')==false){
            player.removeSkill('叫阵');
        }
        if(player.storage.虎将.contains('横扫')==false){
            player.removeSkill('横扫');
        }
        if(player.storage.虎将.contains('清兵')==false){
            player.removeSkill('清兵');
        }
        if(player.hp<=7){
            player.addSkill('叫阵');
        }
        if(player.hp<=5){
            player.addSkill('横扫');
        }
        if(player.hp<=3){
            player.addSkill('清兵');
        }
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(!target.hasFriend()) return;
                    if(target.hp>=4) return [0,1];
                }
                if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
            },
                    },
                },
            },
            "叫阵":{
                audio:["叫阵",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return target.canUse({name:'sha'},player)&&target.num('he');
    },
                content:function (){
        "step 0"
        target.chooseToUse({name:'sha'},player,-1,'叫阵：对'+get.translation(player)+'使用一张杀，或令其弃置你的一张牌并使你翻面').set('targetRequired',true);
        "step 1"
        if(result.bool==false&&target.num('he')>0){
            player.discardPlayerCard(target,'he',true);
            target.turnOver();
        }
        else{
            event.finish();
        }
    },
                ai:{
                    order:4,
                    expose:0.2,
                    result:{
                        target:-1,
                        player:function (player,target){
                if(target.num('h')==0) return 0;
                if(target.num('h')==1) return -0.1;
                if(player.hp<=2) return -2;
                if(player.num('h','shan')==0) return -1;
                return -0.5;
            },
                    },
                    threaten:1.1,
                },
            },
            "横扫":{
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                priority:55,
                filter:function (event){
        return event.player.num('he')>0;
    },
                content:function (){
        trigger.player.chooseToDiscard(true,'he');
    },
                mod:{
                    selectTarget:function (card,player,range){
            if(card.name!='sha') return;
            if(range[1]==-1) return;
            var cards=player.get('h');
            for(var i=0;i<cards.length;i++){
                if(cards[i].classList.contains('selected')==false)
                    return;
            }
            range[1]+=3;
        },
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
            },
            "清兵":{
                group:["qingbing1","qingbing2","qingbing4"],
            },
            "qingbing1":{
                audio:["清兵",2],
                trigger:{
                    player:"phaseBegin",
                },
                direct:true,
                content:function (){
        "step 0"
        var check= player.num('h')>2;
        player.chooseTarget(get.prompt('清兵'),function(card,player,target){
            if(player==target) return false;
            return player.canUse({name:'sha'},target,false);
        }).set('check',check).set('ai',function(target){
            if(!_status.event.check) return 0;
            return ai.get.effect(target,{name:'sha'},_status.event.player);
        });
        "step 1"
        if(result.bool){
            player.logSkill('qingbing1',result.targets);
            player.useCard({name:'sha'},result.targets[0],false);
            player.skip('phaseJudge');
            player.skip('phaseDraw');
        }
    },
            },
            "qingbing2":{
                audio:["清兵",2],
                trigger:{
                    player:"phaseUseBefore",
                },
                direct:true,
                filter:function (event,player){
                return player.num('he',{type:'equip'})>0;
            },
                content:function (){
                "step 0"
                var check=player.needsToDiscard();
                player.chooseCardTarget({
                    prompt:get.prompt('清兵'),
                    filterCard:function(card,player){
                        return get.type(card)=='equip'&&lib.filter.cardDiscardable(card,player)
                    },
                    position:'he',
                    filterTarget:function(card,player,target){
                        if(player==target) return false;
                        return player.canUse({name:'sha'},target,false);
                    },
                    ai1:function(card){
                        if(_status.event.check) return 0;
                        return 6-ai.get.value(card);
                    },
                    ai2:function(target){
                        if(_status.event.check) return 0;
                        return ai.get.effect(target,{name:'sha'},_status.event.player);
                    },
                    check:check
                });
                "step 1"
                if(result.bool){
                    player.logSkill('qingbing2',result.targets);
                    player.discard(result.cards[0]);
                    player.useCard({name:'sha'},result.targets[0]);
                    trigger.untrigger();
                    trigger.finish();
                }
            },
            },
            "qingbing4":{
                audio:["清兵",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                direct:true,
                content:function (){
                "step 0"
                var check=player.needsToDiscard()||player.isTurnedOver();
                player.chooseTarget(get.prompt('清兵'),function(card,player,target){
                    if(player==target) return false;
                    return player.canUse({name:'sha'},target,false);
                }).set('check',check).set('ai',function(target){
                    if(!_status.event.check) return 0;
                    return ai.get.effect(target,{name:'sha'},_status.event.player);
                });
                "step 1"
                if(result.bool){
                    player.logSkill('qingbing4',result.targets);
                    player.useCard({name:'sha'},result.targets[0],false);
                    trigger.untrigger();
                    trigger.finish();
                }
            },
            },
            "协睦":{
                audio:["协睦",2],
                group:"zhishixiemu2",
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
        if(get.color(event.card)!='black') return false;
        if(!event.player) return false;
        if(event.player==player) return false;
        return player.num('h','sha')>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var next=player.chooseToDiscard('协睦：是否弃置一张杀并摸两张牌增加1点体力上限？',{name:'sha'});
        next.set('ai',function(card){
            return 9-ai.get.value(card);
        });
        next.logSkill='协睦';
        "step 1"
        if(result.bool){
            player.draw(3);
            player.gainMaxHp();
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(get.color(card)=='black'&&target.num('h')>0){
                    return [1,0.5];
                }
            },
                    },
                },
            },
            "zhishixiemu2":{
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='nanman'||card.name=='wanjian') return false;
        },
                },
            },
            "蛮兵":{
                audio:["蛮兵",2],
                group:["manbing2","蛮兵_1"],
                trigger:{
                    global:"respondEnd",
                },
                filter:function (event,player){
        if(event.card.name!='sha') return false;
        if(event.player==player) return false;
        if(event.cards){
            for(var i=0;i<event.cards.length;i++){
                if(get.position(event.cards[i])=='d') return true;
            }
        }
        return false;
    },
                frequent:true,
                content:function (){
        var cards=trigger.cards.slice(0);
        for(var i=0;i<cards.length;i++){
            if(get.position(cards[i])!='d'){
                cards.splice(i--,1);
            }
        }
        game.delay(0.5);
        player.gain(cards,'gain2');
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"useCard",
                        },
                        popup:false,
                        audio:["蛮兵",2],
                        filter:function (event,player){
                    if(event.card.name!='sha') return false;
                    return game.hasPlayer(function(current){
                        return (event.targets.contains(current)==false&&current!=player&&
                        lib.filter.targetEnabled(event.card,player,current))
                    });
                },
                        content:function (){
                    var list=game.filterPlayer(function(current){
                        return (trigger.targets.contains(current)==false&&current!=player&&
                        lib.filter.targetEnabled(trigger.card,player,current))
                    });
                    if(list.length){
                        event.target=list.randomGet();
                        player.line(event.target,'green');
                        game.log(event.target,'被追加为额外目标');
                        trigger.targets.push(event.target);
                        player.draw();
                    }
                },
                        sub:true,
                    },
                },
            },
            "manbing2":{
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
            },
            "不言":{
                audio:["不言",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                priority:15,
                check:function (event,player){
        if(player==event.player) return true;
        return false;
    },
                filter:function (event,player){
        return get.type(event.card,'trick')=='trick';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        player.gainMaxHp();
        player.draw();
    },
                ai:{
                    notrick:true,
                    notricksource:true,
                    effect:{
                        target:function (card,player,target,current){
                if(get.type(card)=='trick'&&get.tag(card,'damage')){
                    return 'zeroplayertarget';
                }
            },
                        player:function (card,player,target,current){
                if(get.type(card)=='trick'&&get.tag(card,'damage')){
                    return 'zeroplayertarget';
                }
            },
                    },
                },
            },
            "洞察":{
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                audio:["洞察",2],
                filter:function (event,player){
        return player.num('he')>=0;
    },
                content:function (){
        "step 0"
        player.chooseCardTarget({
            filterTarget:function(card,player,target){
                return player!=target;
            },
            filterCard:function(card,player){
                return lib.filter.cardDiscardable(card,player);
            },
            ai1:function(card){
                if(get.tag(card,'damage')){
                    return 20;
                }
                return 9-ai.get.value(card);
            },
            ai2:function(target){
                var att=ai.get.attitude(_status.event.player,target);
                if(att>0){
                    if(target.isTurnedOver()) att+=3;
                    if(target.hp==1) att+=3;
                }
                return att;
            },
            position:'he',
            prompt:get.prompt('洞察')
        });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            event.target=target;
            player.logSkill('洞察',target);
            player.discard(result.cards);
            if(target.hp==target.maxHp&&
                !target.isTurnedOver()&&
                !target.isLinked()){
                target.draw(5);
                event.finish();
            }
            else{
                var controls=['摸牌'];
                if(target.hp<target.maxHp){
                    controls.push('回复体力');
                }
                if(target.isLinked()|target.isTurnedOver()){
                    controls.push('重置武将牌');
                }
                target.chooseControl(controls).ai=function(){
                    if(target.isTurnedOver()){
                        return '重置武将牌';
                    }
                    else if(target.hp==1&&target.maxHp>2){
                        return '回复体力';
                    }
                    else if(target.hp==2&&target.maxHp>2&&target.num('h')>1){
                        return '回复体力';
                    }
                    else{
                        return '摸牌';
                    }
                }
            }
        }
        else{
            event.finish();
        }
        "step 2"
        event.control=result.control;
        switch(event.control){
            case '回复体力':event.target.recover(5);event.finish();break;
            case '摸牌':event.target.draw(5);event.finish();break;
            case '重置武将牌':if(event.target.isTurnedOver()) event.target.turnOver();break;
        }
        "step 3"
        if(event.control=='重置武将牌'&&event.target.isLinked()){
            event.target.link();
        }
    },
                ai:{
                    expose:0.2,
                    threaten:1.4,
                },
            },
            "先锋":{
                audio:["先锋",2],
                group:"xianfeng2",
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                content:function (){
        'step 0'
        player.draw(3);
        player.phaseUse();
        'step 1'
        player.getStat().card={};
    },
            },
            "迟暮":{
                skillAnimation:true,
                audio:["迟暮",2],
                unique:true,
                enable:"chooseToUse",
                init:function (player){
        player.storage.迟暮=false;
    },
                forced:true,
                mark:true,
                filter:function (event,player){
        if(event.type!='dying') return false;
        if(player!=event.dying) return false;
        if(player.storage.迟暮) return false;
        return true;
    },
                content:function (){
        "step 0"
        player.awakenSkill('迟暮');
        player.recover(player.maxHp-player.hp);
        "step 1"
        player.draw(5);
        player.storage.迟暮=true;
    },
                ai:{
                    save:true,
                    result:{
                        player:10,
                    },
                    threaten:function (player,target){
            if(!target.storage.fuli) return 0.9;
        },
                },
                intro:{
                    content:"limited",
                },
            },
            "xianfeng2":{
                audio:["先锋",2],
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
        'step 0'
        player.draw(3);
        player.phaseUse();
        'step 1'
        player.getStat().card={};
    },
            },
            "青龙":{
                audio:["青龙",2],
                group:"qinglong3",
                trigger:{
                    global:"shaBegin",
                },
                direct:true,
                filter:function (event,player){
        return event.target==event.targets[0]&&player.num('he')>0&&event.card.name=='sha'&&
        _status.currentPhase==event.player&&event.parent.parent.parent.name=='phaseUse';
    },
                content:function (){
        'step 0'
        var go=false;
        if(ai.get.attitude(player,trigger.player)>0){
            if(get.color(trigger.card)=='red'){
                go=true;
            }
            else if(!trigger.player.hasSkill('paoxiao')&&
                !trigger.player.hasSkill('tanlin3')&&
                !trigger.player.hasSkill('zhaxiang2')&&
                !trigger.player.hasSkill('fengnu')&&
                !trigger.player.num('e','zhuge')){
                var nh=trigger.player.num('h');
                if(player==trigger.player){
                    go=(player.num('h','sha')>0);
                }
                else if(nh>=4){
                    go=true;
                }
                else if(player.num('h','sha')){
                    if(nh==3){
                        go=Math.random()<0.8;
                    }
                    else if(nh==2){
                        go=Math.random()<0.5;
                    }
                }
                else if(nh>=3){
                    if(nh==3){
                        go=Math.random()<0.5;
                    }
                    else if(nh==2){
                        go=Math.random()<0.2;
                    }
                }
            }
        }
        var next=player.chooseToDiscard(get.prompt('青龙'),'he');
        next.logSkill=['青龙',trigger.player];
        next.set('ai',function(card){
            if(_status.event.go){
                return 6-ai.get.value(card);
            }
            return 0;
        });
        next.set('go',go);
        'step 1'
        if(result.bool){
            trigger.player.getStat().card.sha--;
            if(get.color(trigger.card)=='red'){
                player.draw(2);
            }
            player.logSkill('青龙',trigger.player);
        }
    },
                ai:{
                    expose:0.2,
                },
            },
            "qinglong3":{
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"sha",
                },
                viewAsFilter:function (player){
        if(!player.num('he',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当杀使用或打出",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            if(!player.num('he',{color:'red'})) return false;
        },
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    order:3,
                    result:{
                        target:function (player,target){
                if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                    if(ai.get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3.05+(kzol_sgs.getDefenseSha(target,player))/30;
                    }
                }
                return -1.55+(kzol_sgs.getDefenseSha(target,player))/30;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function (card){
                if(card.nature) return 1;
            },
                        fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
            },
            "潜行":{
                audio:["潜行",2],
                group:"qianxing2",
                trigger:{
                    source:"damageBefore",
                },
                check:function (event,player){
        var att=ai.get.attitude(player,event.player);
        if(event.player.hp==event.player.maxHp) return att<0;
        if(event.player.hp==event.player.maxHp-1&&
            (event.player.maxHp<=3||event.player.hasSkillTag('潜行'))) return att<0;
        return att>0;
    },
                filter:function (event,player){
        return event.card&&event.card.name=='sha'&&get.distance(player,event.player)<=1;
    },
                logTarget:"player",
                content:function (){
        'step 0'
        player.judge(function(card){
            return get.suit(card)!='heart'?1:-1;
        });
        'step 1'
        if(result.bool){
            trigger.untrigger();
            trigger.finish();
            trigger.player.loseMaxHp(true);
        }
    },
            },
            "qianxing2":{
                audio:["潜行",2],
                trigger:{
                    player:"phaseBegin",
                },
                content:function (){
        "step 0"
        player.draw(3);
        player.chooseToDiscard('he',true);
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        event.color=get.color(result.cards[0]);
        player.chooseTarget(function(card,player,target){
            return player!=target&&get.distance(player,target)<=1;
        },true).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 2"
        if(result.bool&&result.targets.length){
            result.targets[0].storage.qianxing3=event.color;
            result.targets[0].addSkill('qianxing3');
            player.line(result.targets,'green');
            game.addVideo('storage',result.targets[0],['qianxing3',event.color]);
        }
    },
            },
            "qianxing3":{
                trigger:{
                    global:"phaseAfter",
                },
                forced:true,
                mark:true,
                audio:["潜行",2],
                content:function (){
                player.removeSkill('qianxing3');
                delete player.storage.qianxing3;
            },
                mod:{
                    cardEnabled:function (card,player){
                    if(get.color(card)==player.storage.qianxing3) return false;
                },
                    cardUsable:function (card,player){
                    if(get.color(card)==player.storage.qianxing3) return false;
                },
                    cardRespondable:function (card,player){
                    if(get.color(card)==player.storage.qianxing3) return false;
                },
                    cardSavable:function (card,player){
                    if(get.color(card)==player.storage.qianxing3) return false;
                },
                },
                intro:{
                    content:function (color){
                    return '不能使用或打出'+get.translation(color)+'的牌';
                },
                },
            },
            "危嗣":{
                audio:["危嗣",2],
                trigger:{
                    player:"phaseBegin",
                },
                direct:true,
                init:function (player){
        player.storage.危嗣=[];
    },
                unique:true,
                forceunique:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('危嗣'),[1,2],function(card,player,target){
            return target.num('he')>0;
        },function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('危嗣',result.targets);
            event.targets=result.targets;
        }
        else{
            event.finish();
        }
        "step 2"
        if(event.targets.length){
            var target=event.targets.shift();
            event.current=target;
            player.choosePlayerCard(3,target,true);
        }
        else{
            event.finish();
        }
        "step 3"
        if(result.bool){
            player.storage.危嗣=player.storage.危嗣.concat(result.links);
            player.markSkill('危嗣');
            player.syncStorage('危嗣');
            event.current.lose(result.links,ui.special);
            event.current.$give(result.links,player);
            event.goto(2);
        }
    },
                intro:{
                    content:"cards",
                    onunmark:function (storage,player){
            if(storage&&storage.length){
                for(var i=0;i<storage.length;i++){
                    ui.discardPile.appendChild(storage[i]);
                }
                player.$throw(storage);
                player.storage.危嗣.length=0;
            }
        },
                },
                ai:{
                    threaten:2,
                },
                global:"weisi2",
            },
            "weisi2":{
                enable:"phaseUse",
                audio:["危嗣",2],
                forceaudio:true,
                filter:function (event,player){
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].storage.危嗣){
                return game.players[i].storage.危嗣.length>1&&player.canUse('sha',game.players[i],true,true);
            }
        }
        return false;
    },
                content:function (){
                "step 0"
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].storage.危嗣){
                        event.target=game.players[i];
                        break;
                    }
                }
                if(event.target){
                    player.chooseCardButton(2,event.target.storage.危嗣).set('ai',function(){
                        return 1;
                    });
                }
                else{
                    event.finish();
                }
                "step 1"
                if(result.bool){
                    for(var i=0;i<result.links.length;i++){
                        event.target.storage.危嗣.remove(result.links[i]);
                    }
                    event.target.syncStorage('危嗣');
                    if(!event.target.storage.危嗣.length){
                        event.target.unmarkSkill('危嗣');
                    }
                    else{
                        event.target.markSkill('危嗣');
                    }
                    event.target.$throw(result.links);
                    for(var i=0;i<result.links.length;i++){
                        ui.discardPile.appendChild(result.links[i]);
                    }
                    player.useCard({name:'sha'},event.target);
                }
},
            },
            "过目":{
                audio:["过目",2],
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filterTarget:function (card,player,target){
        return target!=player&&target.num('h')>0;
    },
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('过目'),function(card,player,target){
            return target!=player&&target.num('h')>0;
        }).set('ai',function(){
            return Math.random();
        });
        'step 1'
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('过目',target);
            var card=target.get('h').randomGet();
            player.showCards(card);
            player.storage.过目=get.type(card,'trick');
            game.addVideo('storage',player,['过目',player.storage.过目]);
            player.markSkill('过目');
        }
    },
                intro:{
                    content:function (type){
            return get.translation(type)+'牌';
        },
                },
                group:["guomu2","guomu3"],
                ai:{
                    order:11,
                    result:{
                        player:1,
                    },
                },
            },
            "guomu2":{
                audio:["过目",2],
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function (event,player){
        // return (get.type(event.card,'trick')==player.storage.过目&&event.cards[0]&&event.cards[0]==event.card);
        return get.type(event.card,'trick')==player.storage.过目;
    },
                content:function (){
        player.draw(2);
        player.recover();
    },
                ai:{
                    threaten:1.4,
                },
            },
            "guomu3":{
                trigger:{
                    player:"phaseUseEnd",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
                delete player.storage.过目;
                player.unmarkSkill('过目');
            },
            },
            "展图":{
                unique:true,
                audio:["展图",2],
                group:"zhantu5",
                gainnable:true,
                forceunique:true,
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function (event,player){
        return event.player!=player;
    },
                logTarget:"player",
                check:function (event,player){
        if(ai.get.attitude(player,event.player)<5) return false;
        if(player.maxHp-player.hp>=2) return false;
        if(player.hp==1) return false;
        if(player.hp==2&&player.num('h')<2) return false;
        if(event.player.num('h')>=event.player.hp) return false;
        return true;
    },
                content:function (){
        "step 0"
        player.draw(5);
        "step 1"
        player.chooseCard(3,'he',true,'交给'+get.translation(trigger.player)+'三张牌').set('ai',function(card){
            if(ui.selected.cards.length&&card.name==ui.selected.cards[0].name) return -1;
            if(get.tag(card,'damage')) return 1;
            if(get.type(card)=='equip') return 1;
            return 0;
        });
        "step 2"
        trigger.player.gain(result.cards,player);
        if(player==game.me||trigger.player==game.me)
        player.$give(result.cards,trigger.player);
        else
        player.$give(2,trigger.player);
        game.delay();
        trigger.player.addSkill('zhantu2');
        trigger.player.storage.展图=player;
    },
                ai:{
                    threaten:1.1,
                    expose:0.3,
                },
            },
            "zhantu5":{
                audio:["展图",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        'step 0'
        player.chooseCardTarget({
            filterTarget:true,
            filterCard:lib.filter.cardDiscardable,
            ai1:function(card){
                return 8-ai.get.useful(card);
            },
            ai2:function(target){
                return -ai.get.attitude(player,target);
            },
            prompt:get.prompt('zhantu5')
        });
        'step 1'
        if(result.bool){
            player.logSkill('zhantu5',result.targets);
            player.discard(result.cards);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        var target=event.target;
        var list=[];
        for(var i=0;i<lib.inpile.length;i++){
            var info=lib.card[lib.inpile[i]];
            if(info.type=='delay'&&!info.cancel&&!target.hasJudge(lib.inpile[i])){
                list.push(lib.inpile[i]);
            }
        }
        if(list.length){
            var card=game.createCard(list.randomGet());
            target.addJudge(card);
            target.$draw(card);
            game.delay();
        }
    },
            },
            "zhantu2":{
                trigger:{
                    player:"phaseUseEnd",
                },
                forced:true,
                audio:["展图",2],
                content:function (){
                if(player.storage.展图){
                    player.storage.展图.loseHp();
                    delete player.storage.展图;
                }
                player.removeSkill('zhantu2');
            },
                group:"zhantu3",
            },
            "zhantu3":{
                trigger:{
                    source:"dieAfter",
                },
                forced:true,
                audio:["展图",2],
                content:function (){
                delete player.storage.展图;
                player.removeSkill('zhantu2');
            },
            },
            "忠胆":{
                audio:["忠胆",2],
                group:"zhongdan2",
                trigger:{
                    player:"shaMiss",
                },
                direct:true,
                filter:function (event,player){
        return event.responded&&get.itemtype(event.cards)=='cards'&&get.itemtype(event.responded.cards)=='cards';
    },
                content:function (){
        "step 0"
        event.cards1=trigger.cards.slice(0);
        event.cards2=trigger.responded.cards.slice(0);
        player.draw(2);
        player.addTempSkill('paoxiao','phaseAfter');
        player.chooseTarget('忠胆：将杀或闪交给一名其他角色',function(card,player,target){
            return target!=_status.event.getTrigger().target&&target!=player;
        }).set('ai',function(target){
            return ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            var sha=false;
            if(event.cards1.length==1&&get.color(event.cards1[0])=='red'){
                sha=true;
            }
            player.chooseControl('杀','闪',function(event,player){
                if(_status.event.choosesha) return '杀';
                return '闪';
            }).set('prompt','选择交给'+get.translation(result.targets)+'的牌').set('choosesha',sha);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        "step 2"
        player.logSkill('忠胆',event.target);
        event.sha=false;
        if(result.control=='杀'){
            event.target.gain(event.cards1,'gain2');
            if(event.cards1.length==1&&get.color(event.cards1[0])=='red'){
                event.sha=true;
            }
        }
        else{
            event.target.gain(event.cards2,'gain2');
            if(event.cards2.length==1&&get.color(event.cards2[0])=='red'){
                event.sha=true;
            }
        }
        "step 3"
        if(event.sha){
            event.target.chooseToUse('是否使用一张杀？',{name:'sha'}).set('filterTarget',function(card,player,target){
                return target!=_status.event.source&&get.distance(_status.event.source,target,'attack')<=1&&player.canUse('sha',target,false);
            }).set('source',player);
        }
    },
            },
            "zhongdan2":{
                audio:["忠胆",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha')&&
        event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
            },
            "采樵":{
                audio:["采樵",2],
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
        return event.player!=player&&event.player.num('h')==player.num('h')&&event.player.isAlive()&&player.getFriends().contains(event.player);
    },
                check:function (event,player){
        return ai.get.attitude(player,event.player)>=0;
    },
                priority:-5,
                logTarget:"player",
                content:function (){
        game.asyncDraw([trigger.player,player],2);
        player.recover();
    },
                ai:{
                    expose:0.1,
                },
                group:"采樵_1",
                subSkill:{
                    "1":{
                        audio:["采樵",2],
                        trigger:{
                            global:"phaseDiscardBegin",
                        },
                        init:function (player){
                player.storage.采樵_1=[];
            },
                        unique:true,
                        filter:function (event,player){
                if(event.player==player) return false;
                if((player.num('h')&&event.player.num('h'))||(player.num('e')&&event.player.num('e'))||(player.num('j')&&event.player.num('j'))) return true;
            },
                        intro:{
                            onunmark:function (content,player){
                    player.storage.采樵_1.length=0;
                },
                            mark:function (dialog,content,player){
                    dialog.add('<div class="text center">最近采集的樵木牌</div>');
                    var cards=[];
                    for(var i=0;i<content.length;i++){
                        cards.push(content[i]);
                    }
                    if(cards.length){
                        if(player!=game.me){
                            dialog.add([cards,'blank']);        
                        }
                        else{
                            dialog.add(cards);
                        }
                    }
                    else{
                        dialog.add('（无）');
                    }
                },
                        },
                        marktext:"樵",
                        check:function (event,player){
                var att=ai.get.attitude(player,event.player);
                if((player.num('h','tao')||player.num('h','shan')||player.num('h','jiu'))&&player.hp<=1) return false;
                var num=Math.abs(player.num('hej')-event.player.num('hej'));
                if(event.player.identity&&player.identity&&(event.player.identity==player.identity)&&att>0){
                    if(player.num('j')>0&&event.player.num('j')>0) return true;
                    return false;
                }             
                return num>1&&player.num('hej')<event.player.num('hej')&&att<0;
            },
                        content:function (){
                "step 0"
                player.chooseControl('手牌区域','装备区域','判定区域',ui.create.dialog('请选择一个区域','hidden')).ai=function(){
                    var num0=Math.abs(player.num('h')-trigger.player.num('h'));
                    var num1=Math.abs(player.num('e')-trigger.player.num('e'));
                    if(player.num('j')>0&&trigger.player.num('j')>0) return '判定区域';
                    if(num0>1&&player.num('h')<trigger.player.num('h')) return '手牌区域';
                    if(num1>1&&player.num('e')<trigger.player.num('e')) return '装备区域';
                    return '装备区域';
                }   
                "step 1"   
                if(result.control=='手牌区域'){
                    var hs0=player.get('h');
                    var hs1=trigger.player.get('h');
                    if(!hs0.length||!hs1.length){
                        event.finish();
                    }
                    else{
                        player.lose(hs0)._triggered=null;
                        player.$throw(hs0);
                        player.markSkill('采樵_1');
                        player.storage.采樵_1=player.storage.采樵_1.concat(hs1);
                        player.syncStorage('采樵_1');
                        trigger.player.lose(hs1,ui.special)._triggered=null;
                        trigger.player.$give(hs1,player);
                    }
                }
                if(result.control=='装备区域'){
                    var hs0=player.get('e');
                    var hs1=trigger.player.get('e');
                    if(!hs0.length||!hs1.length){
                        event.finish();
                    }
                    else{
                        player.lose(hs0)._triggered=null;
                        player.$throw(hs0);
                        player.storage.采樵_1=player.storage.采樵_1.concat(hs1);
                        player.markSkill('采樵_1');
                        player.syncStorage('采樵_1');
                        trigger.player.lose(hs1,ui.special)._triggered=null;
                        trigger.player.$give(hs1,player);
                    }
                }
                if(result.control=='判定区域'){
                    var hs0=player.get('j');
                    var hs1=trigger.player.get('j');
                    if(!hs0.length||!hs1.length){
                        event.finish();
                    }
                    else{
                        player.lose(hs0)._triggered=null;
                        player.$throw(hs0);
                        player.markSkill('采樵_1');
                        player.storage.采樵_1=player.storage.采樵_1.concat(hs1);
                        player.syncStorage('采樵_1');
                        trigger.player.lose(hs1,ui.special)._triggered=null;
                        trigger.player.$give(hs1,player);
                    } 
                }  
            },
                        sub:true,
                    },
                },
            },
            "呢喃":{
                audio:["呢喃",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.num('h','sha')>0;
    },
                filterCard:{
                    name:"sha",
                },
                prepare:function (cards,player){
        player.$throw(cards,1000);
    },
                discard:false,
                delay:0.5,
                content:function (){
        "step 0"
        player.draw();
        player.recover();
        "step 1"
        for(var i=0;i<cards.length;i++){
            ui.discardPile.appendChild(cards[i]);
        }
    },
                ai:{
                    basic:{
                        order:1,
                    },
                    result:{
                        player:1,
                    },
                },
                group:["ninan2","呢喃_1"],
                subSkill:{
                    "1":{
                        audio:["呢喃",2],
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        unique:true,
                        filter:function (event,player){
                return player.storage.采樵_1.length>0;
            },
                        content:function (){
                "step 0"
                player.chooseControl('其他角色','自己获得',ui.create.dialog('请选择一项','hidden')).ai=function(){
                    if(player.num('h')<2) return '自己获得';
                    return '其他角色';
                }
                "step 1"
                if(result.control=='自己获得'){
                    player.gain(player.storage.采樵_1,'gain2');
                    player.storage.采樵_1=[];
                    player.unmarkSkill('采樵_1');
                    event.finish();
                }
                if(result.control=='其他角色'){
                    player.chooseTarget(function(card,player,target){
                        return player!=target;
                    },'请选择获得牌的目标',true).ai=function(target){
                        return ai.get.attitude(player,target);
                    };
                }
                "step 2"
                if(result.bool){
                    event.targets=result.targets;
                    var num=player.storage.采樵_1.length;
                    player.draw(num);
                    event.targets[0].gain(player.storage.采樵_1);
                    player.$give(player.storage.采樵_1,event.targets[0]);
                    player.storage.采樵_1=[];
                    player.unmarkSkill('采樵_1');
                    event.finish();
                }        
            },
                        ai:{
                            threaten:3,
                            expose:0.3,
                        },
                        sub:true,
                    },
                },
            },
            "ninan2":{
                trigger:{
                    player:"phaseUseEnd",
                },
                direct:true,
                filter:function (event,player){
        return player.getStat().skill.呢喃>=4;
    },
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('呢喃'),function(card,player,target){
            return target.sex=='male'&&target!=player;
        }).set('ai',function(target){
            return ai.get.attitude(_status.event.player,target);
        });
        'step 1'
        if(result.bool){
            player.logSkill('呢喃',result.targets);
            result.targets[0].draw(3);
            result.targets[0].gainMaxHp(2);
            player.recover(player.maxHp-player.hp);
        }
    },
            },
            "祸乱":{
                mode:["identity"],
                audio:["祸乱",2],
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                filter:function (event,player){
        if(!game.zhu||!game.zhu.isZhu) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]==game.zhu||game.players[i]==player) continue;
            if(get.distance(game.players[i],game.zhu,'attack')<=1&&game.players[i].num('he')){
                return true;
            }
        }
        return false;
    },
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('祸乱'),function(card,player,target){
            if(target==player||target==game.zhu) return false;
            return get.distance(target,game.zhu,'attack')<=1&&target.num('he')>0;
        }).set('ai',function(target){
            var player=_status.event.player;
            var zhu=_status.event.zhu;
            if(ai.get.attitude(player,target)>0) return 0;
            var nh=target.num('h');
            var nh2=zhu.num('h');
            if(nh>nh2) return 2;
            if(nh==nh2&&target.num('e')) return 1.5;
            return 1;
        }).set('zhu',game.zhu);
        'step 1'
        if(result.bool){
            event.target=result.targets[0];
            player.logSkill('祸乱',event.target);
            player.discardPlayerCard(event.target,'he',true);
        }
        else{
            event.finish();
        }
        'step 2'
        event.target.draw(2);
        'step 3'
        if(event.target.num('h')>game.zhu.num('h')){
            player.draw(2);
            player.gainMaxHp();
        }
    },
                ai:{
                    threaten:1.2,
                },
            },
            "贿赂":{
                audio:["贿赂",2],
                group:["huilu2","huilu3"],
                trigger:{
                    player:"damageBefore",
                },
                direct:true,
                filter:function (event,player){
        if(!player.num('he')) return false;
        if(!event.source||event.source.isDead()) return false;
        if(event.source.storage.贿赂&&event.source.storage.贿赂.contains(player)) return false;
        return true;
    },
                content:function (){
        'step 0'
        var att=(ai.get.attitude(player,trigger.source)>0);
        var goon=false;
        if(player.hp==1){
            goon=true;
        }
        else{
            var he=player.get('he');
            var num=0;
            for(var i=0;i<he.length;i++){
                if(ai.get.value(he[i])<8){
                    num++;
                    if(num>=2){
                        goon=true;break;
                    }
                }
            }
        }
        player.chooseCard('he',[1,player.num('he')],get.prompt('贿赂',trigger.source)).set('ai',function(card){
            if(_status.event.att){
                return 10-ai.get.value(card);
            }
            if(_status.event.goon){
                return 8-ai.get.value(card);
            }
            return 0;
        }).set('goon',goon).set('att',att);
        'step 1'
        if(result.bool){
            player.logSkill('贿赂');
            event.num=result.cards.length;
            var goon=false;
            if(event.num>2||ai.get.attitude(trigger.source,player)>=0){
                goon=true;
            }
            var forced=false;
            var str='获得其中一张牌并防止伤害';
            if(trigger.source.num('he')<event.num){
                forced=true;
            }
            else{
                str+='，或取消并弃置'+get.cnNumber(result.cards.length)+'张牌';
            }
            if(!trigger.source.storage.贿赂){
                trigger.source.storage.贿赂=[];
            }
            trigger.source.storage.贿赂.push(player);
            trigger.source.chooseButton([str,result.cards],forced).set('ai',function(button){
                if(_status.event.goon){
                    return ai.get.value(button.link);
                }
                return ai.get.value(button.link)-8;
            }).set('goon',goon);
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            var card=result.links[0];
            trigger.source.gain(card,player);
            if(get.position(card)=='e'){
                player.$give(card,trigger.source);
            }
            else{
                player.$give(1,trigger.source);
            }
            trigger.untrigger();
            trigger.finish();
        }
        else{
            trigger.source.chooseToDiscard(event.num,true,'he');
        }
    },
            },
            "huilu2":{
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
    if(trigger.num>1) trigger.num=1
},
                group:"huilu3",
            },
            "huilu3":{
                trigger:{
                    player:"loseHpBefore",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
player.logSkill('huilu3')
trigger.untrigger();
trigger.finish();   
},
            },
            "昭烈":{
                audio:["昭烈",2],
                trigger:{
                    player:["recoverAfter","loseHpAfter"],
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('昭烈'),function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            return ai.get.attitude(_status.event.player,target);
        });
        "step 1"
        if(result.bool){
            player.logSkill('昭烈',result.targets);
            event.target=result.targets[0];
            if(event.target.hp==event.target.maxHp){
                event.target.draw(3);
                event.finish();
            }
            else{
                event.target.chooseControl('draw_card','recover_hp',function(event,target){
                    if(target.hp>=2||target.hp>=target.maxHp-1) return 'draw_card';
                    if(target.hp==2&&target.num('h')==0) return 'draw_card';
                    return 'recover_hp';
                });
            }
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.control=='draw_card'){
            target.draw(3);
        }
        else{
            target.recover(2);
        }
    },
                ai:{
                    threaten:0.8,
                    expose:0.1,
                },
            },
            "智心":{
                audio:["智心",2],
                trigger:{
                    player:"phaseBegin",
                },
                check:function (event,player){
        if(player.hp>2) return false;
        var cards=player.get('h');
        if(cards.length>3) return false;
        for(var i=0;i<cards.length;i++){
            if(ai.get.value(cards[i])>7||get.tag(cards[i],'recover')>=1) return false;
        }
        return true;
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        var cards=player.get('h');
        event.bool=cards.length!=player.hp;
        player.discard(cards);
        "step 1"
        if(event.bool){
            player.recover(2);
            player.draw(player.maxHp-player.num('h'));
        }
    },
            },
            "仁王":{
                audio:["仁王",2],
                trigger:{
                    player:["gainEnd","loseEnd"],
                },
                direct:true,
                filter:function (event,player){
        return event.cards&&event.cards.length>1;
    },
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('仁王'),function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            return ai.get.attitude(player,target);
        });
        'step 1'
        if(result.bool){
            player.logSkill('仁王',result.targets);
            result.targets[0].draw(3);
            result.targets[0].gainMaxHp();
        }
    },
            },
            "御驾":{
                audio:["御驾",2],
                trigger:{
                    player:"phaseDiscardAfter",
                },
                forced:true,
                filter:function (event,player){
        return player.getStat('damage')>0;
    },
                check:function (event,player){
        return player.hp==player.maxHp;
    },
                content:function (){
        "step 0"
        player.recover(2);
        "step 1"
        player.draw(2);
    },
            },
            "烈武":{
                audio:["烈武",2],
                group:["liewu2","liewu3","liewu4"],
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function (card){
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"sha",
                    suit:"heart",
                    number:5,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"heart","number":5,"name":"sha","cardid":"4466804446","_transform":"translateX(224px)","_mouseentercreated":false,"clone":{"name":"sha","suit":"heart","number":5,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":5305},"timeout":5255,"original":"h"}],
                },
                viewAsFilter:function (player){
        if(!player.num('he',{color:'red'})) return false;
    },
                prompt:"将一张红色牌当杀使用或打出",
                check:function (card){return 4-ai.get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            if(!player.num('he',{color:'red'})) return false;
        },
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    order:3,
                    result:{
                        target:function (player,target){
                if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                    if(ai.get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3.05+(kzol_sgs.getDefenseSha(target,player))/30;
                    }
                }
                return -1.55+(kzol_sgs.getDefenseSha(target,player))/30;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function (card){
                if(card.nature) return 1;
            },
                        fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
            },
            "liewu2":{
                mod:{
                    targetEnabled:function (card,player,target){
            if(card.name=='sha'||card.name=='huogong'){
                return false;
            }
        },
                },
            },
            "liewu3":{
                trigger:{
                    target:"shaBefore",
                },
                forced:true,
                priority:6,
                audio:["烈武",2],
                filter:function (event){
        if(event.player.num('s','unequip')) return false;
        return (event.card.name=='sha'&&get.color(event.card)=='black')
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card,player){
                var equip1=player.get('e','1');
                if(equip1&&equip1.name=='qinggang') return 1;
                if(player.num('s','unequip')) return;
                if(card.name=='sha'&&get.color(card)=='black') return 'zerotarget';
            },
                    },
                },
            },
            "liewu4":{
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&
        event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                forced:true,
                content:function (){
        trigger.num+=3;
    },
            },
            "恩断":{
                audio:["恩断",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target&&target.num('h');
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target).set('small',true);
        "step 1"
        if(result.bool){
            if(!target.hasSkill('fengyin')){
                target.addTempSkill('fengyin','phaseAfter');
            }
            target.addTempSkill('enduan2','phaseAfter');
            player.addTempSkill('paoxiao','phaseAfter');
            event.finish();
        }
        else if(target.hp<target.maxHp){
            player.chooseBool('是否让目标回复三点体力？').ai=function(event,player){
                return ai.get.recoverEffect(target,player,player)>0;
            };
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            target.recover(3);
        }
    },
                ai:{
                    result:{
                        target:function (player,target){
                var hs=player.get('h');
                if(hs.length<3) return 0;
                var bool=false;
                for(var i=0;i<hs.length;i++){
                    if(hs[i].number>=9&&ai.get.value(hs[i])<7){
                        bool=true;
                        break;
                    }
                }
                if(!bool) return 0;
                if(target.num('h')>target.hp+1&&ai.get.recoverEffect(target)>0){
                    return 1;
                }
                if(player.canUse('sha',target)&&(player.num('h','sha')||player.num('he',{color:'red'}))){
                    return -2;
                }
                return -0.5;
            },
                    },
                    order:9,
                },
            },
            "enduan2":{
                mark:true,
                mod:{
                    cardEnabled:function (){
                    return false;
                },
                    cardUsable:function (){
                    return false;
                },
                    cardRespondable:function (){
                    return false;
                },
                    cardSavable:function (){
                    return false;
                },
                },
                intro:{
                    content:"不能使用或打出卡牌",
                },
            },
            "豪气":{
                group:["haoqi2","haoqi3","haoqi4","haoqi5","haoqi6","haoqi7"],
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
            },
            "haoqi2":{
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='trick'||get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "haoqi3":{
                audio:["豪气",2],
                trigger:{
                    player:"equipBegin",
                },
                frequent:true,
                filter:function (event,player){
        return player.num('e',{subtype:'equip1'})&&get.subtype(event.card)== 'equip1';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    effect:{
                        player:function (card,player,target){
                if(get.subtype(card)=='equip1') return[1,10];
            },
                    },
                },
            },
            "haoqi4":{
                audio:["豪气",2],
                trigger:{
                    player:"loseHpBefore",
                },
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
player.logSkill('haoqi4')
trigger.untrigger();
trigger.finish();    
},
            },
            "haoqi5":{
                audio:["豪气",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.2;
},
                content:function (){
trigger.untrigger();
trigger.finish();
},
            },
            "真假":{
                audio:["真假",2],
                unique:true,
                mark:true,
                skillAnimation:true,
                trigger:{
                    player:"phaseBegin",
                },
                init:function (player){
        player.storage.真假=false;
    },
                filter:function (event,player){
        if(player.storage.真假) return false;
        if(typeof player.storage.zhenjia2=='number'){
            return player.hp<player.storage.zhenjia2;
        }
        return false;
    },
                check:function (event,player){
        if(player.hp<=1) return true;
        return player.hp<player.storage.zhenjia2-1;
    },
                content:function (){
        player.awakenSkill('真假');
        player.recover(player.storage.zhenjia2-player.hp);
        player.draw(player.storage.zhenjia2-player.hp);
        player.storage.真假=true;
    },
                intro:{
                    mark:function (dialog,content,player){
            if(player.storage.真假) return;
            if(typeof player.storage.zhenjia2!='number'){
                return '上回合体力：无';
            }
            return '上回合体力：'+player.storage.zhenjia2;
        },
                    content:"limited",
                },
                group:["zhenjia2"],
            },
            "zhenjia2":{
                audio:["真假",2],
                trigger:{
                    player:"phaseEnd",
                },
                priority:-10,
                forced:true,
                popup:false,
                silent:true,
                content:function (){
                player.storage.zhenjia2=player.hp;
                game.broadcast(function(player){
                    player.storage.zhenjia2=player.hp;
                },player);
                game.addVideo('storage',player,['zhenjia2',player.storage.zhenjia2]);
            },
                intro:{
                    content:function (storage,player){
                    if(player.storage.真假) return;
                    return '上回合体力：'+storage;
                },
                },
            },
            "haoqi6":{
                trigger:{
                    target:"shaBefore",
                },
                forced:true,
                priority:6,
                audio:["豪气",2],
                filter:function (event){
        if(event.player.num('s','unequip')) return false;
        return (event.card.name=='sha'&&get.color(event.card)=='black')
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card,player){
                var equip1=player.get('e','1');
                if(equip1&&equip1.name=='qinggang') return 1;
                if(player.num('s','unequip')) return;
                if(card.name=='sha'&&get.color(card)=='black') return 'zerotarget';
            },
                    },
                },
            },
            "haoqi7":{
                audio:["豪气",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&(event.card.name=='sha')&&
        event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                forced:true,
                content:function (){
        trigger.num+=5;
    },
            },
            "绝尘":{
                group:["绝尘_sha","绝尘_shan"],
				subSkill:{
					sha:{
						audio:2,
						audioname:['re_zhaoyun'],
						enable:['chooseToUse','chooseToRespond'],
						filterCard:{name:'shan'},
						viewAs:{name:'sha'},
						viewAsFilter:function(player){
							if(!player.countCards('h','shan')) return false;
						},
						prompt:'将一张闪当杀使用或打出',
						check:function(){return 1},
						ai:{
							effect:{
								target:function(card,player,target,current){
									if(get.tag(card,'respondSha')&&current<0) return 0.6
								}
							},
							respondSha:true,
							skillTagFilter:function(player){
								if(!player.countCards('h','shan')) return false;
							},
							order:function(){
								return get.order({name:'sha'})+0.1;
							},
							useful:-1,
							value:-1
						}
					},
					shan:{
						audio:'longdan_sha',
						audioname:['re_zhaoyun'],
						enable:['chooseToRespond','chooseToUse'],
						filterCard:{name:'sha'},
						viewAs:{name:'shan'},
						prompt:'将一张杀当闪使用或打出',
						check:function(){return 1},
						viewAsFilter:function(player){
							if(!player.countCards('h','sha')) return false;
						},
						ai:{
							respondShan:true,
							skillTagFilter:function(player){
								if(!player.countCards('h','sha')) return false;
							},
							effect:{
								target:function(card,player,target,current){
									if(get.tag(card,'respondShan')&&current<0) return 0.6
								}
							},
							order:4,
							useful:-1,
							value:-1
						}
					}
				}
            },
            "横枪":{
                audio:["横枪",2],
                trigger:{
                    player:["respond","useCard"],
                },
                frequent:true,
                filter:function (event,player){
        return player!=_status.currentPhase&&get.itemtype(event.cards)=='cards';
    },
                content:function (){
        "step 0"
        event.card=get.cards()[0];
        game.broadcast(function(card){
            ui.arena.classList.add('thrownhighlight');
            card.copy('thrown','center','thrownhighlight',ui.arena).animate('start');
        },event.card);
        event.node=event.card.copy('thrown','center','thrownhighlight',ui.arena).animate('start');
        ui.arena.classList.add('thrownhighlight');
        game.addVideo('thrownhighlight1');
        game.addVideo('centernode',null,get.cardInfo(event.card));
        if(get.type(event.card,'trick')==get.type(trigger.card,'trick')){
            player.chooseTarget('选择获得此牌的角色').set('ai',function(target){
                var att=ai.get.attitude(_status.event.player,target);
                if(_status.event.du){
                    return -att;
                }
                if(att>0){
                    return att+Math.max(0,5-target.num('h'));
                }
                return att;
            }).set('du',event.card.name=='du');
        }
        else{
            player.chooseBool('是否弃置'+get.translation(event.card)+'？');
            event.disbool=true;
        }
        game.delay(2);
        "step 1"
        if(event.disbool){
            if(!result.bool){
                game.log(player,'展示了',event.card);
                ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
            }
            else{
                game.log(player,'展示并弃掉了',event.card);
                ui.discardPile.appendChild(event.card);
            }
            game.addVideo('deletenode',player,[get.cardInfo(event.node)]);
            event.node.delete();
            game.broadcast(function(card){
                ui.arena.classList.remove('thrownhighlight');
                if(card.clone){
                    card.clone.delete();
                }
            },event.card);
        }
        else if(result.targets){
            player.line(result.targets,'green');
            player.draw();
            result.targets[0].gain(event.card);
            result.targets[0].recover();
            event.node.moveDelete(result.targets[0]);
            game.log(result.targets[0],'获得了',event.card);
            game.addVideo('gain2',result.targets[0],[get.cardInfo(event.node)]);
            game.broadcast(function(card,target){
                ui.arena.classList.remove('thrownhighlight');
                if(card.clone){
                    card.clone.moveDelete(target);
                }
            },event.card,result.targets[0]);
        }
        else{
            game.log(player,'展示并弃掉了',event.card);
            ui.discardPile.appendChild(event.card);
            game.addVideo('deletenode',player,[get.cardInfo(event.node)]);
            event.node.delete();
            game.broadcast(function(card){
                ui.arena.classList.remove('thrownhighlight');
                if(card.clone){
                    card.clone.delete();
                }
            },event.card);
        }
        game.addVideo('thrownhighlight2');
        ui.arena.classList.remove('thrownhighlight');
    },
                ai:{
                    effect:{
                        target:function (card,player){
                if(get.tag(card,'respond')&&player.num('h')>1) return [1,0.2];
            },
                    },
                },
            },
            "咫尺":{
                group:["longzhichi1","longzhichi2"],
                ai:{
                    mingzhi:false,
                    effect:{
                        target:function (card,player,target,current){
                if(get.tag(card,'respondShan')||get.tag(card,'respondSha')){
                    if(ai.get.attitude(target,player)<=0){
                        if(current>0) return;
                        if(target.num('h')==0) return 1.6;
                        if(target.num('h')==1) return 1.2;
                        if(target.num('h')==2) return [0.8,0.2,0,-0.2];
                        return [0.4,0.7,0,-0.7];
                    }
                }
            },
                    },
                },
            },
            "longzhichi1":{
                audio:["咫尺",2],
                trigger:{
                    player:"shaBefore",
                },
				filter:function (event,player){
					if(event.skill!='绝尘_sha') return false;
					return event.target.num('h')>0;
				},
				content:function (){
					var card=trigger.target.get('h').randomGet();
 					player.gain(card,trigger.target);
 					trigger.target.$give(1,player);
 					game.delay();
 					player.draw();
 					player.recover();
				},
            },
            "longzhichi2":{
                audio:["咫尺",2],
                trigger:{
                    player:"respond",
                },
				filter:function (event,player){
					if(event.skill!='绝尘_shan'&&event.skill!='绝尘_sha') return false;
					return event.source&&event.source.num('h')>0;
				},
				content:function (){
					var card=trigger.source.get('h').randomGet();
					player.gain(card,trigger.source);
					trigger.source.$give(1,player);
					game.delay();
					player.draw();
					player.recover();
				},
            },
            "沧海":{
                audio:["沧海",2],
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                group:["沧海2"],
                content:function (){
        var list=["sha"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
            },
            "西凉":{
                audio:["西凉",2],
                group:"xiliang2",
                trigger:{
                    player:"shaBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.target)<0;
    },
                content:function (){
        "step 0"
        player.draw(2);
        player.recover(2);
        player.judge(function(){return 0});
        if(!trigger.target.hasSkill('fengyin')){
            trigger.target.addTempSkill('fengyin','phaseAfter');
        }
        "step 1"
        var suit=get.suit(result.card);
        var target=trigger.target;
        var num=target.num('h','shan');
        target.chooseToDiscard('请弃置一张'+get.translation(suit)+'牌，否则不能使用闪抵消此杀','he',function(card){
            return get.suit(card)==_status.event.suit;
        }).set('ai',function(card){
            var num=_status.event.num;
            if(num==0) return 0;
            if(card.name=='shan') return num>1;
            return 8-ai.get.value(card);
        }).set('num',num).set('suit',suit);
        "step 2"
        if(!result.bool){
            trigger.directHit=true;
        }
    },
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num+2;
        },
                },
            },
            "xiliang2":{
                audio:["西凉",2],
                trigger:{
                    source:["damageEnd"],
                },
                content:function (){
        player.gainMaxHp();
    },
            },
            "玉碎":{
                audio:["玉碎",2],
                filter:function (event,player){
        return event.player!=player&&event.card;
    },
                check:function (event,player){
        if(ai.get.attitude(player,event.player)>0){
            return false;
        }
        if(get.tag(event.card,'respondSha')){
            if(player.num('h',{name:'sha'})==0){
                return true;
            }
        }
        else if(get.tag(event.card,'respondShan')){
            if(player.num('h',{name:'shan'})==0){
                return true;
            }
        }
        else if(get.tag(event.card,'damage')){
            if(player.num('h')<2) return true;
        }
        else if(event.card.name=='shunshou'&&player.hp>2){
            return true;
        }
        return false;
    },
                priority:10,
                trigger:{
                    target:"useCardToBefore",
                },
                content:function (){
        "step 0"
        player.loseMaxHp(1);
        player.recover(1);
        player.draw(1);
        "step 1"
        trigger.untrigger();
        trigger.finish();
        "step 2"
        if(trigger.player.num('he')){
          player.discardPlayerCard(2,trigger.player,'he',true);
        }
    },
                ai:{
                    expose:0.3,
                },
            },
            "孤险":{
                audio:["孤险",2],
                trigger:{
                    player:"phaseEnd",
                },
                filter:function (event,player){
        return player.hp<player.maxHp;
    },
                content:function (){
        "step 0"
        event.num=player.maxHp-player.hp;
        player.gainMaxHp(3);
        player.draw(event.num);
        "step 1"
        var check=player.num('h')-event.num;
        player.chooseCardTarget({
            selectCard:event.num,
            filterTarget:function(card,player,target){
                return player!=target;
            },
            ai1:function(card){
                var player=_status.event.player;
                if(player.maxHp-player.hp==1&&card.name=='du') return 30;
                var check=_status.event.check;
                if(check<1) return 0;
                if(player.hp>1&&check<2) return 0;
                return ai.get.unuseful(card)+9;
            },
            ai2:function(target){
                var att=ai.get.attitude(_status.event.player,target);
                if(ui.selected.cards.length==1&&ui.selected.cards[0].name=='du') return 1-att;
                return att-2;
            },
            prompt:'将'+get.cnNumber(event.num)+'张手牌交给一名其他角色',
        }).set('check',check);
        "step 2"
        if(result.bool){
            result.targets[0].gain(result.cards,event.player);
            event.player.$give(result.cards.length,result.targets[0]);
        }
    },
                ai:{
                    threaten:function (player,target){
            if(target.hp==1) return 3;
            if(target.hp==2) return 1.5;
            return 0.5;
        },
                    effect:{
                        target:function (card,player,target){
                if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
            },
                    },
                },
            },
            "匡汉":{
                audio:["匡汉",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
        return event.source&&event.source!=player;
    },
                content:function (){
        "step 0"
        trigger.source.damage(1,'fire')._triggered=null;
        "step 1"
        for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='shu') game.players[i].recover()._triggered=null;
}
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function (card,player){
                if(player.hasSkillTag('jueqing')) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
            },
            "文昭":{
                trigger:{
                    global:"dieAfter",
                },
                audio:["文昭",2],
                frequent:true,
                content:function (){
        player.draw(3);
        player.uninit;
        player.init(player.name,'魏王称帝');
        player.removeSkill('文昭');
    },
            },
            "横冲":{
                audio:["横冲",2],
                trigger:{
                    player:"damageBegin",
                },
                content:function (){
        player.gainMaxHp(2);
        player.recover(2);
    },
                ai:{
                    maixie:true,
                    "maixie_hp":true,
                    effect:{
                        target:function (card,player){
                if(player.hasSkillTag('jueqing')) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
            },
            "镇守2":{
                audio:["镇守",2],
                mark:true,
                intro:{
                    content:"cards",
                },
                trigger:{
                    global:"phaseAfter",
                },
                forced:true,
                content:function (){
        player.gain(player.storage.镇守2,'gain2');
        delete player.storage.镇守2;
        player.removeSkill('镇守2');
    },
            },
            "白衣2":{
                trigger:{
                    player:"phaseDiscardBefore",
                },
                audio:["白衣",2],
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(card.name=='sha'){
                return false;
            }
        },
                },
            },
            "悟法":{
                trigger:{
                    player:"damageBefore",
                },
                group:"悟法2",
                audio:["悟法",2],
                forced:true,
                unique:true,
                filter:function (event){
return event.nature;
},
                content:function (){
trigger.untrigger();
trigger.finish();
player.gainMaxHp();
player.loseHp();
},
            },
            "悟法2":{
                audio:["悟法",2],
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                content:function (){
        player.recover()._triggered=null;
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
            },
            "锦计":{
                trigger:{
                    player:"dying",
                },
                group:"锦计2",
                audio:["锦计",2],
                priority:7,
                unique:true,
                forced:true,
                filter:function (event,player){
        return player.hp<=0;
    },
                content:function (){
        'step 0'
        player.judge(function(card){
            return get.suit(card)=='heart'?-1:1;
        });
        'step 1'
        if(result.bool){
            player.recover(1-player.hp);
        }
    },
                ai:{
                    threaten:0.8,
                },
            },
            "锦计2":{
                trigger:{
                    player:"phaseBegin",
                },
                audio:["锦计",2],
                content:function (){
"step 0"
event.cards=get.cards(2);
player.chooseCardButton(event.cards,1,true,'选择获得一张牌').ai=ai.get.buttonValue;
"step 1"
var choice=result.links[0];
for(var i=0;i<cards.length;i++){
ui.cardPile.appendChild(cards[i]);
}
player.showCards(choice);player.gain(choice);

game.log(player,'发动锦计');
if(get.type(choice)=='basic'){
player.addTempSkill('锦计2_1','phaseAfter');
player.addTempSkill('mashu','phaseAfter');
}
else{
player.discard(player.get('j'));
player.draw();
};

game.delay();
},
                subSkill:{
                    "1":{
                        mod:{
                            cardUsable:function (card,player,num){
if(card.name=='sha') return num+1;
},
                        },
                        sub:true,
                    },
                },
            },
            shenmou:{
                audio:["深谋",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                unique:true,
                group:"shenmou2",
                mark:true,
                filter:function (event){
        return event.num>0;
    },
                init:function (player){
        player.storage.shenmou=0;
        game.addVideo('storage',player,['shenmou',player.storage.shenmou]);
    },
                content:function (){
        player.storage.shenmou++;
        game.addVideo('storage',player,['shenmou',player.storage.shenmou]);
    },
                intro:{
                    content:"mark",
                },
            },
            "shenmou2":{
                audio:["深谋",2],
                trigger:{
                    player:"phaseDiscardEnd",
                },
                forced:true,
                filter:function (event){
                return event.cards&&event.cards.length>0;
            },
                content:function (){
                player.storage.shenmou+=trigger.cards.length;
                game.addVideo('storage',player,['shenmou',player.storage.shenmou]);
            },
            },
            "伟略":{
                audio:["伟略",2],
                enable:"phaseUse",
                filter:function (event,player){
        return player.storage.shenmou>=15;
    },
                filterTarget:function (card,player,target){
         return player!=target;
},
                content:function (){
        player.storage.shenmou-=15;
        target.clearSkills()._triggered=null;
        target.die()._triggered=null;
    },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.num('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "辩论":{
                audio:["辩论",2],
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('辩论'),function(card,player,target){
            return player!=target&&target.countCards('h')>0;
        }).set('ai',function(target){
            return -get.attitude(_status.event.player,target)/target.countCards('h');
        });
        "step 1"
        if(result.bool){
            player.logSkill('辩论',result.targets[0]);
            player.chooseToCompare(result.targets[0]);
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
            player.addTempSkill('辩论2','phaseAfter');
        }
        else{
            player.addTempSkill('辩论3','phaseAfter');
        }
    },
                ai:{
                    expose:0.1,
                },
            },
            "辩论2":{
                trigger:{
                    player:"useCard",
                },
                audio:["辩论",2],
                direct:true,
                filter:function (event,player){
        var type=get.type(event.card);
        return type=='basic'||type=='trick';
    },
                content:function (){
        'step 0'
        player.removeSkill('辩论2');
        var goon=false;
        var info=get.info(trigger.card);
        if(trigger.targets&&!info.multitarget){
            var players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
                    goon=true;break;
                }
            }
        }
        if(goon){
            player.chooseTarget('辩论：是否额外指定一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
                var trigger=_status.event.getTrigger();
                if(trigger.targets.contains(target)) return false;
                return lib.filter.targetEnabled2(trigger.card,_status.event.player,target);
            }).set('ai',function(target){
                var trigger=_status.event.getTrigger();
                var player=_status.event.player;
                return ai.get.effect(target,trigger.card,player,player);
            });
        }
        else{
            if(!info.multitarget&&trigger.targets&&trigger.targets.length>1){
                event.goto(3);
            }
        }
        'step 1'
        if(result.bool){
            game.delay(0.5);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.target){
            player.logSkill('辩论',event.target);
            trigger.targets.add(event.target);
        }
        event.finish();
        'step 3'
        player.chooseTarget('辩论：是否减少一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
            return _status.event.getTrigger().targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            return -ai.get.effect(target,trigger.card,trigger.player,_status.event.player);
        });
        'step 4'
        if(result.bool){
            event.targets=result.targets;
            if(event.isMine()){
                player.logSkill('辩论',event.targets);
                event.finish();
            }
            for(var i=0;i<result.targets.length;i++){
                trigger.targets.remove(result.targets[i]);
            }
            game.delay();
        }
        else{
            event.finish();
        }
        'step 5'
        player.logSkill('辩论',event.targets);
    },
            },
            "辩论3":{
                audio:["辩论",2],
                trigger:{
                    player:"useCard",
                },
                frequent:true,
                filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                content:function (){
        player.draw(2);
        player.recover();
    },
                ai:{
                    threaten:1.4,
                    noautowuxie:true,
                },
            },
            "使臣":{
                audio:["使臣",2],
                trigger:{
                    player:["chooseToCompareAfter","compareMultipleAfter"],
                    target:["chooseToCompareAfter","compareMultipleAfter"],
                },
                filter:function (event,player){
        if(event.preserve) return false;
        if(player==event.player){
            if(event.card1.number>event.card2.number){
                return !get.owner(event.card2);
            }
            else{
                return !get.owner(event.card1);
            }
        }
        else{
            if(event.card1.number<event.card2.number){
                return !get.owner(event.card1);
            }
            else{
                return !get.owner(event.card2);
            }
        }
    },
                check:function (event,player){
        if(player==event.player){
            if(event.card1.number>event.card2.number){
                return event.card2.name!='du';
            }
            else{
                return event.card1.name!='du';
            }
        }
        else{
            if(event.card1.number<event.card2.number){
                return event.card1.name!='du';
            }
            else{
                return event.card2.name!='du';
            }
        }
    },
                content:function (){
        if(player==trigger.player){
            if(trigger.card1.number>trigger.card2.number){
                player.gain(trigger.card2,'gain2');
            }
            else{
                player.gain(trigger.card1,'gain2');
            }
        }
        else{
            if(trigger.card1.number<trigger.card2.number){
                player.gain(trigger.card1,'gain2');
            }
            else{
                player.gain(trigger.card2,'gain2');
            }
        }
    },
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "驰骋":{
                audio:["驰骋",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseControl('多摸两张','多摸三张','cancel2',function(){
            var player=_status.event.player;
            if(player.countCards('h')>3&&player.countCards('h','sha')>1){
                return '多摸两张';
            }
            if(player.countCards('h','sha')>2){
                return '多摸两张';
            }
            if(player.hp-player.countCards('h')>1){
                return '多摸三张';
            }
            return 'cancel2';
        });
        "step 1"
        if(result.control=='多摸两张'){
            trigger.num+=2;
            player.addTempSkill('驰骋2','phaseUseEnd');
            player.logSkill('驰骋');
        }
        else if(result.control=='多摸三张'){
            trigger.num+=3;
            player.addTempSkill('驰骋3','phaseUseEnd');
            player.logSkill('驰骋');
        }
    },
            },
            "驰骋2":{
                mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
            },
            "驰骋3":{
                trigger:{
                    player:"useCardAfter",
                },
                audio:["驰骋",2],
                forced:true,
                filter:function (event,player){
return get.type(event.card)=='basic';
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
            },
            "将威":{
                audio:["将威",2],
                enable:"phaseUse",
                usable:3,
                filterTarget:function (card,player,target){
        return target.countCards('h')&&target!=player;
    },
                ai:{
                    order:2.8,
                    result:{
                        target:function (player,target){
                if(get.attitude(player,target)<0&&player.hasCard(function(card){
                    return (card.number>=9&&get.value(card)<=5)||get.value(card)<=3;
                })){
                    return get.effect(target,{name:'juedou'},player,target);
                }
                else{
                    return 0;
                }
            },
                    },
                },
                content:function (){
        'step 0'
        player.chooseToCompare(target);
        'step 1'
        if(result.bool){
            player.chooseControl(function(){
                return 1;
            }).set('choiceList',[
                '令'+get.translation(target)+'不能使用或打出手牌直到回合结束并受到1点神圣伤害',
                '视为对'+get.translation(target)+'使用一张决斗并回复两点体力'
            ]);
        }
        else{
           event.target.discardPlayerCard(player,'he',true);
        }
        'step 2'
        if(result.control=='选项一'){
            target.addTempSkill('将威2','phaseAfter');
            target.damage()._triggered=null;
        }
        else{
            player.useCard({name:'juedou'},target,false);
            player.recover(2);
        }
    },
            },
            "将威2":{
                mark:true,
                mod:{
                    cardEnabled:function (){
                    return false;
                },
                    cardUsable:function (){
                    return false;
                },
                    cardRespondable:function (){
                    return false;
                },
                    cardSavable:function (){
                    return false;
                },
                },
                intro:{
                    content:"不能使用或打出卡牌",
                },
            },
            "兵戎":{
                audio:["兵戎",2],
                enable:"phaseUse",
                usable:3,
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                filterTarget:function (card,player,target){
        return target.countCards('h')>0&&target!=player;
    },
                content:function (){
        "step 0"
        if(target.countCards('h')==0||player.countCards('h')==0){
            event.finish();
            return;
        }
        "step 1"
        var sendback=function(){
            if(_status.event!=event){
                return function(){
                    event.resultOL=_status.event.resultOL;
                };
            }
        };
        if(player.isOnline()){
            player.wait(sendback);
            event.ol=true;
            player.send(function(){
                game.me.chooseCard(true).set('glow_result',true).ai=function(){
                    return Math.random();
                };
                game.resume();
            });
        }
        else{
            event.localPlayer=true;
            player.chooseCard(true).set('glow_result',true).ai=function(){
                return Math.random();
            };
        }
        if(target.isOnline()){
            target.wait(sendback);
            event.ol=true;
            target.send(function(){
                var rand=Math.random()<0.4;
                game.me.chooseCard(true).set('glow_result',true).ai=function(card){
                    if(rand) return card.name=='shan'?1:0;
                    return card.name=='shan'?0:1;
                };
                game.resume();
            });
        }
        else{
            event.localTarget=true;
        }
        "step 2"
        if(event.localPlayer){
            event.card1=result.cards[0];
        }
        if(event.localTarget){
            var rand=Math.random()<0.4;
            target.chooseCard(true).set('glow_result',true).ai=function(card){
                if(rand) return card.name=='shan'?1:0;
                return card.name=='shan'?0:1;
            };
        }
        "step 3"
        if(event.localTarget){
            event.card2=result.cards[0];
        }
        if(!event.resultOL&&event.ol){
            game.pause();
        }
        "step 4"
        try{
            if(!event.card1) event.card1=event.resultOL[player.playerid].cards[0];
            if(!event.card2) event.card2=event.resultOL[target.playerid].cards[0];
            if(!event.card1||!event.card2){
                throw('err');
            }
        }
        catch(e){
            console.log(e);
            event.finish();
            return;
        }
        if(event.card2.number>=10||event.card2.number<=4){
            if(target.countCards('h')>2){
                event.addToAI=true;
            }
        }
        game.broadcastAll(function(card1,card2){
            card1.classList.remove('glow');
            card2.classList.remove('glow');
        },event.card1,event.card2);
        "step 5"
        game.broadcastAll(function(){
            ui.arena.classList.add('thrownhighlight');
        });
        game.addVideo('thrownhighlight1');
        player.$compare(event.card1,target,event.card2);
        game.delay(4);
        "step 6"
        game.log(player,'展示了',event.card1);
        game.log(target,'展示了',event.card2);
        var name1=event.card1.name;
        if(player.hp==1&&name1=='shan'){
            name1='sha';
        }
        if(name1=='sha'&&event.card2.name!='shan'){
            player.discard(event.card1).set('animate',false);
            target.$gain2(event.card2);
            var clone=event.card1.clone;
            if(clone){
                clone.style.transition='all 0.5s';
                clone.style.transform='scale(1.2)';
                clone.delete();
                game.addVideo('deletenode',player,get.cardsInfo([clone]));
            }
            game.broadcast(function(card){
                var clone=card.clone;
                if(clone){
                    clone.style.transition='all 0.5s';
                    clone.style.transform='scale(1.2)';
                    clone.delete();
                }
            },event.card1);
            target.damage(2);
            player.recover();
        }
        else if(name1!='sha'&&event.card2.name=='shan'){
            player.discard(event.card1).set('animate',false);
            target.$gain2(event.card2);
            var clone=event.card1.clone;
            if(clone){
                clone.style.transition='all 0.5s';
                clone.style.transform='scale(1.2)';
                clone.delete();
                game.addVideo('deletenode',player,get.cardsInfo([clone]));
            }
            game.broadcast(function(card){
                var clone=card.clone;
                if(clone){
                    clone.style.transition='all 0.5s';
                    clone.style.transform='scale(1.2)';
                    clone.delete();
                }
            },event.card1);
            player.gainPlayerCard(target,true,'he');
            player.draw();
        }
        else{
            player.$gain2(event.card1);
            target.$gain2(event.card2);
        }
        game.broadcastAll(function(){
            ui.arena.classList.remove('thrownhighlight');
        });
        game.addVideo('thrownhighlight2');
    },
                ai:{
                    order:6,
                    result:{
                        target:-1,
                    },
                },
            },
            "战机":{
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                filter:function (event,player){
return !player.storage.战机;
    },
                audio:["战机",2],
                forced:true,
                priority:100,
                content:function (){
"step 0"
player.storage.战机=true;
"step 1"
player.recover( 
player.maxHp-player.hp);
        player.addSkill('待战');
    },
            },
            "待战":{
                audio:["待战",2],
                group:["待战2"],
                enable:"chooseToUse",
                unique:true,
                filterCard:function (card){    
           return get.number(card)>=_status.event.player.hp;
    },
                position:"he",
                viewAs:{
                    name:"wanjian",
                    suit:"diamond",
                    number:6,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":6,"name":"shan","cardid":"6327681454","_transform":"translateX(112px)","_mouseentercreated":false,"clone":{"name":"shan","suit":"diamond","number":6,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":9746},"timeout":9692,"original":"h"}],
                },
                prompt:"将一张大于等于你体力点数的牌当万箭齐发使用",
                check:function (card){
        return 8-ai.get.value(card);
    },
                ai:{
                    wuxie:function (target,card,player,viewer){
            if(get.attitude(viewer,target)>0&&target.countCards('h','shan')){
                if(!target.countCards('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                    basic:{
                        order:9,
                        useful:1,
                        value:5,
                    },
                    result:{
                        target:function (player,target){
                if(player.hasUnknown(2)&&get.mode()!='guozhan') return 0;
                var nh=target.countCards('h');
                if(get.mode()=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                    },
                },
            },
            "待战2":{
                audio:["待战",2],
                trigger:{
                    global:"judge",
                },
                check:function (event,player){
      var judge=event.judge(event.player.judging[0]);
      if(ai.get.attitude(player,event.player)<0) return judge>0;
      if(ai.get.attitude(player,event.player)>0) return judge<0;
      return 0;
  },
                content:function (){
"step 0"
event.cards=get.cards(4);
player.showCards(event.cards);
player.chooseCardButton(event.cards,get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+get.translation(trigger.player.judging[0])+'，选择一张牌作为判定结果',true).ai=function(card){
var trigger=_status.event.parent._trigger;
var player=_status.event.player;
var result=trigger.judge(card)-trigger.judge(trigger.player.judging[0]);
var attitude=ai.get.attitude(player,trigger.player);
if(attitude==0||result==0) return 0;
if(attitude>0){
    return result;
}
else{
    return -result;
}
}
"step 1"
if(result.bool){
player.respond(result.links[0],'highlight');
cards.remove(result.buttons[0].link);
}
else{
    event.finish();
     }
"step 2"
if(result.bool){
if(trigger.player.judging[0].clone){
    trigger.player.judging[0].clone.delete();
    game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
}
ui.discardPile.appendChild(trigger.player.judging[0]);
trigger.player.judging[0]=result.links[0];
trigger.position.appendChild(result.links[0]);
game.log(trigger.player,'的判定牌改为',result.links[0]);
if(trigger.player!=player){
    player.$gain2(cards);
    player.gain(cards);
    game.log(player,'获得了',event.cards);
}
else{
    player.discard(cards).animate=false;
}
game.delay();
}
    },
            },
            "魏统":{
                audio:["魏统",2],
                trigger:{
                    global:["phaseBegin","phaseEnd"],
                },
                forced:true,
                popup:false,
                content:function (){
player.recover();
},
            },
            "勇谋":{
                audio:["勇谋",2],
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
        if(!event.player) return false;
        if(event.player==player) return false;
        return player.num('h','sha')>0;
    },
                direct:true,
                content:function (){
        "step 0"
        var next=player.chooseToDiscard('勇谋：是否弃置一张杀对其造成1点伤害？',{name:'sha'});
        next.set('ai',function(card){
            return 9-ai.get.value(card);
        });
        next.logSkill='勇谋';
        "step 1"
        if(result.bool){
            trigger.player.damage();
        }
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                if(target.num('h')>0){
                    return [1,0.5];
                }
            },
                    },
                },
            },
            "筹策":{
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                audio:["筹策",2],
                filter:function (event,player){
          return event.player!=player;
    },
                content:function (){
                   player.loseHp();
         var list=["nanman","wanjian","lebu","bingliang","guohe","shunshou","wuzhong","wugu"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
            },
            "决意":{
                group:"决意2",
                audio:["决意",2],
                trigger:{
                    global:"recoverBefore",
                },
                filter:function (event,player){
    return event.player!=player&&player.getEnemies().contains(event.player);  
},
                priority:10,
                forced:true,
                content:function (){
                    player.loseHp();
                    trigger.untrigger();
                    trigger.finish();
    },
            },
            "决意2":{
                trigger:{
                    player:"changeHp",
                },
                forced:true,
                priority:100,
                audio:["决意",2],
                filter:function (event,player){
    return player.hp<=3;
},
                content:function (){
                   player.discard(player.getCards('h'));
                    player.recover(player.maxHp-player.hp);
},
            },
            "宣武":{
                trigger:{
                    global:"phaseBegin",
                },
                forced:true,
                popup:false,
                unique:true,
                priority:100,
                audio:["宣武",2],
                filter:function (event,player){
return player!=event.player&&(get.translation(event.player.name)=='单刀赴会'||get.translation(event.player.name2)=='单刀赴会');
},
                content:function (){
                 var list=["qinglong"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
                trigger.player.draw(3);
},
            },
            "沧海2":{
                audio:["沧海",2],
                trigger:{
                    player:"changeHp",
                },
                filter:function (event,player){
        return player.hp<=3;
    },
                forced:true,
                unique:true,
                content:function (){
        player.loseMaxHp(3);
        player.recover(player.maxHp-player.hp);
        player.addSkill('游龙');
        player.removeSkill('沧海');
    },
            },
            "游龙":{
                trigger:{
                    player:["shaBegin","respond"],
                },
                audio:["游龙",2],
                direct:true,
                filter:function (event,player){
        return player.countCards('he')>0;
    },
                content:function (){
        'step 0'
        var target=trigger.target;
        var bool=get.attitude(player,target)<0;
        var next=player.chooseToDiscard('he',get.prompt('游龙',target));
        next.ai=function(card){
            if(bool) return 7-get.value(card);
            return 0;
        };
        next.logSkill=['游龙',target];
        'step 1'
        if(result.bool){
            var target=trigger.target;
            var num=5;
            if(target.isMad()){
                num=4;
            }
            switch(Math.floor(Math.random()*num)){
                case 0:player.draw(2);break;
                case 1:player.recover(1);break;
                case 2:player.changeHujia(2);break;
            }
        }
    },
            },
            "空琴":{
                group:["空琴_1","空琴_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
                        audio:["空琴",2],
                        content:function (){
                trigger.num++;
            },
                        ai:{
                            threaten:1.5,
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        filter:function (event,player){
             return !player.storage.空琴_2&&player.countCards('h')>player.hp;
},
                        forced:true,
                        content:function (){
                player.loseHp();
                trigger.untrigger();
                trigger.finish();
},
                        sub:true,
                    },
                },
            },
            "敌疑":{
                audio:["敌疑",2],
                trigger:{
                    global:"useCard",
                },
                frequent:true,
                unique:true,
                filter:function (event,player){
                    return player.hp<player.maxHp&&event.player!=player;
                },
                content:function (){
                    "step 0"
                    player.judge(function(card){
                        return get.color(card)=='red'?1:0;
                    });
                    "step 1"
                    if(result.bool){
                        player.recover();
                    }
                },
            },
            "行阵":{
                group:["行阵_1","行阵_2"],
                subSkill:{
                    "1":{
                        audio:["行阵",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        if(event.source!='shu') return false;
        return true;
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["行阵",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        filter:function (event,player){
    return event.card&&event.card.name=='sha'&&player.getEquip(1);
            },
                        content:function (){
                trigger.num+=trigger.num;
            },
                        sub:true,
                    },
                },
            },
            "成竹":{
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                filter:function (event,player){
return !player.storage.成竹;
    },
                audio:["成竹",2],
                forced:true,
                priority:100,
                content:function (){
"step 0"
player.storage.成竹=true;
"step 1"
player.loseMaxHp(3);
player.recover(player.maxHp-player.hp);
player.addSkill('战火');
    },
            },
            "战火":{
                trigger:{
                    global:"damageEnd",
                },
                forced:true,
                mark:true,
                audio:["战火",2],
                filter:function (event){
        return event.num>0;
    },
                init:function (player){
        player.storage.战火=0
        game.addVideo('storage',player,['战火',player.storage.战火]);
    },
                content:function (){
        player.storage.战火+=1;
        game.addVideo('storage',player,['战火',player.storage.战火]);
    },
                intro:{
                    content:"mark",
                },
                group:["战火_1","战火_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.storage.战火>=4;
    },
                        content:function (){
                player.storage.战火-=4;
                player.gainMaxHp();
                player.recover();
            },
                        sub:true,
                    },
                    "2":{
                        audio:["战火",2],
                        enable:"phaseUse",
                        usable:1,
                        filter:function (event,player){
        return player.storage.战火>=5;
    },
                        content:function (){
                 player.loseHp();
                player.storage.战火-=5;
                for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].damage(2,'fire');
        };
            }
        },
                        sub:true,
                    },
                },
            },
            "伏阵":{
                trigger:{
                    player:"chooseToCompareBefore",
                },
                forced:true,
                audio:["伏阵",2],
                content:function (){
trigger.untrigger();
trigger.finish();
    },
                group:["伏阵_1","伏阵_2","伏阵_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseDiscardEnd",
                        },
                        audio:["伏阵",2],
                        direct:true,
                        unique:true,
                        forced:true,
                        filter:function (event,player){
                return event.cards&&event.cards.length>2&&player!=event.player;
            },
                        content:function (){
                player.phase();
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"phaseDrawcardEnd",
                        },
                        audio:["伏阵",2],
                        direct:true,
                        forced:true,
                        unique:true,
                        filter:function (event,player){
                return event.player.num('h')>player.num('h')&&player!=event.palyer;
            },
                        content:function (){
                player.draw(2);
            },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"recoverEnd",
                        },
                        audio:["伏阵",2],
                        direct:true,
                        unique:true,
                        forced:true,
                        filter:function (event,player){
                return event.player.hp>player.hp&&event.player!=player;
            },
                        content:function (){
                player.recover();
            },
                        sub:true,
                    },
                },
            },
            "华秋":{
                trigger:{
                    player:"damageBefore",
                },
                audio:["华秋",2],
                forced:true,
                popup:false,
                filter:function (event,player){
return Math.random()<=0.5;
},
                content:function (){
trigger.untrigger();
trigger.finish();
},
                group:["华秋_1","华秋_2"],
                subSkill:{
                    "1":{
                        enable:["chooseToRespond","chooseToUse"],
                        filterCard:function (card,player){
        if(get.zhu(player,'shouyue')) return true;
        return get.color(card)=='red';
    },
                        audio:["华秋",2],
                        position:"he",
                        viewAs:{
                            name:"shan",
                        },
                        viewAsFilter:function (player){
        if(get.zhu(player,'shouyue')){
            if(!player.countCards('he')) return false;
        }
        else{
            if(!player.countCards('he',{color:'red'})) return false;
        }
    },
                        prompt:"将一张红色牌当闪使用或打出",
                        check:function (card){return 4-get.value(card)},
                        ai:{
                            skillTagFilter:function (player){
            if(get.zhu(player,'shouyue')){
                if(!player.countCards('he')) return false;
            }
            else{
                if(!player.countCards('he',{color:'red'})) return false;
            }
        },
                            respondSha:true,
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            order:function (){
            if(_status.event.player.hasSkillTag('preshan',true,null,true)) return 10;
            return 3;
        },
                            result:{
                                target:function (player,target){
                if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                    if(get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3;
                    }
                }
                return -1.5;
            },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                                natureDamage:function (card){
                if(card.nature) return 1;
            },
                                fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                                thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                                poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        enable:["chooseToRespond","chooseToUse"],
                        filterCard:function (card,player){
        if(get.zhu(player,'shouyue')) return true;
        return get.color(card)=='black';
    },
                        audio:["华秋",2],
                        position:"he",
                        viewAs:{
                            name:"sha",
                            suit:"spade",
                            number:5,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"spade","number":5,"name":"jueying","cardid":"1672061345","_mouseentercreated":false,"clone":{"name":"jueying","suit":"spade","number":5,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2576},"original":"e","timeout":2546}],
                        },
                        viewAsFilter:function (player){
        if(get.zhu(player,'shouyue')){
            if(!player.countCards('he')) return false;
        }
        else{
            if(!player.countCards('he',{color:'black'})) return false;
        }
    },
                        prompt:"将一张黑色牌当杀使用或打出",
                        check:function (card){return 4-get.value(card)},
                        ai:{
                            skillTagFilter:function (player){
            if(get.zhu(player,'shouyue')){
                if(!player.countCards('he')) return false;
            }
            else{
                if(!player.countCards('he',{color:'black'})) return false;
            }
        },
                            respondSha:true,
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            order:function (){
            if(_status.event.player.hasSkillTag('preshan',true,null,true)) return 10;
            return 3;
        },
                            result:{
                                target:function (player,target){
                if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                    if(get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3;
                    }
                }
                return -1.5;
            },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                                natureDamage:function (card){
                if(card.nature) return 1;
            },
                                fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                                thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                                poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "果敢":{
                group:["果敢_1","果敢_2"],
                subSkill:{
                    "1":{
                        audio:["果敢",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
return player.hp!=player.MaxHp;
},
                        content:function (){
player.gainMaxHp();
},
                        sub:true,
                    },
                    "2":{
                        audio:["果敢",2],
                        trigger:{
                            global:"discardAfter",
                        },
                        forced:true,
                        filter:function (event){
                if(_status.currentPhase!=event.player){
                    for(var i=0;i<event.cards.length;i++){
                        if(event.cards[i].original=='h') return true;
                    }
                }
                return false;
            },
                        content:function (){
                  player.draw();
            },
                        sub:true,
                    },
                },
            },
            "答书":{
                audio:["答书",2],
                unique:true,
                trigger:{
                    global:"phaseBefore",
                },
                priority:100,
                filter:function (event,player){    
        return event.player!=player&&player.hp<player.maxHp&&player.num('h')>1;
    },
                check:function (event,player){
       var cards=player.get('h');
    if(cards.length<=4){
        for(var i=0;i<cards.length;i++){
            if(cards[i].name=='shan'||cards[i].name=='tao') return false;
           }
    }
    return true;
    },
                content:function (){
        "step 0"
        num=player.num('h')-1
           player.chooseToDiscard(num,true);
        "step 1"
        trigger.player.addSkill('答书2');
    },
                group:["答书_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        popup:false,
                        unique:true,
                        audio:["答书",2],
                        priority:100,
                        content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]==player) continue;    
                    if(!game.players[i].name||!lib.character[game.players[i].name]) continue;
                       var skills=lib.character[game.players[i].name][3];
                    for(var j=0;j<skills.length;j++){
                        if(!lib.skill[skills[j]].forceunique){
                            game.players[i].removeSkill('答书2');
                        }
                    }
                 }
               },
                        sub:true,
                    },
                },
            },
            "答书2":{
                unique:true,
                mod:{
                    cardEnabled:function (){
                           return false;
                },
                    cardUsable:function (){
                       return false;
                },
                    cardRespondable:function (){
                       return false;
                 },
                    cardSavable:function (){
                       return false;
                },
                    maxHandcard:function (player,current){
                       return 1;
                },
                    targetInRange:function (){
                      return false;
                },
                    selectTarget:function (){
                       return false;
                },
                },
            },
            "至臻":{
                audio:["至臻",2],
                trigger:{
                    target:"useCardToBegin",
                },
                filter:function (event,player){
        return event.card&&event.player!=player&&Math.random()<=0.5;
    },
                direct:true,
                content:function (){
    player.loseHp();
    player.gainMaxHp();
    trigger.untrigger();
    trigger.finish(); 
    },
            },
            "军御":{
                trigger:{
                    player:"gainEnd",
                },
                filter:function (event,player,name){
                    if(event.cards){
                        for(var i=0;i<event.cards.length;i++){
                            if(get.number(event.cards[i])<=player.hp&&player.isDamaged()) return true;
                        }
                        return false;
                    }
                    return false;
                },
                direct:true,
                content:function (){
                    player.recover();
                },
            },
            "逆天":{
                group:["逆天_1"],
                trigger:{
                    player:"judgeBefore",
                },
                audio:["逆天",2],
                direct:true,
                priority:1,
                unique:true,
                content:function (){
        "step 0"
        event.cards=get.cards(5);
        player.chooseCardButton(true,event.cards,'逆天：选择一张牌作为你的'+trigger.judgestr+'判定结果').ai=function(button){
            if(get.attitude(player,trigger.player)>0){
                return 1+trigger.judge(button.link);
            }
            if(get.attitude(player,trigger.player)<0){
                return 1-trigger.judge(button.link);
            }
            return 0;
        };
        "step 1"
        if(!result.bool){
            event.finish();
            return;
        }
        player.logSkill('逆天',trigger.player);
        var card=result.links[0];
        event.cards.remove(card);
        var judgestr=get.translation(trigger.player)+'的'+trigger.judgestr+'判定';
        event.videoId=lib.status.videoId++;
        event.dialog=ui.create.dialog(judgestr);
        event.dialog.classList.add('center');
        event.dialog.videoId=event.videoId;

        game.addVideo('judge1',player,[get.cardInfo(card),judgestr,event.videoId]);
        for(var i=0;i<event.cards.length;i++) ui.discardPile.appendChild(event.cards[i]);
        // var node=card.copy('thrown','center',ui.arena).animate('start');
        var node;
        if(game.chess){
            node=card.copy('thrown','center',ui.arena).animate('start');
        }
        else{
            node=player.$throwordered(card.copy(),true);
        }
        node.classList.add('thrownhighlight');
        ui.arena.classList.add('thrownhighlight');
        if(card){
            trigger.untrigger();
            trigger.finish();
            trigger.result={
                card:card,
                judge:trigger.judge(card),
                node:node,
                number:get.number(card),
                suit:get.suit(card),
                color:get.color(card),
            };
            if(trigger.result.judge>0){
                trigger.result.bool=true;
                trigger.player.popup('洗具');
            }
            if(trigger.result.judge<0){
                trigger.result.bool=false;
                trigger.player.popup('杯具');
            }
            game.log(trigger.player,'的判定结果为',card);
            trigger.direct=true;
            trigger.position.appendChild(card);
            game.delay(2);
        }
        else{
            event.finish();
        }
        "step 2"
        ui.arena.classList.remove('thrownhighlight');
        event.dialog.close();
        game.addVideo('judge2',null,event.videoId);
        ui.clear();
        var card=trigger.result.card;
        trigger.position.appendChild(card);
        trigger.result.node.delete();
        game.delay();
    },
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        audio:["逆天",2],
                        priority:16,
                        check:function (){return false;},
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        var ex=0;
        if(trigger.card&&trigger.card.name=='sha'){
            if(player.hasSkill('jiu')) ex++;
            if(player.hasSkill('luoyi2')) ex++;
            if(player.hasSkill('reluoyi2')) ex++;
        }
        trigger.player.loseHp(trigger.num+ex);
    },
                        sub:true,
                    },
                },
            },
            "御虎":{
                audio:["御虎",2],
                enable:"phaseUse",
                usable:3,
                filter:function (event,player){
        if(player.num('h')==0) return false;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].hp!=player.hp&&game.players[i].num('h')) return true;
        }
        return false;
    },
                filterTarget:function (card,player,target){
        return target.hp!=player.hp&&target.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target);
        "step 1"
        if(result.bool){
            if(game.hasPlayer(function(player){
                return player!=target&&get.distance(target,player,'attack')<=1;
            })){
                player.chooseTarget(function(card,player,target){
                    var source=_status.event.source;
                    return target!=source&&get.distance(source,target,'attack')<=1;
                },true).set('ai',function(target){
                    return ai.get.damageEffect(target,_status.event.source,player);
                }).set('source',target);
            }
            else{
                event.finish();
            }
        }
        else{
            player.damage(target);
            event.finish();
        }
        "step 2"
        if(result.bool&&result.targets&&result.targets.length){
            target.line(result.targets[0],'green');
            result.targets[0].damage(target);
        }
    },
                ai:{
                    order:0.5,
                    result:{
                        target:function (player,target){
                var att=ai.get.attitude(player,target);
                var oc=(target.num('h')==1);
                if(att>0&&oc) return 0;
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]!=target&&game.players[i]!=player&&
                        get.distance(target,game.players[i],'attack')<=1){
                        if(ai.get.damageEffect(game.players[i],target,player)>0){
                            return att>0?att/2:att-(oc?5:0);
                        }
                    }
                }
                return 0;
            },
                        player:function (player,target){
                if(target.hasSkill('jueqing')) return -10;
                var mn=1;
                var hs=player.get('h');
                for(var i=0;i<hs.length;i++){
                    mn=Math.max(mn,hs[i].number);
                }
                if(mn<=11&&player.hp<2) return -20;
                var max=player.maxHp-hs.length;
                for(var i=0;i<game.players.length;i++){
                    if(ai.get.attitude(player,game.players[i])>2){
                        max=Math.max(Math.min(5,game.players[i].hp)-game.players[i].num('h'),max);
                    }
                }
                switch(max){
                    case 0:return mn==13?0:-20;
                    case 1:return mn>=12?0:-15;
                    case 2:return 0;
                    case 3:return 1;
                    default:return max;
                }
            },
                    },
                    expose:0.2,
                },
            },
            "虎跃":{
                group:["虎跃_1"],
                trigger:{
                    player:"shaMiss",
                },
                forced:true,
                audio:["虎跃",2],
                content:function (){
    trigger.target.damage(1,'fire');
},
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        audio:["虎跃",2],
                        forced:true,
                        unique:true,
                        filter:function (event){
return event.nature;
},
                        content:function (){
trigger.untrigger();
trigger.finish();
player.changeHujia();
},
                        sub:true,
                    },
                },
            },
            "凤狱":{
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                audio:["凤狱",2],
                filter:function (event){
                    return event.nature=='fire';
                },
                content:function (){
                    trigger.num++;
                },
                group:["凤狱_1","凤狱_2"],
                subSkill:{
                    "1":{
                        audio:["凤狱",2],
                        trigger:{
                            player:["phaseBegin","phaseEnd"],
                        },
                        forced:true,
                        content:function (){
        player.link();
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:["changeHp"],
                        },
                        audio:["凤狱",2],
                        forced:true,
                        filter:function (event,player){
            return player.hp<=2;
            },
                        content:function (){
        player.recover(player.MaxHp-player.hp);
                 player.draw(2);
    },
                        sub:true,
                    },
                },
            },
            "凤鸣":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["凤鸣",2],
                content:function (){
        event.target=game.filterPlayer().randomGet(player);
        event.target.link();
    },
                group:["凤鸣_1","凤鸣_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        audio:["凤鸣",2],
                        filter:function (event,player){
return (event.source&&event.source.countCards('he'));
},
                        content:function (){
        event.target=game.filterPlayer().randomGet(player);
        event.target.link();
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"recoverEnd",
                        },
                        forced:true,
                        audio:["凤鸣",2],
                        filter:function (event,player){
        return player.hp>=3;
},
                        content:function (){
        player.damage('fire');
    },
                        sub:true,
                    },
                },
            },
            "炎神":{
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                audio:["炎神",2],
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                    },
                },
                group:["炎神_1","炎神_2","炎神_3","炎神_4","炎神_5"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        audio:["炎神",2],
                        content:function (){
                var heartCard=get.cardPile(function(card){
return get.suit(card)=='heart'
});
player.gain(heartCard,'gain2');
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                var heartCard=get.cardPile(function(card){
return get.suit(card)=='diamond'
});
player.gain(heartCard,'gain2');
            },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                var heartCard=get.cardPile(function(card){
return get.suit(card)=='spade'
});
player.gain(heartCard,'gain2');
            },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                var heartCard=get.cardPile(function(card){
return get.suit(card)=='club'
});
player.gain(heartCard,'gain2');
            },
                        sub:true,
                    },
                    "5":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
         event.target=game.filterPlayer().randomGet(player);
        event.target.damage(2,'fire')._triggered=null;
            },
                        sub:true,
                    },
                },
            },
            "麟才":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                group:["麟才_1","麟才_2"],
                audio:["麟才",2],
                filter:function (event,player){
   return player.countCards('h',{type:'basic'})>0;
    },
                content:function (){
        'step 0'
        player.chooseToDiscard('h',{type:'basic'})
        'step 1'
        var list=get.typeCard('trick');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["麟才",2],
                        filter:function (event,player){
   return player.countCards('h',{type:'trick'})>0;
    },
                        content:function (){
        'step 0'
        player.chooseToDiscard('h',{type:'trick'})
        'step 1'
        var list=get.typeCard('basic');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"recoverBegin",
                        },
                        forced:true,
                        audio:["麟才",2],
                        filter:function (event,player){
   return Math.random()<=0.5;
    },
                        content:function (){
               var list=get.typeCard('equip');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
           },
                        sub:true,
                    },
                },
            },
            "罡星":{
                trigger:{
                    player:"useCard",
                },
                audio:["罡星",2],
                filter:function (event,card){
        return event.card.name=='jiu';
    },
                content:function (){
  player.loseMaxHp();
    },
                group:["罡星_1","罡星_2"],
                subSkill:{
                    "1":{
                        skillAnimation:true,
                        unique:true,
                        audio:["罡星",2],
                        trigger:{
                            player:"dying",
                        },
                        priority:10,
                        forced:true,
                        filter:function (event,player){
                return player.num('h')>0;
            },
                        content:function (){
                "step 0"
                var bn=player.num('h');
                var bm=player.MaxHp;
                player.loseMaxHp();
                player.chooseToDiscard(bn);
                player.draw(bm);
                player.recover(bn);
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        audio:["罡星",2],
                        priority:-500,
                        content:function (){
if(trigger.num>=3) trigger.num=0
},
                        sub:true,
                    },
                },
            },
            "傲睨":{
                trigger:{
                    player:"turnOverBefore",
                },
                forced:true,
                audio:["傲睨",2],
                group:["傲睨_1","傲睨_2"],
                content:function (){
        trigger.cancel();
    },
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        audio:["傲睨",2],
                        filter:function (event,player){
        return event.player.hp<player.hp;
            },
                        content:function (){
        trigger.num++;
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        audio:["傲睨",2],
                        filter:function (event,player){
        return player.MaxHp!=player.hp;
            },
                        content:function (){
        player.recover(1);
    },
                        sub:true,
                    },
                },
            },
            "讨羌":{
                trigger:{
                    player:"damageBegin",
                    source:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return player.hp<=3;
    },
                audio:["讨羌",2],
                content:function (){
        trigger.num++;
    },
                group:"讨羌_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"gainEnd",
                        },
                        forced:true,
                        audio:["讨羌",2],
                        filter:function (event,player){
                return event.cards&&event.cards.length>1;
            },
                        content:function (){
                 'step 0'
                 event.list=player.getFriends().sortBySeat();
                 player.recover();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.draw();
                                event.redo();
                            }
    },
                        sub:true,
                    },
                },
            },
            "济民":{
                audio:["济民",2],
                trigger:{
                    global:"phaseEnd",
                },
                group:"济民_1",
                filter:function (event,player){
       return event.player!=player||player.hp==player.MaxHp;
},
                content:function (){
                  player.loseHp();
                  player.chooseToDiscard();
                  trigger.player.recover(2);
},
                subSkill:{
                    "1":{
                        audio:["济民",2],
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        content:function (){
                  var kj=player.num('h');
                player.recover(kj);
},
                        sub:true,
                    },
                },
            },
            "蛮王":{
                locked:true,
                group:["蛮王_1","蛮王_2","蛮王_3","蛮王_4"],
                ai:{
                    effect:{
                        target:function (card,player,target){
                            if(card.name=='nanman') return 0;
                        },
                    },
                },
                subSkill:{
                    "1":{
                        audio:["蛮王",2],
                        trigger:{
                            target:"useCardToBefore",
                        },
                        forced:true,
                        priority:15,
                        filter:function (event,player){
                    return (event.card.name=='nanman');
                },
                        content:function (){
                    trigger.cancel();
                },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"useCardAfter",
                        },
                        forced:true,
                        audio:["蛮王",2],
                        filter:function (event,player){
                    return (event.card.name=='nanman'&&event.player!=player&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card');
                },
                        content:function (){
                    player.gain(trigger.card);
                    player.$gain2(trigger.card);
                },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"damageBefore",
                        },
                        forced:true,
                        audio:["蛮王",2],
                        content:function (){
                    trigger.source=player;
                },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        audio:["蛮王",2],
                        content:function (){
                    player.draw();
                },
                        sub:true,
                    },
                },
            },
            "复燃":{
                trigger:{
                    player:"recoverBefore",
                },
                forced:true,
                audio:["复燃",2],
                filter:function (event,player){
        return player.hp<=0;
    },
                content:function (){
        trigger.num+=3;
    },
                group:["复燃_1","复燃_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        audio:["复燃",2],
                        filter:function (event){
return event.nature;
},
                        content:function (){
player.loseMaxHp();
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        audio:["复燃",2],
                        filter:function (event,player){
                return player.hp<player.maxHp;
            },
                        content:function (){
           var kk=player.maxHp-player.hp;
            player.recover(kk);
            player.draw(kk);
},
                        sub:true,
                    },
                },
            },
            "闺秀":{
                audio:["闺秀",2],
                trigger:{
                    target:"shaBegin",
                },
                filter:function (event,player){
        return player.countCards('h')<player.hp;
    },
                content:function (){
        player.draw();
    },
                group:"闺秀_1",
                subSkill:{
                    "1":{
                        audio:["闺秀",2],
                        trigger:{
                            player:"recoverBegin",
                        },
                        filter:function (event,player){
        return player.countCards('h')<player.hp;
    },
                        content:function (){       
                  'step 0'
                 event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                event.redo();
                            }
    },
                        sub:true,
                    },
                },
            },
            "存嗣":{
                skillAnimation:true,
                audio:["存嗣",2],
                unique:true,
                enable:"phaseUse",
                mark:true,
                derivation:"勇决",
                filter:function (event,player){
        return !player.storage.存嗣&&player.countCards('h')&&!player.isTurnedOver();
    },
                init:function (player){
        player.storage.cunsi=false;
    },
                filterTarget:function (card,player,target){
        return player!=target&&target.sex=='male';
    },
                content:function (){
        "step 0"
        player.awakenSkill('存嗣');
        var cards=player.getCards('h');
        target.gain(cards,player);
        player.$give(cards.length,target);
        player.storage.存嗣=true;
        game.delay();
        player.addSkill('勇决');
        target.recover(3);
        "step 1"
        player.turnOver();
    },
                intro:{
                    content:"limited",
                },
                ai:{
                    order:4,
                    result:{
                        target:function (player,target){
                if(target.isMin()) return 0;
                if(player.hp>1){
                    if(game.phaseNumber<game.players.length) return 0;
                    if(target.hp==1&&target.maxHp>2) return 0;
                    if(get.attitude(player,target)<5) return 0;
                }
                if(get.attitude(player,target)<5) return 0;
                if(target.hp==1&&target.maxHp>2) return 0.2;
                if(target==game.me) return 1.2;
                return 1;
            },
                    },
                    expose:0.5,
                    threaten:1.5,
                },
            },
            "勇决":{
                audio:["勇决",2],
                trigger:{
                    global:"useCardEnd",
                },
                filter:function (event,player){
        if(event.card.name!='sha') return false;
        if(event.player==player) return false;
        if(event.targets.contains(player)) return false;
        if(event.cards){
            for(var i=0;i<event.cards.length;i++){
                if(get.position(event.cards[i])=='d') return true;
            }
        }
        return false;
    },
                frequent:true,
                content:function (){
        player.draw();
        player.recover();
    },
            },
            "龙行":{
                trigger:{
                    player:"phaseBegin",
                },
                frequent:true,
                filter:function (event,player){
        return player.hp<player.MaxHp;
    },
                audio:["龙行",2],
                content:function (){
        'step 0'
        player.loseMaxHp();
        var list=[];
        if(!player.hasSkill('龙锋')){
            list.push('龙锋');
        }
        if(!player.hasSkill('斩棘')){
            list.push('斩棘');
        }
        if(!player.hasSkill('崇义')){
            list.push('崇义');
        }
        if(list.length){
            player.chooseControl(list).set('prompt','选择获得一项技能');
        }
        'step 1'
        player.addSkill(result.control);
        player.popup(result.control);
        game.log(player,'获得技能','【'+get.translation(result.control)+'】');
    },
                ai:{
                    threaten:1.4,
                },
                group:"龙行_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"dieAfter",
                        },
                        frequent:true,
                        audio:["龙行",2],
                        content:function (){
                'step 0'
                player.phaseUse();
                player.draw(3);
                player.recover(player.MaxHp-player.hp);
                    'step 1'
                    player.getStat().card={};
                
            },
                        sub:true,
                    },
                },
            },
            "龙锋":{
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                audio:["龙锋",2],
                filter:function (event,player){
        return event.player!=player;
    },
                content:function (){
        player.phaseUse();
        player.loseHp();
    },
            },
            "斩棘":{
                trigger:{
                    global:"damageEnd",
                },
                forced:true,
                audio:["斩棘",2],
                filter:function (event,player){
           return player.getFriends().contains(event.player)&&event.source!=player;                        
},
                content:function (){
                     trigger.source.loseHp(2);
},
            },
            "崇义":{
                audio:["崇义",2],
                trigger:{
                    source:"damageBefore",
                },
                filterTarget:function (event){
            return event.player.getCards('he').length>0;
    },
                content:function (){
        trigger.cancel();
        trigger.player.discard(4,trigger.player.get('he'));
    },
            },
            "玄武":{
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["玄武",2],
                content:function (){
        player.draw(3);
        trigger.cancel();
    },
                group:"玄武_1",
                subSkill:{
                    "1":{
                        audio:["玄武",2],
                        trigger:{
                            target:"useCardToBegin",
                        },
                        filter:function (event,player){
    return event.card&&event.target==player&&event.player!=player;
            },
                        content:function (){
        player.recover();
    },
                        sub:true,
                    },
                },
            },
            "磐石":{
                audio:["磐石",2],
                trigger:{
                    global:"damageBegin",
                },
                filter:function (event,player){
      if(event.source!='wei') return false;
        return true;
},
                content:function (){
     trigger.cancel();
    player.loseHp(2);
},
                group:"磐石_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"gainEnd",
                        },
                        forced:true,
                        audio:["磐石",2],
                        filter:function (event,player){
return Math.random()<=0.5;
},
                        content:function (){
     player.recover();
},
                        sub:true,
                    },
                },
            },
            "粮道":{
                audio:["粮道",2],
                trigger:{
                    global:"loseEnd",
                },
                filter:function (event,player){
                    if(player.countCards('h')) return false;
                    for(var i=0;i<event.cards.length;i++){
                        if(event.cards[i].original=='h') return true;
                    }
                    return false;
                },
                content:function (){
                    player.draw(2);
                    player.recover();
                },
                group:"粮道_1",
                subSkill:{
                    "1":{
                        audio:["粮道",2],
                        trigger:{
                            global:"phaseDrawBegin",
                        },
                        forced:true,
                        filter:function (event,player){
      if(event.source!='shu') return false;
        return true;
},
                        content:function (){
     trigger.num++;
},
                        sub:true,
                    },
                },
            },
            "持傲":{
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                audio:["持傲",2],
                filter:function (event){
                    return event.nature=='fire';
                },
                content:function (){
                    trigger.num++;
                },
                group:"持傲_1",
                subSkill:{
                    "1":{
                        audio:["持傲",2],
                        trigger:{
                            player:"useCard",
                        },
                        frequent:true,
                        filter:function (event){
        return (get.type(event.card)=='basic');
    },
                        content:function (){
                    player.draw();
                },
                        sub:true,
                    },
                },
            },
            "穿杨":{
                trigger:{
                    player:["phaseEnd","phaseBegin"],
                },
                audio:["穿杨",2],
                forced:true,
                filter:function (event,player){
        return player.num('h')>0;
    },
                content:function (){
        "step 0"
        player.chooseToDiscard('h',true);
        player.chooseTarget(get.prompt('穿杨'),function(card,player,target){
            return lib.filter.targetEnabled({name:'sha'},player,target);
        }).set('ai',function(target){
            return get.effect(target,{name:'sha'},_status.event.player);
        });
        "step 1"
        if(result.bool){
            player.logSkill('穿杨');
            player.useCard({name:'sha'},result.targets,false);
        }
    },
                ai:{
                    threaten:function (player,target){
            return 1.6;
        },
                },
                group:["穿杨_1","穿杨_2","穿杨_3"],
                subSkill:{
                    "1":{
                        audio:["穿杨",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card.name=='sha'&&event.player!=player;
    },
                        content:function (){
                    var hjk=['sha'];
                     player.gain(game.createCard(hjk.randomGet()));
                     player.$draw();
                     player.chooseToUse({name:'sha'},'穿杨：是否使用一张杀？').logSkill='穿杨_1';
    },
                        sub:true,
                    },
                    "2":{
                        audio:["穿杨",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card.name=='sha'&&event.player!=player;
    },
                        content:function (){
                    trigger.num++;
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"recoverBegin",
                        },
                        forced:true,
                        audio:["穿杨",2],
                        filter:function (event,player){
return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     player.draw;
},
                        sub:true,
                    },
                },
            },
            "粮尽":{
                trigger:{
                    global:"phaseDrawBegin",
                },
                audio:["粮尽",2],
                forced:true,
                filter:function (event,player){
return player.getEnemies().contains(event.player);                        
},
                content:function (){
                     trigger.num-=2;
},
                group:["粮尽_1","粮尽_2","粮尽_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"recoverBegin",
                        },
                        audio:["粮尽",2],
                        forced:true,
                        filter:function (event,player){
return player.getEnemies().contains(event.player);                        
},
                        content:function (){
                     trigger.num-=1;
},
                        sub:true,
                    },
                    "2":{
                        mod:{
                            maxHandcard:function (player,num){
                        return num-=1;
                    },
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"gameStart",
                        },
                        audio:["粮尽",2],
                        forced:true,
                        filter:function (event,player){
return player.getEnemies().contains(event.player);                        
},
                        content:function (){
                     trigger.addSkill('粮尽_2');  
},
                        sub:true,
                    },
                },
            },
            "擒敌":{
                trigger:{
                    player:"discardAfter",
                },
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(get.color(event.cards[i])=='black'&&
                get.position(event.cards[i])=='d'){
                return true;
            }
        }
        return false;
    },
                direct:true,
                audio:["擒敌",2],
                content:function (){
        'step 0'
        var cards=[];
        for(var i=0;i<trigger.cards.length;i++){
            if(get.color(trigger.cards[i])=='black'&&
                get.position(trigger.cards[i])=='d'){
                cards.push(trigger.cards[i]);
            }
        }
        if(!cards.length){
            event.finish();
        }
        else{
            event.cards=cards;
        }
        'step 1'
        if(event.cards.length){
            player.chooseTarget(get.prompt('擒敌'),function(card,player,target){
                return player.canUse({name:'bingliang'},target,false);
            }).set('ai',function(target){
                var player=_status.event.player;
                return get.effect(target,{name:'bingliang'},player,player);
            });
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool&&result.targets&&result.targets.length){
            event.current=result.targets[0];
            if(event.cards.length==1){
                event.directCard=event.cards[0];
            }
            else{
                delete event.directCard;
                player.chooseCardButton('选择一张牌当作兵断寸断使用',event.cards,true);
            }
        }
        else{
            event.finish();
        }
        'step 3'
        var card;
        if(event.directCard){
            card=event.directCard;
        }
        else if(result.links&&result.links.length&&
            event.cards.contains(result.links[0])){
            card=result.links[0]
        }
        if(card){
            event.cards.remove(card);
            event.current.addJudge('bingliang',[card]);
            event.goto(1);
            player.logSkill('擒敌',event.current);
        }
    },
                group:["擒敌_1","擒敌_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
                        audio:["擒敌",2],
                        content:function (){
                trigger.num+=2;
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"discardAfter",
                        },
                        filter:function (event,player){
                for(var i=0;i<event.cards.length;i++){
                    if(get.color(event.cards[i])=='red'&&
                        get.position(event.cards[i])=='d'){
                        return true;
                    }
                }
                return false;
            },
                        direct:true,
                        audio:["擒敌",2],
                        content:function (){
                'step 0'
                var cards=[];
                for(var i=0;i<trigger.cards.length;i++){
                    if(get.color(trigger.cards[i])=='red'&&
                        get.position(trigger.cards[i])=='d'){
                        cards.push(trigger.cards[i]);
                    }
                }
                if(!cards.length){
                    event.finish();
                }
                else{
                    event.cards=cards;
                }
                'step 1'
                if(event.cards.length){
                    player.chooseTarget(get.prompt('擒敌_1'),function(card,player,target){
                        return player.canUse({name:'lebu'},target,false);
                    }).set('ai',function(target){
                        var player=_status.event.player;
                        return get.effect(target,{name:'lebu'},player,player);
                    });
                }
                else{
                    event.finish();
                }
                'step 2'
                if(result.bool&&result.targets&&result.targets.length){
                    event.current=result.targets[0];
                    if(event.cards.length==1){
                        event.directCard=event.cards[0];
                    }
                    else{
                        delete event.directCard;
                        player.chooseCardButton('选择一张牌当作乐不思蜀使用',event.cards,true);
                    }
                }
                else{
                    event.finish();
                }
                'step 3'
                var card;
                if(event.directCard){
                    card=event.directCard;
                }
                else if(result.links&&result.links.length&&
                    event.cards.contains(result.links[0])){
                    card=result.links[0]
                }
                if(card){
                    event.cards.remove(card);
                    event.current.addJudge('lebu',[card]);
                    event.goto(1);
                    player.logSkill('擒敌_2',event.current);
                }
            },
                        sub:true,
                    },
                },
            },
            "双勇":{
                trigger:{
                    global:["phaseDrawSkipped","phaseDrawCancelled"],
                },
                forced:true,
                audio:["双勇",2],
                filter:function (event,player){
        return event.player!=player;
    },
                content:function (){
        trigger.player.loseMaxHp();
    },
                group:["双勇_1","双勇_begin","双勇_draw","双勇_use","双勇_discard","双勇_end"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:["phaseUseSkipped","phaseUseCancelled"],
                        },
                        forced:true,
                        audio:["双勇",2],
                        filter:function (event,player){
                return event.player!=player;
            },
                        content:function (){
                trigger.player.lose(2);
                player.recover();
            },
                        sub:true,
                    },
                    begin:{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        popup:false,
                        content:function (){
                player.storage.双勇_draw=true;
                player.storage.双勇_use=true;
            },
                        sub:true,
                    },
                    draw:{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
                        popup:false,
                        content:function (){
                player.storage.双勇_draw=false;
            },
                        sub:true,
                    },
                    use:{
                        trigger:{
                            player:"phaseUseBegin",
                        },
                        forced:true,
                        popup:false,
                        content:function (){
                player.storage.双勇_use=false;
            },
                        sub:true,
                    },
                    discard:{
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        forced:true,
                        filter:function (event,player){
                if(player.storage.双勇_use) return true;
                return false;
            },
                        content:function (){
                trigger.cancel();
            },
                        sub:true,
                    },
                    end:{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
                if(player.storage.双勇_draw) return true;
                return false;
            },
                        content:function (){
                player.draw(3);
            },
                        sub:true,
                    },
                },
            },
            "戟魂":{
                audio:["戟魂",2],
                trigger:{
                    global:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
               var type=get.type(event.card,'equip');
        return event.player!=player&&(type=='equip')
        return true;
    },
                content:function (){
        player.draw(2);
    },
                group:"戟魂_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseEnd",
                        },
                        forced:true,
                        audio:["戟魂",2],
                        frequent:true,
                        filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                        content:function (){
         'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                        ai:{
                            noe:true,
                            effect:{
                                target:function (card,player,target,current){
                if(get.type(card)=='equip') return [1,3];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "决死":{
                audio:["决死",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                frequent:true,
                content:function (){
        trigger.num+=(player.maxHp-player.hp);
    },
                mod:{
                    globalFrom:function (from,to,current){
            return current-3;
        },
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num+=(player.maxHp-player.hp);
        },
                },
            },
            "急锋":{
                trigger:{
                    player:"damageEnd",
                },
                direct:true,
                notemp:true,
                audio:["急锋",2],
                filter:function (event,player){
        return player.countCards('h')>0;
    },
                init:function (player){
        player.storage.急锋=[];
    },
                content:function (){
        'step 0'
        player.draw(1,trigger.num);
        player.chooseCard(get.prompt('急锋'),'he',[1,trigger.num]).set('ai',function(card){
            if(card.name=='du') return 20;
            return 7-get.useful(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('急锋');
            player.lose(result.cards,ui.special);
            player.$give(result.cards,player);
            for(var i=0;i<result.cards.length;i++){
                player.storage.急锋.push(result.cards[i]);
            }
            player.markSkill('急锋');
        }
    },
                marktext:"锋",
                intro:{
                    content:"cards",
                },
                group:"急锋_1",
                ai:{
                    threaten:0.8,
                    maixie:true,
                    "maixie_hp":true,
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                return player.storage.急锋.length>0;
            },
                        content:function (){
                player.draw(2*player.storage.急锋.length);
                player.addTempSkill('急锋_2');
                player.$throw(player.storage.急锋.slice(0),1000);
                player.storage.急锋_2=player.storage.急锋.length;
                while(player.storage.急锋.length){
                    player.storage.急锋.shift().discard();
                }
                player.unmarkSkill('急锋')
            },
                        sub:true,
                    },
                    "2":{
                        audio:["急锋",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        filter:function (event){
        return event.card&&(event.card.name=='sha')&&
        event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                        forced:true,
                        content:function (){
                player.recover(),
        trigger.num+=player.storage.急锋_2;
    },
                        mod:{
                            cardUsable:function (card,player,num){
                    if(card.name=='sha'&&player.storage.急锋_2) return num+player.storage.急锋_2;
                },
                        },
                        onremove:true,
                        sub:true,
                    },
                },
            },
            "铁銿":{
                audio:["铁銿",2],
                trigger:{
                    player:["useCardAfter","respondAfter","discardAfter"],
                },
                forced:true,
                filter:function (event,player){
        if(player==_status.currentPhase) return false;
        if(event.cards){
            for(var i=0;i<event.cards.length;i++){
                if(event.cards[i].original!='j') return true;
            }
        }
        return false;
    },
                content:function (){
        player.changeHujia();
    },
                ai:{
                    threaten:0.7,
                },
                group:"铁銿_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        audio:["铁銿",2],
                        forced:true,
                        filter:function (event,player){
        return player.hujia?true:false;
    },
                        content:function (){
        player.recover(player.hujia);
    },
                        sub:true,
                    },
                },
            },
            "乾坤":{
                audio:["乾坤",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                content:function (){
        'step 0'
        player.chooseControl('draw_card','加伤害','cancel2').set('prompt',get.prompt('乾坤'));
        'step 1'
        if(result.control&&result.control!='cancel2'){
            player.logSkill('乾坤');
            var nd=player.num('h',{color:'red'});
            if(result.control=='draw_card'){
                player.draw(nd);
            }
            else{
                trigger.num+=nd;
            }
        }
    },
                group:"乾坤_1",
                subSkill:{
                    "1":{
                        audio:["乾坤",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                        forced:true,
                        content:function (){
        'step 0'
        player.chooseControl('减伤害','令其受伤','cancel2').set('prompt',get.prompt('乾坤_1'));
        'step 1'
        if(result.control&&result.control!='cancel2'){
            player.logSkill('乾坤_1');
            var ne=player.num('h',{color:'black'});
            if(result.control=='减伤害'){
                trigger.num-=(ne);
            }
            else{
                trigger.source.damage(ne);
            }
        }
    },
                        sub:true,
                    },
                },
            },
            "御卫":{
                trigger:{
                    player:"phaseDiscardEnd",
                },
                audio:["御卫",2],
                direct:true,
                unique:true,
                filter:function (event,player){
        return event.cards&&event.cards.length>1;
    },
                content:function (){
        "step 0"
        var num=trigger.cards.length;
        player.chooseTarget('是否选择至多'+num+'名角色各摸x张牌(x为你弃牌阶段弃置的张数)？',[1,num],function(card,player,target){
            return true;
        }).ai=function(target){
            return ai.get.attitude(player,target);
        }
        "step 1"
        if(result.bool){
            player.logSkill('御卫',result.targets);
            event.targets=result.targets;
            var num=trigger.cards.length;
            game.asyncDraw(result.targets,num);
            player.changeHujia(num);
        }
    },
                group:"御卫_1",
                subSkill:{
                    "1":{
                        audio:["御卫",2],
                        trigger:{
                            player:"recoverEnd",
                        },
                        forced:true,
                        content:function (){
     player.draw(1,trigger.num);
},
                        sub:true,
                    },
                },
            },
            "速清":{
                mod:{
                    targetInRange:function (card,player,target,now){
                        if(card.name=='sha') return true;
                    },
                    cardUsable:function (card,player,num){
          if(card.name=='sha') return Infinity;
    },
                },
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                audio:["速清",2],
                filter:function (event,player){
                    return event.card&&event.player!=player&&event.card.name=='sha';
                },
                content:function (){
                    player.draw();
                    trigger.player.turnOver();
                },
            },
            "讨敌":{
                trigger:{
                    global:"damageEnd",
                },
                filter:function (event,player){
        return player.getEnemies().contains(event.player);
    },
                audio:["讨敌",2],
                content:function (){
        player.draw();
        player.recover();
    },
                group:"讨敌_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        audio:["讨敌",2],
                        filter:function (event,player){
                    return event.card;
                },
                        content:function (){
                    trigger.directHit=true;
                },
                        sub:true,
                    },
                },
            },
            "兴国":{
                audio:["兴国",2],
                trigger:{
                    global:"phaseDrawAfter",
                },
                forced:true,
                unique:true,
                filter:function (event,player){
        return event.player.num('he')>0&&event.player!=player&&event.player.group=='shu';
    },
                content:function (){
        var hs=trigger.player.get('he');
        if(hs.length){
            var hs2=[];
            for(var i=0;i<hs.length;i++){
                hs2.push(game.createCard(hs[i].name,hs[i].suit,hs[i].number));
            }
            player.gain(hs2,'draw');
        }
    },
                mod:{
                    suit:function (card,suit){
             return 'none';
         },
                },
            },
            "怨火":{
                audio:["怨火",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
return event.num>0&&(event.source&&event.source.countCards('h')&&event.source!=player);
    },
                forced:true,
                mark:true,
                init:function (player){
        player.storage.怨火=0;
        game.addVideo('storage',player,['怨火',player.storage.怨火]);
    },
                content:function (){
        "step 0" 
        trigger.source.loseHp(2);
        player.draw();
        trigger.source.discard(trigger.player.get('he').randomGet());
        player.storage.怨火+=trigger.num;
        game.addVideo('storage',player,['怨火',player.storage.怨火]);
    },
                intro:{
                    content:"mark",
                },
                ai:{
                    nodamage:true,
                    effect:{
                        target:function (card,player,target){    
                if(get.tag(card,'damage')&&target.storage.怨火) return [0,2,0,-2];
            },
                    },
                },
                group:"怨火_1",
                subSkill:{
                    "1":{
                        audio:["怨火",2],
                        trigger:{
                            global:"damageEnd",
                        },
                        priority:10,
                        forced:true,
                        unique:true,
                        filter:function (event,player){
                return player.getFriends().contains(event.player)&&event.source&&event.source.isIn()&&event.source!=player;
            },
                        content:function (){
                "step 0"
                player.judge();
                "step 1"
                if(result.color=='red'){
                    trigger.player.recover(1);
                }
                else{
                    if(result.color=='black'){
                        trigger.source.loseHp(1);
                    }
                }
            },
                        sub:true,
                    },
                },
            },
            "惑予":{
                audio:["惑予",2],
                enable:"phaseUse",
                usable:1,
                discard:false,
                prepare:"give2",
                filter:function (event,player){
        return player.countCards('he',{suit:'heart'});
    },
                filterCard:function (card){
        return get.suit(card)=='heart';
    },
                filterTarget:function (card,player,target){
        if(game.countPlayer()==2) return false;
        return player!=target;
    },
                check:function (card){
        var player=get.owner(card);
        var players=game.filterPlayer();
        for(var i=0;i<players.length;i++){
            if(players[i]!=player&&get.attitude(player,players[i])>3) break;
        }
        if(i==players.length) return -1;
        return 5-get.value(card);
    },
                content:function (){
        "step 0"
        player.addTempSkill('惑予_2','phaseUseEnd');
        target.gain(cards,player);
        // game.delay();
        "step 1"
        player.gainPlayerCard(target,'he',true);
        "step 2"
        var source=target;
        event.card=result.links[0];
        player.chooseTarget('选择一个目标送出'+get.translation(event.card),function(card,player,target){
            return target!=_status.event.source&&target!=player;
        }).set('ai',function(target){
            return get.attitude(_status.event.player,target);
        }).set('source',target);
        "step 3"
        if(result.bool){
            result.targets[0].gain(card,player);
            player.$give(1,result.targets[0]);
            game.delay();
        }
    },
                ai:{
                    result:{
                        target:-0.5,
                    },
                    basic:{
                        order:9,
                    },
                },
                group:"惑予_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"gainEnd",
                        },
                        filter:function (event,player){
                return event.source&&event.source.isAlive()&&event.source!=player&&event.cards.length>=2;
            },
                        audio:["惑予",2],
                        logTarget:"source",
                        check:function (event,player){
                return get.attitude(player,event.source)>0;
            },
                        content:function (){
                player.storage.怨火--;
                trigger.source.draw(2);
                player.draw(2);
                trigger.recover();
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                var nd=player.countCards('he',{color:'red'});
                trigger.num+=nd;
                player.recover(nd);
            },
                        sub:true,
                    },
                },
            },
            "狂狮":{
                trigger:{
                    global:"dyingAfter",
                },
                priority:10,
                audio:["狂狮",2],
                filter:function (event,player){
                    return event.player.isAlive();
                },
                logTarget:"player",
                forced:true,
                content:function (){
                    player.useCard({name:'sha'},trigger.player,false,false);
                },
                ai:{
                    threaten:1.2,
                },
                group:"狂狮_1",
                subSkill:{
                    "1":{
                        group:["狂狮_2","狂狮_3","狂狮_4"],
                        audio:["狂狮",2],
                        enable:"phaseUse",
                        usable:1,
                        unique:true,
                        filter:function (event,player){
                return player.hp<player.maxHp;
            },
                        selectTarget:function (){
                return [1,_status.event.player.maxHp-_status.event.player.hp];
            },
                        filterTarget:function (card,player,target){
                return player!=target;
            },
                        content:function (){
                target.addSkill('狂狮_6');
            },
                        ai:{
                            order:9.5,
                            result:{
                                target:function (player,target){
                        return ai.get.damageEffect(target,player);
                    },
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
                        popup:false,
                        unique:true,
                        priority:100,
                        content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]==player) continue;
                    if(!game.players[i].name||!lib.character[game.players[i].name]) continue;
                    var skills=lib.character[game.players[i].name][3];
                    for(var j=0;j<skills.length;j++){
                        if(!lib.skill[skills[j]].forceunique){
                            game.players[i].removeSkill('狂狮_6');
                        }
                    }
                }
            },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"judgeBefore",
                        },
                        forced:true,
                        unique:true,
                        audio:["狂狮",2],
                        popup:false,
                        priority:99,
                        content:function (){
                trigger.untrigger();
                trigger.finish();
            },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            global:["recoverBefore","gainMaxHpBefore","changeHpBefore"],
                        },
                        forced:true,
                        popup:false,
                        unique:true,
                        priority:88,
                        audio:["狂狮",2],
                        filter:function (event,player){
                    return event.player!=player;
                },
                        content:function (){    
                    trigger.untrigger();
                trigger.finish();
                },
                        sub:true,
                    },
                    "6":{
                        mod:{
                            cardEnabled:function (){
                       return false;
                },
                            cardUsable:function (){
                       return false;
                    },
                            cardRespondable:function (){
                       return false;
                     },
                            cardSavable:function (){
                       return false;
                },
                        },
                        sub:true,
                    },
                },
            },
            "继魄":{
                audio:["继魄",2],
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                derivation:["承魂","龙武","虎战"],
                filter:function (event,player){
        return player.getStat('damage')>=3;
    },
                content:function (){
        player.addSkill('承魂');
        player.addSkill('龙武');
        player.addSkill('虎战');
        player.removeSkill('继魄');
    },
                group:["继魄_1","继魄_2","继魄_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        popup:false,
                        audio:["继魄",2],
                        unique:true,
                        priority:100,
                        content:function (){
                player.draw();
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        popup:false,
                        unique:true,
                        audio:["继魄",2],
                        priority:100,
                        filter:function (event,player){
                return event.source!=player;
            },
                        content:function (){
                trigger.source=undefined;
            },
                        sub:true,
                    },
                    "3":{
                        unique:true,
                        mod:{
                            cardUsable:function (){
                    return Infinity;
                },
                            targetInRange:function (){
                    return true;
                },
                        },
                        sub:true,
                    },
                },
            },
            "承魂":{
                trigger:{
                    player:["useCardAfter","respond"],
                },
                forced:true,
                audio:["承魂",2],
                filter:function (event,player){
                return get.color(event.card)=='red';
            },
                content:function (){
                "step 0"
                player.recover();
                "step 1"
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]==player) continue;
                    if(game.players[i].num('h')<=0) continue;
                    game.players[i].loseHp();
                }
            },
                group:["承魂_1","承魂_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return !event.nature;
},
                        content:function (){
    trigger.num+=2;
trigger._triggered=null;
},
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:["useCardAfter","respond"],
                        },
                        forced:true,
                        audio:["承魂",2],
                        filter:function (event,player){
                return get.color(event.card)=='black';
            },
                        content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]==player) continue;
                    if(game.players[i].num('he')<=0) continue;
                    player.gainPlayerCard(game.players[i],'he',true);
                }
            },
                        sub:true,
                    },
                },
            },
            "龙武":{
                audio:["龙武",2],
                enable:["chooseToRespond","chooseToUse"],
                filterCard:function (card,player){
        if(get.zhu(player,'shouyue')) return true;
        return get.color(card)=='red';
    },
                position:"he",
                viewAs:{
                    name:"sha",
                    suit:"heart",
                    number:1,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"heart","number":1,"name":"liyutang","cardid":"7034743385","_transform":"translateX(336px)","_mouseentercreated":false,"clone":{"name":"liyutang","suit":"heart","number":1,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":2162},"timeout":2124,"original":"h"}],
                },
                viewAsFilter:function (player){
        if(get.zhu(player,'shouyue')){
            if(!player.countCards('he')) return false;
        }
        else{
            if(!player.countCards('he',{color:'red'})) return false;
        }
    },
                prompt:"将一张红色牌当杀使用或打出",
                check:function (card){return 4-get.value(card)},
                ai:{
                    skillTagFilter:function (player){
            if(get.zhu(player,'shouyue')){
                if(!player.countCards('he')) return false;
            }
            else{
                if(!player.countCards('he',{color:'red'})) return false;
            }
        },
                    respondSha:true,
                    basic:{
                        useful:[5,1],
                        value:[5,1],
                    },
                    order:function (){
            if(_status.event.player.hasSkillTag('presha',true,null,true)) return 10;
            return 3;
        },
                    result:{
                        target:function (player,target){
                if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                    if(get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3;
                    }
                }
                return -1.5;
            },
                    },
                    tag:{
                        respond:1,
                        respondShan:1,
                        damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                        natureDamage:function (card){
                if(card.nature) return 1;
            },
                        fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                        thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                        poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                    },
                },
                group:"龙武_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"shaBegin",
                        },
                        audio:["龙武",2],
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                            targetEnabled:function (card,player,target){
                        if(get.type(card)=='delay'){
                            return false;
                        }
                    },
                        },
                        sub:true,
                    },
                },
            },
            "虎战":{
                enable:["chooseToRespond"],
                filterCard:{
                    color:"black",
                },
                viewAs:{
                    name:"shan",
                },
                audio:["虎战",2],
                position:"he",
                prompt:"将一张黑色牌当闪打出",
                check:function (card){return 5-get.value(card)},
                ai:{
                    respondShan:true,
                    effect:{
                        target:function (card,player,target,current){
                            if(get.tag(card,'respondShan')&&current<0) return 0.8
                        },
                    },
                    basic:{
                        useful:[7,2],
                        value:[7,2],
                    },
                },
                group:"虎战_1",
                subSkill:{
                    "1":{
                        mod:{
                            cardUsable:function (card,player,num){
          if(card.name=='sha') return Infinity;
    },
                        },
                        trigger:{
                            player:"damageBefore",
                        },
                        audio:["虎战",2],
                        forced:true,
                        unique:true,
                        filter:function (event){
return event.nature;
},
                        content:function (){
    "step 0"
trigger.untrigger();
trigger.finish();
    "step 1"
     var list=get.typeCard('equip');
                            if(list.length){
                                player.gain(game.createCard(list.randomGet()),'gain2');
                            }
},
                        sub:true,
                    },
                },
            },
            "擎龙":{
                trigger:{
                    global:"phaseJudgeBefore",
                },
                forced:true,
                audio:["擎龙",2],
                filter:function (event,player){
        if(event.player==player) return false;
        return event.player.isAlive()&&player.getEnemies().contains(event.player);
    },
                unique:true,
                content:function (){
        'step 0'    
        event.judgestr='兵粮寸断';
        trigger.player.judge(function(card){
            if(get.suit(card)!='club') return -6;
            return 0;
        },event.judgestr);
        game.delay(2);
        'step 1'
        if(result.judge<0){
            trigger.player.skip('phaseDraw');
        }
        else{
            event.finish();
        }
    },
                group:["擎龙_2","擎龙_1"],
                subSkill:{
                    "1":{
                        mod:{
                            targetInRange:function (card){
            if(card.name=='sha'&&get.color(card)=='black') return true;
        },
                        },
                        sub:true,
                    },
                    "2":{
                        mod:{
                            selectTarget:function (card,player,range){
            if(card.name=='sha'&&get.color(card)=='red') return range[1]+=1;
        },
                        },
                        sub:true,
                    },
                },
            },
            "文德":{
                audio:["文德",2],
                trigger:{
                    player:"dying",
                },
                forced:true,
                priority:6,
                filter:function (event,player){
           return player.maxHp>player.num('h');
    },
                content:function (){
        player.recover(2);
        player.uninit;
        player.init(player.name,'魏王称帝');
        player.removeSkill('文德');
    },
            },
            "颛命":{
                trigger:{
                    global:"judgeAfter",
                },
                frequent:true,
                audio:["颛命",2],
                filter:function (event,player){
        if(event.player==player) return false;
        if(event.player.group!='wei') return false;
        if(event.result.card.parentNode.id!='discardPile') return false;
        return (get.color(event.result.card)=='red');
    },
                content:function (){
        player.gain(trigger.result.card);
        player.$gain2(trigger.result.card);
    },
                group:["颛命_1","颛命_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseBegin",
                        },
                        unique:true,
                        audio:["颛命",2],
                        filter:function (event,player){
                if(!player.num('h',{suit:'spade'})) return false;    
                return event.player!=player&&event.player.num('h')>0&&get.distance(player,event.player,'attack')>1;
            },
                        check:function (event,player){
                if(ai.get.attitude(player,event.player)<0) return true;
                return false;
            },
                        content:function (){
                "step 0"
                var next=player.chooseToDiscard('颛命：请弃置1张黑桃牌',{suit:'spade'},true);
                next.ai=function(card){
                    return 7-ai.get.value(card);
                };    
                "step 1"
                trigger.player.chooseCard('交出一张红桃牌或受到1点伤害',function(card){
                return get.suit(card)=='heart';
                }).ai=function(card){
                    return 6-ai.get.value(card);
                };
                "step 2"
                if(result.bool){
                    player.gain(result.cards[0]);
                    trigger.player.$give(1,player);
                }
                else{
                    trigger.player.damage('nosource');
                }
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"phaseEnd",
                        },
                        unique:true,
                        audio:["颛命",2],
                        filter:function (event,player){
                if(!player.num('h',{suit:'club'})) return false;    
                return event.player!=player&&event.player.num('h')>0&&get.distance(player,event.player,'attack')<=1;
            },
                        check:function (event,player){
                if(ai.get.attitude(player,event.player)<0) return true;
                return false;
            },
                        content:function (){
                "step 0"
                var next=player.chooseToDiscard('颛命：请弃置1张梅花牌',{suit:'club'},true);
                next.ai=function(card){
                    return 7-ai.get.value(card);
                };    
                "step 1"
                trigger.player.chooseCard('交出一张方片牌或受到1点伤害',function(card){
                    return get.suit(card)=='diamond';
                }).ai=function(card){
                    return 6-ai.get.value(card);
                };
                "step 2"
                if(result.bool){
                    player.gain(result.cards[0]);
                    trigger.player.$give(1,player);
                }
                else{
                    trigger.player.damage('nosource');
                }
            },
                        sub:true,
                    },
                },
            },
            "裨阙":{
                trigger:{
                    player:"phaseUseEnd",
                },
                forced:true,
                audio:["裨阙",2],
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('裨阙'),function(card,player,target){
            return target.countCards('h')!=target.hp;
        }).set('ai',function(target){
            var player=_status.event.player;
            var att=get.attitude(player,target);
            var nh=target.countCards('h');
            if(att>0){
                if(nh==target.hp-1){
                    if(player==target) return att+1;
                    return att+2;
                }
                if(player==target&&player.needsToDiscard()) return att/3;
                return att;
            }
            else{
                if(nh==target.hp+1) return -att;
                if(nh==0) return 0;
                return -att/2;
            }
        });
        'step 1'
        if(result.bool){
            player.logSkill('裨阙',result.targets);
            event.target=result.targets[0];
            if(event.target.countCards('h')){
                player.chooseControl(function(event,player){
                    var target=event.target;
                    if(get.attitude(player,target)<0) return 1;
                    if(target.countCards('h')==target.hp+1) return 1;
                    return 0;
                }).set('choiceList',['令'+get.translation(event.target)+'摸二张牌',
                '令'+get.translation(event.target)+'弃置一张手牌']);
            }
            else{
                event.directfalse=true;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.directfalse||result.index==0){
            event.target.draw(2);
        }
        else{
            event.target.chooseToDiscard('h',true);
        }
        'step 3'
        if(event.target.countCards('h')==event.target.hp){
            player.draw(2);
            player.recover();
            if(event.target==player){
                event.finish();
                return;
            }
            var next=player.chooseCard('是否交给'+get.translation(event.target)+'一张牌？','he');
            next.set('ai',function(card){
                if(get.position(card)!='h') return 0;
                if(_status.event.shan){
                    return card.name=='shan'?1:0;
                }
                if(_status.event.goon){
                    return 10-get.value(card);
                }
                return -get.value(card,_status.event.player,'raw');
            });
            if(get.attitude(player,event.target)>1&&
                player.countCards('h','shan')>1&&player.countCards('h')>event.target.countCards('h')){
                next.set('shan',true);
            }
            if(get.attitude(player,event.target)>0&&player.needsToDiscard()){
                next.set('goon',true);
            }
        }
        else{
            event.finish();
        }
        'step 4'
        if(result.bool){
            event.target.gain(result.cards,player);
            player.$giveAuto(result.cards,event.target);
        }
    },
                ai:{
                    expose:0.2,
                    threaten:1.4,
                },
                group:["裨阙_1","裨阙_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"judgeBefore",
                        },
                        forced:true,
                        audio:["裨阙",2],
                        unique:true,
                        popup:false,
                        priority:99,
                        content:function (){
                trigger.untrigger();
                trigger.finish();
            },
                        sub:true,
                    },
                    "2":{
                        audio:["裨阙",2],
                        trigger:{
                            target:"useCardToBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return event.target.getEnemies().contains(event.player)&&event.card;
            },
                        content:function (){
                "step 0"
                var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
                trigger.player.chooseToDiscard('裨阙：弃置一张牌，否则此牌对'+get.translation(player)+'无效').set('ai',function(card){
                    if(_status.event.eff>0){
                        return 10-get.value(card);
                    }
                    return 0;
                }).set('eff',eff);
                "step 1"
                if(result.bool==false){
                    trigger.cancel();
                }
            },
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(card.name=='sha'&&get.attitude(player,target)<0){
                            if(_status.event.name=='裨阙_2') return;
                            var bs=player.getCards('h',{type:'basic'});
                            if(bs.length<2) return 0;
                            if(player.hasSkill('jiu')||player.hasSkill('tianxianjiu')) return;
                            if(bs.length<=3&&player.countCards('h','sha')<=1){
                                for(var i=0;i<bs.length;i++){
                                    if(bs[i].name!='sha'&&get.value(bs[i])<7){
                                        return [1,0,1,-0.5];
                                    }
                                }
                                return 0;
                            }
                            return [1,0,1,-0.5];
                        }
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "仪务":{
                trigger:{
                    global:"useCard",
                },
                audio:["仪务",2],
                filter:function (event,player){
        if(!event.targets||!event.targets.contains(player)) return false;
        var info=get.info(event.card);
        if(info.type!='trick') return false;
        if(info.multitarget) return false;
        if(event.targets.length>1) return true;
        return game.hasPlayer(function(current){
            return !event.targets.contains(current)&&lib.filter.targetEnabled2(event.card,event.player,current);
        });
    },
                direct:true,
                content:function (){
        'step 0'
        var bool1=(trigger.targets.length>1);
        var bool2=game.hasPlayer(function(current){
            return !trigger.targets.contains(current)&&lib.filter.targetEnabled2(trigger.card,trigger.player,current);
        });
        if(bool1&&bool2){
            player.chooseControlList(true,get.prompt('仪务'),['为'+get.translation(trigger.card)+'增加一个目标','为'+get.translation(trigger.card)+'减少一个目标'],function(event,player){
                if(_status.event.add) return 0;
                return 1;
            }).set('add',get.effect(player,trigger.card,trigger.player,player)>=0);
        }
        else if(bool2){
            event.type='add';
            event.goto(2);
            event.unchosen=true;
        }
        else{
            event.type='remove';
            event.goto(2);
            event.unchosen=true;
        }
        'step 1'
        if(result.control=='cancel2'){
            event.finish();
        }
        else if(result.index==1){
            event.type='remove';
        }
        else{
            event.type='add';
        }
        'step 2'
        if(event.type=='add'){
            player.chooseTarget(event.unchosen?get.prompt('仪务'):null,'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
                var trigger=_status.event.getTrigger();
                return !trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,trigger.player,target);
            }).set('ai',function(target){
                var trigger=_status.event.getTrigger();
                return get.effect(target,trigger.card,trigger.player,_status.event.player);
            });
        }
        else{
            player.chooseTarget(event.unchosen?get.prompt('仪务'):null,'为'+get.translation(trigger.card)+'减少一个目标',function(card,player,target){
                return _status.event.targets.contains(target);
            }).set('ai',function(target){
                var trigger=_status.event.getTrigger();
                return -get.effect(target,trigger.card,trigger.player,_status.event.player);
            }).set('targets',trigger.targets);
        }
        'step 3'
        if(result.bool){
            if(!event.isMine()) game.delayx();
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 4'
        player.logSkill('仪务',event.target);
        if(event.type=='add'){
            trigger.targets.push(event.target);
        }
        else{
            trigger.targets.remove(event.target);
        }
    },
                ai:{
                    expose:0.2,
                },
                mod:{
                    targetEnabled:function (card){
            if((get.type(card)=='trick'||get.type(card)=='delay')&&
                get.color(card)=='black') return false;
        },
                },
            },
            "蛮神":{
                audio:["蛮神",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
            return event.card.name=='nanman';
    },
                mark:true,
                init:function (player){
         player.storage.蛮神=0;
        game.addVideo('storage',player,['蛮神',player.storage.蛮神]);
},
                content:function (){
        player.storage.蛮神++;
        game.addVideo('storage',player,['蛮神',player.storage.蛮神]);
    },
                intro:{
                    content:"mark",
                },
                mod:{
                    maxHandcard:function (player,num){
                     return num+player.storage.蛮神;
        },
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return num+player.storage.蛮神;
        },
                },
                group:"蛮神_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        content:function (){
                  player.storage.蛮神-=1;
                  game.addVideo('storage',player,['蛮神',player.storage.蛮神]);
            },
                        sub:true,
                    },
                },
            },
            "万象":{
                audio:["万象",2],
                enable:"chooseToUse",
                filterCard:function (card){    
           return get.number(card)<_status.event.player.hp;
    },
                position:"he",
                viewAs:{
                    name:"nanman",
                    suit:"diamond",
                    number:5,
                    cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":5,"name":"zhaomingdan","cardid":"3569968434","_transform":"translateX(441.4117647058824px)","_mouseentercreated":false,"clone":{"name":"zhaomingdan","suit":"diamond","number":5,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":4591},"timeout":4488,"original":"h"}],
                },
                prompt:"将一张小于你体力点数的牌当南蛮入侵使用",
                check:function (card){
        return 8-ai.get.value(card);
    },
                group:"万象_1",
                subSkill:{
                    "1":{
                        audio:["万象",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.storage.蛮神>=1;
    },
                        content:function (){
                  var lo=player.storage.蛮神;
                      player.draw(lo);
            },
                        sub:true,
                    },
                },
                ai:{
                    wuxie:function (target,card,player,viewer){
                        if(get.attitude(viewer,target)>0&&target.countCards('h','sha')){
                            if(!target.countCards('h')||target.hp==1||Math.random()<0.7) return 0;
                        }
                    },
                    basic:{
                        order:9,
                        useful:[5,1],
                        value:5,
                    },
                    result:{
                        target:function (player,target){
                            if(player.hasUnknown(2)&&get.mode()!='guozhan') return 0;
                            var nh=target.countCards('h');
                            if(get.mode()=='identity'){
                                if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                            }
                            if(nh==0) return -2;
                            if(nh==1) return -1.7
                            return -1.5;
                        },
                    },
                    tag:{
                        respond:1,
                        respondSha:1,
                        damage:1,
                        multitarget:1,
                        multineg:1,
                    },
                },
            },
            "连绵":{
                audio:["连绵",2],
                trigger:{
                    player:"phaseEnd",
                },
                init:function (player){
        player.storage.连绵=false;
    },
                unique:true,
                intro:{
                    content:"cards",
                },
                check:function (event,player){
        return 1;
    },
                marktext:"绵",
                content:function (){
        "step 0"
        player.storage.连绵=true;
        event.cards=get.cards(1);
        player.showCards(event.cards);
        "step 1"
        player.$gain2(event.cards);
        event.color=get.color(event.cards);
        var str='';
        if(event.color=='red') str+='红色';
        if(event.color=='black') str+='黑色';
        player.storage['连绵']=event.cards;
        player.storage.连绵_1=event.color;
        player.markSkill('连绵');
        game.log(player,'将',str,'牌',event.cards,'置于武将牌上');
    },
                group:["连绵_1","连绵_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        filter:function (event,player){
                return player.storage.连绵;
            },
                        direct:true,
                        unique:true,
                        content:function (){
                player.storage.连绵=false;
                player.discard(player.storage['连绵']);
                player.unmarkSkill('连绵');
                delete player.storage['连绵'];
                delete player.storage.连绵_1;
            },
                        mod:{
                            targetEnabled:function (card,player,target){
                    if(get.color(card)==target.storage.连绵_1){                    
                        return false;
                    }
                },
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            target:"useCardToBegin",
                        },
                        filter:function (event,player){
                if(get.color(event.card)!='red') return false;
                return true;
            },
                        audio:["连绵",2],
                        forced:true,
                        content:function (){
                player.draw();
                player.recover();
            },
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(get.color(card)=='red'&&target.isDamaged()) return [1,1];
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "宴邀":{
                audio:["宴邀",2],
                trigger:{
                    player:"useCardAfter",
                },
                filter:function (event,player){
        if(player.storage.宴邀) return false;
        if(_status.currentPhase!=player) return false;
        if(!event.targets||!event.card) return false;
        if(event.card.name=='wuxie') return false; 
        var type=get.type(event.card);
        if(type!='trick') return false;
        for(var i=0;i<event.targets.length;i++){
            if(!event.targets[i].isAlive()) return false;
            if(!player.canUse({name:event.card.name},event.targets[i],false,false)){
                return false;
            }
        }
        return player.num('h',{type:'trick'})||player.num('h',{type:'delay'})||player.num('h',{type:'equip'});
    },
                check:function (event,player){
        if(event.card.name=='tiesuo') return false;
        if(event.card.name=='toulianghuanzhu') return false;            
        if(event.targets.length<=1&&event.targets.contains(player)) return -1; 
        var att=0;
        for(var i=0;i<event.targets.length;i++){
            if(event.targets[i]!=player){    
                att+=ai.get.attitude(player,event.targets[i]);
            }
        }                                
        return att<-1;
    },
                unique:true,
                init:function (player){
        player.storage.宴邀=false;
    },
                content:function (){
        "step 0"
        player.chooseCard('请选择一张非基本牌','he',true,function(card){
            return get.type(card)!='basic';
        }).ai=function(card){
            return 8-ai.get.value(card);
        };
        "step 1"
        if(result.bool){
            player.discard(result.cards);
            var card=game.createCard(trigger.card.name,trigger.card.suit,trigger.card.number,trigger.card.nature);
            player.useCard(card,trigger.targets);
            player.storage.宴邀=true;
        }
    },
                ai:{
                    threaten:1.5,
                },
                group:["宴邀_2"],
                subSkill:{
                    "2":{
                        audio:["宴邀",2],
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        unique:true,
                        filter:function (event,player){
                if(player.num('h',{type:'trick'})) return false;
                if(player.num('h',{type:'delay'})) return false;
                return true;
            },
                        content:function (){
                "step 0"
                var list=[];
                var suit=['heart','diamond','club','spade'].randomGet();
                var number=Math.floor(Math.random()*13)+1;
                for(var i in lib.card){
                    if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                    if(ai.get.value({name:i})>=10) continue;
                    if(i!='list'&&(lib.card[i].type=='trick'||lib.card[i].type=='delay')) list.push([suit,number,i]);
                }
                var dialog=ui.create.dialog([list,'vcard']);
                player.chooseButton(dialog,2,true,function(button){
                    return ai.get.value({name:button.link[2]},player);
                });
                "step 1"
                var cards=[ui.create.card(),ui.create.card()];
                cards[0].init(result.buttons[0].link);
                cards[1].init(result.buttons[1].link);
                player.gain(cards,'gain2');
                game.log(player,'获得了',cards);
                game.delay();
            },
                        sub:true,
                    },
                },
            },
            "玲华":{
                trigger:{
                    player:"phaseBegin",
                },
                audio:["玲华",2],
                forced:true,
                filter:function (event,player){
               return player.num('h')!=player.hp;                  
},
                content:function (){
                "step 0"
                    if(player.num('h')>player.hp){
                       var ki=player.num('h')-player.hp;
                            player.recover(ki); 
                    };
                "step 1"
                 if(player.num('h')<player.hp){
                       var ku=player.hp-player.num('h');
                            player.draw(ku); 
                    };
},
                group:["玲华_1"],
                subSkill:{
                    "1":{
                        audio:["玲华",2],
                        trigger:{
                            player:"phaseUseBegin",
                        },
                        priority:10,
                        forced:true,
                        content:function (){
                "step 0"
                player.judge();
                "step 1"
                if(result.color=='red'){
                    player.addTempSkill('jizhi','phaseAfter');
                }
                else{
                    if(result.color=='black'){
                        player.addTempSkill('qirang','phaseAfter');
                    }
                }
            },
                        sub:true,
                    },
                },
            },
            "仙升":{
                group:["仙升_1","仙升_2"],
                subSkill:{
                    "1":{
                        audio:["仙升",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        mod:{
                            maxHandcard:function (player,num){
            return num+player.num('h');
        },
                            targetInRange:function (card,player,target,now){
            var type=get.type(card);
            if(type=='trick'||type=='delay') return true;
        },
                            wuxieRespondable:function (){
                        return false;
                    },
                        },
                        sub:true,
                    },
                },
            },
            "智鉴":{
                enable:"phaseUse",
                usable:1,
                audio:["智鉴",2],
                filter:function (event,player){
        var nh=player.countCards('h');
        return nh&&nh<=player.maxHp;
    },
                content:function (){
        'step 0'
        player.recover();
        player.addTempSkill('智鉴_1','phaseEnd');
        player.showHandcards();
        event.num=player.countCards('h');
        'step 1'
        player.directgain(get.cards(event.num));
        player.chooseCard('将'+get.cnNumber(event.num)+'张手牌以按顺序置于牌堆顶（先选择的在上）',event.num,true).set('ai',function(card){
            return -get.value(card);
        });
        'step 2'
        if(result.bool){
            player.lose(result.cards,ui.special)._triggered=null;
            event.cards=result.cards.slice(0);
        }
        else{
            event.finish();
        }
        'step 3'
        if(player==game.me&&_status.auto){
            game.delay();
        }
        'step 4'
        while(event.cards.length){
            var current=event.cards.pop();
            current.fix();
            ui.cardPile.insertBefore(current,ui.cardPile.firstChild);
        }
    },
                ai:{
                    order:10,
                    result:{
                        player:1,
                    },
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"useCard",
                        },
                        frequent:true,
                        filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                        content:function (){
                   'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                target.draw();
                                event.redo();
                            }
    },
                        mod:{
                            maxHandcard:function (player,num){
                    return num+2;
                },
                            targetEnabled:function (card,player,target){
                    if(get.type(card)=='delay'){
                        return false;
                    }
                },
                        },
                        sub:true,
                    },
                },
            },
            "悭俭":{
                audio:["悭俭",2],
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
        return event.player!=player&&event.player.countCards('h')!=player.countCards('h')&&event.player.isAlive()&&player.getFriends().contains(event.player);
    },
                check:function (event,player){
        return get.attitude(player,event.player)>=0;
    },
                content:function (){
        trigger.player.addSkill('悭俭_1');
        player.draw();
    },
                ai:{
                    expose:0.1,
                },
                group:"悭俭_2",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseDrawBefore",
                        },
                        forced:true,
                        content:function (){
        trigger.num++;
                player.removeSkill('悭俭_1');
    },
                        mark:true,
                        intro:{
                            content:"摸牌数量+1(仅触发一次)",
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageEnd",
                        },
                        audio:["悭俭",2],
                        forced:true,
                        filter:function (event,player){
               return player.countCards('h')>0&&event.source!=player;
               },
                        content:function (){
               "step 0"
            player.chooseControl('recover_hp','draw_card',function(event,player){
            var num=player.countCards('h');
            if(num>player.hp||player.hp==1) return 'recover_hp';
            return 'draw_draw';
              });
              "step 1"
              if(result.control=='draw_card'){
              var er=player.get('e');
              player.draw(er);
              trigger.source.damage(er);
              }
              else{
              player.recover();
                  trigger.source.turnOver();
                  var her=trigger.source.getCards('he');
                  trigger.source.discard(her.randomGet());
                }  
               },
                        sub:true,
                    },
                },
            },
            "协盟":{
                trigger:{
                    player:"shaBegin",
                },
                filter:function (event,player){
        return player.num('h')>0&&event.target.num('h')>0;
    },
                usable:1,
                audio:["协盟",2],
                forced:true,
                content:function (){
        'step 0'
       player.chooseToCompare(trigger.target);
        'step 1'
        if(result.bool){
            trigger.directHit=true;            
            player.discardPlayerCard(trigger.target,'he',true); 
            player.recover();
        }
        else{
           trigger.untrigger();
           trigger.finish();   
           player.draw(2);
            player.recover();
        }
    },
            },
            "授印":{
                mod:{
                    suit:function (card,suit){
            if(suit=='club') return 'heart';
        },
                },
                trigger:{
                    player:"phaseAfter",
                },
                forced:true,
                audio:["授印",2],
                init:function (player) {
        player.storage.授印 = null;
    },
                content:function () {
        'step 0'
        var getcard = function (num) {
            var list = [];
            var card = false;
            if (typeof num != 'number') num = 1;
            if (num == 0) { card = true; num = 1; }
            if (num < 0) num = 1;
            while (num--) {
                if (ui.cardPile.hasChildNodes() == false) {
                    if (_status.maxShuffle != undefined) {
                        if (_status.maxShuffle == 0) {
                            game.over('平局');
                            return [];
                        }
                        _status.maxShuffle--;
                    }
                    var cards = [], i;
                    for (var i = 0; i < lib.onwash.length; i++) {
                        lib.onwash[i]();
                    }
                    for (i = 0; i < ui.discardPile.childNodes.length; i++) {
                        if (get.info(ui.discardPile.childNodes[i]).vanish) continue;
                        cards.push(ui.discardPile.childNodes[i]);
                    }
                    cards.randomSort();
                    for (var i = 0; i < cards.length; i++) {
                        ui.cardPile.appendChild(cards[i]);
                    }
                }
                if (ui.cardPile.hasChildNodes() == false) {
                    game.over('平局');
                    return [];
                }
                list.push(ui.cardPile.firstChild);
            }
            if (card) return list[0];
            return list;
        }
        event.授印card = getcard()[0];
        player.showCards(event.授印card);
        'step 1'
        if (get.suit(event.授印card) != 'heart') {
            player.chooseTarget('选择一名授印的角色', function (card, player, target) {
                return target != player.storage.授印;
            }).ai = function (target) {
                return ai.get.attitude(player, target) / (target.num('he') + 1) / (target.hp + 1) / (target.hp + 1);
            };
        }
        else {
            player.gain(event.授印card);
            player.loseHp();
            event.finish();
        }
        'step 2'
        if (result.bool) {
            var target = result.targets[0];
            target.addTempSkill('授印_1', function (current, aim, name) {
                if (event.player == current.player) {
                    if (name == 'phaseBefore' || name == 'dieAfter') return true;
                }
                return false;
            });
            player.draw(player.maxHp-player.hp);
            target.markSkill('授印_1');
            target.syncStorage('授印_1');
            player.storage.授印 = target;
        }
        else player.storage.授印 = null;
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        filter:function (event, player) {
                var suitOfCards = function (cards) {
                    var suits = [0, 0, 0, 0];
                    for (var i = 0; i < cards.length; i++) {
                        switch (get.suit(cards[i])) {
                            case 'heart': suits[0]++; break;
                            case 'diamond': suits[1]++; break;
                            case 'spade': suits[2]++; break;
                            case 'club': suits[3]++; break;
                        }
                    }
                    for (i = 0; i < 4; i++) {
                        if (suits[i] == cards.length) break;
                    }
                    switch (i) {
                        case 0: return 'heart';
                        case 1: return 'diamond';
                        case 2: return 'spade';
                        case 3: return 'club';
                        default: return 'none';
                    }
                }
                if (!event.card || !event.cards) return true;
                else if (get.suit(event.card) != 'heart') return true;
                else if (suitOfCards(event.cards) != 'heart') return true;
                return false;
            },
                        content:function () {
                trigger.untrigger();
                trigger.finish();
            },
                        ai:{
                            effect:{
                                target:function (card, player, target) {
                        if (card.name != 'damage' && get.tag(card, 'damage') && get.suit(card) != 'heart') {
                            return [0, 0];
                        }
                        if (card.name == 'damage') {
                            var origin = _status.event.card;
                            if (origin) {
                                if (get.suit(origin) != 'heart') {
                                    return [0, 0];
                                }
                            }
                        }
                    },
                            },
                        },
                        mark:true,
                        intro:{
                            content:"防止受到除了因红桃花色的牌造成的伤害之外的伤害",
                        },
                        sub:true,
                    },
                },
            },
            "自援":{
                enable:"phaseUse",
                usable:1,
                audio:["自援",2],
                filter:function (event, player) {
                    return player.num('h', { color: 'black' }) > 0&&player.hp!=player.maxHp;
                },
                init:function (player) {
                    player.storage.自援target = [];
                    player.storage.自援 = false;
                },
                check:function (event, player) {
                    if (player.num('h', { color: 'black' }) > 2) return 0;
                },
                content:function () {
                    'step 0'
                    player.recover(2);
                    player.chooseTarget(1, function (card, player, target) {
                        return target != player && target.num('hej') > 0;
                    }).ai = function (target) {
                        if (player.storage.自援target.contains(target)) return 0;
                        return -ai.get.attitude(player, target) * (target.num('ej', { color: 'red' }) + 1) * (target.num('h') + 0.1);
                    };
                    'step 1'
                    if (result.bool) {
                        player.logSkill('自援', result.targets[0]);
                        player.showHandcards();
                        player.line(result.targets[0], { opacity: 0.5, color: [255, 128, 255] });
                        if (result.targets[0].num('h') > 0) result.targets[0].showHandcards();
                        var i = result.targets[0].num('hej', { color: 'red' });
                        if (i > 0) {
                            player.gain(result.targets[0].get('hej', { color: 'red' }), result.targets[0]);
                            result.targets[0].$give(i, player);
                        }
                        result.targets[0].gain(player.get('h', { color: 'black' }), player);
                        player.$give(player.num('h', { color: 'black' }), result.targets[0]);
                        if (result.targets[0].hp > 1) player.storage.自援target.push(result.targets[0]);
                        player.storage.自援 = true;
                    }
                    else event.finish();
                },
                group:["自援_check"],
                subSkill:{
                    check:{
                        trigger:{
                            player:"phaseAfter",
                        },
                        popup:false,
                        forced:true,
                        content:function () {
                            if (player.storage.自援) {
                                player.storage.自援 = false;
                                if (player.storage.自援target.length == 3) {
                                    player.storage.自援target.shift();
                                }
                            }
                            else {
                                player.storage.自援target.shift();
                            }
                        },
                        sub:true,
                    },
                },
                ai:{
                    order:5,
                    result:{
                        player:1,
                    },
                    threaten:1.8,
                },
            },
            "授书":{
                group:["授书_a","授书_b","授书_1","授书_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"useCardAfter",
                        },
                        direct:true,
                        audio:["授书",2],
                        filter:function (event,player){
                if(_status.currentPhase!=player) return false;
                if(player.storage.授书_1&&player.storage.授书_1.contains(event.card.name)){
                    return false;
                }
                if(event.cards){
                    for(var i=0;i<event.cards.length;i++){
                        if(event.cards[i].isInPile()) return true;
                    }
                }
                return false;
            },
                        content:function (){
                'step 0'
                player.chooseTarget(get.prompt('授书_1'),function(card,player,target){
                    return target!=player;
                }).set('ai',function(target){
                    if(target.hasJudge('lebu')) return 0;
                    var att=get.attitude(_status.event.player,target);
                    if(att<3) return 0;
                    if(target.hasSha()&&_status.event.sha){
                        att/=5;
                    }
                    if(event.wuxie&&target.needsToDiscard(1)){
                        att/=5;
                    }
                    return att/(1+get.distance(player,target,'absolute'));
                }).set('sha',trigger.cards[0].name=='sha').set('wuxie',trigger.cards[0].name=='wuxie');
                'step 1'
                if(result.bool){
                    var list=[];
                    for(var i=0;i<trigger.cards.length;i++){
                        if(trigger.cards[i].isInPile()){
                            list.push(trigger.cards[i]);
                        }
                    }
                    player.logSkill('授书_1',result.targets[0]);
                    result.targets[0].gain(list,'gain2');
                    if(!player.storage.授书_1){
                        player.storage.授书_1=[];
                    }
                    player.storage.授书_1.push(trigger.card.name);
                }
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseAfter",
                        },
                        silent:true,
                        content:function (){
                delete player.storage.授书_1;
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    a:{
                        trigger:{
                            player:"phaseDrawBefore",
                        },
                        audio:["授书",2],
                        content:function () {
                "step 0"
                trigger.untrigger();
                trigger.finish();
                 var uie=player.maxHp-player.hp;
                event.授书cards = get.cards(2);
                player.showCards(event.授书cards);
                player.gain(event.授书cards);
                "step 1"
   if (get.color(event.授书cards[0]) == 'red' && get.color(event.授书cards[1]) == 'red') {
                    player.draw();
                }
            },
                        sub:true,
                    },
                    b:{
                        trigger:{
                            player:"phaseDiscardEnd",
                        },
                        frequent:true,
                        audio:["授书",2],
                        filter:function (event, player) {
                if (event.cards) {
                    for (var i = 0; i < event.cards.length; i++) {
                        if (get.color(event.cards[i]) == 'red') return true;
                    }
                }
                return false;
            },
                        content:function () {
                 var x=player.maxHp-player.hp;
                player.recover(x);
                player.draw(x);
            },
                        sub:true,
                    },
                },
            },
            "合阔":{
                priority:9,
                audio:["合阔",2],
                filter:function (event,player){
        return event.player!=player&&get.type(event.card)=='trick'&&event.targets&&event.targets.length>1;
    },
                check:function (event,player){
        return get.tag(event.card,'multineg')||get.effect(player,event.card,event.player,player)<=0;
    },
                trigger:{
                    target:"useCardToBefore",
                },
                content:function (){
        trigger.cancel();
        player.draw();
    },
                ai:{
                    effect:{
                        target:function (card){
                if(get.type(card)!='trick') return;
                if(card.name=='tiesuo') return [0,0];
                if(card.name=='yihuajiemu') return [0,1];
                if(get.tag(card,'multineg')) return [0,2];
            },
                    },
                },
                group:["合阔_1","合阔_2"],
                subSkill:{
                    "1":{
                        mod:{
                            wuxieRespondable:function (){
                        return false;
                    },
                            targetInRange:function (card,player,target,now){
                        var type=get.type(card);
                        if(type=='trick'||type=='delay') return true;
                    },
                        },
                        trigger:{
                            player:"useCard",
                        },
                        filter:function (event){
        return (get.type(event.card)=='trick'&&event.cards[0]&&event.cards[0]==event.card);
    },
                        forced:true,
                        audio:["合阔",2],
                        content:function (){
                },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:["recoverEnd"],
                        },
                        direct:true,
                        audio:["合阔",2],
                        content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('合阔',[list.trick,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.countCards('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=game.filterPlayer(function(current){
                    return lib.filter.filterTarget(card,player,current);
                });
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }
    },
                        ai:{
                            threaten:1.5,
                        },
                        sub:true,
                    },
                },
            },
            "绝解":{
                trigger:{
                    player:"phaseDiscardEnd",
                },
                filter:function (event,player){
                    return event.cards&&event.cards.length>1
                },
                audio:["绝解",2],
                content:function (){
                      'step 0'
    var card=get.cardPile(function(card){
        return get.type(card)=='trick';
    });
    event.card=card;
    'step 1'
    if(event.card){
        player.gainMaxHp();
         player.gain(game.createCard(event.card),'gain2');
    }              
                },
                group:"绝解_1",
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        audio:["绝解",2],
                        forced:true,
                        filter:function (event,player){
return get.type(event.card)=='trick';
},
                        content:function (){
                        trigger.num++;
                            player.recover();
                            player.draw();
    },
                        sub:true,
                    },
                },
            },
            "蜀魂":{
                trigger:{
                    player:"phaseBefore",
                },
                unique:true,
                skillAnimation:true,
                forceunique:true,
                audio:["蜀魂",2],
                filter:function (event,player){
        return player.storage.武曲>=4;
    },
                prompt:function (event,player){
        var num=player.storage.武曲;
        var mode=get.mode();
        if(mode!='chess'&&mode!='tafang'&&mode!='stone'){
            num=Math.min(num,game.players.length+game.dead.length);
        }
        return get.prompt('武曲')+'（体力上限：'+num+'）';
    },
                check:function (event,player){
        var num=player.storage.武曲;
        if(num==1) return false;
        if(player.hp<=1) return true;
        if(num==2) return false;
        if(num==3) return false;
        return true;
    },
                content:function (){
        'step 0'
        var list;
        if(_status.connectMode){
            list=get.charactersOL(function(i){
                return lib.character[i][1]!='shu';
            });
        }
        else{
            list=get.gainableCharacters(function(info){
                return info[1]=='shu';
            });
        }
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(7),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };
        'step 1'
        var num=player.storage.武曲;
        var mode=get.mode();
        if(mode!='chess'&&mode!='tafang'&&mode!='stone'){
            num=Math.min(num,game.players.length+game.dead.length);
        }
        player.reinit('含泪桃花',result.links[0],num);
        player.addSkill("蜀魂_1");
    },
                subSkill:{
                    "1":{
                        trigger:{
                            global:"damageEnd",
                        },
                        filter:function (event,player){
 return player.getFriends().contains(event.player);
            },
                        direct:true,
                        audio:["蜀魂",2],
                        skillAnimation:true,
                        animationColor:"thunder",
                        content:function (){
               player.init('含泪桃花');
               player.update();
               player.removeSkill('蜀魂_1');
                ui.clear();
            },
                        sub:true,
                    },
                },
            },
            "武曲":{
                init:function (player){
        player.storage.武曲=0;
    },
                intro:{
                    content:"mark",
                },
                trigger:{
                    source:"damageEnd",
                    player:"recoverEnd",
                },
                forced:true,
                audio:["武曲",2],
                content:function (){
        player.storage.武曲++;
        player.markSkill('武曲');
    },
                group:["武曲_sha","武曲_shan","武曲_draw"],
                subSkill:{
                    draw:{
                        trigger:{
                            player:["useCard","respond"],
                        },
                        forced:true,
                        popup:false,
                        audio:["武曲",2],
                        filter:function (event){
                return event.skill=='武曲_sha'||event.skill=='武曲_shan';
            },
                        content:function (){
                player.draw();
                player.recover();
            },
                        sub:true,
                    },
                    sha:{
                        enable:["chooseToUse","chooseToRespond"],
                        filterCard:{
                            name:"shan",
                        },
                        viewAs:{
                            name:"sha",
                            suit:"diamond",
                            number:9,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":9,"name":"shan","cardid":"9361844386","_transform":"translateX(336px)","_mouseentercreated":false,"clone":{"name":"shan","suit":"diamond","number":9,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":4582},"timeout":4520,"original":"h"}],
                        },
                        audio:["武曲",2],
                        viewAsFilter:function (player){
                if(!player.storage.武曲||player.storage.武曲<0) return false;
                if(!player.countCards('h','shan')) return false;
            },
                        prompt:"将一张闪当杀使用或打出",
                        onuse:function (result,player){
                player.storage.武曲--;
                if(!player.storage.武曲||player.storage.武曲<0){
                    player.storage.武曲=0;
                    player.unmarkSkill('武曲');
                }
                else{
                    player.updateMarks();
                }
            },
                        check:function (){return 1},
                        ai:{
                            effect:{
                                target:function (card,player,target,current){
                        if(get.tag(card,'respondSha')&&current<0) return 0.6
                    },
                            },
                            respondSha:true,
                            skillTagFilter:function (player){
                    if(!player.storage.武曲||player.storage.武曲<0) return false;
                    if(!player.countCards('h','shan')) return false;
                },
                            order:function (){
                    return get.order({name:'sha'})+0.1;
                },
                            useful:-1,
                            value:-1,
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                            if(get.attitude(player,target)>0){
                                return -6;
                            }
                            else{
                                return -3;
                            }
                        }
                        return -1.5;
                    },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                        if(card.nature=='poison') return;
                        return 1;
                    },
                                natureDamage:function (card){
                        if(card.nature) return 1;
                    },
                                fireDamage:function (card,nature){
                        if(card.nature=='fire') return 1;
                    },
                                thunderDamage:function (card,nature){
                        if(card.nature=='thunder') return 1;
                    },
                                poisonDamage:function (card,nature){
                        if(card.nature=='poison') return 1;
                    },
                            },
                        },
                        sub:true,
                    },
                    shan:{
                        enable:["chooseToRespond"],
                        filterCard:{
                            name:"sha",
                        },
                        viewAs:{
                            name:"shan",
                        },
                        audio:["武曲",2],
                        prompt:"将一张杀当闪打出",
                        viewAsFilter:function (player){
                if(!player.storage.武曲||player.storage.武曲<0) return false;
                if(!player.countCards('h','sha')) return false;
            },
                        onrespond:function (result,player){
                player.storage.武曲--;
                if(!player.storage.武曲||player.storage.武曲<0){
                    player.storage.武曲=0;
                    player.unmarkSkill('武曲');
                }
                else{
                    player.updateMarks();
                }
            },
                        check:function (){return 1},
                        ai:{
                            respondShan:true,
                            skillTagFilter:function (player){
                    if(!player.storage.武曲||player.storage.武曲<0) return false;
                    if(!player.countCards('h','sha')) return false;
                },
                            effect:{
                                target:function (card,player,target,current){
                        if(!player.storage.武曲||player.storage.武曲<0) return 0;
                        if(get.tag(card,'respondShan')&&current<0) return 0.6
                    },
                            },
                            order:4,
                            useful:-1,
                            value:-1,
                            basic:{
                                useful:[7,2],
                                value:[7,2],
                            },
                        },
                        sub:true,
                    },
                },
            },
            "煌天":{
                trigger:{
                    global:["damageEnd","loseHpEnd","loseEnd","loseMaxHpEnd"],
                },
                forced:true,
                usable:1,
                audio:["煌天",2],
                filter:function (event,player){
return player.getEnemies().contains(event.player);                        
},
                content:function (){
                       'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.draw();
                                target.recover();
                                target.changeHujia();
                                event.redo();
                            }
},
                group:"煌天_1",
                subSkill:{
                    "1":{
                        audio:["煌天",2],
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                  var lo=player.storage.武曲;
                      trigger.num-=lo;
            },
                        sub:true,
                    },
                },
            },
            "智囊":{
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                unique:true,
                forceunique:true,
                audio:["智囊",2],
                filter:function (event,player){
        return get.type(event.card)=='trick';
    },
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                group:["智囊_2","智囊_1","智囊_3"],
                subSkill:{
                    "1":{
                        audio:["智囊",2],
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        filter:function (event,player){
return get.type(event.card)=='trick';
},
                        content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
                        sub:true,
                    },
                    "2":{
                        audio:["智囊",2],
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        filter:function (event,player){
return get.type(event.card)=='equip';
},
                        content:function (){
                              'step 0'
    var card=get.cardPile(function(card){
        return get.type(card)=='trick';
    });
    event.card=card;
    'step 1'
    if(event.card){
        player.recover();
         player.gain(game.createCard(event.card),'gain2');
    }
},
                        sub:true,
                    },
                    "3":{
                        audio:["智囊",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "斩首":{
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
                audio:["斩首",2],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        return event.card&&event.card.name=='sha';
    },
                forced:true,
                content:function (){
        trigger.num+=(trigger.player.maxHp-trigger.player.hp);
    },
                group:"斩首_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        filter:function (event,player){
        return event.source&&event.card&&event.card.name=='sha';
    },
                        audio:["斩首",2],
                        content:function (){
                   trigger.source.loseMaxHp();
                   player.loseMaxHp();
                   trigger.source.damage()._triggered=null;
    },
                        sub:true,
                    },
                },
            },
            "豪野":{
                trigger:{
                    player:"turnOverBegin",
                },
                forced:true,
                audio:["豪野",2],
                content:function (){
        trigger.cancel();
    },
                group:["豪野_2","豪野_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        audio:["豪野",2],
                        filter:function (event,player){
return get.type(event.card)=='basic';
},
                        content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        audio:["豪野",2],
                        filter:function (event){
return !event.nature;
},
                        content:function (){
trigger.cancel();
},
                        sub:true,
                    },
                },
            },
            "蛮酋":{
                audio:["蛮酋",2],
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
                content:function (){
         trigger.num+=2;
},
                group:["蛮酋_1","蛮酋_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.num>0&&event.source!=player&&player.getFriends().contains(event.player);
    },
                        content:function (){
                var ex=0;
                if(trigger.card&&trigger.card.name=='sha'){
                    if(player.hasSkill('jiu')) ex++;
                    if(player.hasSkill('luoyi2')) ex++;
                    if(player.hasSkill('reluoyi2')) ex++;
                }
                player.recover(trigger.num+ex);
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"equipEnd",
                        },
                        forced:true,
                        unique:true,
                        audio:["蛮酋",2],
                        logTarget:"player",
                        filter:function (event,player){
                        var info=get.info(event.card);
                        if(info.skills&&event.player!=player){
                            if(player.additionalSkills['蛮酋_2']){
                                for(var i=0;i<info.skills.length;i++){
                                    if(!player.additionalSkills['蛮酋_2'].contains(info.skills[i])) return true;
                                }                                
                            }
                            return true;
                        }
                        return false;
                    },
                        content:function (){
                        var info=get.info(trigger.card);                    
                        if(info.skills){
                            player.addAdditionalSkill('蛮酋_2',info.skills,true);
                        }
                        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
                                if(Array.isArray(info.onEquip)){
                                for(var i=0;i<info.onEquip.length;i++){
                                    var next=game.createEvent('equip_'+trigger.card.name);
                                    next.setContent(info.onEquip[i]);
                                    next.player=player;
                                    next.card=trigger.card;
                                }
                                }
                            else{
                                var next=game.createEvent('equip_'+trigger.card.name);
                                next.setContent(info.onEquip);
                                next.player=player;
                                next.card=trigger.card;
                                }
                        }                            
                  },
                        sub:true,
                    },
                },
            },
            "天法":{
                trigger:{
                    global:"phaseDiscardBefore",
                },
                audio:["天法",2],
                filter:function (event,player) {
                    return (event.player.num('h')>event.player.getHandcardLimit());
                },
                content:function (){
                    "step 0"
                    trigger.player.damage();
                },
                check:function (event, player) {
                    return ai.get.attitude(player,event.player)<0;
                },
                ai:{
                    order:1,
                    expose:0.1,
                    threaten:4,
                },
                group:"天法_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBegin",
                        },
                        audio:["天法",2],
                        forced:true,
                        content:function (){
'step 0'
                event.list=player.getEnemies().sortBySeat();
                'step 1'
                if(event.list.length){
                    var target=event.list.shift();
                    var cards=target.getCards('e');
                        player.line(target,'green');
                       arget.discard(cards);
                    event.redo();
                }
                        },
                        sub:true,
                    },
                },
            },
            "刑策":{
                trigger:{
                    global:"damageEnd",
                },
                usable:1,
                filter:function (event,player){
        return event.num>0&&event.source!=player&&player.getFriends().contains(event.player);
    },
                audio:["刑策",2],
                content:function (){
       trigger.player.recover();
    },
                group:["刑策_1","刑策_2"],
                subSkill:{
                    "1":{
                        audio:["刑策",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.hp!=player.maxHp;
    },
                        content:function (){
        player.changeHujia();
    },
                        ai:{
                            threaten:0.5,
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"damageEnd",
                        },
                        audio:["刑策",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player)&&event.player.num('e')>0;                        
           },
                        content:function (){
                         player.discardPlayerCard(event.player,true);
             },
                        sub:true,
                    },
                },
            },
            "智魏":{
                trigger:{
                    global:"useCard",
                },
                forced:true,
                audio:["智魏",2],
                filter:function (event,player){
                                return player.getFriends().contains(event.player)&&(get.type(event.card)=='basic')&&event.player!=player;
    },
                content:function (){     
             trigger.player.draw();
                },
                group:["智魏_1","智魏_3","智魏_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseDiscardBefore",
                        },
                        audio:["智魏",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     trigger.untrigger();
                      trigger.finish();
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"useCard",
                        },
                        forced:true,
                        audio:["智魏",2],
                        filter:function (event,player){
                                return player.getFriends().contains(event.player)&&(get.type(event.card)=='equip');
    },
                        content:function (){     
                     trigger.player.changeHujia();
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            global:"useCard",
                        },
                        forced:true,
                        audio:["智魏",2],
                        filter:function (event,player){
                                return player.getFriends().contains(event.player)&&(get.type(event.card)=='trick');
    },
                        content:function (){     
                     trigger.player.recover();
                        },
                        sub:true,
                    },
                },
            },
            "伏龙":{
                audio:["伏龙",2],
                trigger:{
                    global:"dying",
                },
                frequent:true,
                filter:function (event,player){
                    return player.getEnemies().contains(event.player);
                },
                content:function (){
                    'step 0'
                    player.judge(function(card){
                        if(get.color(card)=='black') return 2;
                        return -2;
                    })
                    'step 1'
                    if(result.bool){
                        trigger.player.forcemin=true;
                    }
                },
            },
            "越鸿":{
                trigger:{
                    target:"useCardToBegin",
                },
                priority:-1,
                audio:["越鸿",2],
                filter:function (event,player){
                    return get.color(event.card)=='red'&&player.isDamaged();
                },
                frequent:true,
                content:function (){
                    'step 0'
        player.draw();
                event.list=player.getFriends().sortBySeat();
                'step 1'
                if(event.list.length){
                    var target=event.list.shift();
                    player.line(target,'green');
                    target.recover();
                    event.redo();
                }
                },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                            if(get.color(card)=='red'&&target.isDamaged()) return [1,1];
                        },
                    },
                },
                group:"越鸿_1",
                subSkill:{
                    "1":{
                        trigger:{
                            global:"gameStart",
                        },
                        audio:["越鸿",2],
                        filter:function (event,player){
       return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     trigger.addSkill('越鸿_2');  
},
                        sub:true,
                    },
                    "2":{
                        mod:{
                            judge:function (player,result){
                        if(_status.event.type=='phase'){
                            if(result.bool==false){
                                result.bool=null;
                            }
                            else{
                                result.bool=false;
                            }
                        }
                    },
                        },
                        sub:true,
                    },
                },
            },
            "幕诏":{
                audio:["幕诏",2],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player,source){
                     if(event.source!='wei') return false;
        return event.num&&event.source&&event.player.isAlive()&&event.source.isAlive()&&event.source!=event.player;
    },
                content:function (){
        "step 0"
        player.addTempSkill(trigger.source.skills.randomGet(),'phaseAfter');
        "step 1"
        game.delay();
    },
                group:"幕诏_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        priority:20,
                        forced:true,
                        usable:1,
                        audio:["幕诏",2],
                        content:function (){
                    player.changeHujia();
                    game.log(player,'增加1点护甲');
                },
                        sub:true,
                    },
                },
            },
            "英逝":{
                trigger:{
                    player:"damageEnd",
                },
                audio:["英逝",2],
                filter:function (event, player) {
        return event.num>0;
    },
                forced:true,
                content:function () {
                    'step 0'
        trigger.player.judge();      
        'step 1'
        if(get.number(result.card)==2||get.number(result.card)==4||get.number(result.card)==6||get.number(result.card)==8||get.number(result.card)==10||get.number(result.card)==12){
            var opp=get.number(result.card);
            player.recover(opp);
        }
            else{
                var opq=get.number(result.card);
           player.draw(opq);
        }
    },
                group:"英逝_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"recoverEnd",
                        },
                        audio:["英逝",2],
                        filter:function (event, player) {
        return event.num>0;
    },
                        forced:true,
                        content:function () {
        'step 0'
        trigger.player.judge();      
        'step 1'
        if(get.number(result.card)>player.MaxHp){
            var opp=get.number(result.card);
            player.changeHujia(opp);
        }
            else{
           player.gainMaxHp();
            event.finish();
        }
        
    },
                        sub:true,
                    },
                },
            },
            "明谏":{
                trigger:{
                    global:"judgeAfter",
                },
                frequent:true,
                audio:["明谏",2],
                filter:function (event,player){
                    if(event.player==player) return false;
                    if(event.source!='wei') return false;
                    if(event.result.card.parentNode.id!='discardPile') return false;
                    return true;
                },
                content:function (){
                    player.gain(trigger.result.card);
                    player.$gain2(trigger.result.card);
                },
                group:"明谏_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phasejudgeBegin",
                        },
                        forced:true,
                        audio:["明谏",2],
                        content:function (){
                trigger.untrigger();
                trigger.finish();
            },
                        sub:true,
                    },
                },
            },
            "忠擎":{
                audio:["忠擎",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
if(trigger.num>1) trigger.num=1
},
                group:["忠擎_2","忠擎_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"damageAfter",
                        },
                        forced:true,
                        audio:["忠擎血",2],
                        filter:function (event,player){
                    return event.player!=player&&event.num>0&&player.getFriends().contains(event.player);
                },
                        content:function (){
               var ki=trigger.num;                
                    player.damage(ki);
                },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            global:"recoverAfter",
                        },
                        forced:true,
                        audio:["忠擎回复",2],
                        filter:function (event,player){
                    return event.player!=player&&event.num>0&&player.getFriends().contains(event.player);
                },
                        content:function (){
               var ew=trigger.num;                
                    player.recover(ew);
                },
                        sub:true,
                    },
                },
            },
            "千秋":{
                trigger:{
                    player:"loseEnd",
                },
                audio:["千秋",2],
                forced:true,
                filter:function (event,player){
          for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return _status.currentPhase!=player&&player.num('h')<1;
    }},
                content:function (){        
            'step 0'
           player.draw(player.hp+1);
        player.chooseTarget(get.prompt('千秋'),function(card,player,target){
            return target!=player;
        }).set("ai",function(target){
                return get.damageEffect(target,player,player);
            
        });
        'step 1'
        if(result.bool){
            player.logSkill('千秋',result.targets);
            result.targets[0].damage();           
        }
    },
            },
            "骁驭":{
                group:["骁驭_1","骁驭_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        audio:["骁驭",2],
                        content:function (){
        'step 0'
        player.chooseTarget(get.prompt('骁驭'),function(card,player,target){
            return target!=player&&target.num('he')>0;
        }).set("ai",function(target){
                return get.damageEffect(target,player,player);
            
        });
        'step 1'
        if(result.bool){
            player.logSkill('骁驭',result.targets);
            result.targets[0].chooseToDiscard(true,'he');  
        };
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            target:"shaBegin",
                        },
                        filter:function (event,player){
        return event.player.countCards('h')&&player.countCards('h');
    },
                        forced:true,
                        content:function (){
        'step 0'
        trigger.player.chooseToCompare(player);
        'step 1'
        if(result.bool){
          player.loseMaxHp();
          player.draw();
        }
        else{
            trigger.num+=2;      
           trigger.player.chooseToDiscard(trigger.player.num('h'),true);
    }
                        },
                        sub:true,
                    },
                },
            },
            "镇魂":{
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                audio:["镇魂",2],
                filter:function (event,player){
                    return player.getEnemies().contains(event.player);
                },
                priority:null,
                content:function (){
                    trigger._triggered=null;
                },
            },
			},
			translate:{
            "醉玉颓山":"醉玉颓山",
            "业火红莲":"业火红莲",
            "白衣渡江":"白衣渡江",
            "一统江山":"一统江山",
            "观星唤雨":"观星唤雨",
            "战神金刚":"战神金刚",
            "狂傲不羁":"狂傲不羁",
            "魏王称帝":"魏王称帝",
            "恢拓洪业":"恢拓洪业",
            "绰约多姿":"绰约多姿",
            "烈帝后裔":"烈帝后裔",
            "从征四方":"从征四方",
            "符檄擅声":"符檄擅声",
            "猛勇精进":"猛勇精进",
            "枪碎星河":"枪碎星河",
            "胸中兵甲":"胸中兵甲",
            "浴火蛮神":"浴火蛮神",
            "明以举贤":"明以举贤",
            "神兵天降":"神兵天降",
            "抬棺决死":"抬棺决死",
            "鬼谋乱世":"鬼谋乱世",
            "婉娩流逸":"婉娩流逸",
            "挥剑惊石":"挥剑惊石",
            "泰山捧日":"泰山捧日",
            "镇卫江夏":"镇卫江夏",
            "七步绝章":"七步绝章",
            "十二奇策":"十二奇策",
            "精练策数":"精练策数",
            "勇不可当":"勇不可当",
            "清流雅望":"清流雅望",
            "下辩扬威":"下辩扬威",
            "挥毫代诏":"挥毫代诏",
            "猛击劈浪":"猛击劈浪",
            "魏武霸业":"魏武霸业",
            "辅政平乱":"辅政平乱",
            "身先士卒":"身先士卒",
            "势如破竹":"势如破竹",
            "破虏大将":"破虏大将",
            "烽火乱世":"烽火乱世",
            "挤眉弄眼":"挤眉弄眼",
            "轻舞花烛":"轻舞花烛",
            "虎将无双":"虎将无双",
            "白眉智士":"白眉智士",
            "一言不发":"一言不发",
            "老骥伏枥":"老骥伏枥",
            "一合而斩":"一合而斩",
            "立嗣陷危":"立嗣陷危",
            "大展宏图":"大展宏图",
            "持权贪贿":"持权贪贿",
            "舐犊情深":"舐犊情深",
            "断石酬志":"断石酬志",
            "单刀赴会":"单刀赴会",
            "寒光凛然":"寒光凛然",
            "西凉雄狮":"西凉雄狮",
            "心系君魂":"心系君魂",
            "空城退敌":"空城退敌",
            "一世风华":"一世风华",
            "佳期若梦":"佳期若梦",
            "谑浪笑傲":"谑浪笑傲",
            "任城威王":"任城威王",
            "时之彦士":"时之彦士",
            "决意巾帼":"决意巾帼",
            "忠贯白日":"忠贯白日",
            "三分天下":"三分天下",
            "娇花照水":"娇花照水",
            "战场虎子":"战场虎子",
            "飞鸾翔凤":"飞鸾翔凤",
            "挥兵指刃":"挥兵指刃",
            "持刀破敌":"持刀破敌",
            "望闻问切":"望闻问切",
            "攻城略地":"攻城略地",
            "资优神童":"资优神童",
            "萧疏伊人":"萧疏伊人",
            "骁勇小将":"骁勇小将",
            "凤舞九天":"凤舞九天",
            "坚石铁壁":"坚石铁壁",
            "自信不疑":"自信不疑",
            "没金饮羽":"没金饮羽",
            "遣将征兵":"遣将征兵",
            "勇往直前":"勇往直前",
            "怒目而视":"怒目而视",
            "擐甲推锋":"擐甲推锋",
            "枪舞乾坤":"枪舞乾坤",
            "御蜀屏障":"御蜀屏障",
            "神速破敌":"神速破敌",
            "讨平叛乱":"讨平叛乱",
            "恩怨如火":"恩怨如火",
            "雄猛震世":"雄猛震世",
            "父魂子魄":"父魂子魄",
            "秉心公亮":"秉心公亮",
            "温婉华贵":"温婉华贵",
            "琴瑟天音":"琴瑟天音",
            "明辨忠奸":"明辨忠奸",
            "夏花绚烂":"夏花绚烂",
            "临渊隙书":"临渊隙书",
            "字字珠玑":"字字珠玑",
            "含泪桃花":"含泪桃花",
            "七窍玲珑":"七窍玲珑",
            "雅俊无双":"雅俊无双",
            "慷慨":"慷慨",
            "慷慨_info":"每当一名角色成为杀的目标后，你可以摸2张牌回复1点体力。若如此做，你交给其一张牌并展示之，若该牌为装备牌，该角色可以使用此牌。",
            "天火":"天火",
            "天火_info":"限定技,出牌阶段,你可以对一至三名角色造成至多共3点火焰伤害（你可以任意分配每名目标角色受到的伤害点数），若你将对一名角色分配2点或更多的火焰伤害，你须先弃置四张不同花色的手牌再失去2点体力。",
            "琴音":"琴音",
            "琴音_info":"弃牌阶段结束时，若你于此阶段内弃置过你的至少两张手牌，则你可以选择一项：1. 所有角色各回复2点体力然后你摸3张牌；2. 所有角色各失去2点体力然后你增加1点体力上限(范围没多一名角色此效果+1)。",
            "白衣":"白衣",
            "白衣_info":"摸牌阶段，你可以放弃摸牌，改为从牌堆顶亮出10张牌，你获得不同花色的牌各一张，将其余的牌置入弃牌堆。你不能成为杀的指定目标，你始终跳过弃牌阶段",
            "圣光":"圣光",
            "圣光_info":"出牌阶段，你可以观看一名其他角色的手牌令其失去1点体力你回复1点体力，并可以展示其中一张红桃牌，然后将其弃置或置于牌堆顶，每阶段限3次。",
            "归心":"归心",
            "归心_info":"每当你受到1次伤害或体力流失后，若至少一名其他角色的区域里有牌，你可以选择所有其他角色，获得这些角色区域里的2张牌，然后将你的武将牌翻面。",
            "千影":"千影",
            "千影_info":"回合外，你可以将一张牌当[桃]使用，其他角色与你计算距离始终+2",
            "星辰":"星辰",
            "星辰_info":"准备阶段开始时，多发你20张牌，选择10张面朝下置于一旁（移出游戏），称之为“星”。每当你失去最后1张手牌时，你将手牌摸至体力上限",
            "晨雾":"晨雾",
            "晨雾_info":"结束阶段开始时，你可以将至少一张“星”置入弃牌堆并选择等量的角色，若如此做，其于你的下回合开始之前受到的非雷电伤害结算开始时，你防止此伤害。同时免疫体力流失伤害",
            "暴风":"暴风",
            "暴风_info":"结束阶段开始时，你可以将一张“星”置入弃牌堆并选择一名角色，若如此做，其受到的火焰伤害结算开始时，你令伤害值+2。",
            "暴走":"暴走",
            "暴走_info":"锁定技，游戏开始时，你获得四枚“暴走”标记，；锁定技，每当你造成/受到1点伤害后，你获得1枚\"暴走\"标记。（失去体力不会发动暴走）",
            "神怒":"神怒",
            "神怒_info":"出牌阶段,你可弃枚6“暴走”标记并选择所有其他角色，对这些角色各造成2点伤害，然后这些角色先各弃置装备区里的所有牌再各弃置6张手牌，你翻面。",
            "无前":"无前",
            "无前_info":"出牌阶段，你可以弃2枚\"暴走\"标记并选择一名其他角色，你视为拥有技能“无双”并令其防具无效，直到回合结束。",
            "邪神":"邪神",
            "邪神_info":"你拥有邪神面具的效果",
            "放生":"放生",
            "放生_info":"每当你受到伤害时，你可令伤害来源进行判定，若为黑色其失去2点体力上限，若为红色，你摸2张牌并增加1点体力上限",
            "送葬":"送葬",
            "送葬_info":"当其他角色死亡后，你可以摸5张牌并回复全部体力",
            "颂威":"颂威",
            "颂威_info":"其他魏国角色判定若结果为黑桃或梅花，可让你摸一张牌",
            "魔神":"魔神",
            "魔神_info":"",
            "chenwu3":"晨雾",
            "chenwu3_info":"",
            "chenwu2":"晨雾",
            "chenwu2_info":"",
            "baofeng2":"暴风",
            "baofeng2_info":"",
            "宏图":"宏图",
            "宏图_info":"每当你受到伤害或流失体力后，你可以令一名角色进行一次判定，若结果为红色，该角色回复1点体力；若结果为黑色，该角色增加X点体力上限并摸x张牌（X为此次伤害的伤害数）",
            "明主":"明主",
            "明主_info":"出牌阶段限一次，你可以将所有手牌交给一名其他角色，若如此做，该角色于其下个回合的手牌上限+2,并与其他角色计算距离-2，然后你回复1点体力",
            "mingzhu2":"明主",
            "mingzhu2_info":"",
            "兴衰":"兴衰",
            "兴衰_info":"主公技，限定技，当你进入濒死状态时，其他魏势力角色可依次令你回复1点体力，然后这些角色依次受到1点伤害",
            "情逝":"情逝",
            "情逝_info":"锁定技，当你的手牌数小于X时，你立即将手牌补至X张（X为你已损失的体力值），每次触发此效果都会增加1点体力上限并回复1点体力",
            "无情":"无情",
            "无情_info":"锁定技，你即将造成的伤害均视为失去体力.当你受到伤害后,你令全场失去1点体力上限",
            "songwei5":"颂威",
            "songwei5_info":"",
            "死战":"死战",
            "死战_info":"出牌阶段，你可以将所有手牌当【决斗】使用，结算后你和以此法受到伤害的角色各摸一张牌。若你在同一阶段内以此法摸了五张或更多的牌，则此技能失效直到回合结束",
            "sizhan2":"死战",
            "sizhan2_info":"",
            "sizhan3":"死战",
            "sizhan3_info":"",
            "sizhan4":"死战",
            "sizhan4_info":"",
            "北地":"北地",
            "北地_info":"[主公技]你可以弃置一张牌，然后视为你发动“激将”。若有角色响应，则该角色打出【杀】时摸一张牌,全场友方摸牌数量+1",
            "血舞":"血舞",
            "血舞_info":"出牌阶段，你可弃置一张红色牌并选择你攻击范围内的至多X名其他角色，对这些角色各造成2点神圣火焰（X为你已损失的体力值），然后这些角色各弃置2张牌,.每阶段限2次。",
            "龙啸":"龙啸",
            "龙啸_info":"锁定技，你于出牌阶段内每使用一张【杀】被【闪】抵消，你于此阶段内可以摸一张牌，获得武圣，无双，咆哮直到回合结束",
            "继武":"继武",
            "继武_info":"锁定技 回合结束阶段开始时，若你于此回合内已造成3点或更多伤害，你加1点体力上限，流失3点体力摸3张牌，然后获得装备'青龙偃月刀'",
            "惊鸿":"惊鸿",
            "惊鸿_info":"准备阶段和回合结束阶段，你可以进行一定判定，若为红色则可以继续判定，直到出现红色。然后你获得所有红色的判定牌，你的黑桃判定牌皆视为红色",
            "qing2":"倾国",
            "qing2_info":"",
            "qing1":"倾国",
            "qing1_info":"你计算与其他角色距离时-x,x=在此存活的男性角色数量;你使用黑色杀不可以被闪响应",
            "qing4":"倾国",
            "qing4_info":"",
            "狼顾":"狼顾",
            "狼顾_info":"当你受到伤害时，可以获得伤害来源的一张牌并摸1张牌然后回复1点体力，你的手牌上限加4",
            "改命":"改命",
            "改命_info":"在任意角色的判定牌生效前，你可以打出一张牌代替之并摸1张牌回复1点体力",
            "变阵":"变阵",
            "变阵_info":"你可以弃一张手牌来跳过自己的一个阶段(回合开始和回合结束阶段除外);若以此法跳过摸牌阶段,你可以从其他至多两名角色手里各抽取一张牌并回复1点体力;若以此法跳过出牌阶段,你可以将场上的一张牌移动到另一个合理的位置并摸1张牌。若跳过弃牌阶段则增加1点体力上限，若跳过判定阶段则回复1点体力",
            "bianzhen1":"变阵",
            "bianzhen1_info":"",
            "bianzhen2":"变阵",
            "bianzhen2_info":"",
            "bianzhen3":"变阵",
            "bianzhen3_info":"",
            "bianzhen4":"变阵",
            "bianzhen4_info":"",
            songwen:"颂文",
            "songwen_info":"出牌阶段，你可以选择一项：令一名手牌数小于其体力值的角色摸两张牌；或令一名手牌数大于其体力值的角色弃置两张牌。出牌阶段限5次",
            "口诛":"口诛",
            "口诛_info":"回合结束阶段开始时，你可以将一张手牌移出游戏并指定一名其他角色。该角色的回合开始时，其观看你移出游戏的牌并选择一项：交给你一张与此牌同类型的手牌并获得此牌；或将此牌置入弃牌堆，然后失去1点体力失去1点体力上限，摸两张牌。",
            "kouzhu2":"口诛",
            "kouzhu2_info":"",
            "突进":"突进",
            "突进_info":"其他角色的结束阶段开始时，你可以弃置一张牌，令该角色选择一项：1.弃置一张装备牌并令你摸2张牌并回复1点体力；2.受到你对其造成的1点伤害并失去1点体力上限。",
            "淑德":"淑德",
            "淑德_info":"每名角色的回合，你的回合外，每当有其他角色因弃置而失去牌时，若其中有基本牌，你可以摸一张牌。",
            "枪魂":"枪魂",
            "枪魂_info":"出牌阶段你可以进行判定，若为黑色则摸3张杀并获得技能咆哮直到回合结束;若为红色则摸3张牌，并将体力恢复至体力上限.",
            "谣言":"谣言",
            "谣言_info":"出牌阶段限一次，你可以弃置一张牌并指定一名角色，你对其造成2点伤害。",
            "控蛮":"控蛮",
            "控蛮_info":"当你对一名其他角色造成伤害时，你可以防止此伤害，然后获得其2张牌。",
            "象阵":"象阵",
            "象阵_info":"【南蛮入侵】对你无效；若其他角色使用的【南蛮入侵】在结算完时进入弃牌堆，你立即获得之并回复1点体力。你使用南蛮入侵造成的伤害+2",
            "xiangzhen1":"象阵",
            "xiangzhen1_info":"",
            "xiangzhen2":"象阵",
            "xiangzhen2_info":"",
            "xiangzhen3":"象阵",
            "xiangzhen3_info":"你使用杀伤害加1",
            "巨刃":"巨刃",
            "巨刃_info":"你每使用【杀】造成一次伤害你摸一张牌且受伤目标受到1点火焰伤害;你使用或打出的红色杀不可被闪抵消",
            "抛戟":"抛戟",
            "抛戟_info":"出牌阶段，你可以自减一点体力增加1点体力上限并摸一张牌或弃一张装备牌，然后你对你攻击范围内的一名角色造成2点体力流失伤害并减少1点体力上限，每回合限一次。你每失去装备区里的牌时回复1点体力",
            "pao1":"抛戟",
            "pao1_info":"每当你失去一张装备牌，可以摸两张牌",
            "王佐":"王佐",
            "王佐_info":"你每受到1点伤害，可令任意2名角色将手牌补至其体力上限的张数。",
            qibing:"奇兵",
            "qibing_info":"每当有顺手牵羊进入弃牌堆时，你获得之并回复1点体力摸一张牌，你计算与全场角色距离为1",
            "qibing2":"奇兵",
            "qibing2_info":"当计算你与其它角色的距离时，始终-1",
            "天险":"天险",
            "天险_info":"当你成为决斗的目标时，可以让对方失去1点体力",
            "积粮":"积粮",
            "积粮_info":"你的回合外，你每失去1张牌，可以摸一张牌",
            "抬棺":"抬棺",
            "抬棺_info":"出牌阶段，你可以弃置一张黑色牌并选择一名有牌的其他角色，该角色弃置2张牌且你摸一张牌，然后你视为对其使用决斗并回复1点体力",
            "怂乱":"怂乱",
            "怂乱_info":"限定技，出牌阶段，你可以将一张黑色手牌交给一名其他角色，并选择一名攻击范围内含有其的另一名其他角色，然后令这两名角色拼点，赢的角色弃置两张牌，没赢的角色失去一点体力",
            "千虑":"千虑",
            "千虑_info":"限定技，当你受到伤害后，你可令一名其他男性角色增加一点体力上限摸4张牌，然后若该角色的武将牌上有主公技且其不为主公，其获得此主公技",
            "旧情":"旧情",
            "旧情_info":"当一名角色处于濒死状态时，你可以令一名其他角色摸8张牌，然后弃置四张牌。若其以此法弃置的四张牌花色各不相同，则视为该角色对濒死的角色使用一张【桃】",
            "默书":"默书",
            "默书_info":"结束阶段开始时，你可以将一张手牌当你本回合出牌阶段使用的第一张基本或非延时类锦囊牌使用。然后，你可以将一张手牌当你本回合出牌阶段使用的第二张基本或非延时类锦囊牌使用，然后，你可以将一张手牌当你本回合出牌阶段使用的第3张基本或非延时类锦囊牌使用，然后，你可以将一张手牌当你本回合出牌阶段使用的第4张基本或非延时类锦囊牌使用，然后,你可以将一张手牌当你本回合出牌阶段使用的第五张基本或非延时类锦囊牌使用",
            "战勋":"战勋",
            "战勋_info":"锁定技，每当一名角色死亡后，你增加2点体力上限，回复一点体力，摸3张牌。",
            "举兵":"举兵",
            "举兵_info":"觉醒技，准备阶段开始时，若你已受伤且体力上限大于存活角色数，你须将手牌摸至体力上限，然后获得技能“内乱”和“危重”。",
            "危重":"危重",
            "危重_info":"当你的体力值或体力上限发生变化时，你摸一张牌",
            "内乱":"内乱",
            "内乱_info":"回合结束阶段，你可以弃置2张牌并回复1点体力，若不足2则全弃，若没有手牌直接回复1点体力",
            "伏兵":"伏兵",
            "伏兵_info":"你的回合结束和回合阶段开始时，你先摸2张牌，然后将1张手牌移出游戏，称为\"陷阱\"。然后为\"陷阱\"记录一个基本牌或锦囊牌名称（须与其他\"陷阱\"记录的名称均不同）。你的回合外，当有其他角色使用与你记录的\"陷阱\"牌名相同的牌时，你可以令此牌无效且你增加1点体力上限，然后将该\"陷阱\"置入弃牌堆",
            "刚直":"刚直",
            "刚直_info":"每当你受到伤害后，若你的手牌数不大于伤害来源手牌数，你可以将手牌摸至与伤害来源手牌数相同；否则你可以弃置伤害来源手牌数的手牌，然后对其造成2点伤害且你回复1点体力",
            "镇守":"镇守",
            "镇守_info":"当一名其他角色成为【杀】或锦囊牌的目标时（使用者不是你），若该角色的体力值小于你且此牌的目标角色数为1，你可以弃置一张牌。若如此做，你选择一项：1、摸2张牌，然后将此【杀】或锦囊牌转移给你；2、令此【杀】或锦囊牌无效，然后将此【杀】或锦囊牌置于使用者的武将牌旁，若如此做，当前回合结束后，使用者获得使用者武将牌旁的这些牌",
            "仁爱":"仁爱",
            "仁爱_info":"每当体力值小于你的一名其他角色受到伤害时，你可以弃置一张装备牌，然后防止此伤害。然后你回复1点体力",
            "神童":"神童",
            "神童_info":"每当你受到一次伤害或回复体力后，你可以亮出牌堆顶的8张牌。然后获得其中任意数量点数之和小于13的牌，将其余的牌置入弃牌堆。当你一次性获得2张或更多牌时,你令全场友方回复1点体力,当你一次性弃置2张或以上的牌时，令全场友方摸一张牌",
            "精算":"精算",
            "精算_info":"出牌阶段结束时，若你本回合使用的牌数量小于或等于你当前体力值，你可以摸本回合你使用过的数量的牌。",
            "can2":"迂回",
            "can2_info":"",
            "迂回":"迂回",
            "迂回_info":"当你于回合内使用基本牌或锦囊牌或装备牌指定目标后，你可以弃置一名角色的一张牌。若如此做，你摸一张牌",
            "趋向":"趋向",
            "趋向_info":"结束阶段开始时，你可以摸X张牌，若如此做，你将手牌弃置至X张；你可以再次发动趋向，增加1点体力上限，回复x点体力（X为你于此回合发动过“迂回”的次数）",
            "quxiang2":"趋向",
            "quxiang2_info":"结束阶段开始时，你可以摸两张牌，若如此做，你将手牌弃置至X张（X为你于此回合发动过“奇制”的次数）",
            "落梅":"落梅",
            "落梅_info":"当其他角色的牌，因弃牌或判定而进入弃牌堆时，你可以获得之。每获得一张你回复1点体力",
            "luomei1":"落梅",
            "luomei1_info":"",
            "luomei2":"落梅",
            "luomei2_info":"",
            "妙笔":"妙笔",
            "妙笔_info":"若你的武将牌正面朝上，你可以(在合理的时机)将你的武将牌翻面来视为使用一张【桃】并回复1点体力;当你的武将牌背面朝上时你受到伤害，你可在伤害结算后将之翻回正面并增加1点体力上限摸两张牌。",
            "miaobi1":"妙笔",
            "miaobi1_info":"",
            "miaobi2":"妙笔",
            "miaobi2_info":"",
            "miaobi3":"妙笔",
            "miaobi3_info":"",
            "外愚":"外愚",
            "外愚_info":"每当你受到一次伤害或体力流失后，你可以摸一张牌，然后展示所有手牌，若颜色均不同，伤害来源弃置一张手牌，你回复1点体力，摸一张牌。出牌阶段限1次，你指定1名目标然后从1名随机角色的手牌中随机选择1张卡牌让其猜测种类，若其猜不中，目标失去1点体力上限然后你回复1点体力",
            "妙策":"妙策",
            "妙策_info":"出牌阶段，你可以将所有的手牌（至少一张）当做任意一张非延时性锦囊牌使用。你使用的非延时类锦囊牌不能被无懈可击响应；你不能成为其他角色的延时类锦囊的目标，你可以将任意一张手牌当无懈可击使用",
            "起兵":"起兵",
            "起兵_info":"觉醒技，准备阶段开始时，若“权”的数量不小于9，你减1点体力上限，选择一项：1、摸4张牌增加4点体力上限；2、增加1点体力上限回复3点体力。然后你获得“族裔”。",
            "权宜":"权宜",
            "权宜_info":"每当你受到1点伤害或体力流失后，你可以可摸2张牌回复1点体力，然后将y张手牌置于武将牌上，称为“权”；你的手牌上限+X（X为“权”的数量x2）y为本次受到的伤害。",
            "族裔":"族裔",
            "族裔_info":"出牌阶段限1次，你可以移去一张权，选择一名角色，让其增加1点体力上限摸2张牌",
            "酷法":"酷法",
            "酷法_info":"出牌阶段限一次，你可以弃置至少一张手牌并选择一名其他角色，该角色需弃置一张手牌，否则其先将其武将牌翻面再失去x体力，减少1点体力上限（X为你以此法弃置的手牌数量）。",
            "御敌":"御敌",
            "御敌_info":"每当你受到一次伤害，可以弃置一张手牌，并令伤害来源选择一项：弃置一张相同类型的手牌并令你摸一张牌并让你增加1点体力上限，或令你回复一点体力摸一张牌",
            "中正":"中正",
            "中正_info":"出牌阶段限5次，你可以弃置一张手牌，然后令一名已受伤的角色进行一次判定，若结果为黑色，该角色摸X张牌(X为该角色已损失的体力值)，然后你本回合不能再对其发动“定品”；若结果为红色，将你的武将牌翻面并流失1点体力。",
            "zhongzheng2":"中正",
            "zhongzheng2_info":"",
            "法定":"法定",
            "法定_info":"每当一名角色的武将牌翻面或流失体力时，你可以令其将手牌补至体力上限，然后回复1点体力。",
            "驹骑":"驹骑",
            "驹骑_info":"锁定技，若你已受伤，你计算与其他角色距离时-X，其他角色与你计算距离+x（X为你已损失体力值）",
            "虎豹":"虎豹",
            "虎豹_info":"当你使用【杀】对目标角色造成伤害时，若你的装备区里有武器牌，你可以令其选择一项：1、弃置X张手牌（X为此武器牌的攻击范围），若如此做，其弃置你的此武器牌；2、令此伤害+3",
            "墨心":"墨心",
            "墨心_info":"每当你需要使用一张本回合内未使用过的牌时，你可以将一张黑色非基本牌置于牌堆顶，然后视为你使用了此牌，若你在回合外触发此技能打出闪则你可以摸2张牌",
            "moxin_count":"墨心",
            "moxin_count_info":"",
            "moxin2":"墨心",
            "moxin2_info":"",
            "moxin_count2":"墨心",
            "moxin_count2_info":"",
            "moxin_sha":"墨心",
            "moxin_sha_info":"",
            "moxin_tao":"墨心",
            "moxin_tao_info":"",
            "moxin_jiu":"墨心",
            "moxin_jiu_info":"",
            "moxin_sha_old":"墨心",
            "moxin_sha_old_info":"",
            "moxin_tao_old":"墨心",
            "moxin_tao_old_info":"",
            "moxin_jiu_old":"墨心",
            "moxin_jiu_old_info":"",
            "辅佐":"辅佐",
            "辅佐_info":"每当一名其他角色于其出牌阶段内使用黑色牌指定目标后，则你可以摸一张牌回复1点体力然后你翻面(每回合限2次)",
            "诏书":"诏书",
            "诏书_info":"出牌阶段，(限五次)你可以展示一张手牌，然后选择距离最近的一名其他角色，该角色声明一张基本牌的牌名。在此出牌阶段内，你可以将此手牌当声明的牌使用且你不能被选择为目标",
            "禅心":"禅心",
            "禅心_info":"当你受到伤害或流失体力后，你可以摸一张牌回复1点体力，或对“诏书”的描述依次执行下列一项修改：1.将“基本牌”改为“基本牌或锦囊牌”；2.将“选择距离最近的一名其他角色，该角色”改为“你”",
            "pilang2":"劈浪",
            "pilang2_info":"你受到伤害后，你可以令对你造成伤害的角色翻面，然后你摸一张牌增加1点体力上限",
            "劈浪":"劈浪",
            "劈浪_info":"摸牌阶段，多摸你损失体力的牌，你受到伤害后可以摸一张牌增加1点体力上限",
            "雄才":"雄才",
            "雄才_info":"每当你受到伤害或失去体力后，你可以选择一项：摸一张牌回复2点体力，或获得对你造成伤害的牌并增加1点体力上限。",
            "护主":"护主",
            "护主_info":"主公技，魏势力角色可以替你打出[闪]",
            "料敌":"料敌",
            "料敌_info":"每当你受到1点伤害或失去体力上限和失去体力后，你可以获得伤害来源的1张牌并令其受到2点神圣伤害。",
            "谋士":"谋士",
            "谋士_info":"在任意角色的判定牌生效前，你回复1点体力，然后可以打出一张牌代替之",
            "獠牙":"獠牙",
            "獠牙_info":"回合开始和结束时，你可以选择1~5名手牌与你不等的其他角色，获得这些角色的各一张手牌。",
            "偷营":"偷营",
            "偷营_info":"你的出牌阶段限1次，你指定1名角色并弃置和该名角色手牌同等数量的牌，然后获得目标角色所有手牌，并对其造成x点雷电伤害(x为你从该名角色手中获得的手牌数量)，你不能成为[兵粮寸断]，[乐不思蜀],[闪电]的目标",
            "虎痴":"虎痴",
            "虎痴_info":"你可以跳过摸牌阶段，然后展示牌堆顶的10张牌，获得其中的基本牌、武器牌和【决斗】，若如此做，直到你的下回合开始，你为伤害来源的【杀】或【决斗】造成的伤害+2。",
            "huchi2":"虎痴",
            "huchi2_info":"",
            "狂拳":"狂拳",
            "狂拳_info":"锁定技，你不能成为[兵粮寸断],[乐不思蜀],[过河拆桥],[闪电]的目标",
            "惊天":"惊天",
            "惊天_info":"你可以立即获得你的判定牌，然后你摸x张牌,跳过弃牌阶段并将体力值回复至体力上限，x=你损失的体力",
            "jingtian2":"惊天",
            "jingtian2_info":"你始终跳过弃牌阶段",
            "遗策":"遗策",
            "遗策_info":"每当你受到1点伤害后，你可以摸x张牌。然后你可以在至多两名角色的武将牌旁边分别扣置至多两张手牌，这些角色的下个摸牌阶段开始时，该角色获得其武将牌旁的这些牌。x=你损失的体力，你受到的伤害至多为1",
            "yice2":"遗策",
            "yice2_info":"",
            "yice3":"遗策",
            "yice3_info":"你受到的伤害至多为1",
            "厚兵":"厚兵",
            "厚兵_info":"摸牌阶段，你可以放弃摸牌，改为观看牌堆顶的五张牌，然后获得其中的三张牌，将其余的牌以任意顺序置于牌堆底。",
            "破虏":"破虏",
            "破虏_info":"每当你对其他角色造成1点伤害后，或受到其他角色造成的1点伤害和体力流失后，你可与该角色各摸一张牌，然后你回复本次伤害的体力值，随机获得其一项技能",
            "gui1":"鬼雄",
            "gui1_info":"你可以立即获得对你造成伤害或体力流失的牌,并增加1点体力上限回复1点体力",
            "护驾":"护驾",
            "护驾_info":"主公技，魏势力角色可以替你打出[闪]",
            fangu:"反骨",
            "fangu_info":"锁定技，每当你造成一点伤害，你回复一点体力摸一张牌，你的回复效果+1",
            "善谋":"善谋",
            "善谋_info":"限定技，出牌阶段，你可以失去任意点体力，然后直到回合结束，你计算与其他角色的距离-X，且你可以多使用X张【杀】（X为你失去的体力值）x最多为9",
            "shanmou2":"善谋",
            "shanmou2_info":"",
            "fangu2":"反骨",
            "fangu2_info":"",
            "xingchen7":"星辰",
            "xingchen7_info":"每当你失去最后一张手牌，可摸一张牌",
            "病疾":"病疾",
            "病疾_info":"出牌阶段限一次，你可以弃置X张牌（X为你已损失的体力值），然后令至多X名已受伤的角色各回复1点体力摸一张牌。若你以此法弃置的牌中有黑色牌，你增加一点体力上限摸2张牌。",
            "兵谋":"兵谋",
            "兵谋_info":"每当一名角色的手牌于回合外被弃置时，你可以令该角色摸两张牌增加1点体力然后你失去1点体力",
            "险计":"险计",
            "险计_info":"锁定技，当你没有手牌时，不能成为[杀]，[决斗]，[万箭齐发],[南蛮入侵]的目标",
            "xianji1":"险计",
            "xianji1_info":"",
            "星象":"星象",
            "星象_info":"回合开始和结束阶段，你可以观看牌堆顶的x张牌，并将其以任意顺序置于牌堆项或牌堆底，x为存活角色个数且不超过5",
            "铁索":"铁索",
            "铁索_info":" 你可以将一张黑色手牌当重铸使用，你摸一张牌，回复1点体力",
            "tiesuo1":"铁索",
            "tiesuo1_info":"",
            "tiesuo2":"铁索",
            "tiesuo2_info":"",
            "落凤":"落凤",
            "落凤_info":"限定技，出牌阶段或当你处于濒死状态时，你可以丢弃你所有的牌和你判定区里的牌，并重置你的武将牌，然后体力回复至体力上限并3张牌",
            "燃火":"燃火",
            "燃火_info":"出牌阶段，你可以将你的任意一张♥或♦手牌当【火攻】使用。你防止受到火焰伤害，且改为增加1点体力上限",
            "ranhuo2":"燃火",
            "ranhuo2_info":"锁定技，你防止即将受到的火焰伤害，改为回复1点体力",
            "八卦":"八卦",
            "八卦_info":"当你没装备防具时，始终视为你装备着【八卦阵】。你防止受到的雷电伤害，并回复2点体力摸一张牌",
            "yiqunbagua2":"八卦",
            "yiqunbagua2_info":"",
            "看穿":"看穿",
            "看穿_info":"你可以将你的任意一张♠或♣手牌当【无懈可击】使用。你使用或打出的黑色锦囊不能被无懈可击响应",
            "kanchuan2":"看穿",
            "kanchuan2_info":"锁定技，你使用的非延时类锦囊牌不能被无懈可击响应；你不能成为其他角色的延时类锦囊的目标",
            "胆略":"胆略",
            "胆略_info":"出牌阶段，你可以指定一名使用【杀】能攻击到你的角色，该角色需对你使用一张【杀】，若该角色不如此做，你弃掉他的2张牌并让其失去1点体力上限，每回合限一次。",
            "承志":"承志",
            "承志_info":"觉醒技，回合开始阶段，若你手牌大于或等于4，你须回复体力至体力上限或摸10张牌，然后减1点体力上限，并永久获得技能“麒麟”。",
            "麒麟":"麒麟",
            "麒麟_info":"你的红色手牌可以当决斗使用，你的黑色手牌可以当无懈可击使用，你不能被乐不思蜀，兵粮寸断，闪电选作目标",
            "qilin2":"麒麟",
            "qilin2_info":"你可以将你的任意一张♠或♣手牌当【无懈可击】使用。",
            "qilin3":"麒麟",
            "qilin3_info":"锁定技，你不能成为[顺手牵羊]和[乐不思蜀]的目标",
            "后主":"后主",
            "后主_info":"锁定技，当其他玩家使用【杀】指定你为目标时，需额外弃掉一张基本牌，否则该【杀】对你无效并且你可以摸一张牌。",
            "简政":"简政",
            "简政_info":"你可跳过你的出牌阶段并摸一张牌，若如此做，在回合结束时可弃一张手牌令一名其他角色进行一个额外的回合。",
            "jianzheng2":"简政",
            "jianzheng2_info":"",
            "jianzheng3":"简政",
            "jianzheng3_info":"",
            "愚智":"愚智",
            "愚智_info":"主公技，觉醒技，回合开始阶段，若你的体力是全场最少的(或之一)，你须增加1点体力上限，回复1点体力，并永久获得技能“栋梁”。",
            "栋梁":"栋梁",
            "栋梁_info":"回合开始时，出牌阶段开始时，弃牌阶段开始时，你可以声明当前游戏支持的武将包中的一个锁定技，你获得此锁定技直到下一次声明",
            "助威":"助威",
            "助威_info":"当一名角色于其出牌阶段内回复体力时，你可以选择一项：1、你摸2张牌；2、令该角色摸两张牌回复1点体力 ",
            "归吴":"归吴",
            "归吴_info":"觉醒技，准备阶段开始时，若全场有至少一名已受伤且你曾发动【助威】令其摸牌的角色，则你回复1点体力，流失3点体力，获得技能【观武】",
            "观武":"观武",
            "观武_info":"每当你失去一张装备牌，可以摸3张并回复1点体力，每回合限3次触发",
            "虎将":"虎将",
            "虎将_info":"锁定技，若你的体力值为7或更少，你视为拥有技能“叫阵”；若你的体力值为5或更少；你视为拥有技能“横扫”；若你的体力值小于或等于3，你视为拥有技能“清兵”。",
            "叫阵":"叫阵",
            "叫阵_info":"出牌阶段，你可以指定一名使用【杀】能攻击到你的角色，该角色需对你使用一张【杀】，若该角色不如此做，你弃掉他的一张牌并让其翻面，每回合限一次。",
            "横扫":"横扫",
            "横扫_info":"你使用杀可以额外指定3名角色为目标，你使用杀无限次数，你对其造成伤害后其必须弃置1张牌",
            "清兵":"清兵",
            "清兵_info":"你可以选择一至三项：1. 跳过判定阶段和摸牌阶段；2. 跳过出牌阶段并弃置一张装备牌；3. 跳过弃牌阶段。你每选择一项，视为你对一名其他角色使用一张【杀】",
            "qingbing1":"清兵",
            "qingbing1_info":"",
            "qingbing2":"清兵",
            "qingbing2_info":"",
            "qingbing4":"清兵",
            "qingbing4_info":"",
            "协睦":"协睦",
            "协睦_info":"每当你成为其他角色的黑色牌的目标，可以弃置一张杀并摸3张牌并增加1点体力上限，南蛮入侵和万箭齐发对你无效",
            "zhishixiemu2":"协睦",
            "zhishixiemu2_info":"锁定技，你不能成为[顺手牵羊]和[乐不思蜀]的目标",
            "蛮兵":"蛮兵",
            "蛮兵_info":"每当你使用一张杀，可以摸一张牌，然后此杀随机增加一个额外目标,你可以获得其他角色打出的杀，你使用或打出杀无次数限制",
            "manbing2":"蛮兵",
            "manbing2_info":"出牌阶段，你使用[杀]无数量限制",
            "不言":"不言",
            "不言_info":"锁定技，每当你受到锦囊牌对你造成的伤害时，你防止此伤害然后你摸一张牌增加1点体力上限。",
            "洞察":"洞察",
            "洞察_info":"回合结束阶段开始时，你可以弃置一张牌并选择一名其他角色，令其选择一项：1.摸五张牌；2.回复五点体力；3.将其武将牌翻转至正面朝上并重置之。",
            "先锋":"先锋",
            "先锋_info":"锁定技，回合开始和结束时，你摸3张牌然后执行一个额外的出牌阶段",
            "迟暮":"迟暮",
            "迟暮_info":"限定技，当你处于濒死状态时，可以将体力回复至体力上限，然后摸5张牌",
            "xianfeng2":"先锋",
            "xianfeng2_info":"锁定技，回合开始和结束时，你执行一个额外的出牌阶段",
            "青龙":"青龙",
            "青龙_info":"每当一名角色在其出牌阶段使用【杀】时，你可弃置一张牌令此【杀】不计入出牌阶段使用次数，若此【杀】为红色，你摸2张牌，你的红色手牌可以当杀使用",
            "qinglong3":"青龙",
            "qinglong3_info":"你可以将一张红色牌当[杀]使用",
            "潜行":"潜行",
            "潜行_info":"回合开始阶段，你可以摸三张牌，并弃置一张牌，然后令一名距离为1的角色不能使用或打出与你弃置的牌颜色相同的手牌，直到回合结束；当你使用【杀】对距离为1的目标角色造成伤害时，你可以进行一次判定，若判定结果不为红桃，你防止此伤害，令其减1点体力上限",
            "qianxing2":"潜行",
            "qianxing2_info":"回合开始阶段，你可以摸一张牌，并弃置一张牌，然后令一名距离为1的角色不能使用或打出与你弃置的牌颜色相同的手牌，直到回合结束。",
            "qianxing3":"潜行",
            "qianxing3_info":"",
            "危嗣":"危嗣",
            "危嗣_info":"准备阶段开始时，你可以将一至两名角色的各三张牌置于你的武将牌上，称为“危”；每当一名角色需要对你使用杀时，该角色可以将两张“危”置入弃牌堆，视为对你使用一张杀。",
            "weisi2":"危嗣",
            "weisi2_info":"",
            "过目":"过目",
            "过目_info":"出牌阶段开始时，你可以展示一名其他角色的一张手牌。若如此做，每当你于此阶段内使用与此牌类别相同的牌时，你可以摸两张牌回复1点体力。",
            "guomu2":"过目",
            "guomu2_info":"",
            "guomu3":"过目",
            "guomu3_info":"",
            "展图":"展图",
            "展图_info":"一名其他角色的出牌阶段开始时，你可以摸五张牌，然后交给其3张牌。若如此做，此阶段结束时，若该角色未于此阶段内杀死过一名角色，则你失去1点体力，回合结束时你可以弃置1张牌指定一名角色在其判定区内增加1张延迟锦囊",
            "zhantu5":"展图",
            "zhantu5_info":"",
            "zhantu2":"展图",
            "zhantu2_info":"",
            "zhantu3":"展图",
            "zhantu3_info":"",
            "忠胆":"忠胆",
            "忠胆_info":"当你使用的【杀】被闪抵消后，你可以摸两张牌然后将此【杀】或目标角色使用的【闪】交给一名该角色以外的其他角色,且你本回合出杀无次数限制，以此法获得红色牌的角色可以对你攻击范围内的角色使用一张【杀】，你使用杀造成的伤害+2",
            "zhongdan2":"忠胆",
            "zhongdan2_info":"锁定技，你的【杀】额外造成1点伤害",
            "采樵":"采樵",
            "采樵_info":"其他角色回合结束后，若你区域内至少1个区域有牌(手牌，装备区，判定区)，你可以弃置该区域内所有牌，并将该名角色相同区域内的牌背面朝上置于你的武将牌上，称为\"樵\"；其他友方角色的结束阶段开始时，若你的手牌数与其相等，则你可以与其各摸两张牌，然后你回复1点体力。",
            "呢喃":"呢喃",
            "呢喃_info":"你的回合开始，若你武将牌上有牌，你须选择1、获得武将牌上所有牌;2将武将牌上所有牌交给1名角色，然后你摸等量的牌；出牌阶段，你可以重铸【杀】并回复1点体力。出牌阶段结束时，若你于此阶段以此法重铸了至少四张【杀】，则你可以令一名男性角色摸3张牌增加2点体力上限然且你回复你损失的体力。",
            "ninan2":"呢喃",
            "ninan2_info":"",
            "祸乱":"祸乱",
            "祸乱_info":"结束阶段开始时，你可以弃置攻击范围内含有主公的一名其他角色的一张牌，令其摸2张牌，然后若其手牌比主公多，你摸2张牌增加1点体力上限",
            "贿赂":"贿赂",
            "贿赂_info":"每名角色限一次，当你受到其他角色造成的伤害时，你可选你的任意数量的牌令该角色观看，然后该角色选择：1.获得这些牌中的一张，然后防止伤害。2.弃置等量的牌，你免疫体力流失伤害，你受到的伤害最多为1",
            "huilu2":"贿赂",
            "huilu2_info":"你受到的伤害至多为1<br>你始终跳过弃牌阶段",
            "huilu3":"贿赂",
            "huilu3_info":"你免疫体力流失伤害",
            "昭烈":"昭烈",
            "昭烈_info":"当你回复1点体力或受到1点体力流失伤害时，你可以令一名其他角色回复2点体力或摸3张牌",
            "智心":"智心",
            "智心_info":"回合开始阶段开始时，你可以弃置所有手牌，若你以此法弃置的牌的张数与你的体力值不等，你回复1点体力，将手牌摸至体力上限。",
            "仁王":"仁王",
            "仁王_info":"当你一次获得或失去至少两张牌后，你可以令一名其他角色摸3张牌增加1点体力上限",
            "御驾":"御驾",
            "御驾_info":"弃牌阶段结束时，若你本回合内造成过伤害，你回复2点体力并摸2张牌",
            "烈武":"烈武",
            "烈武_info":"你可以将一张红色牌当[杀]使用，你不能成为杀和火攻的目标，你无视其防具，你使用杀或决斗造成的伤害+3",
            "liewu2":"烈武",
            "liewu2_info":"锁定技，你不能成为【杀】的目标",
            "liewu3":"烈武",
            "liewu3_info":"",
            "liewu4":"烈武",
            "liewu4_info":"",
            "恩断":"恩断",
            "恩断_info":"出牌阶段限一次，你可以与一名其他角色拼点，若你赢，则直到回合结束，该角色不能使用或打出手牌且其非锁定技失效且你获得技能咆哮直到回合结束，若你没赢，你可令该角色回复3点体力。",
            "enduan2":"恩断",
            "enduan2_info":"",
            "豪气":"豪气",
            "豪气_info":"你使用杀无次数限制，你可以装备任意数量的武器牌，你无视其防具，你免疫体力流失伤害，你不能被锦囊牌选中，你受到伤害时20%令其无效，你使用杀造成的伤害+5",
            "haoqi2":"豪气",
            "haoqi2_info":"锁定技，你不能成为延时类锦囊的目标",
            "haoqi3":"豪气",
            "haoqi3_info":"你可以额外装备任意数量的装备",
            "haoqi4":"豪气",
            "haoqi4_info":"你免疫体力流失伤害",
            "haoqi5":"豪气",
            "haoqi5_info":"当一名其他角色回复体力时，50%概率终止回复结算，然后你回复一点体力",
            "真假":"真假",
            "真假_info":"限定技，准备阶段开始时，你可以将体力回复至等同于你上回合结束时的体力值，然后你每以此法回复1点体力，便摸一张牌。",
            "zhenjia2":"真假",
            "zhenjia2_info":"",
            "haoqi6":"豪气",
            "haoqi6_info":"",
            "haoqi7":"豪气",
            "haoqi7_info":"锁定技，你的【杀】额外造成1点伤害",
            "绝尘":"绝尘",
            "绝尘_info":"你可以将[杀]当[闪]，或[闪]当[杀]使用或打出",
            "横枪":"横枪",
            "横枪_info":"每当你于回合外使用或打出一张手牌时，你可以亮出牌堆顶的一张牌，若此牌与你此次使用或打出的牌类别相同，你可以摸一张牌将之交给任意一名角色并令其回复1点体力；若不同则你可以将之置入弃牌堆。",
            "咫尺":"咫尺",
            "咫尺_info":"每当你发动“绝尘”使用或打出一张手牌时，你可以立即获得对方的一张手牌并摸一张牌回复1点体力。",
            "longzhichi1":"咫尺",
            "longzhichi1_info":"",
            "longzhichi2":"咫尺",
            "longzhichi2_info":"",
            "沧海":"沧海",
            "沧海_info":"你受到伤害或体力流失后，你获得1张杀，当你的体力值减少时若等于或小于3，则失去3点体力上限回复全部体力并获得技能\"游龙\"",
            "西凉":"西凉",
            "西凉_info":"出牌阶段你可以多使用2张杀,当你使用【杀】指定一名角色为目标后，你可以进行一次判定并令该角色的非锁定技失效直到回合结束且你回复2点体力摸两张牌，除非该角色弃置一张与判定结果花色相同的牌，否则不能使用【闪】抵消此【杀】。当你造成伤害后，你可以增加1点体力上限",
            "xiliang2":"西凉",
            "xiliang2_info":"受到伤害后，你可以从青钢剑，八卦阵，紫锌中随机获得2张，并失去1点体力",
            "玉碎":"玉碎",
            "玉碎_info":"每当你成为其他角色的卡牌的目标时，你可以失去一点体力上限摸一张牌回复1点体力取消之，然后弃置对方2张牌",
            "孤险":"孤险",
            "孤险_info":"回合结束阶段，若你已受伤，可以增加3点体力上限并摸X张牌，然后可以将等量的牌交给一名其他角色，X为你已损失的体力值",
            "匡汉":"匡汉",
            "匡汉_info":"你受到伤害后令对你受到伤害的目标受到1点神圣火焰伤害，然后全场蜀国角色回复1点体力",
            "文昭":"文昭",
            "文昭_info":"当其他角色死亡后，你增加副将魏王称帝并回复3点体力，然后失去此技能",
            "横冲":"横冲",
            "横冲_info":"你受到普通伤害之前可以增加2点体力上限，并回复2点体力",
            "镇守2":"镇守",
            "镇守2_info":"",
            "白衣2":"白衣",
            "白衣2_info":"",
            "悟法":"悟法",
            "悟法_info":"你免疫所受到的普通属性伤害，改为增加1点体力上限流失1点体力，你每次使用或打出非转化锦囊牌可以回复1点体力",
            "悟法2":"悟法",
            "悟法2_info":"每当你使用一张非转化的普通锦囊牌，可以摸一张牌",
            "锦计":"锦计",
            "锦计_info":"锁定技，当你进入濒死状态时，你进行一次判定，若结果不为红桃，你将体力回复至1，回合开始时，你可以观看牌堆顶两张牌，然后获得其中一张牌，并展示之，若该牌为基本牌，你获得技能“马术”直到回合结束，且本回合你可以多使用一张杀；若不为基本牌，你弃置你武将上的判定牌，然后摸一张牌",
            "锦计2":"锦计",
            "锦计2_info":"",
            shenmou:"深谋",
            "shenmou_info":"锁定技，你每次造成伤害可以获得1枚谋标记，你每于弃牌阶段弃置一张牌获得1张谋",
            "shenmou2":"深谋",
            "shenmou2_info":"",
            "伟略":"伟略",
            "伟略_info":"出牌阶段，你可以弃置15枚谋来指定一名角色令其失去所有技能然后其死亡",
            "辩论":"辩论",
            "辩论_info":"出牌阶段开始时，你可与一名其他角色拼点。若你赢，你使用的下一张基本牌或普通锦囊牌可以额外指定任意一名其他角色为目标或减少指定一个目标；若你没赢，你使用锦囊牌可以摸2张牌并回复1点体力",
            "辩论2":"辩论",
            "辩论2_info":"",
            "辩论3":"辩论",
            "辩论3_info":"每当你使用一张非转化的普通锦囊牌，可以摸一张牌",
            "使臣":"使臣",
            "使臣_info":"每当你拼点赢，你可以获得对方此次拼点的牌；每当你拼点没赢，你可以收回你此次拼点的牌， 你不能成为延迟类锦囊牌的目标",
            "驰骋":"驰骋",
            "驰骋_info":"摸牌阶段摸牌时，你可以选择一项：1、额外摸3张牌，若如此做，你本回合使用基本牌额外执行1次效果。 2、多摸2张牌，若如此做，出牌阶段你使用【杀】无距离且无限次数，直到回合结束。",
            "驰骋2":"驰骋",
            "驰骋2_info":"你使用或打出杀无次数和距离限制",
            "驰骋3":"驰骋",
            "驰骋3_info":"你使用的基本牌均结算2次",
            "将威":"将威",
            "将威_info":"出牌阶段限3次，你可以与一名角色拼点，若你赢，你选择一项：1.其受到1点神圣伤害并不能使用或打出手牌直到回合结束；2.视为你对其使用了【决斗】并回复2点体力。若你没赢，其弃置你1张牌然后你视为对其使用一张决斗.",
            "将威2":"将威",
            "将威2_info":"",
            "兵戎":"兵戎",
            "兵戎_info":"出牌阶段限3次，你可以令一名其他角色与你同时展示一张手牌：若你展示的是【杀】且该角色展示的不是【闪】，则你弃置此【杀】并对其造成1点伤害然后你回复1点体力；若你展示的不是【杀】且该角色展示的是【闪】，则你弃置你展示的牌并获得其一张牌并摸一张牌",
            "战机":"战机",
            "战机_info":"限定技，当你首次进入濒死状态时，你将体力恢复至上限，并获得技能\"待战\"",
            "待战":"待战",
            "待战_info":"出牌阶段，你可以将一张点数大于你体力值的牌当万箭齐发使用，在一名角色的判定牌生效前你可以亮出牌堆顶的4张牌，选择其中一张代替之。若不是属于你的判定阶段，你将另一种牌收入手牌",
            "待战2":"待战",
            "待战2_info":"",
            "魏统":"魏统",
            "魏统_info":"其他角色回合开始和结束时，则你回复1点体力",
            "勇谋":"勇谋",
            "勇谋_info":"每当你成为其他角色的牌的目标，可以弃置一张杀对其造成1点伤害",
            "筹策":"筹策",
            "筹策_info":"其他角色回合开始时，你可以获得1张普通锦囊牌并失去1点体力",
            "决意":"决意",
            "决意_info":"每当其他敌方角色回复体力时，你可以失去1点体力终止其回复,当你的体力值小于3或更少则弃置全部手牌回复全部体力",
            "决意2":"决意",
            "决意2_info":"",
            "宣武":"宣武",
            "宣武_info":"单刀赴会的回合开始时，你令其摸3张牌然后你获得装备青龙偃月刀",
            "沧海2":"沧海",
            "沧海2_info":"",
            "游龙":"游龙",
            "游龙_info":"每当你使用或打出一张杀或闪，可以立即弃置一张牌随机获得下列效果中随机一个,1.增加2点护甲2.回复1点体力3.摸2张牌",
            "空琴":"空琴",
            "空琴_info":"摸牌时你额外摸一张牌,弃牌阶段,若你的手牌大于你的体力值则你可以跳过弃牌阶段然后你流失1点体力",
            "敌疑":"敌疑",
            "敌疑_info":"每当一名其他角色使用一张牌，你可以进行一次判定，若结果为红色，你回复1点体力",
            "行阵":"行阵",
            "行阵_info":"蜀国武将无法对你造成伤害,当你使用杀造成伤害时若你装备区里有武器牌则此伤害翻倍",
            "成竹":"成竹",
            "成竹_info":"限定技，当你首次进入濒死状态时，你将体力值回复至体力上限并减少3点体力上限，并获得技能\"战火\"",
            "战火":"战火",
            "战火_info":"每名角色受到伤害后,你获得一枚'战火'标记,出牌阶段限一次,若你的'战火'标记大于或等于5,你可以弃置5枚标记,视为对全体造成2点火焰伤害然后你失去1点体力,回合结束阶段,若你的'战火'标记不小于4,则你可以弃置4枚标记,增加1点体力上限并回复1点体力",
            "伏阵":"伏阵",
            "伏阵_info":"每当一名角色于弃牌阶段弃牌大于3时,你进行1个额外回合；每当一名其他角色摸牌后,若其的手牌大于你,则你可以摸2张牌；每当一名角色回复体力时,若你的体力小于其则你回复1点体力,你无法被拼点",
            "华秋":"华秋",
            "华秋_info":"你的黑色牌可以当杀使用或打出,你的红色牌可以当闪使用或打出,当你受到伤害时若伤害来源是男性,则50%取消本次伤害",
            "果敢":"果敢",
            "果敢_info":"你造成伤害后，若你已受伤则你可以增加1点体力上限,每当一名角色于回合外失去牌时,你可以摸一张牌",
            "答书":"答书",
            "答书_info":"其他人的回合开始时，若你已受伤，你可以将你的手牌弃置到1张(以此法弃置的牌至少1张)，然后该名角色本回合无法使用或打出卡牌且手牌上限为1",
            "答书2":"答书",
            "答书2_info":"",
            "至臻":"至臻",
            "至臻_info":"当你成为其他角色使用牌的目标时,50%你流失1点体力,增加1点体力上限,并取消本次效果",
            "军御":"军御",
            "军御_info":"每当你获得一张点数不大于你体力值的牌,你可以回复1点体力",
            "逆天":"逆天",
            "逆天_info":"锁定技，在你的判定牌生效前，你观看牌堆顶的5张牌并选择一张作为判定结果，此结果不可更改,你造成的伤害均改为神圣伤害",
            "御虎":"御虎",
            "御虎_info":"出牌阶段，你可以与一名体力不等于你的角色拼点，若你赢，则该角色对其攻击范围内另一名由你指定的角色造成1点伤害。若你没赢，他/她对你造成一点伤害。每回合限用3次。",
            "虎跃":"虎跃",
            "虎跃_info":"当你使用杀被闪抵消时,你可以对其造成1点火焰伤害,你免疫受到的属性伤害,改为增加1点护甲",
            "凤狱":"凤狱",
            "凤狱_info":"你受到的火焰伤害+1，,回合结束开始阶段,自动进入连环状态,当你的体力为2或小于2时,你摸3张牌将体力值回复至体力上限",
            "凤鸣":"凤鸣",
            "凤鸣_info":"你的回合开始，你随机令1名角色进入连环状态;你每受到1次伤害,随机令一名角色进入连环状态,你回复体力时若你的体力值大于或等于3则你可以对自身造成1点火焰伤害",
            "炎神":"炎神",
            "炎神_info":"你免疫火焰伤害，你无法被翻面,你造成伤害后灵随机一名角色受到2点神圣火焰伤害,然后你随机获得每种花色的牌各一张",
            "麟才":"麟才",
            "麟才_info":"你的回合开始时,你可以弃置1张基本牌摸2张锦囊牌;你的回合结束时,你可以弃置1张锦囊牌摸2张基本牌;你回复体力后50%获得一张装备牌,",
            "罡星":"罡星",
            "罡星_info":"你免疫大于等于3的伤害，当你濒死时若你有手牌你弃置全部手牌,摸m张牌然后你回复X点体力并失去1点体力上限(X=你当前的手牌数;m=你当前的体力上限)你每次使用酒后失去1点体力上限",
            "傲睨":"傲睨",
            "傲睨_info":"你免疫翻面状态，你对体力小于你的目标造成的伤害+1，你的回合开始时若你已受伤，你回复1点体力",
            "讨羌":"讨羌",
            "讨羌_info":"当你的体力小于等于3时,你造成和受到+1;当你一次性获得2张或以上的牌时你回复1点体力全体友方摸一张牌",
            "济民":"济民",
            "济民_info":"每当一名其他角色回合结束时,若你没有受伤则可以弃置1张牌流失1点体力令其回复2点体力,锁定效果:你的回合开始你回复X点体力(X=你当前的手牌数)",
            "蛮王":"蛮王",
            "蛮王_info":"你不能成为南蛮入侵的目标,全场其他角色受到伤害的来源皆为你,你造成伤害后摸一张牌,若其他角色使用的【南蛮入侵】在结算完时进入弃牌堆，你立即获得它",
            "复燃":"复燃",
            "复燃_info":"当你于濒死时回复体力时回复效果+3;你的回合开始时若你已受伤,你摸X张牌回复X点体力(X=你当前损失的体力)你受到属性伤害后失去1点体力上限",
            "闺秀":"闺秀",
            "闺秀_info":"每当你成为杀的目标，若你的手牌数小于体力值，可以摸一张牌，每当你回复体力时,若你的手牌小于你的体力值,你令全场友方回复1点体力",
            "存嗣":"存嗣",
            "存嗣_info":"限定技，出牌阶段，你可以将所有手牌交给一名男性角色，令该角色恢复3点体力，然后你获得技能勇决并翻面",
            "勇决":"勇决",
            "勇决_info":"每当其他角色于回合内使用一张杀，若目标不是你，你可以回复1点体力摸一张牌",
            "龙行":"龙行",
            "龙行_info":"每当有武将死亡时，你立刻进行一个额外回合并摸3张牌回复全部体力，每当你的回合开始若你已受伤你可以失去1点体力上限获得以下其中1项技能:<li>龙锋:其他角色回合结束你进行一个额外回合流失1点体力</li><li>斩棘:当友方角色受到伤害后,若伤害来源不为你则你可以令伤害来源失去2点体力</li><li>崇义:当你即将造成伤害时,你可以取消本次伤害弃置其4张牌</li>",
            "龙锋":"龙锋",
            "龙锋_info":"其他角色回合结束时，你进行一个额外回合并流失1点体力",
            "斩棘":"斩棘",
            "斩棘_info":"当友方角色受到伤害后，若伤害来源不为你,则你可以令伤害来源失去2点体力",
            "崇义":"崇义",
            "崇义_info":"当你即将造成伤害时,你可以取消本次伤害弃置其4张牌",
            "玄武":"玄武",
            "玄武_info":"当你的出牌阶段开始时,你跳过摸3张牌,每当你成为其他角色使用牌的目标时，你回复1点体力",
            "磐石":"磐石",
            "磐石_info":"其他魏国武将受到伤害时,你可以令其免疫本次伤害然后你受到2点体力流失伤害,你每获得一张牌50%回复1点体力",
            "粮道":"粮道",
            "粮道_info":"每当一名角色失去最后一张手牌时,你摸2张牌,回复1点体力,蜀国武将摸牌+1",
            "持傲":"持傲",
            "持傲_info":"你受到的火焰伤害+1,每当你使用一张基本牌你可以摸一张牌",
            "穿杨":"穿杨",
            "穿杨_info":"你的回合开始和结束你可以弃一张牌,视为打出一张无视距离的杀,你每使用一张杀造成伤害后可以摸一张杀，视为使用一张杀,每当友方角色回复体力后都会使你摸一张牌,你使用杀造成的伤害+1",
            "粮尽":"粮尽",
            "粮尽_info":"敌方武将摸牌前摸牌数-2,敌方武将回复体力时回复数-1,敌方武将手牌上限-1",
            "擒敌":"擒敌",
            "擒敌_info":"每当你的牌因弃置而进入弃牌时，若此牌为红色则你可以将之视为 【乐不思蜀】并置于一名其他角色的判定区里,若此牌为黑色则你可以将之视为 【兵粮寸断】并置于一名其他角色的判定区里,你的摸牌数量+2",
            "双勇":"双勇",
            "双勇_info":"当一名角色有回合被跳过时,若其跳过的是摸牌阶段你令其失去1点体力上限,若其跳过的是出牌阶段,则你令其流失2点体力且你回复1点体力,若你的出牌阶段被跳过，你跳过本回合的弃牌阶段；若你的摸牌阶段被跳过，结束阶段开始时，你摸三张牌",
            "戟魂":"戟魂",
            "戟魂_info":"每当你失去装备区里的一张牌,你随机装备一张装备牌,每当有其他角色使用装备牌后,你摸两张牌",
            "决死":"决死",
            "决死_info":"摸牌阶段,你多模X张牌,本回合你可以额外打出X张杀且你的进攻距离+3(X=你损失的体力)",
            "急锋":"急锋",
            "急锋_info":"1.当你受到1点伤害后，你可以先摸一张牌并将一张牌置于武将牌上，称为“锋”。2.准备阶段开始时，若你的武将牌上有“锋”，你移去所有“锋”，摸2X张牌，然后你于此回合的出牌阶段内使用【杀】的次数上限和造成的伤害+X且每用杀造成伤害会回复1点体力（X为你此次移去的“锋”数）",
            "铁銿":"铁銿",
            "铁銿_info":"每当你在回合外失去,使用或打出一张牌时,你增加1点护甲,你的回合开始时你回复X点体力(X=你当前的护甲数量)",
            "乾坤":"乾坤",
            "乾坤_info":"当你造成伤害时,你可以选择以下一项:1.令本次伤害+Z 2.摸Z张牌(Z=你手中红色牌的数量);当你受到伤害时你可以选择以下一项:1.令本次伤害-X 2.令目标受到X点伤害(X=你手中的黑色牌)",
            "御卫":"御卫",
            "御卫_info":"每当你回复一点体力后你摸一张牌,当你于弃牌阶段弃置了至少2张及其以上的牌时，你增加X点护甲然后可以选择至多x名角色令他们各摸x张牌(x为你弃牌阶段弃置的张数)",
            "速清":"速清",
            "速清_info":"你使用杀造成伤害后你摸一张牌并令其翻面,你使用杀无距离和数量限制",
            "讨敌":"讨敌",
            "讨敌_info":"每当敌方武将受伤后,你摸一张牌回复1点体力,你使用杀不可被闪抵消",
            "兴国":"兴国",
            "兴国_info":"你不会进入混乱状态,除你以外一名蜀势力角色的摸牌阶段结束后，你复制他所有手牌的镜像",
            "怨火":"怨火",
            "怨火_info":"当你受到伤害后,你增加1枚'怨火'标记并摸一张牌,然后令伤害来源流失2点体力随机弃置一张牌;当友方角色受伤后,你进行一次判定,若为红色其回复1点体力,若为黑色则伤害来源流失1点体力",
            "惑予":"惑予",
            "惑予_info":"出牌阶段限一次，你可以将一张红桃手牌交给一名其他角色，获得该角色的一张牌，然后交给除该角色外的一名其他角色,然后你本回合造成的伤害+X并回复X点体力(X=你拥有红色牌的数量),当你获得其他角色的牌时,你失去一枚'怨火'标记令其回复1点体力并与其一起摸2张牌",
            "狂狮":"狂狮",
            "狂狮_info":"每当一名角色濒死结算完毕后，若其存活，视为你对其使用一张【杀】，出牌阶段限1次，若你已受伤，你可以选择至多x名角色令其无法打出或使用卡牌直到下个你的回合(x为你已损失的体力值)，你没有判定阶段且除你以外的角色不能回复体力、得到体力上限",
            "继魄":"继魄",
            "继魄_info":"你造成伤害后摸一张牌,你受到的伤害均没有来源，使用的卡牌次数无限制且无距离限制,回合结束后,若你本回合造成的伤害大于或等于3,则你获得技能承魂,龙武,虎战",
            "承魂":"承魂",
            "承魂_info":"你造成的伤害均视为神圣伤害且伤害+2,每当你使用或打出1张红色牌时，令有手牌的其他角色各流失1点体力,然后你回复1点体力，每当你使用或打出1张黑色牌时，若场上除你以外至少1人有牌，你依次获得他们的1张手牌或者装备区的牌",
            "龙武":"龙武",
            "龙武_info":"你可以将一张红色牌当[杀]使用或打出,你使用杀不可被闪抵消,你不会受到延迟类锦囊影响",
            "虎战":"虎战",
            "虎战_info":"你可以将黑色牌当闪使用或打出,你免疫受到的属性伤害改为获得一张装备牌,且你使用杀无数量限制",
            "擎龙":"擎龙",
            "擎龙_info":"其他敌方角色的判定阶段开始前，需先进行一次额外的兵粮寸断判定。你使用红色的【杀】时可额外指定一个目标,你使用黑色的【杀】时无距离限制",
            "文德":"文德",
            "文德_info":"当你首次进入濒死阶段时,若你的手牌小于你的体力值则你增加副将'魏王称帝'并回复2点体力",
            "颛命":"颛命",
            "颛命_info":"你可以获得场上魏势力角色的判定牌,1名除你以外的角色回合开始时，若其不再你的攻击范围内，你可以弃置1张黑桃牌并令其选择：1、交给你1张红桃牌，2、受到没有来源的1点伤害；1名除你以外的角色回合结束时，若其在你攻击范围内，你可以弃置1张梅花牌并令其选择：1、交给你1张方片牌，2、受到没有来源的1点伤害",
            "裨阙":"裨阙",
            "裨阙_info":"出牌阶段结束时，你可以令手牌数不等于体力值的一名角色弃置一张手牌或摸二张牌。然后若其手牌数等于体力值,你摸二张牌回复1点体力,且可以交给该角色一张牌;当你成为地方角色使用牌的目标时,其需要弃置一张牌否则此牌对你无效;你始终跳过判定阶段",
            "仪务":"仪务",
            "仪务_info":"当你成为一张普通锦囊牌的目标时（借刀杀人等带有指向目标的锦囊除外），你可以为此牌增加一个目标或减少一个目标（目标数至少为一）,你无法成为黑色锦囊牌的目标",
            "蛮神":"蛮神",
            "蛮神_info":"每当你使用南蛮入侵造成伤害后,你获得一枚'蛮'标记,当你受到伤害后你失去一枚‘蛮’标记,你的手牌上限+x,出牌阶段你可以额外使用打出x张杀(x='蛮'标记的数量)",
            "万象":"万象",
            "万象_info":"出牌阶段,你可以将一张点数不大于你体力值的牌当作南蛮入侵打出,回合结束你可以摸x张牌(x=‘蛮’标记的数量)",
            "绝地":"绝地",
            "绝地_info":"你受到伤害后流失1点体力;你的回合开始时若你已受伤,你回复1点体力将手牌补至与你当前的体力相等",
            "连绵":"连绵",
            "连绵_info":"回合结束阶段开始时，你可以把牌堆顶的一张牌置于你的武将牌上，称为【绵】。直到你的下个回合开始时，将之置入弃牌堆。当你的武将牌上有牌时，你不能成为与【绵】颜色相同牌的目标,当你成为红色牌的目标时,你摸一张牌回复1点体力",
            "宴邀":"宴邀",
            "宴邀_info":"任意1名角色的回合结束，若你手中无锦囊牌，你列出所有锦囊牌并从中获取两张,出牌阶段限一次，你发动的非延时锦囊发动后，你可以再丢弃一张非基本牌，使其再发动一次(无懈可击不可连续发动)",
            "玲华":"玲华",
            "玲华_info":"回合开始阶段,若你的手牌数小于体力值则你摸X张牌,若大于体力值则回复X点体力(X=你手牌数/体力与体力/手牌数的差),出牌阶段开始时你进行一次判定,若结果为红色则你获得技能'集智'直到回合结束,若为黑色则你获得技能'祈禳'直到回合结束",
            "仙升":"仙升",
            "仙升_info":"你可以无限装备装备牌,你的手牌上限+y(y=你的手牌数),你使用或打出的锦囊牌不可被无懈可击响应,你使用的锦囊牌无距离限制",
            "智鉴":"智鉴",
            "智鉴_info":"出牌阶段限一次，若你的手牌数不大于你的体力上限，则你可以回复1点体力并展示你的手牌，观看牌堆顶相同数量的牌并以任意方式交换之,然后直到回合结束,你每使用或打出一张锦囊牌全场友方回复1点体力并摸一张牌;你的手牌上限+2且你不能成为其他角色使用锦囊牌的目标",
            "悭俭":"悭俭",
            "悭俭_info":"其他友方角色的结束阶段开始时，若你的手牌数与其不等，则你摸一张牌令其友方下次摸牌+1,当你受到伤害后,若你拥有手牌,则你选择一项1.你回复1点体力伤害来源弃置一张牌并翻面，2.你摸x张牌,令伤害来源受到x点伤害(x=你装备区里的装备数量)",
            "协盟":"协盟",
            "协盟_info":"出牌阶段限一次,你使用【杀】指定一名其他角色时，若你与他均有手牌，那么你们二者拼点，若你赢，此【杀】不可被【闪】响应，并且你回复一点体力弃置其一张牌。若你输，此【杀】无效且你摸2张牌回复1点体力",
            "授印":"授印",
            "授印_info":"回合结束阶段，你展示牌堆顶的一张牌，若为红桃花色，你获得该牌并流失一点体力；若非红桃花色，你将手牌补至体力上限然后指定一名角色，在你下个回合开始前，防止其受到除了因红桃花色的牌造成的伤害之外的伤害。(你不能连续授印一人),你的梅花牌皆视为红桃牌",
            "自援":"自援",
            "自援_info":"出牌阶段，若你已受伤且有黑色手牌，你可以指定一名角色，展示你的手牌后再展示其手牌后，获得其区域内所有红色的牌并回复2点体力，然后你须将你所有黑色的手牌给该角色(每回合限1次)",
            "授书":"授书",
            "授书_info":"当你于回合内使用的牌置入弃牌堆后，你可以将之交给一名其他角色（相同牌名的牌每回合限一次）;摸牌阶段你可以放弃摸牌，改为从牌堆顶亮出两张牌，若两张牌均为红色，则你再摸1张牌；若你于弃牌阶段弃掉了红色的手牌，你在你的弃牌阶段结束时可回复x点体力并摸x张牌(x=你损失的体力值)",
            "合阔":"合阔",
            "合阔_info":"当你成为一张指定了多个目标的锦囊牌的目标时，你可以取消之,并摸一张牌,你使用或打出的锦囊牌不可被无懈可击响应,当你回复体力后,你视为使用一张基本锦囊",
            "绝解":"绝解",
            "绝解_info":"你使用锦囊牌所造成的伤害+1且回复自身1点体力摸一张牌,回合结束阶段,当你弃置了至少2张牌,你获得1张随机锦囊牌且增加自身1点体力上限",
            "蜀魂":"蜀魂",
            "蜀魂_info":"回合开始时,若你的武曲标记不少于4 ，则你可以移去所有“武曲”标记，随机观看7名未登场的蜀势力角色，将武将牌替换为其中一名角色，并将体力上限数调整为本局游戏中移去“武曲”标记的数量（至多为游戏开始时的角色数）,当一名友方角色受到伤害后你重新变回含泪桃花",
            "武曲":"武曲",
            "武曲_info":"当你造成伤害,回复体力后后，你获得1个“武曲”标记；你可以移去1个“武曲”标记来发动“龙胆”并摸一张牌回复1点体力,弃牌阶段开始时,若你的武曲数量大于2则你跳过弃牌阶段并摸3张牌",
            "煌天":"煌天",
            "煌天_info":"(每回合限1次)每当一名敌方角色失去牌,流失体力,失去体力上限,受伤后,全体友方回复1点体力摸一张牌增加1点护甲,你受到的伤害-X（X=当前武曲标记的数量）",
            "智囊":"智囊",
            "智囊_info":"每当你使用锦囊牌后你随机装备一张装备牌,当你使用装备牌后你随机获得一张锦囊牌;你可以无限装备装备牌,你使用的锦囊牌额外执行一效果",
            "斩首":"斩首",
            "斩首_info":"当你使用杀即将对目标造成伤害前,本次伤害附加x点(x=其损失的体力),当你受到杀的伤害后你与其一起失去1点体力上限并对其造成1点真实伤害,且你使用杀没有次数限制",
            "豪野":"豪野",
            "豪野_info":"你免疫翻面效果,你受到物理伤害后你增加1点体力上限并恢复1点体力,你使用基本牌额外执行一次效果",
            "蛮酋":"蛮酋",
            "蛮酋_info":"你造成的伤害+2,全体友方造成伤害后恢复等量血量,其他武将使用装备牌后,你获得该装备牌的效果1回合",
            "天法":"天法",
            "天法_info":"当一名角色于弃牌阶段弃牌后,你令其受到1点伤害,你的回合开始时你弃置全场敌方武将的装备牌",
            "刑策":"刑策",
            "刑策_info":"友方角色受伤后你令其回复1点体力(每回合限一次),当敌方角色受伤后若其有手牌,你令其弃置一张牌,你的回合结束后若你已受伤你增加1点护甲",
            "智魏":"智魏",
            "智魏_info":"友方角色始终跳过弃牌阶段且使用基本牌会摸一张牌,使用锦囊牌会回复1点体力,使用装备牌会增加1点护甲",
            "伏龙":"伏龙",
            "伏龙_info":"当一名敌方角色进入濒死状态时,你进行一次判定,若为黑色则令其失去装备区",
            "越鸿":"越鸿",
            "越鸿_info":"当你成为其他角色使用红色牌的目标后,你令其摸一张牌全场友方武将回复1点体力,友方武将判定区内的判定效果翻转",
            "幕诏":"幕诏",
            "幕诏_info":"当你受到魏国武将的伤害后,你随机获得其一项技能直到回合结束,当你翻面后,你增加1点护甲(每回合限1次)",
            "英逝":"英逝",
            "英逝_info":"当你受到伤害或体力流失后你可以进行一次判定,若此牌点数为奇数则你摸X张牌,若为偶数则你回复X点体力(X=此牌的点数);当你回复体力后你可以进行一次判定,若此牌点数大于你的体力上限则你增加1点体力上限,若小于则你增加此牌点数的护甲",
            "忠擎":"忠擎",
            "忠擎_info":"你受到的伤害始终为1,当其他友方回复体力/受到伤害,你同样受到伤害",
            "明谏":"明谏",
            "明谏_info":"你可以获得其他魏势力角色的判定结果的牌,你始终跳过判定阶段",
            "千秋":"千秋",
            "千秋_info":"当你于回合外失去手牌时，若你的手牌数小于1，那么你可以摸取x张牌（x为你当前体力值加一）并且对一名其他角色造成一点伤害",
            "骁驭":"骁驭",
            "骁驭_info":"每当你使用一张【杀】时，可以指定一名其他角色，令之弃置一张牌，每当你被【杀】指定为目标时，若你与使用者均有手牌，你们进行拼点，若你赢，目标弃置所有手牌并令本次伤害+2，若你输，则你失去1点体力上限摸一张牌",
            "镇魂":"镇魂",
            "镇魂_info":"敌方角色无法发动回复阶段",
			},
		},'<span>一统江山</span>');
	};
	if(lib.config.mode=='wangzhezhizhan'?lib.config['extension_扩展ol_wzzz_Fe_disable']!=true:lib.config['extension_扩展ol_wzzz_Fe_enable']!=false){
		lib.element.player.isFe_c=function(){
			if(lib.config['extension_扩展ol_wzzz_Fe_gSkill_disable']==true) return true;
			if(lib.character[this.name]==undefined) return false;
			if(lib.character[this.name][4].contains('Fe')) return true;
			return false;
		};
		var character={
			Fe_lansiluote:["male","Saber",7,["Fe湖之骑士","Fe最强圆桌","Fe骑士宣言","Fe缚锁全断・过重湖光"],["des:兰斯洛特是圆桌骑士之一， 也是被歌颂为最伟大的骑士的英雄。 虽然处于亚瑟王手下，但因和格尼维尔 陷入了不适宜的恋爱而和王绝交。 身高／体重：191cm・81kg 出典：亚瑟王传奇 地域：英国 属性：秩序・善 性别：男性 是兰斯洛特本来的职阶。 这是伟大的骑士兰斯洛特以最接近原本状态即以职阶・Saber被召唤出来时的状态。他热爱正义，尊敬女性，憎恶邪恶，清廉而又洋溢着浪漫的身姿，被亚瑟王评价为「理想的骑士」。\t 不会有什么永远的理想，兰斯洛特正是亚瑟王传奇迎来黄昏的根本原因。他希望能以处罚自己的方法让王理解人类的极限，但并没有成功。 的确，兰斯洛特最适宜以Saber职阶召唤而来。 但兰斯洛特本人恐怕比任何人都要觉得自身为Saber是一件讥讽的事吧。高洁的骑士什么的可真逗笑。那可是支持了不列颠灭亡的自己！ 因此兰斯洛特很确信。最适合自己的职阶应当是Berserker。 『缚锁全断·过重湖光』 等级：A++  种类：对军宝具 Aroundight Overload。 对平如镜的湖光施加过度负荷，使深藏其中的魔力溢出，转用为攻击。 本来应当是蓄意不放出作为光之斩击的魔力， 更加贴近在砍中对方时解放出来的剑技。 庞大的魔力由湖面溢出，被称其蓝色光芒正如湖水一般。"]],
			Fe_lansiluote2:["male","Berserker",6,["Fe狂化","Fe圆桌信仰","Fe无穷之武炼","Fe骑士不死于徒手","Fe无毁的湖光"],["des:被讴歌为圆桌骑士中最强者的“湖之骑士”.与王妃桂妮薇儿的不伦之恋将卡美洛引向了破灭，确实是象征着亚瑟王传说的败北的人物。 身高/体重：191cm・81kg 出典：亚瑟王传说 地域：英国 属性：秩序・狂　　性別：男性 身为最强骑士的缘故，其过错也更加沉重。 幼时父母双亡，由湖之妖精妮妙养育长大，因此得到了“湖之骑士”的异名。 成年后渡海来到不列颠岛，经历了与亚瑟王的相遇，继承了圆桌骑士之名。 其武勇与骑士道精神同其他普通人不能相提并论。 对王妃桂妮薇儿的感情而献出生命，是他的骑士道所导致的必然结果。若不是对王的背叛加快了他走向毁灭的速度，说不定还能得到救赎。但却正是因他的武勇天下无双，才致使事态发展到最坏的结局。 “骑士不死于徒手” 等级：A 种类：对人宝具 Knight of Honor。 将入手的物品赋予“自己的宝具”的属性的宝具能力。无论是什么武器、什么样的兵器都变为相当于D等级的拟似宝具。 无穷的武练：A+ 在某个时代号称无双的武艺洗练，使心技体的完全合一，即使在任何精神性制约的影响下也能发挥万全的战斗能力。\t 因为在接受了太多荣耀的同时死在了悔恨之中，这位骑士的执念——尤其是对王与王妃的绝对不会有答案的爱憎之念，使他一直被无尽的狂气囚禁着。追求着只有一次也好、只求能将这苦恼沉静的邂逅，黑色的骑士不断战斗着。"]],
			Fe_zhende:["female","Ruler",7,["Fe启示录","Fe神明裁决","Fe红莲圣女","Fe吾神在此"],["des:主呀，委以此身————\t 身高/体重：159cm・44kg 出典：史实 地域：法国 属性：秩序・善　　性別：女性 少数特殊职阶，Ruler的一人。 世界上最有名的圣女。从17岁时从故乡发迹至19岁时被处以火刑，仅仅用这两年时间就名垂青史。拯救了法国的圣女，在成功地完成了堪称为奇迹的快速反攻后，因被诬陷迎来了悲剧般的结局。 贞德在被抓捕之后仍不断地创造奇迹。据传这位除了《圣经》上的几句祈祷外什么都不知道的农家女，也毫不退让地与一流的神学家进行了随机应变的辩论，因此把她作为异端者的处刑也一度变得十分困难。 还有这样的传说——“像贞德这样的魔女的话，我是很乐意给她点火的，”如此扬言的士兵在她被烧死之后，看到了飞去的白鸽，才意识到自己杀了真正的圣女并为此感到深深的后悔。 “红莲之圣女” 等级：C或EX 种类：特攻宝具 以“主呀，委以此身――”这句临终诗发动的概念结晶武装。固有结界的亚种，将心象世界结晶化而成的剑。\t 只要是为人正直的master…不、就算不是正直的master，贞德也绝不会抛弃他，而是为他奋斗。但是意外的有着斯巴达式的思考方式，所以master会受到她严厉的教育吧！"]],
			Fe_zhende2:["female","Avenger",8,["Fe自我改造","Fe咆哮吧,吾之愤怒","Fe泡沫般的梦幻"],["des:———倘若神存在的话， 想必会对我降下天罚吧——— 身高/体重:159cm・44kg 出典：史实 地域：法国 属性：混沌・恶　　　性别：女性 是少数的特殊职阶，Avenger之一。  虽然被称呼为Alter，但 并不能说她是贞德的另一面。 而是叹惋贞德之死的法军元帅， 吉尔・德・雷利用圣杯虚构出的，复仇的贞德。 作为与原本的贞德完全相反的英灵， 以Avenger职阶现界。 羁绊故事·三\t 原本的贞德并不是英雄而是圣女，因此绝无“以另一面召唤”的可能性。 这位黑色圣女是其根本性部分将吉尔・德・雷的愤怒……偏见以及希望会如此的愿望……混入其中，从而造就出的原本不该出现的“另一面”。 向法国复仇的龙之魔女。 （法国贵族）旁若无人地夸耀着所谓的正义，人们却对此深信不疑——被对人们的愤怒所驱使的圣女才是，吉尔・德・雷所盼望的她的姿态。 龙之魔女：EX 因吉尔的愿望而被创造的她，生来就有驯服龙的能力。被认为是圣女玛尔达，抑或是圣人圣乔治等有着将龙种退散这类逸话的圣人的反转现象。 拥有使龙顺从的特殊领导力，以及提升队伍攻击力的能力。『咆哮吧，我的愤怒』 等级：A+　种类：对军宝具 La Grondement Du Haine。 作为龙之魔女降临的贞德所持的诅咒之旗。 以复仇者的名号，将自身和周围的怨念进行魔力变换并焚烧，对手的不正、污浊乃至自私都会被焚烧殆尽直到骨髓。好可怕。 最终故事\t 各种各样的事情堆叠在一起，使本是架空存在的她作为黑色圣女响应召唤成为了可能。 对待Master通常是一副尖酸刻薄的态度，但因为她的基础——圣女贞德相当忠厚的缘故，还是能感觉到她内心对Master的敬爱的。 没有少女的爱好，不过好像有少女的愿望。 “深层意识中还是想要被自己中意的美男子们包围，在这个枯燥的复仇生涯里！”同为Avenger职阶的一位Servant如此评价道."]],
			Fe_modeleide:["female","Saber",8,["Fe叛逆骑士","Fe向端丽的父王发起叛逆","Fe隐贞之盔","Fe灿然辉耀的王剑"],["des: 莫德雷德身为圆桌骑士之一，是亚瑟王的嫡子。同时也为传说画上了休止符——在卡姆兰之丘，作为叛逆骑士，给予亚瑟王最后一击。\t 身高/体重：154cm・42kg 出典：亚瑟王传说 地域：英国 属性：混沌・中庸  性别：女性 与阿尔托莉雅体型完全一样。 莫德雷德是由既是亚瑟王的姐姐，又是其宿敌的魔女摩根的奸计而生出的人工生命——人造人（Homunculus）的一种。 为了讨伐亚瑟，并成为超越亚瑟的王，莫德雷德诞生了。 由于莫德雷德是人造人，其成长速度极快，出生后数年便已作为骑士侍奉亚瑟王了。另外，由于其在能力上仿制了亚瑟王，不久她就作为骑士崭露头角。 与摩根的意愿相悖，莫德雷德憧憬父亲，希望被父亲认可，然而这随着亚瑟王的拒绝发生了转变。为了践踏父亲的伟业，她开始“研磨毒牙”。原本形势已然达到极限的不列颠，随着这两人的激烈冲突而崩坏了。 作为人造人出生，一切都如同疾风经过一般，她的寿命非常短暂。因此，也许她非常希望得到认可吧，从她那为之奉献一生的父亲那里。然而，莫德雷德也同样没能做到去揣度亚瑟的苦恼。\t 对待莫德雷德的方法很简单。不说亚瑟王的坏话；不称赞亚瑟王；不要把她作为女性对待；也不要露骨地把她当做男性对待；不要过于死板严格；不为其他Servant神魂颠倒；认真听取她的意见。简单吧？"]],
			Fe_modeleide2:["female","Rider",7,["Fe冲浪","Fe无尽的假日","Fe竞技空翻","Fe制压汹涌波涛的王者心情"],["des:夏天啦！海边啦！冲浪的来啦！ 呀嘿哦哦哦哦哦哦哦哦哦哦哦哦哦哦哦哦！ 因为所以爆炸诞生的超级无敌冲浪手 莫德雷德比基尼款。 略称冲小莫，源自冲浪手小莫。 这次因为作为Rider而不是作为Saber召唤而来，因此没把Clarent带来。别说那剑，连铠甲和头盔都没带来。 身高／体重：154cm・42kg 出典：亚瑟王传奇 地域：英国 属性：混沌・善 性别：女性 这次因为心情愉快，比平时更极致地发挥着老好人范儿。 冲浪手小莫因为是在夏天，兴致一直高到飞起。据说和父亲的不和也好自己的存在理由也好那些玩意先暂且搁一边，现在只想尽情地享受夏天的大海。 『制压汹涌波涛的王者心情！』 等级：Ａ 种类：对波宝具 范围：1～5 最大捕捉：10人 Prydwen TubeRiding。 由Prydwen来甩出被誉为冲浪技巧中最高难易度的Tube Riding（在海浪之间穿越而过的那个）。 据说耍着这个的期间正是支配碧海的大王心情还是怎么的。 冲浪手小莫比以往更突出表现出对Master的好感和撒娇。看起来似乎是因为夏天的炎热兴致高到飞起，平时的不好相处不知道被卖到了什么地方。\t 被召唤的时候为追求能够承受自己力量的冲浪板，决定厚脸皮地从父上的宝物库偷……永远地借过来。其名为「Prydwen」。根据传奇，据说是又能当船又能当盾的神奇道具。亚瑟王有言，谁让你当冲浪板用了。\t 虽说冲浪小莫在夏季精力充沛、到了秋季就会消沉、到了冬季精神就颓靡到最低点了。因此，姑且Master无论是秋季还是冬季都试着耐心去跟她交往吧。不久之后她肯定也会察觉到的。通往夏天的门扉什么的，很快就会出现在身边。"]],
			Fe_mizhinvzhu:["female","Assassin",7,["Fe支援炮击","Fe银河流星剑","Fe无铭胜利剑","FeSaber之星"],["des:被称为Servant Universe的 从谜之时空来访的陌生人物。 自称为Saber职阶的最强版， 作为骑士却堂堂正正地出手偷袭的 对Saber用决战兵器。 行动代号A-X。\t 身高/体重：154cm・42kg 出典：2013年的愚人节 地域：Servant界 属性：混沌・善　　　性別：女性 使用着谜之魔剑“无铭胜利剑”杀尽敌人。 “阿尔托莉雅种是宇宙的癌症之类的东西。 必须由谁来铲除。 由谁来呢？” 只留下苦涩满满的表情，女主角X离开了故乡。爱机Dun Stallion II号今日也驰骋在星海中。\t 她身着不像是从者的粗糙且轻便的服装。蓝围巾是勇气的标记，帽子是为了隐藏其本来面目以及呆毛。伸出来了伸出来了完全伸出来了啊。 作为对Saber决战兵器，为了一心一意将Saber们打倒而处于“我将赌上这柄圣剑”的修罗模式，只对Saber Lily敞开心扉。 在来到这里之前曾经拯救过古代王朝的危机解决过人类统合组织的内乱驱散过来自其他宇宙的侵略者，这样的事对她来说不过是像早饭前的甜点一样。无关紧要的事，所以就不记得了。 直到真的达成悲愿为止，今天她仍继续挥舞着无铭胜利剑。还有黄金大帝-宇宙・吉尔伽美斯无论如何都要亲手斩杀。 虽说谁都没有言明， 其本来面目正是阿尔托莉雅・潘德拉贡。 完美的便装任谁都能骗过去，她如此认为着， 因此对于NETA希望你无论如何都要保持沉默。 这也是为了她本人的名誉……！"]],
			Fe_mizhinvzhu2:["female","Berserker",7,["Fe不可见的王之手","Fe∞黑豆沙","Fe黑龙双克胜利剑","Fe刹那无影剑"],["des: 自『Servant Universe（从者宇宙）』来访的 举目无亲的角色（反派）。 也就是世间罕见的文学系『Berserker』。 激起了魔力转化炉『Ortho Reactor』 誓要打倒迷之女主角X的 对·对『Saber』用的决战兵器。 已经不明所以了、吗？ ———放弃思考。用心感受。\t 没落的骑士潘德拉贡卿 身高/体重：154cm·42kg 出典：2017年情人节活动 地域：『Servant』界 属性：中立·恶 性别：女性 引以为傲的『邪圣剑NecroCalibur』 是从可疑的网购上购买的。\t 「战斗吧！直到击败女主角X， 将宇宙染为反派般暗色的那天为止。」 Voroido“K6-X4”， 通称为“黑骑士君”的它一直在暗处守护着立下誓言的她。 也可以说它是在躲起来偷懒。\t 态度认真而谨慎的少女。 喜欢吃甜食。一有空当便会去需求高级日式点心， 在饿肚子时意外的费钱。 假期里，她会窝在黑色的圆桌型被炉里一步不出， 就在读书或听音乐中度过。 基本是一副慵懒又怕麻烦的样子。 从他人来下达的命令或指示中挑刺同时 也还会老实遵从这点很感到不可思议。 很容易被甜食钓上钩。\t 魔力转化炉『Ortho Reactor』， 是以藏在体内的『Organium』结晶为媒介，将卡路里转化为魔力。 她强调着「和三盆糖的成分均衡能提供最大效率。同样，喝茶也是必要的」 眼镜是让强化后的视神经得到休息的必需道具。 戴眼镜的时候反而视力会下降。 她所持的迷之道具「∞（无穷大）黑豆沙」 是由欲望『灵魂（Soul）』，糖分『能量（Power）』，售卖点『空间（Space）』， 成本『现实（Reality）』，制作『时间（Time）』，需求『精神（Mind）』 这六种原始力量制作而成。 道具会赋予持有者无穷的力量， 而这一点X·Alter也不清楚大致。 已遭毁灭而消失的暗黑骑士团 『Dark·Rounds』与其相关的最后幸存者。 被赋予的称号为潘德拉贡卿。 能够运用念动力“Alter·Choke”，从手臂放出魔力的绝技 “Alter·Lightning”等，好像在哪见到过的华丽招式。 释放红色魔力的“邪圣剑NecroCalibur” 能够自由变化为双刀或链锯等形态，有时会故障而爆炸。 外观不错的武器一般不怎么强， 这一点倒是宇宙共通的法则。 于是，那些司空见惯的长剑才是至高无上的。"]],
			Fe_aertuoliya:["female","Saber",7,["Fe誓约胜利之剑","Fe风王结界","Fe骑士王","Fe遥远的理想乡"],["des: 不列颠传说中的王，被称为骑士王。 阿尔托莉雅是幼名，从成为王的那一天起就被称为亚瑟王。 在那个骑士道如花般凋零的时代，用手中的圣剑为不列颠带来了短暂的和平与最后的繁荣。 虽然史实上是男性，但在这个世界似乎是男装的丽人。 身高/体重：154cm・42kg 出典：亚瑟王传说 地域：英格兰 属性：秩序・善　　性別：女性 由于举止铿锵身边很少有抱有爱意的异性。\t 是一位秉持“万民都能更好地生活，过上更好的人生”理想的王。 锄强扶弱的无可非议之人。 沉着冷静，有着做什么都很认真的优秀性格。 ……但是寡言少语中有着不服输的天性，所以有关胜负之事绝不手软，输了的话会满心悔恨。\t 领导力：B 指挥军团的天性的才能。 在团体战中能提升己方作战能力。 自始至终清廉洁白、大公无私的王。 她的正直使骑士们肝脑涂地，也是生活困苦的民众不断坚持的唯一希望。 她的王道并不是集合强者，而是将尽可能多的弱者治理起来。 “誓约胜利之剑” 等级：A++ 种类：对城宝具 Excalibur。 并不是由人所制造出的武器，而是星锻造成的神造兵器。在圣剑中也是立于顶点的宝具。 真正具有优秀能力的并不是剑而是剑鞘，但那剑鞘已经永远流失了。\t 亚瑟王传说的最后是骑士时代的终结。 尽管亚瑟王击退了异民族，不列颠的土地却没能回避破灭。由于圆桌骑士之一的莫德雷德的叛逆，国土一分为二，骑士之城——卡美洛黯然失色。\t 亚瑟王在剑栏之丘讨伐击败了莫德雷德，但自己也身负重伤。 一息残留之际，他将圣剑托付给最后的心腹贝狄威尔，之后便与世长辞。 传说亚瑟王死后被送到了理想乡——远离尘世的乐园・Avalon，并会在遥远的未来再次拯救不列颠。"]],
			Fe_aertuoliya2:["female","Saber",20,["Fe黑化","Fe侵蚀","Fe黑·誓约胜利之剑"],["des:被圣杯的诅咒侵蚀，骑士王那冷酷无情的另一面。 也许，有的只是作为亚瑟王追求的“理想的王”这一样事物。 平常的阿尔托莉雅在约束、控制自己的力量，而这个状态的她却毫不犹豫地展现自己强大的魔力。 身高/体重：154cm・42kg 出典：亚瑟王 地域：英国 属性：秩序・恶　　性別：女性 彻底化为无情的暴君。像龙一般暴食。 铠甲被染成漆黑，重量也随之增加的缘故，和通常时相比力量也增加了。 相反地，聪敏程度似乎下降了。 没有多余的言行，冷静而透彻的性格使阿尔托莉雅看起来像是变成了另一个人，但注意深入接触的话会发现其本质的存在（和原来的阿尔托莉雅）依旧是一样的。 魔力放出：A 在武器、或自己的肉体上附带魔力，通过一瞬间将其放出来提升自己的能力。凭借魔力喷射气流。阿尔托莉雅自己的筋力只是一般的程度，但是全部的行动都用大量魔力进行强化过以此来打倒众多的敌人。\t “誓约胜利之剑” 等级：A++ 种类：对城宝具 Excalibur Morgan。 漆黑的极光之剑。为了不再制御自己的魔力，随心所欲地挥舞手中的圣剑，魔力的粒子并不是光，而是变成了吞噬光的黑暗。 那副光景与为了守护不列颠岛而显现的魔龙佛提刚（Vortigern）的龙息相近。 即使是生前从未堕入罪恶之道的阿尔托莉雅，她的内心也存在着迷茫与纠葛、对自己的愤怒、对周遭的叹息。 这副姿态就是由那些诅咒表面化而来，将她的“方针”彻底反转颠覆的存在。 其目的和理想本身并没有发生变化， 正常状态的阿尔托莉雅为了理想贯彻自己的纯洁，而这一位阿尔托莉雅会想要为了理想而施行暴政。 不知道是不是因为魔力炉心是规格外的缘故，总之是特别能吃的Servant。 她那可以说是到了个性般的对吃的嗜好也产生了变化，对有着精细、精巧、玄妙的味道的料理觉得难吃而厌恶，却对大量的垃圾食品情有独钟地寻觅并胡吃海塞。 虽是异常不好的恶劣饮食习惯，但是本人对此非常满足所以这就是所谓的幸福吧。"]],
			Fe_shanzhiweng:["male","Assassin",8,["Fe晚钟","Fe信仰加护","Fe战斗续行","Fe死告天使"],["des:以骷髅面具覆面的暗杀者。 创立了名为阿萨辛（Assassin）的暗杀教团之后，以『山之翁』之名替代本名而诞生的，最初的一位哈桑·萨巴赫。 然而，无论是教团的信徒及其18位哈桑们 也无从知晓此人的真面目， 甚至没有能够证明实际存在的证据。 据说若是在某代的哈桑·萨巴赫偏离正道时便会现身，斩断其首级的传说暗杀者。 即为，杀死哈桑的哈桑。 身高/体重：192cm·120kg 出典：中东 地域：中东 属性：秩序·恶 性别：？？？ 称作王哈桑便可…… 在暗杀教团之中无从一人目击到其人，那也是自然， 只因见到此人之刻即是一命呜呼。 身为最初『山之翁』的他，同时也选择了作为制裁教团腐败的监视者这条道路。 教团虽是遵从神的教义，任其行为对人而言是无法赦免的恶。 正因如此，这位大人绝不容许教团的腐败。 守护神的教义人们却沉溺于人类的欲望。 此刻便是，对神最大的亵渎。 教团的腐败，即是源自立于顶点的『山之翁』的堕落。 无论是精神的堕落还是技术的堕落，此『山之翁』名号无法赋予即将衰退之人。 衰退即为死亡。斩断其首级为赦罪，将希望托付给下一任『山之翁』。 为给予『将暗杀者暗杀』如此自相矛盾的大义，这位大人并无隐藏武器或暗器， 而是选择了从正面战斗的大剑。 当这副骷髅面具映入眼帘那一刻，便是生命终结之时。 对违背教团的教义愚昧者降下铁槌后，见过骷髅剑士之姿的人便从世上消失了。 埋葬了众多暗杀者的他直到暗杀教团灭亡之际 都一直潜伏于黑暗之中。 作为存在的传说， 不存在任何目击者的，深渊的暗杀者。 此便是这位骷髅剑士。 『死告天使』 等级：C 种类：对人宝具 范围：1 最大捕捉：1人 Azrael。 毫无特点的大剑。被这位大人所终生挥动， 而沾染上了永不背弃的信仰。 于幽谷之境界漫步的这位大人之剑， 所有的攻击都附加了即死的效果。 概率虽然较低，却不论何种对强敌造成即死的危险性。 存于幽谷之人已对死亡为习惯、被同化， 因此获得了对即死与魅惑的耐性。 〇：气息遮断：A 消除自身气息的技能。曾经修得过的能力的残留物。身带强力诅咒的这位剑士， 即便是判定完全成功的隐秘行动，也会被“即将暗杀的对象”感知到自身的存在。 〇晚钟：EX 将葬礼公之于众，宣告死之到来的晚钟。 将这个仪式一体化后所发生的特殊技能。 只是在对象化成了「错失应死的时机」的亡者之时代替天主赐以救济。 一切皆为天之意志，因为是天之意志，故而与这位剑士对面之人皆能知晓到自身的命运即将终结。 ——汝可否听到，此刻钟响。 那便是汝之天命的尽头。 倾听此音，解放灵魂便可。此刻，即是汝身为凡人安然长眠的最后机会。"]],
			Fe_kaitangshoujieke:["Female","Assassin",6,["Fe解体圣母","Fe雾夜杀人","Fe情报抹除","Fe外科手术"],["des:世界知名的杀人狂魔。在日本多被称为「开膛手杰克」。杀害了五名女性，没有被苏格兰警场（Scotland Yard）的拼命搜查捕捉而是消失了。 身高/体重：134cm・33kg 出典：史实 地域：伦敦 属性：混沌・恶　　性别：女性 作为Assassin被召唤的杰克。 开膛手杰克的正体不明，因此以不同职阶召唤的场合容姿会发生变化。这次以Assassin召唤的场合，是连出生都不被允许的孩子们的集合体。 由于Assassin的杰克在生前就被杀死，向胎内的回归——回到母亲的胎内是她寄予圣杯的愿望。虽然不谙世事，但不知是不是作为“开膛手杰克”召唤的缘故，动脑子的速度惊人地快。 “解体圣母” 等级：D~B　种类：对人宝具 将开膛手杰克的杀人再现的宝具。必要条件有三，“时段为夜晚”“对方为女性”“已经出雾了”。 作为Assassin被召唤的她，自己以“开膛手杰克”为名，不知原本的“真凶”不是她自己。有着复数女性被杀的记忆，殊不知自己是杰克手下的牺牲者。 身为不为人所爱的孩子的她，渴求强烈的爱。无论Master是男性还是女性，她都要求着作为“母亲”的爱。你用爱来回应她也无妨，但她的目的可能是偷偷钻到你肚子里哦。"]],
			Fe_jiaerna:["male","Lancer",7,["Fe日轮甲胄","Fe梵天覆盖大地","Fe梵天诅咒我身","Fe贫者的见识","Fe日轮顺从死亡","Fe无冠武艺"],["des:印度古代叙事诗《摩诃婆罗多》的大英雄。既是摩诃婆罗多中心的英雄阿周那的对手，也是其异父兄弟。 由于数多的诅咒缠身而无法自由行动。 他，被阿周那以近乎谋杀的形式杀死了。 身高/体重：178cm・65kg 出典：摩诃婆罗多 地域：印度 属性：秩序・善　　　性別：男性 也符合Archer、Rider等职阶。 迦尔纳是人类女性贡蒂与太阳神苏利耶所生的半神英雄。 然而，他出生后就立刻被贡蒂抛弃，作为车夫的儿子被抚养长大。 但是，其作为英雄的资质却从未被掩盖。 母亲贡蒂舍弃迦尔纳之后，又生下了般度五兄弟。 其中的三男，也就是对迦尔纳来说可谓是终生的对手的阿周那。 成长起来的迦尔纳成为了与般度家对立的俱卢家的养子。 然而，和阿周那对战之前，迦尔纳的已是诅咒缠身、障碍累累。 婆罗门的诅咒，因陀罗的欺骗，连母亲向他的求诉，要他发誓不跟阿周那之外的人战斗，他也一并接受了下来。 说到将铠甲转让给因陀罗的逸话，则是迦尔纳把黄金铠甲分解、破坏，而获得了弑神之枪。 其为众神之王也掌控不了的光枪。 染遍全身剥离的鲜血而得以放出的一击，任何污秽都能一扫而净。 ——日轮啊，顺从死亡。\t 迦尔纳是极为宽大的Servant，一切都能以「事该如此」的理由接受下来。 他不仅对万般人等平等对待，更是将万般人等当作“各自的花朵”加以尊重。 拥有绝不会被众多的偏见公正对待的武艺和高洁的精神，迦尔纳即便论其英雄之格也仍能在众Servant中夺得一二。 ……虽说是不可能的事情，若有和他契约却不得胜利的Master，那绝对是不肯战斗，一等一的麻烦人物吧"]],
			Fe_azhouna:["male","Archer",8,["Fe天授的英雄","Fe炎神的咆哮","Fe千里眼","Fe破环神的手影"],["des:印度古代叙事诗《摩诃婆罗多》的大英雄。 摩诃婆罗多虽是集结了印度众多英雄的绚烂故事，但即便称阿周那是其核心也不过分。\t 身高/体重：177cm・72kg 出典：摩诃婆罗多 地域：印度 属性：秩序・中庸　　　性別：男性 其爱弓为“甘狄瓦（Gāndīva）”，是火神阿耆尼所授之物。 若说迦尔纳是“施舍的英雄”的话，阿周那便是“天授的英雄”。 生而为俱卢王之子，般度五兄弟之三的他，同时还是雷神因陀罗的亲生儿子。 其才干、性格，方方面面皆是无可挑剔的英雄，却因兄长败于赌博，而被王国所流放。 自那时起，他便已经有了自己同迦尔纳的对决已是不可避免的预感。 不管怎么说，迦尔纳对那视般度五兄弟为宿敌的难敌可是尊如亲父的。\t 亲爱兄弟，也被兄弟亲爱。 亲爱父母，也被父母亲爱。 亲爱人民，也被人民亲爱。 尽管如此——\t 必须杀死迦尔纳不可，这样的决心究竟是何时立下的呢。 兴许，是从最初碰面那时起吧。 这并非是由众神决定的命运。 而是阿周那纯粹的敌意，和他一并选择的业（Karma）。 纵使这绝非正道。阿周那却不得不这么做。\t 阿周那有另一个他在心里称之为“黑”的人格。憎恨、嘲笑着他人，谋划着奸计。 他无法接受这一事实，而化作了他身旁的从者行动。 ……虽然不太相干，但毗湿奴的转生、其第八化身奎师那乃是和阿周那的人格有别的一位英雄。"]],
			Fe_aertuoliya3:["female","Lancer",8,["Fe最遥远的加护","Fe光辉信仰","Fe王者骑士","Fe耀于致远之枪"],["des:统治了不列颠的传说之骑士王、亚瑟王。 是作为王扩张势力后，作为主要武装采用了圣枪而非圣剑统治了不列颠的亚瑟王的if。 没有了圣剑带来的成长停止，成长到了和王的身份相符的肉体年龄。因为使用圣枪而成为了接近神灵的存在，但因为使用时间只有十年左右所以精神构造・灵子构造没有太大变化。 身高／体重：171cm・57kg？ 出典：亚瑟王传奇 地域：欧洲 属性：秩序・善 性别：女性 作为Lancer时的体重或者体型存在诸多说法。 同时，作为Lancer时，必将乘在马上。本次的坐骑是「东·斯塔利恩」。 她是由通常的阿尔托莉雅「不同的可能性」诞生的英灵。 虽然还具有人类的身形，但已经几乎无法称之为人的英灵。因为蕴藏在圣枪中的特性，她已经变化・性质变化为了神灵，可勉强称之为接近女神的存在。 虽然比圣剑的阿尔托莉雅要变得合理、冷静得多，但没有失去人性。 应该说因为成长为了大人，在她的选择上多了份从容，作为王的存在形式非常理想。 这个她是在卡姆兰之丘亲自夺回了圣枪，回归了大地的天之英灵。 但是和她具有相同外貌的Servant「狮子王」在应当迎接死亡之时未能死去，结果成为了手持圣枪彷徨于世的亡灵。 一直手持圣枪的「狮子王」因为彻底化身为了神灵，所以和这个她内心上有不同。 『耀于至远之枪』 等级：A++ 种类：对城宝具 Rhongomyniad。 圣枪。系住星辰的岚之锚。 其真实姿态据说是系住世界表皮的塔。在真名解放时等级和种类会发生变化。 纵使被十三拘束限制了其本来的力量，也将歌颂星辰之光而闪烁的至远之枪——— 圣枪伦戈米尼亚德将维系世界表层的「光之柱」为本体。由于和「拯救世界的星之圣剑」具有同等程序的十三拘束存在，处于勉强维持作为宝具身形的状态。 作为Servant召唤到迦勒底的她，了解世界的美好。为夺回虽未处于至远而仍闪耀的世界，她必将和Master并肩作战，竭尽全力。"]],
			Fe_aertuoliya4:["female","Lancer",20,["Fe终焉骑士","Fe尽界的加护","Fe光耀尽界之枪"],["des:传说中的圆桌骑士王亚瑟本人。 实际上，她是一名惹人怜爱， 但也如同传说兼备清廉与高洁的少女骑士。 虽作为圣剑使广为人知，实际上她所拥有的圣枪也极为强力， 因此也可以作为Lancer现界。 ——此外，有可能是受圣杯的诅咒所侵袭而现界。是骑士王作为枪使时冷酷无情的另一面。 身高/体重：171cm・57kg？ 出典：亚瑟王传说 地域：欧洲 属性：秩序・善　　　性別：女性 作为Lancer时的体重和体形有多种说法。 此外，作为Lancer时，必定会骑马。Alter化时的坐骑叫“拉姆莱”。 “耀于至远之枪” 等级：A++    种类：对城宝具 Rhongomyniad。圣枪。别名Rhon。其真实姿态，是连接世界表里之物。 解放真名之际，等级和种类都会发生变化。\t 圣枪原本是，将世界的表层缝合的“光之柱”， 若有万一使其被瓦解，现有的物理法则 将从由此构成的世界中剥离而堕落， 既往之物及大量的幻想法则将会出现。 正因为是立于神代与幻想的终末的“王”， 她才能拥有这把蕴含极大力量的圣枪。 藉由解放其真名， 该圣枪得以释放于至远的尽头闪耀的光辉之力的一隅。 要进行真名解放，必须解除合计十三道束缚中的至少半数。 这一性质与“救世的星之圣剑”等同。 根据不同的说法，作为Lancer现界之际， 骑士王的“一部分”姿态会和生前有所不同。 由于不持有圣剑和剑鞘，而是持有圣枪的缘故， 其不老的肉体的“一部分”得以成长， 亦或是，枪的魔力使肉体的“一部分”发生成长——\t 即便作为圣剑的替代而持有着圣枪，骑士王的精神性不会发生改变。 得到选定之剑由此成王，对抗侵袭而来的外敌、魔物甚至是龙， 为了祖国不断战斗着的，正是这位骑士王。 即使是作为Alter现界， 在修正人类史之时， 会成为Master的强大力量这件事是不会错的。"]],
			Fe_zhugekongming:["male","Caster",7,["Fe鉴识眼","Fe阴阳无极","Fe军师的指挥","Fe军师的忠言","Fe奇门八阵"],["des:领主・艾尔梅洛伊二世并不像通常的从者一样具有背景丰富的器具和历史。 但是由于牵扯到此次圣杯战争的特殊情况，利用依附自身肉体的方法将中国的英灵诸葛孔明成功地召唤了。\t 身高/体重：186cm・68kg 出典：《三国演义》 地域：中国 属性：中庸・善　　性別：男性 合理主义的怪物。 广为人知的诸葛孔明是中国三国时代的卓越的政治家、军人。弱小的蜀国在长年之后足以与强大的魏国相抗，相传大部分的业绩也要归功于他。\t 这名Servant严格来说既非艾尔梅罗伊二世，也非诸葛孔明。结合了两者的力量之后，所发挥出的是不同于原本Servant的力量。此外，思考和感情是以作为凭依的埃梅洛伊二世为主。 鉴识眼：A 固有技能。非以诸葛孔明，而是缘起埃梅洛伊二世的能力。比起人类观察来说方面更为狭窄的技术。对于观察对象的人类将来会获得何种形式的可用性这一点，有着十分卓越的眼力。 “石兵八阵（无归之阵）” 等级：C 种类：对军宝具 诸葛孔明在军队溃败时所布置的传说阵型。这巨石所构成的阵会迷惑侵入者，并将他们逼至绝境。\t 疑似Servant……此为不知何种理由没有成为Servant的英灵，以人类的躯体作为容器召唤到现世的存在。除却领主·埃梅洛伊二世之外，也发现了其他几名疑似Servant。"]],
			Fe_yisikandaer:["male","Rider",8,["Fe王之军势","Fe雷之征服者","Fe军略","Fe王之霸道"],["des:伊斯坎达尔，是亚历山大三世在波斯语中的称呼，双角王这一异名也广为人知。 因东方远征而驰名于伊斯兰世界的那份勇武派生出许多英雄传说，并在亚洲地区广为流传。 在20岁继承了马其顿的王座后，便压制了希腊的城邦并向西亚进攻。 在埃及得到了法老王的地位，并将自诩强大的波斯王国攻破，建立起了远至印度的强大帝国。\t 那份是征服的热情并非是扩大领土的支配欲望，出于他那探求未知的世界的探险家的一面更多一些。在征服的地域统治上起用当地的人才，自己也积极地推想安抚西亚文化的政策，打下了希腊主义文化的基础。\t 身高/体重：212cm・130kg 出典：史实 地域：马其顿 属性：中立・善　　性別：男性 征服王，胜之而不灭，霸之而不辱。 『王之军势』 等级：EX  种类：对军宝具 Aionion Hetairoi 召唤的固有结界。征服王的王牌。 人正是最珍贵的财宝。和勇者们创下的无与伦比的功勋正是王的证明。 他把生前所率领的近卫兵团以独立的从者身份接连召唤出来，以数万的军势将对手蹂躏. 在『王之军势』中，生前的伊斯坎达尔军团被完整地召唤出来。超越时空的、和臣下的那份羁绊在他的宝具里得到了升华，这是他的王道的象征。 他生前并非是以个人之力建下功勋的英雄，而是指挥军队去征战的英雄。他的宝具正因此而来。 在到达尽头之海俄刻阿诺斯的悲愿下而成就了旷古烁今的大远征的征服王的热情，无论被招向哪个时代的圣杯战争都不会改变。 他的眼里甚至连圣杯的奇迹都容不下，他只是想以世界的尽头为目标再度进军。那个地方才是无上的光荣。"]],
			Fe_enqidu:["female","Lancer",6,["Fe变容","Fe神兵","Fe完全形态","Fe人子啊，紧系神明吧"],["des:平稳的语调，温和的举止 却具备着与外表不符无法想象拥有着强大的 战斗能力的“拥有意志的宝具”。 被英雄王吉尔伽美什称为最强的一角， 紧系着天与地之锁。 由众神之手而创造出的人偶， 同时是自然与调和·一体化的大地分身。 作为英雄王的独一无二的友人与经历了许多冒险， 觉醒了心之后，归还于大地的人偶所悲哀的兵器。 身高/体重：可变 出典：古代美索不达米亚神话 地域：美索不达米亚 属性：中立·中庸 性别：— 「叫我战斗的话会去战斗。 我并没有讨厌战斗的意思就是了。」 吉尔伽美什叙事诗中讲述最古老的英雄之一。 由众神创造出的兵器。 原以是众神制造出“可任意变形的粘土工艺品”的。 应付状况变化自在的形态变化。 全身相同等于众神们的武器。 不过，没有相似人类的精神和感情， 却大体与野兽别无二致。 据说显现于地上之后，邂逅了某位圣娼 获得了相当的认知，选择（作为基本形态） 并采用了人类的形态。 这姿态是对某个圣娼的敬重而模仿出模样来。 战斗力和英雄王吉尔伽美什鼎盛期 大致同等的力量。 叙事诗中叙述与吉尔伽美什战斗是 与位于人类史中最强的英雄之一 发挥出能力足以使其平分秋色。 孤高而存的吉尔伽美什王首次认可的朋友， 自己也将吉尔伽美什当作独一无二的挚友。 乌鲁克城之战后， 成了挚友的吉尔伽美什与恩奇都 进行了数不胜数的冒险， 最终在与神兽古伽兰那战斗过后殒命了。\t 内向的、主动的、强硬。 平常里犹如骄艳花朵般玉立，一旦有所行动便会化作绝不多等、绝不姑息、奋不顾身可怕的 积极怪物。不论以人类或地球上的生命都是“喜欢”的对象，出于人类的那种理性将自己归于自然一部分。而且被视为拥护对象的来说是低下。感觉上自身与动物、植物较为相近，行动之时会以保护动植物为主。虽是如此，原本好奇心（求知欲）非常强烈 恩奇都乐于享受与人类之间的对话。 如果对方性格若是讨人喜欢（充满博爱精神、极权主义、将自身优于第一的）发自心底以示敬爱和钦佩，更会能以朋友之身施以援手而感到欢喜。 〇变容：A 将能力值以一定的总值根据状况重新分配的特殊技能。是恩奇都的最大特征。等级愈高，总值就会越高。时而将筋力变为A，又时而将耐久变为A。不过，参数的归还上限已先决定。因此无法将部数值变为A。恩奇都自身持有30的数值，参数是根据A7、B6、C5、D4、E3的数值进行消耗。 〇气息感知：A+ 最高等级的气息感知能力。可以通过大地对远距离的气息进行察知。 〇完全的形态：A 利用大地的魔力，恢复原本的形貌。恩奇都的躯体是以神话时代的粘土制成。有源自大地的魔力供给下便不会出现崩解。与其不同类型未见的强力再生·复原能力。不过，灵魂是另一回事。\t 『人子啊，紧系神明吧』 等级：A++ 种类：对肃正宝具 Enuma Elish。 恩奇都将自己的身体化作一具神造兵装。作为庞大的能量变换为楔子将对象贯通、缚紧。恩奇都原本是众神为了对付吉尔伽美什『回到神的一方』而派遣的兵器。将神与人不致分离而创造出『天之楔』的吉尔伽美什。但吉尔伽美什却反叛了神，命恩奇都将其缚住，逐回天上的职责。然而恩奇都成了吉尔伽美什的挚友，得使这“连天都能束缚的锁”，如挚友所愿，选择了为人类而使用的道路。"]],
			Fe_jinshanshan:["male","Archer",10,["Fe巴比伦的宝藏","Fe天之锁","Fe黄金律","Fe天地乖离开辟之星"],["des:公元以前统治着苏美尔的都市国家乌鲁克的半神半人的王者。不仅仅是传说而是真实存在的人物，记述于人类最古的叙事诗《吉尔伽美什叙事诗》中的王。 身高/体重：182cm・68kg 出典：苏美尔文明、吉尔伽美什叙事诗 地域：巴比伦、乌鲁克 属性：混沌·善　　性別：男性 性格刻薄无情。从不听从他人的意见，只把自己的基准作为绝对准则的暴君。 炫耀着华美无比的黄金铠甲、将无穷尽的财宝像泼水一样释放出去的破格的英灵。 第一人称写作“我”读作“本王”。 神性：B（A+） 本来有着最高的神灵适性，却因为本人憎恨神祗而使等级下降了。 有着三分之二是神、三分之一是人的高神格，他在这个世界上不存在对手，成为了将世间一切掌握手中的超越者。 “王之财宝” 等级：E~A++ 种类：对人宝具 Gate of Babylon。 连向黄金之都的键剑。与宝物库的空间相连，可以自由地取出在收藏在其中的宝物。 使用者的财力越雄厚就会越强力的攻击。 本作中作为一种通常攻击的手段使用。 “天地乖离开辟之星” 等级：EX 种类：对界宝具 Enuma Elish。 用冠以美索不达米亚神话中的神之名的剑——乖离剑EA将空间切断。 在众多宝具中也是立于顶点之一的存在，正所谓“切裂世界”的剑。 “收集了人间所有宝物”是吉尔伽美什的口头禅，不过这并不是单纯的比喻。吉尔伽美什将他的时代里产生的，所有技术的雏形收集起来，收归己有。与其说里面是吉尔伽美什贮藏下来的财宝，不如说是“人类智慧的原典”其本身。"]],
			Fe_fuermosi:["male","Ruler",6,["Fe巴顿术","Fe假说推论","Fe这是基本的推测，我的朋友"],["des:世界上最优秀的，独一无二的顾问侦探。是侦探这个概念的结晶，“揭露者”的代表。根据记载，他是19~20世纪由阿瑟·柯南·道尔所著小说中的主人公，一位善于解开各种谜题的侦探，也是后来众多推理小说中登场的「侦探」们的鼻祖之一——那么真实情况是什么样呢？	身高/体重：183cm·65kg出典：夏洛克·福尔摩斯系列地域：英国、全世界属性：中立·善 性别：男性假设他是从故事中诞生的话，那么除了柯南道尔的小说，可能其他模仿类作品也包括在内……迦勒底职员如是说。是个思考全面，行如雷厉，胆大过人，细致缜密，并且冷静沉着的男人。无论是怎样的谜题，犯罪也好，阴谋也罢，都无法逃过福尔摩斯的眼睛。即便是令人恐惧的杀人犯，流传至今的诅咒，潜伏于黑夜的怪物，甚至是超越国家规模的秘密组织，他都能将一切的真相公之与世——如有必要，会用那名为真实的锐剑将其打倒。他的存在，早就超越了人类的领域，因此作为“贤者”“揭露者”的身份现身。〇天赋的见识：A++捕捉事物本质的能力。敏锐的洞察力从不会放过任何一个情报。虽然原理完全不同，但能够进行与千里眼的未来预知同等级别的预测。〇巴顿术：B++修习了十分注重实战的东洋武术。夏洛克·福尔摩斯，除了能使用将此技能与拳击组合后的打击术外，还很擅长反击和投技。据说达成某种条件的话能够作为宝具中真名解放级别的绝技来使用……。『这是基本的推测，我的朋友』等级:B 种类：对人宝具/对界宝具Elementary My Dear夏洛克·福尔摩斯作为『Servant』现界所得到的宝具。是将作为自身起源的『解明』，升华为宝具的产物。即便面对的是真正无法解开的谜题，也一定可以「诞生」出通往真相的线索或是道路。举例来说，面对一个连钥匙都不存在的宝箱，钥匙会被转为「没有丢失」的状态，并一定会在某处被找出来。（但是，再怎么说也不会突然在眼前出现。所以必须要由福尔摩斯或者其他协助者寻找才行）本来是常时发动型的宝具，但在『Fate/GO』里需要进行真名解放。真名解放时会出现形态不明的球体，并在周围一带放出耀眼的光芒。可以使敌方变弱，并强化已方。哪怕是没法打败的对手，福尔摩斯也会找出将其击败的方法。同时，宝具真名虽然是与福尔摩斯密切相关的一句有名的台词，但实际上，此台词的初次出现并不是在道尔的小说中，而是在威廉姆·吉雷特所主演、编剧、导演的舞台剧中。据说，道尔以「超越了自己的小说」来评价吉雷特所饰演的福尔摩斯。顺带一提，在道尔的短篇小说『驼背人』中福尔摩斯对华生说的「基础的（“Elementary”）」这一词，也是从吉雷特的构想中得来的。英灵福尔摩斯，不是以作为他的原型被传承下来的约瑟夫·贝尔教授或是道尔本人，也不是以世界上最早的侦探维多克相似的姿态———而是以一系列小说作品中的主人公（只能认为是其言行举止）的姿态现身的。夏洛克·福尔摩斯的故事，是诞生于道尔完全的创作中吗？是实际存在过的福尔摩斯作为传记故事被约翰·H·华生医生记载下来的吗？还是两者折中的呢？至少福尔摩斯自身应该是知道此事的，但他从不开口提及，如果涉及到此话题，不论几次都会被他轻巧得岔开。"]],
			Fe_moliyadi:["male","Archer",7,["Fe魔弹射手","Fe蜘蛛丝的终点","Fe终局的犯罪"],["des:如你所见，我是很平凡的人啊。只不过比起一般人，有那么一点点的恶毒而已！就用我的魔弹，来祝你一臂之力吧！不过，你要注意！我的魔弹可是有限的！身高/体重：175cm·68kg出典：福尔摩斯探案集系列地域：欧洲全境属性：混沌·恶 性别：男性不如叫我Mr·绅士吧！（NO！）在福尔摩斯探案集系列中，以福尔摩斯最大对手的身份登场的著名数学教授。尽管登场作品仅有三部，甚至大多数时间仅在福尔摩斯的叙述中出现，基本没什么露面机会。但仍凭借在福尔摩斯最后的事件（虽然他在后面复活了……）中的活跃，得到了莫大的支持，成为了著名反派头目。	他是天才、哲学家、思想家，绝顶聪明的他，被福尔摩斯称作「犯罪界的拿破仑」。虽然表面上只是一名数学教授，但是其手下却遍布整个欧洲。根据书中明确给出的设定来看，他似乎在从事类似犯罪咨询专家一类的工作。	『终局的犯罪』等级：A+ 种类：对军宝具范围：1～99 最大捕捉：100人The Dynamics Of An Asteroid。将莫里亚蒂的目标「破坏行星」所具现化的宝具。由于作为『Servant』被召唤的缘故，威力被削减，宝具种类变为「对军」但在力量增幅后能够将范围扩展到「对都市」或者「对国」。是莫里亚蒂作为毕生目标所追求的究极的破坏。他吸收了幻灵「魔弹射手」的能力，成为了融合型『Servant』。在歌剧「魔弹射手」中登场的猎人，通过将灵魂卖给恶魔，获得了一定能击倒猎物的魔弹。但是，只有第七发子弹，将向着恶魔的牺牲品——也就是能令契约者陷入绝望的人射去。"]],
			Fe_abigaier:["female","Foreigner",6,["Fe光壳溢目的虚树","Fe魔女审判","Fe正气丧失","Fe信仰的祈祷"],["des:其为罪人，七重扭结。在异端之地奢求赎罪的恶魔之果实。―――无垢的少女指示的下个牺牲者，会是谁呢？身高/体重：152cm・44kg出典：史实地域：北美・马萨诸塞州属性：混沌・恶　　性別：女性金发・碧眼的12岁少女。17世纪末。在清教徒开拓的村子塞勒姆，发生了「魔女审判事件」。最初出现恶魔附身征兆的其中一位少女，便是阿比盖尔·威廉姆斯。这种恶魔附身的异常症状，很快便在其他少女身上传播开来，经过大概一年的时间，就有无数村人被检举告发。最终，酿成了200多人被指控，其中19名受到绞刑，2名在狱中死去，1名因拷问而死的惨剧。至于少女们的真心，以及一切的起因等等，如今仍存在着诸多谜团。	『光壳溢目的虚树』等级：EX　种类：对人宝具Qliphoth Rhizome。打开通往人类难以相容的异质世界的“门”，让被攻击对象的精神·肉体产生深刻的扭曲，使邪恶之树Qliphoth的地下根茎生长蔓延。敌人将被变成“钥匙”的阿比盖尔的个人认知所束缚。因此是对人宝具。不过其原本是可称之为对界宝具的，拥有无尽之虚无性质的宝具。	○魔女审判：A+其本人会无意识的诱导出人们互相猜忌的冲动，是能够引发不幸连锁的因纯真而起的威胁。○正气丧失：B寄宿在少女身上的邪神所流露出的疯狂，可以轻而易举的让人类脆弱的常识和道德观念崩坏。○信仰：C坚守着度过清贫生活，每日祈祷的清教徒的信条。作为清教徒的阿比盖尔，是一位敬仰神明，从不忘记做感恩祈祷的无垢的少女。再深究也不过是个多愁善感且不懂何为猜疑的年轻小姑娘。以清贫为信条的清教徒们，为躲避巴结权威的教会的镇压而渡过了大海，来到了新世界。然而，他们仍旧没有摆脱阴影，被逼上绝路。于是他们的反抗（protest）矛头，伸向了自己身边的人。越是颓废压抑的世界，越需要有“英雄”站出来―――本应自身遵守的洁白的信条，成为了监视他人的道具，这种在战乱与掠夺连绵不绝的殖民地的不安定生活，让猜疑心和利己心态逐渐生根发芽。―――后来，他们将自身内心的疯狂，转变为了驱逐“魔女”。并说服众人，我们的不幸与苦难，全部都是恶魔导致的。最终，塞勒姆出现了魔女，打开了凄惨的魔女审判的大门。成为“锁孔”的混乱状况，以及映射人们欲望成为“钥匙”的少女——如果二者都不可或缺的话，那么，有罪的到底是哪边呢？"]],
			Fe_geshibeizhai:["female","Foreigner",6,["Fe富岳三十六景","Fe森罗万象","Fe父女羁绊","Fe雅号异星章鱼"],["des:啊？不管怎么看都不像是那个北斋？用这么可爱的模样现身真是不好意思啦。想要知道原因的话，就好好听我说！	身高/体重：162cm・51kg出典：史实地域：日本属性：混沌・中庸　　性別：女性名为“跌跌”的可疑章鱼一直跟在她身后。	江户时代后期的浮世绘画师，除「葛饰北斋」外还拥有「画狂老人」「宗理」等多达30余个的雅号。他是日本代表作家，他的作品给各种海外画家与音乐家（例如梵高、德彪西）带来了巨大的影响。其高产程度人尽皆知，毕生作品多达3万多幅。作品内容也丰富多彩，从浮世绘版画到肉笔画，漫画，春画，应有尽有。晩年时的他与助手三女儿“葛饰应为”一起生活。代表作有系列作『冨岳三十六景』、『北斋漫画』、妖怪画『百物语』、春画『海女与章鱼』等等。据说生前的他是一个行为奇异的怪人，总共搬过93次家，收入不定一贫如洗，外出的时候还经常会咏唱奇怪的咒语。	『富岳三十六景』等级：A　种类：对军宝具北斋大师人尽皆知的杰作The Great Wave。即浮世绘系列的第21作，神奈川冲·浪里。看透自然的造物之美，用已到达神灵附身境界的笔锋进行勾勒，同时添加神秘的实体，让此画给鉴赏者的身心带来震撼。随后，与深渊的邪神联系觉醒了的北斋，在理智丧失之时绘制了独一无二的浮世绘。即『神奈川异海里之游』。在“表富士”三十六景的基础上追加的“里富士”十景，禁断的画工已经到达超越极限的境界。○森罗万象：A+拥有解析自然之景，看破真髓的洞察力。○父女羁绊：A在晚年一直相依为命的北斋与应为之间的羁绊，是邪神的疯狂无法动摇的.○雅号・异星章鱼：A在与深渊的邪神融合的境界下，可以使用非欧几里得几何学的画风。北斋拥有打破常规的个性。他没有拘泥于一种流派，而是热情的学习各类画师们的技术，进取心极强。他吸收了西洋画中的远近手法，将可以称作现代漫画基础的——抓取动作瞬间的表现形式用在了风景画上。被召唤到现代的北斋，不必再被严格的幕府拘束。成为了自由身可以开心的学习一切绘画技巧的他，应该会精神百倍的不断挑战新画法吧。不知接下来是选春画，抽象绘画，板绘还是行为艺术呢？"]],
			Fe_zhitianxinchang:["female","Archer",7,["Fe三千世界","Fe天下布武","Fe魔王","Fe战略"],["des:战国的风云人物、织田信长。少年时被称作“尾张的大傻瓜”，后于桶狭间击破今川义元而名震天下。那之后，不断击破强敌、统一天下迫在眉睫之时，她在明智光秀的谋反中死于本能寺。身高/体重：152cm・43kg出典：史实地域：日本属性：秩序・中庸　　　性別：女性「真没办法啊！」骄傲自大的自信家，喜欢新事物，有着“不能拘泥于旧弊和常识”这样的灵活思想。是实质上推番了室町幕府，为终结自应仁之乱起的漫长战国时代作出巨大影响的人物。作为Servant被召唤时身着军服，是因个人趣味而准备的。天下布武：A时代的变革者、信长的特殊技能。在旧文明中倡导新文明的的概念的变革。对具有高等级的“神性”或“神秘”的对手，或是身为体制守护者的英灵，会赋予自身有利的补正。相反，对神秘感稀薄的近代英灵，会削弱自身的各项技能及宝具效果。“三千世界”等级：E~A　种类：对军宝具长篠的三段击。展开三千把火绳枪并同时射击。由于击破战国最强的骑兵军团的传说过于出名，其对有骑乘技能的英灵的攻击力增加。对于没有骑乘技能的英灵来说，就是普通的火绳枪而已，但三千把的同时射击也是个威胁啊。信长的自称“第六天魔王”是宗教上的欲界魔王之名。信长生前以“火烧比叡山”为代表的暴行，使后世的人民对她抱持着恐惧和敬畏，使英灵信长作为魔王显现。	向统一天下迈进的信长，亡于家臣的谋反。此时她却说着“也是没办法的事呢”而不是后悔。对圣杯没有什么特殊的愿望，拿她所擅长的奇思妙想用圣杯去做些什么的可能性很大。"]],
			Fe_zhitianxinchang2:["female","Berserker",8,["Fe第六天魔王波旬夏盛","Fe沙滩的第六天魔王","Fe傻瓜杀法","Fe敦盛节拍"],["des:沙滩上的第六天魔王，轰临此地！这个夏天就让尾张的时尚潮流席卷一切吧那个Nobu要以最棒的造型回来了。诶？你问我穿这种土爆了的T恤不丢人吗？嗯……这次的我可不是以前的我啊！这个夏天我的再临可还留着两次没用呢。没错，就是我们期待的更衣再临！到时候可别被再临的我撩到腰软哦！啊哈哈哈哈哈哈！……而且我觉得这件T恤还蛮好看的喂！喂！身高/体重：152cm·44kg出典：史实地域：日本属性：混沌·夏性别：女从普通Nobu变成了夏季这种稀有属性，多半是因为随大流。不过从秩序变成混沌这个应该是第六天魔王状态的影响。“啊哈哈哈！我就是沙滩的第六天魔王织田信长！我的话脱了也会很厉害的哦！”以从内心喷发而出的热情包裹自身，2017年的夏天“Nobunaga•THE•Rockstar”闪亮登场。战斗风格更接近尾张大傻瓜时代的战国小混混风格&RockRoll。“诶？你问火绳？啊我没带过来啊。你看，海滩战斗的话湿气很大。很快就不能用了啊！”	『第六天魔王波旬~夏盛~』等级：E~EX 种类：对神宝具Nobunaga·THE·RockRoll。杀神灭佛的魔王信长的真正宝具……之简化版。对拥有神性或神秘属性的家伙，可以让其发挥出绝大的力量的，固有结界的限定解放状态。解放状态下的Nobu背后会显现出神秘的巨大骸骨（暂定），发挥出魔王般的力量。○傻瓜杀法：A以超越想象的傻瓜创意进行战斗。例如去寺庙按门铃逃跑、把爆竹塞进茶壶、弄哭信胜之类总之就是各种想干什么就干什么。不过本来这种恶作剧就是为了活动脑筋所以在另一种（糟糕的）意义上也算是增强了近战能力。○敦盛节拍：B通过敦盛舞的节拍贯穿战场创造出的必杀之超空间舞蹈敦盛fight。让你分不清到底是要唱还是要跳的，才是Rock——By Nobu。顺便，这神秘的魔王武装的名字叫做『压Kill・长谷部』○沙滩的第六天魔王：A-以本人对夏季的想象，强行扭曲了自己存在的怪物。能力和形象都会有所变化是原版技能“魔王”的改造版。魔王在沙滩换上泳衣之后，就会变成这样。好像副作用是胸变大了些，但这大概是错觉吧。第六天魔王波旬，织田信长原本的第六天魔王状态，是不拘神佛，甚至连自身都要烧尽的危险状态，必须以封印在Berserker职阶中为限制才能保持。虽然本人打算靠犯傻来蒙混过关，但是这种状态对信长来说非常危险，必须通过定期的解放（嘶吼）魔力（摇滚）来冷却才行。——嘛，所以这也是没办法的对吧！"]],
			Fe_andongniao:["male","Avenger",7,["Fe恸哭外装","Fe燎原之火","Fe至高的神啊请赐予我怜悯"],["des:阿马多伊斯・沃尔夫冈・莫扎特！───我便是要杀死你的人。你的名誉，你的曲子，你的痕迹我会一并抹杀。当你在地上现身之时——我一定，会亲手将你杀掉。戈特利布、被神宠爱的男人啊！身高/体重：181cm・65kg出典：『灰色之男』、莫扎特暗杀传说等地域：欧州属性：混沌・恶　　性別：男性经常自言自语。（自认为）和黑贞德以及岩窟王很合得来。和魅影相性很差。在玛丽·安托瓦内特面前便会一反常态，变得非常老实。是遵从Master的命令，可以快速收拾敌人的优秀从者。且不会被人类的性格或意识左右。原本是性格沉稳冷静，心思缜密之人。但因为化作了无辜的怪物，萨列里的精神也被摧毁了。他与等同于死神传说的『灰色之男』进行了融合，坠入了邪恶之道。当他看到沃尔夫冈·阿马多伊斯·莫扎特的时候，他恐怕会无视Master的命令，化为尽情杀戮的暴走机器。○无辜的怪物：EX生前的萨列里并没有杀过任何人。但是，随着暗杀的传说传播到世界各地，安东尼奥·萨列里不得不化为了无辜的怪物。原本作为单独技能的『自我否定』得到了融合，化为了一种复合型技能。○恸哭外装：Ａ萨列里身上包裹着反英雄的外壳·外装。萨列里本人，与莫扎特相关的记录中屡次登场的『灰色之男』───即１７９１年７月出现的，委托莫扎特创作「安魂曲・二短调」的如死神一般的存在，进行了融合，调和，之后获得了此能力。战斗的时候，此外装会自动包裹住萨列里的身躯，让他作为杀戮战斗机进行行动。○燎原之火：Ｂ如诅咒一般，暗杀莫扎特的谣言迅速扩散传开，其速度和性质正如燎原之火。Avenger萨列里，可以把那些与自己的诞生息息相关的人们的恶意，中伤，流言蜚语，煽动，令人厌恶的窃窃私语统统化作自己的力量。不但能让敌方全体的精神瞬间弱化，还具有进行强烈精神攻击的能力。如果对方没有防御魔术的手段，可能会选择自尽。『至高的神啊，请赐予我怜悯』等级：Ｃ　种类：对军宝具范围：１～２０　最大捕捉：５０人Dio・Santissimo・Misericordia・De・Mi。将一般生物无法抵抗的巨大杀意，进行压缩，凝固，同时混入魔力，奏响让敌方的精神与肉体都得到侵蚀的曲子。这是生前的安东尼奥·萨列里绝对不会保有的，只有化作无辜怪物的英灵───Avenger萨列里才能使用的，作为绝技的音乐宝具。……然而，悲伤的是，能真的和阿马多伊斯匹敌的『音乐』，Avenger化的萨列里永远都无法将其识别为『音乐』。───安东尼奥·萨列里，原本是莫扎特的友人。原本的他，或许不会以反英雄的身份，被刻在英灵座上。萨列里曾经是一名宫廷乐长，本该是人人敬仰的音乐家，受到尊敬的存在，他将众多音乐家以及他们的孩子变成了弟子。其中还包括莫扎特的第一弟子苏斯迈尔，莫扎特的儿子列奥波尔得·莫扎特以及贝多芬等人。但是在１８２０年代。「莫扎特死于萨列里之手」的传闻传遍了全世界。人们已不顾事实真相是否与传闻不同，便编织出了「被神宠爱的天才，以及深深地憎恨他夺走了他性命的庸才」的残酷故事。连老年的萨列里对弟子莫谢莱斯说的「这只不过是一种恶意的诽谤」这句话，也被传成了他犯罪的陈述口供。甚至还有人煞有介事地私传，老人为自己犯下的罪感到后悔，用刀隔开了自己的喉咙。	之后，经过了漫长的岁月。因为这毫无根据的暗杀传说，存在也持续遭到扭曲的萨列里，遇到了和他一样与阿马多伊斯的死亡有关的传说『灰色之男』。和他进行了融合后，萨列里化为了从者出现在现实世界成为了加害人类的反英雄───作为既充满悲伤。又充斥着愤怒。杀死神明宠爱之子的一位 无辜的怪物 行动着。◆根据他的由来，从者·萨列里是具有攻击性的存在是很难与其意识相通的从者。使用他的时候一定要注意。（据推测，在异闻带的现世，根据某种补正让他获得了一定程度上的理性。）"]],
			Fe_mozhate:["male","Caster",6,["Fe为死神奏响的葬送曲","Fe音乐神的加护","Fe小小的夜之曲","Fe艺术审美"],["des:举世可数的同时作为天才作曲家的演奏家，拥有可以说达到异常的音乐感和无可动摇的天才性，以多部乐曲残存于后世的十八世纪人物，被神宠爱的孩子，奇迹的天才。	身高/体重：180cm・65kg出典：史实地域：欧州属性：中立・善　　性別：男性暗暗地，为与自己爱的人有相同的属性这件事而欢欣。与一个魔术的世界也为之倾倒的秘密结社有关的传说般的存在，作为英灵的他，以俄耳甫斯处由来的音乐魔术作为起源，也像传说的那样与所罗门的魔术有很深的渊源，通常他是通过声音作为媒介用音乐魔术攻击。音乐神的加护（伪）EX本体是显示艺术女神缪斯的加护的技能，能听到并理解所有的声音，使天才般的演奏成为可能，更甚的是，可以将音乐魔术的行使加强（plus）补正，这些效果可以作为“自身之力”被发挥出来。对待音乐一向真挚，至高的圣人。作为人类——非常遗憾是属于人渣那一类的，意外的喜欢与人说话，也喜欢开玩笑。在有自己超喜欢的玩笑的场合之下会故意（被玛丽这么说）把（玩笑）素材封印起来。他的音乐，常常在歌颂一个女性，是在他幼小的时候被召进维也纳的宫殿的时候遇到的，仿佛外表充满光辉的少女，玛丽亚，即后年作为“玛丽・安托瓦内特”在处刑台上如露般消失的，悲剧的公主——	他，在玛丽亚死之前先于她急逝了。我要是还活着的话，她就不会迎来那样悲惨的在断头台上的结束。正因为辨明了自己没有这个资格，他就不需要为了，与本应充满光辉的玛丽亚一起找到幸福的日子这件事而许愿了"]],
			Fe_banbenlongma:["male","Rider",6,["Fe翱翔天际宛如龙","Fe船中八策","Fe维新的英雄"],["des:萨长同盟的重要人物。组建了龟山社中（后来的海援队），并极力造就了大政奉还的为明治维新做出巨大贡献的一位志士。其本身是一位气质飘然的20岁左右的青年。虽是北辰一刀流的高手，但他讨厌战争，是天生的老好人。他身边常会有一位谜之美女相伴。身高／体重：178cm・72kg出典：史实地域：日本属性：中立・中庸　　　性別：男性「咦？阿龙的信息也在？」身高／体重：173cm・57kg出典：帝都圣杯奇谭地域：日本属性：混沌・善　　　性別：女性「阿龙的秘密大公开咯」	维新的英雄坂本龙马。在以日本为举办地，名为『帝都圣杯奇谭』的圣杯战争中，他是一位知名度能和织田信长匹敌，并且具有特殊型骑乘宝具的强力英灵。为了隐藏真名，平常的他都是用流畅的标准日语与人交流的，但有时也会露出一点土佐口音。阿龙并不是史实上那位，而是被封印在某座山上的一种不顺从之物。龙马在年少气盛时拔掉了封印用的长矛，把她解放了出来。○船中八策：Ａ坂本龙马提出的。展现新国家形式的八条政策。记载了对当时来说具备划时代意义的近代条文。是一种即便陷入困境，也能指出通往美好未来的希望之路的技能。○维新的英雄：Ａ跨越了幕末这个动乱的时代，为明治维新这种史上极为稀有的大改革做出贡献的龙马获得的特别技能。○领导力：Ｃ＋虽然无法运营一个国家，但是能让志同道合的伙伴保持可以两肋插刀的强固羁绊。龙马的这个技能，强大到能让当时和他思想对立的集团与其联手。〇怪力：Ａ具有强大马力的阿龙具备的技能，虽然是龙，但仍然有马力这种谜之标准呢。〇神性：Ｂ－非常坚硬的阿龙具备的技能。她拥有刀枪不入的肌肤，垂到脚的长发也很坚固甚至可以划伤地面。○暴走：Ｂ触摸脖子上的逆鳞时就会一时之间变成狂化状态的阿龙具备的技能。『翱翔天际宛如龙』等级：ＥＸ　种类：对军宝具范围：２～５０　最大捕捉：５００人自律系人型宝具，平常是名为「阿龙」的黑发女性，通过真名解放就会变成巨大的龙。即便是平常的人形态，她也具备与从者不相上下的怪力以及战斗力。环绕在她身上的「神秘」也有着普通攻击根本伤不到她分毫的巨大防御力。真名解放时的她彰古龙具有的威容，发挥出压倒性的实力。等级的ＥＸ是无法判断的意思。一直跟在龙马身边的黑发女性阿龙。被封印在山上的她，因龙马的救助而对他一见钟情，以报恩为理由自己来到龙马身边成了他的妻子。严格来讲，她不是龙，而是类似蛟或者大蛇这类还没有完全化为龙的怪物的存在。在幕末时，龙马造就伟业的时候，或许多数是有她在身边协助，或许是没有。顺便，很不巧的是，龙马死时她没有在他身边，所以没能救下他。悲痛万分的她选择悄悄地沉入海底消失，甚至没有化为龙升天。——不想斩杀任何人 也不想朝任何人开枪。最初，是为了附近的孩子，接着是为了乡里的友人，然后是为了志同道合的同伴，最终是为了日本这个国家。生下来就是老好人的他，从始至终，都在为了他人在这个时代奔波。他得到了很多人的崇敬，也得到了很多人的厌恶，最终他被人残忍地杀害与世长辞。但他并没有为此感到怨恨与后悔，直到最后一刻也盼望着让大家快乐生活的世界。仅此而已。"]],
			Fe_paerwadi:["female","Lancer",5,["Fe见恋不为,无爱也","Fe女神的恩惠","Fe女神的神核","Fe迦摩之灰"],["des:她是印度神话中最高主神湿婆的伴侣……不过，却是一位与战争无缘的温柔女神。本质为神灵，这次借用了与自己很合拍的凭依少女的身体得以现界。虽说是个贤淑、文静、什么家务活都会做的超理想型的人妻系角色、但她的真实模样会是什么样呢―――？身高／体重：156cm·46kg出处：印度神话地区：印度属性：秩序·善　　　性別：女性硬要说的话就是光之后辈。帕尔瓦蒂在印度神话中是破坏与创造之神湿婆的妻子。其常常被人们认定成无主神权威的作为湿婆贤妻存在的女神。然而，湿婆妻子的化身中，也有以「战神」之名被传颂的几位女神，即杜尔迦（难近母）与迦梨（时母）等。这些女神虽然与帕尔瓦蒂是不同的灵基，但其神核都与帕尔瓦蒂一致帕尔瓦蒂可能会以Rider的职阶现界，若是Rider职阶，就会从湿婆神那里借来圣牛难迪。但难迪本就是掌管丰收的圣牛，因此其拥有在神兽中十分显眼的低攻击力。	『见恋不为，无爱也』等级：ＥＸ　种类：对军宝具范围：５~１０　最大捕捉：３０人trishūla Shakti。帕尔瓦蒂将从湿婆那获得的三叉戟trishūla进行限定解放。因这把湿婆赐予她的武器，帕尔瓦蒂得到了Lancer的职阶。自然，她无法像湿婆那样发挥这把武器的真价值，但是也因此顺势保护了她作为英灵的结构。○迦摩之灰：ＥＸ帕尔瓦蒂是一位温和，不太擅长战斗的女神然而，这并不代表她的心是软弱的。她对心爱之人的思念比任何一位神都要强烈，深邃。她甚至会为了自己心爱的人，破坏自己的身躯，燃烧自己的神性去战斗。虽说只是瞬间点燃的火焰，但其力量足以和湿婆神妻子的其中一位化身——破坏女神迦梨（时母）匹敌。最重要的是，这与湿婆的想法无关。因为帕尔瓦蒂有着就算被所爱之人无视，也会为了他而独自培育爱情的特性。这份爱是十分专一的，然而，就是有点……哦不，应该说是神话级别的沉重○女神的恩惠：Ａ＋从女神（善）那获得的赠礼。是根据从者饥渴难耐之际，刎颈取血的故事中升华的技能。○女神的神核：Ｂ代表天生便是完美的女神的技能。精神与肉体有着绝对的维持性。可以让精神系的干涉大量削减，且肉体不会成长，不管摄取多少卡路里体型都不会变。虽然因为是疑似英灵，等级停留在了B，不过这种事情无所谓了。因为 体型！　不会！　变化啊！女神吸收了作为凭依的少女身上的闪光点。温和具有包容力的性格。不会擅自做主，十分贤惠，会在一旁支援master的才女。……综上所述，她有着很高的理想主人公气质，但因为不爱张扬，总会选择脚踏实地的方法，因此有些迟钝。同时，虽然性格温和，但却外柔内刚，不管受到怎样的痛苦都不会屈服，可以说是个极其固执与坚强的人。所以，她这种人，一旦生气起来就会非常恐怖，帕尔瓦蒂在自己的仇恨没有亲手解决之前，是绝对不会忘却的。	本质为以『凭依的少女』的善性构成的疑似英灵。不过，这不代表其没有恶性。所谓有光便会有影，正义之中也会有不义。这位『凭依的少女』具有病娇性质……一旦错误对待就会非常危险。虽然这一点并不强烈但是仍然残留着。话虽如此，只是稍微有点生气的她是不会去做坏事的，即便烦恼也不会从秩序中脱离，这也是『光之属性』的特征。因为帕尔瓦蒂有着『我本无错』的神格，所以畏缩不前，怕生的性质也得到缓解，社交性也有所提升。虽然会因为一点小事情就生气闹别扭，但是她仍是一位不管是误会还是认知偏差，都会深加思考并向对方道歉的美人。"]],
			Fe_chongtianzongsi:["female","Saber",3,["Fe病弱","Fe无明三段突刺","Fe缩地"],["des:以幕末京都为活动中心的治安组织、新选组的一番队队长、冲田总司。即便在作为剑客集团被恐惧着的新选组中冲田也是被誉为最强的天才剑士的存在。身高／体重：158cm・45kg出典：史实地域：日本属性：中立・中庸　　　性別：女性「嗯嗯，光炮是放不出来的」身着时髦的和服，十五岁左右的可爱少女。为了隐藏过于显眼的本来装束，而使用了这套衣装。兼有冷酷的杀手脸和招小孩子喜欢的脸。无明三段突刺对人魔剑。最大捕捉：1人。稀世的天才剑士、冲田总司的必杀魔剑。“壹之突刺”内包含了“贰之突刺”和“参之突刺”。由平正眼的架势发动，不是“几乎同时”而是“完全同时”施展出水平突刺，是由无与伦比的技巧和速度孕育出的秘剑。三段突刺的瞬间，壹之突刺、贰之突刺、参之突刺在“同个位置”上“同时存在”。即使防住壹之突刺，同个位置也会被贰之突刺、参之突刺贯穿——因为存在着这样的矛盾，剑尖会引发局部的“事象饱和”。因此，实质上三段突刺是无法防御的剑戟。利用事象饱和，其在物体破坏方面也很优秀。同时有着超绝技巧和天赋之才的真正的天才剑士，却以作为Saber职阶的低耐久力、低对魔力引人注目。这是生前的病痛、以及后世民众的印象所改写的结果，某种意义上承受了和“无辜的怪物”相似的诅咒。寄予圣杯的愿望是“战斗到最后一刻”。完成生前未果的约定，是她的悲愿。在成为了英灵的现在，常为与同伴们一起战斗的事懊悔着，对于自己作为新选组队员的失格深信不疑"]],
			Fe_chongtianzongsi2:["female","AlterEgo",6,["Fe极地","Fe不断","Fe无边","Fe绝剑·无穹三段"],["des:仅为了那一次的闪耀而进行了调整的决战英灵。别名『魔神・冲田总司・Alter Natives』。身高／体重：163cm・51kg出典：史实地域：日本属性：中立・中庸　　　性別：女性「我是魔神Sab……不，是魔神AlterEgo冲田总司Alter酱」这是冲田总司的另一面，为了行使抑制力而改变了灵基，进行了调整的极特殊英灵。因为是以仅此一次的显现为目的进行了调整，所以除了基本特性外，灵基转化为了和原本的冲田完全不同的东西。没有以冲田最适应的Saber阶级，而是以AlterEgo阶级被召唤也是这个原因或许她是年纪轻轻就与世长辞的冲田总司，可能会到达的某种形态。○单独行动：Ａ作为抑制力的守护者，她可以进行单独行动。她会在绝望的情况下显现，为了能孤身一人将目标歼灭或者同归于尽，此技能调整到了高等级。〇对魔力：Ｂ和原本的冲田不同，因为要和超凡的对手对战，所以保持着Saber阶级所具备的强大对魔力。顺便，病弱特性也克服了。很狡猾吗？但即便你这么说也……o极地：Ａ可以在一切空间内施展十全武力的究极步法。〇不断：Ｂ一刻不停地照亮战斗之路的不断之光，这便是那一天的记忆之证。○无边：Ａ笼罩整个世界的无边之光，也是灭杀天魔的金色极光。『绝剑・无穹三段』等级：Ａ　种类：对界宝具无量，无碍，无边，三束光芒汇聚到一起便可形成无穹。是释放出耀眼黑光的魔神・冲田总司的必杀魔剑。能将原本不存在，甚至不可以存在的东西强制驱逐出这个世界，达到消灭的目的。她是使用特殊的大太刀『炼狱剑』放出此招的。大太刀的名字『炼狱』是她自己取的，原本这只是一把无名的谜之兵器。不知为何，刀本身似乎有自主意识，根据使用者的心情性能也会发生很大的改变。心情好的时候它的刀身中央就会闪烁出红光。其本身似乎很喜欢炼狱这个名字。"]],
			Fe_weigong:["male","Archer",5,["Fe无限剑制","Fe鹰之瞳","Fe心眼","Fe投影魔术"],["des:由于不是和其他英灵一样出自典故，不能被称为正统的英灵。由于这个英灵被称为守护者，所以它就像是由人类“应该存活下去”这个集体无意识中诞生出的像是防卫装置的东西。这个防卫装置所在的那一方被称为人类立场的抑止力，要点在于要选择没有名字的人们，没有知名度的正义的代理人。虽然其作为弓之骑士的存在被确立，但生前并不是弓兵而是魔术师。使用投影魔术，模仿制造众多名剑、魔剑的赝品作者（Faker）。基本武装是弓并不是因为他作为英灵强力到了那种地步，应该考虑最终的战斗风格确定为狙击的这个原因。	心眼（真）：Ｂ从修行、锻錬中培养出的洞察力。能够在劣势中冷静地把握自身状况与敌人能力，并找出活路的战斗理论。即使只有1%的逆转可能，都能够把握住机会并以战术实行。冷漠工作的现实主义者。个性悲观，话里也总是带着刺。不是工作狂，还有在关键时刻开薄情玩笑的花花公子的一面。虽然倾向于合理的战术和普遍的正义，却因为自身源自“想要拯救万人”的理想，而未必能将自己的冷酷贯彻到底。“无限剑制”等级：Ｅ~A＋＋种类：？？Unlimited Blade Works。被称为固有结界的特殊魔术。在一定时间内，将现实改写为心象世界，至今为止术者见过并能够认知的武器、在这个地方使用过的武器都能瞬间复制、保存。但是，复制的武器等级会下降一级。投影魔术：Ｃ（条件满足时A＋）将道具凭印象在数分之内就复制出来的魔术。Archer所爱用的双剑“干将・莫邪”也是利用投影魔术制作出来的东西。只在投影对象的类别为“剑”时，等级（rank）会飞跃性地向上提升。由于这个“可以多次制造出赝品”的特性，卫宫可以将投影出的宝具破坏。使之爆发可以造成瞬间性的威力提升。	身高／体重：187cm・78kg出典：Fate/stay night地域：日本属性：中立・中庸　　性別：男性与自己的对决？算了算了，这并不是一件好事"]],
			Fe_weigong2:["male","Archer",5,["Fe嗤笑的铁心","Fe防弹加工","Fe狂剑魔术","Fe魔戮罪恶剑制"],["des:他并非是社会造就的无名，而是舍弃姓名，堕落的无心执行者。记忆残缺，丧失了过去。男子抛弃了道德，蔑视着亲情与爱情，并不断地嗤笑着如同行尸走肉的自己。身高／体重：187cm·78kg出典：Fate/Grand Order地域：日本属性：混沌·恶 性别：男性「你问我正义的伙伴可以去做坏事吗？当然可以啊，毕竟我的内心早已腐败不堪了。」没有理想，也没有自身想法。因此做事非常高效。如他自称的那样，是如同机器一般的无名反英雄。因为其最根本的部分早已腐坏，所以为了达成目的，他会不断上演毫无慈悲的杀戮。〇嗤笑的铁心：Ａ反转时所被赋予的精神污染技能。但与一般的精神污染不同，他被强加上了固定的思考概念，也就是说更接近于某种洗脑。这种思考概念以守护人理为优先事项，除此以外的事情皆可抛弃。即让持有者执行原本的守护者该做的事情。若没有被赋予A级的话，那么在反转的状态下，持有者便无法发挥全力。『无限剑制』等级：Ｅ～A＋＋ 种类：对人宝具范围：30～60 最大捕捉：？Unlimited Lost Works。『无限剑制』是将锻剑特化的魔术师，穷极一生才达到的某种终极境界。在这个固有结界之内，积蓄着所有他见到过的，拥有「剑」之概念的兵器。……然而，这个男人却选择将无限剑制放在对手的体内。虽然是极小的固有结界，但在体内发动威力十足，可让对手粉身碎骨。当然，让一个人的人生发生如此巨大的改变肯定是有缘由的。据说让这位钢筋铁骨的男子的灵魂堕落的人是如圣母般慈爱的女性。男子在对这股魔性穷追猛打之时，亲手杀死了众多信徒，了解了他们的生命。作为代价，他就像是赎罪一般，就此坠入了魔道。"]],
		};
		for(var i in character){
			var c=character[i];
			if(lib.config.mode=='wangzhezhizhan'){
				var skill=c[3][c[3].length-1];
				lib.translate[skill+'_append']='<b><p align=center>以下为奋发技，当你体力小于等于X时发动<br>(X为体力上限的一半+1)</b>';
				c[3].push('wzzz_虚数空间');
			};
			if(c[4]==undefined) c[4]=[];
			c[4].push('ext:扩展ol/'+i+'.jpg');
			c[4].push('Fe');
			c[4].push('forbidai');
			if(c[5]==undefined) c[5]=[];
			c[5].push(['wu','shu','wei','qun'].randomGet());
		};
		game.addCharacterPack({
			character:character,
			characterTitle:{
				Fe_lansiluote:"Lancelot・(Saber)",
				Fe_lansiluote2:"Lancelot・(Berserker)",
				Fe_zhende:"Jeanne d'Arc・(Ruler)",
			    Fe_zhende2:"Jeanne d'Arc・(Alter)(Avenger)",
				Fe_modeleide:"Mordred・(Saber)",
			    Fe_modeleide2:"Mordred・(Rider)",
				Fe_mizhinvzhu:"Mysterious Heroine X・(Assassin)",
			    Fe_mizhinvzhu2:"Mysterious Heroine X・(Berserker)",
				Fe_aertuoliya:"Altria Pendragon・(Saber)",
			    Fe_aertuoliya2:"Altria Pendragon・(Alter)(Saber)",
				Fe_shanzhiweng:"Yama no okina・(Assassin)",
			    Fe_kaitangshoujieke:"Jack the Ripper・(Assassin)",
				Fe_jiaerna:"Karna・(Lancer)",
			    Fe_azhouna:"Arjuna・(Archer)",
				Fe_aertuoliya3:"Altria Pendragon・(Lancer)",
			    Fe_aertuoliya4:"Altria Pendragon・(Alter)(Lancer)",
				Fe_zhugekongming:"El-Melloi II・(Caster)",
			    Fe_yisikandaer:"Iskandar・(Rider)",
				Fe_enqidu:"Enkidu・(Lancer)",
			    Fe_jinshanshan:"Gilgamesh・(Archer)",
				Fe_fuermosi:"Sherlock Holmes・(Ruler)",
				Fe_moliyadi:"James Moriarty・(Archer)",
				Fe_abigaier:"Abigail Williams・(Foreigner)",
				Fe_geshibeizhai:"Katsushika Hokusai・(Foreigner)",
				Fe_zhitianxinchang:"Oda Nobunaga・(Archer)",
				Fe_zhitianxinchang2:"Oda Nobunaga・(Berserker)",
				Fe_andongniao:"Antonio Salieri・(Avenger)",
			    Fe_mozhate:"Wolfgang Amadeus Mozart・(Caster)",
				Fe_banbenlongma:"Ryouma Sakamoto・(Rider)",
				Fe_paerwadi:"Parvati・(Lancer)",
				Fe_chongtianzongsi:"Souji Okita・(Saber)",
				Fe_chongtianzongsi2:"Souji Okita・(Alter)(AlterEgo)",
				Fe_weigong:"Emiya・(Archer)",
				Fe_weigong2:"Emiya・(Archer)(Alter)",
			},
			skill:{
				"FeNP":{
					//mark:true,
					marktext:"NP",
					intro:{
						content:function (storage){
							return '当前NP：'+storage+'<br><br>'+
							'<table style="width:100%;" border="1">'+
							'<tr>'+
							'<td width="30%" style="text-align:center;vertical-align:middle;font-size:16px">NP</td>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">效果</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="30%" style="text-align:center;vertical-align:middle;font-size:16px">≥100</td>'+
							'<td width="70%" style="text-align:left;vertical-align:middle;font-size:16px">摸牌+1,回复体力+1,手牌上限+1</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="30%" style="text-align:center;vertical-align:middle;font-size:16px">≥200</td>'+
							'<td width="70%" style="text-align:left;vertical-align:middle;font-size:16px">受到的伤害-1并增加1点护甲</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="30%" style="text-align:center;vertical-align:middle;font-size:16px">≥300</td>'+
							'<td width="70%" style="text-align:left;vertical-align:middle;font-size:16px">免疫受到的体力流失和法术伤害</td>'+
							'</tr>'+
							'</table><br>'+
							'<table style="width:100%;" border="1">'+
							'<tr>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">条件</td>'+
							'<td width="35%" style="text-align:center;vertical-align:middle;font-size:16px">奖励</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">造成/受到伤害</td>'+
							'<td width="35%" style="text-align:center;vertical-align:middle;font-size:16px">+2~20NP</td>'+
							'</tr>'+
							'<tr>'+
							'<tr>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">回复/流失体力</td>'+
							'<td width="35%" style="text-align:center;vertical-align:middle;font-size:16px">+2~20NP</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">获得/失去牌</td>'+
							'<td width="35%" style="text-align:center;vertical-align:middle;font-size:16px">+2~5NP</td>'+
							'</tr>'+
							'<tr>'+
							'<td width="70%" style="text-align:center;vertical-align:middle;font-size:16px">击杀一名角色</td>'+
							'<td width="35%" style="text-align:center;vertical-align:middle;font-size:16px">+100NP</td>'+
							'</tr>'+
							'</table>';
						},
					},
				},
				"_FeNP1": {
					trigger: {
						global: "dieAfter",
					},
					forced: true,
					popup: false,
					filter: function (event, player) {
						return player.isFe_c()&&player == event.source;
					},
					content: function () {
						if(player.storage.FeNP == undefined) player.storage.FeNP = 0;
						player.storage.FeNP += 100;
						game.log(player, '击杀', trigger.player, '，增加了100NP');
						player.markSkill('FeNP');
						player.syncStorage('FeNP');
					},
				},
				"_FeNP2": {
					trigger: {
						player: "damageEnd",
						source: "damageEnd",
					},
					forced: true,
					popup: false,
					filter: function (event, player) {
						return player.isFe_c();
					},
					content: function () {
						if(player.storage.FeNP == undefined) player.storage.FeNP = 0;
						var JK = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20].randomGet();
						player.storage.FeNP += JK;
						//game.log(trigger.source, '增加了', JK, 'NP');
						game.log(player, '增加了', JK, 'NP');
						player.markSkill('FeNP');
						player.syncStorage('FeNP');
					},
				},
				"_FeNP3": {
					trigger: {
						player: ["loseEnd", "gainEnd"],
					},
					forced: true,
					popup: false,
					filter: function (event, player) {
						return player.isFe_c();
					},
					content: function () {
						if(player.storage.FeNP == undefined) player.storage.FeNP = 0;
						var JL = [2, 3, 4, 5].randomGet();
						player.storage.FeNP += JL;
						game.log(trigger.player, '增加了', JL, 'NP');
						player.markSkill('FeNP');
						player.syncStorage('FeNP');
					},
				},
				"_FeNP4": {
					trigger: {
						player: ["recoverEnd", "loseHpEnd"],
					},
					forced: true,
					popup: false,
					filter: function (event, player) {
						return player.isFe_c();
					},
					content: function () {
						var Jk1 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20].randomGet();
						player.storage.FeNP += Jk1;
						game.log(trigger.player, '增加了', Jk1, 'NP');
						player.markSkill('FeNP');
						player.syncStorage('FeNP');
					},
				},
				"FeNP5": {
					trigger: {
						player: ["phaseDrawBegin", "recoverBegin"],
					},
					forced: true,
					popup: false,
					filter: function (event, player) {
						return player.isFe_c()&&player.syorage.FeNP >= 100;
					},
					content: function () {
						game.log(trigger.player, '获得NP额外加成');
						trigger.num++;
					},
					mod: {
						maxHandcard: function (player, num) {
							if(player.storage.FeNP >= 100) return num++;
						},
					},
					group: ["FeNP5_2", "FeNP5_1", "FeNP_3"],
					subSkill: {
						1: {
							trigger: {
								player: "damageBegin",
							},
							forced: true,
							popup: false,
							filter: function (event, player) {
								return player.isFe_c()&&player.syorage.FeNP >= 200;
							},
							content: function () {
								game.log(trigger.player, '本次伤害-1并增加1点护甲');
								trigger.num -= 1;
								player.changeHujia();
							}
						},
						2: {
							trigger: {
								player: "damageBegin",
							},
							forced: true,
							popup: false,
							filter: function (event, player) {
								return player.isFe_c()&&player.syorage.FeNP >= 300 && event.nature;
							},
							content: function () {
								game.log(trigger.player, '免疫本次法伤');
								trigger.cancel();
							}
						},
						3: {
							trigger: {
								player: "loseHpBegin",
							},
							forced: true,
							popup: false,
							filter: function (event, player) {
								return player.isFe_c()&&player.syorage.FeNP >= 300;
							},
							content: function () {
								game.log(trigger.player, '免疫本次体力流失伤害');
								trigger.cancel();
							}
						},
					},
				},
				"_FeNP9": {
					trigger: {
						global: "gameDrawAfter",
					},
					forced: true,
					popup: false,
					content: function () {
						if(player.storage.FeNP == undefined) {
							player.storage.FeNP = 0;
							if(player.isFe_c()){
								player.markSkill('FeNP');
							};
						}
					},
				},
				/*
				"_FeNP10": {
					trigger: {
						global: 'gameStart'
					},
					forced: true,
					popup: false,
					filter: function (event,player) {
						return player.isFe_c()&&!_status.connectMode;
					},
					content: function () {
						player.markSkill('FeNP');
						//player.markSkill('FeNP5');
					}
				},
				*/
			"Fe骑士不死于徒手":{
                audio:["Fe骑士不死于徒手",2],
                trigger:{
                    player:"dieAfter",
                },
                nobracket:true,
				direct:true,
				filter:function (event,player){
return player.storage.FeNP>=300;
},
                content:function (){
        "step 0"
		player.storage.FeNP-=300;
        player.chooseTarget(2,get.prompt('骑士不死于徒手'),function(card,player,target){
                    return target.hp>0;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('骑士不死于徒手',target);
            target.die();
        }
    },
                ai:{
                    expose:0.5,
                },
            },
			"Fe无穷之武炼":{
                nobracket:true,
                audio:["Fe无穷之武炼",2],
                group:"Fe无穷之武炼_1",
                trigger:{
                    player:"equipBegin",
                },
                forced:true,
                filter:function (event,player){
        return player.num('e',{subtype:'equip1'})&&get.subtype(event.card)== 'equip1';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    efFect:{
                        player:function (card,player,target){
                if(get.subtype(card)=='equip1') return[1,10];
            },
                    },
                },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        audio:["Fe无穷之武炼",2],
                        forced:true,
                        filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=20;
},
                        content:function (){
							player.storage.FeNP-=20;
                      trigger.source.loseHp(2)._triggered=null;          
},
                        sub:true,
                    },
                },
            },
			 "Fe圆桌信仰":{
                nobracket:true,
                audio:["Fe圆桌信仰",2],
                trigger:{
                    player:"loseHpBefore",
                },
                forced:true,
                filter:function (event,player){
return Math.random()<=0.5;
},
                content:function (){
trigger.cancel();
},
            },
			"Fe狂化":{
                audio:["Fe狂化",2],
                trigger:{
                    player:"loseEnd",
                },
                nobracket:true,
                forced:true,
                filter:function (event,player){
        return player.num('h')<5;
    },
                content:function (){
        player.draw(Math.min(5)-player.num('h'));
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
			"Fe无毁的湖光":{
                nobracket:true,
                group:["Fe无毁的湖光_1","Fe无毁的湖光_2","Fe无毁的湖光_3","Fe无毁的湖光_4"],
                subSkill:{
                    "1":{
                        audio:["Fe无毁的湖光",2],
                        enable:["chooseToUse","chooseToRespond"],
                        prompt:"将一张红桃牌当桃使用",
                        position:"hej",
                        viewAs:{
                            name:"tao",
                            suit:"heart",
                            number:12,
                        },
                        filterCard:function (card){
      return get.suit(card)=='heart';
},
                        ai:{
                            basic:{
                                order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
                                useful:[8,6.5],
                                value:[8,6.5],
                            },
                            result:{
                                target:function (player,target){
                // if(player==target&&player.hp<=0) return 2;
                var nh=target.num('h');
                var keep=false;
                if(nh<=target.hp){
                    keep=true;
                }
                else if(nh==target.hp+1&&target.hp>=2&&target.num('h','tao')<=1){
                    keep=true;
                }
                var mode=get.mode();
                if(target.hp>=2&&keep&&target.hasFriend()){
                    if(target.hp>2) return 0;
                    if(target.hp==2){
                        for(var i=0;i<game.players.length;i++){
                            if(target!=game.players[i]&&ai.get.attitude(target,game.players[i])>=3){
                                if(game.players[i].hp<=1) return 0;
                                if(mode=='identity'&&game.players[i].isZhu&&game.players[i].hp<=2) return 0;
                            }
                        }
                    }
                }
                if(target.hp<0&&target!=player&&target.identity!='zhu') return 0;
                var att=ai.get.attitude(player,target);
                if(att<3&&att>=0&&player!=target) return 0;
                var tri=_status.event.getTrigger();
                if(mode=='identity'&&player.identity=='fan'&&target.identity=='fan'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='fan'&&tri.source!=target){
                        var num=0;
                        for(var i=0;i<game.players.length;i++){
                            if(game.players[i].identity=='fan'){
                                num+=game.players[i].num('h','tao');
                                if(num>2) return 2;
                            }
                        }
                        if(num>1&&player==target) return 2;
                        return 0;
                    }
                }
                if(mode=='identity'&&player.identity=='zhu'&&target.identity=='nei'){
                    if(tri&&tri.name=='dying'&&tri.source&&tri.source.identity=='zhong'){
                        return 0;
                    }
                }
                if(mode=='stone'&&target.isMin()&&
                player!=target&&tri&&tri.name=='dying'&&player.side==target.side&&
                tri.source!=target.getEnemy()){
                    return 0;
                }
                return 2;
            },
                            },
                            tag:{
                                recover:1,
                                save:1,
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe无毁的湖光",2],
                        enable:["chooseToUse","chooseToRespond"],
                        prompt:"将一张方片牌当无懈可击使用",
                        position:"hej",
                        viewAs:{
                            name:"wuxie",
                            suit:"diamond",
                            number:3,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"diamond","number":3,"name":"shan","cardid":"3006584346","_transform":"translateX(0px)","_mouseentercreated":false,"clone":{"name":"shan","suit":"diamond","number":3,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":1416},"timeout":1352,"original":"h"}],
                        },
                        filterCard:function (card){
      return get.suit(card)=='diamond';
},
                        ai:{
                            basic:{
                                useful:[6,4],
                                value:[6,4],
                            },
                            result:{
                                player:1,
                            },
                            expose:0.2,
                        },
                        sub:true,
                    },
                    "3":{
                        audio:["Fe无毁的湖光",2],
                        enable:["chooseToUse","chooseToRespond"],
                        prompt:"将一张黑桃牌当惊雷闪使用",
                        position:"hej",
                        viewAs:{
                            name:"jingleishan",
                            suit:"spade",
                            number:8,
                            cards:[{"node":{"image":{},"info":{},"name":{},"name2":{},"background":{},"intro":{},"range":{}},"storage":{},"vanishtag":[],"_uncheck":[],"suit":"spade","number":8,"name":"sha","nature":"thunder","cardid":"1965957351","_transform":"translateX(112px)","_mouseentercreated":false,"clone":{"name":"sha","suit":"spade","number":8,"node":{"name":{},"info":{},"intro":{},"background":{},"image":{}},"_transitionEnded":true,"timeout":872},"timeout":843,"original":"h"}],
                        },
                        filterCard:function (card){
      return get.suit(card)=='spade';
},
                        ai:{
                            wuxie:function (target,card,player,viewer){
            if(ai.get.attitude(viewer,target)>0&&target.num('h','sha')){
                if(!target.num('h')||target.hp==1||Math.random()<0.7) return 0;
            }
        },
                            basic:{
                                order:9,
                                useful:[5,1],
                                value:5,
                            },
                            result:{
                                target:function (player,target){
                if(target.hasSkillTag('nothunder')) return 0;
                var num=0;
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].ai.shown==0) num++;
                }
                if(num>1) return 0;
                var nh=target.num('h');
                if(lib.config.mode=='identity'){
                    if(target.isZhu&&nh<=2&&target.hp<=1) return -100;
                }
                if(nh==0) return -2;
                if(nh==1) return -1.7
                return -1.5;
            },
                            },
                            tag:{
                                respond:1,
                                respondSha:1,
                                damage:1,
                                natureDamage:1,
                                thunderDamage:1,
                                multitarget:1,
                                multineg:1,
                            },
                        },
                        sub:true,
                    },
                    "4":{
                        audio:["Fe无毁的湖光",2],
                        enable:["chooseToUse","chooseToRespond"],
                        prompt:"将一张梅花牌当杀使用",
                        position:"hej",
                        viewAs:{
                            name:"sha",
                            suit:"club",
                            number:3,
                        },
                        filterCard:function (card){
      return get.suit(card)=='club';
},
                        ai:{
                            basic:{
                                useful:[5,1],
                                value:[5,1],
                            },
                            order:3,
                            result:{
                                target:function (player,target){
                if(player.hasSkill('jiu')&&!target.num('e','baiyin')){
                    if(ai.get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3.05+(sgs.getDeFenseSha(target,player))/30;
                    }
                }
                return -1.55+(sgs.getDeFenseSha(target,player))/30;
            },
                            },
                            tag:{
                                respond:1,
                                respondShan:1,
                                damage:function (card){
                if(card.nature=='poison') return;
                return 1;
            },
                                natureDamage:function (card){
                if(card.nature) return 1;
            },
                                fireDamage:function (card,nature){
                if(card.nature=='fire') return 1;
            },
                                thunderDamage:function (card,nature){
                if(card.nature=='thunder') return 1;
            },
                                poisonDamage:function (card,nature){
                if(card.nature=='poison') return 1;
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
			"Fe湖之骑士":{
                nobracket:true,
                audio:["Fe湖之骑士",2],
                group:["Fe湖之骑士_1","Fe湖之骑士_2","Fe湖之骑士_3"],
                trigger:{
                    player:"damageEnd",
                },
                priority:10,
                forced:true,
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                subSkill:{
                    "1":{
                        audio:["Fe湖之骑士",2],
                        trigger:{
                            player:"loseHpEnd",
                        },
                        priority:10,
                        forced:true,
                        content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='jiguan';
        });
        event.card=card;
        'step 1'
       player.gain(game.createCard(),'gain2');
    },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe湖之骑士",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        priority:10,
                        forced:true,
                        content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='basic';
        });
        event.card=card;
        'step 1'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
    },
                        sub:true,
                    },
                    "3":{
                        audio:["Fe湖之骑士",2],
                        trigger:{
                            player:"recoverEnd",
                        },
                        priority:10,
                        forced:true,
                        content:function (){
    'step 0'
    var card=get.cardPile(function(card){
        return get.type(card)=='trick';
    });
    event.card=card;
    'step 1'
    if(event.card){
         player.gain(game.createCard(event.card),'gain2');
    }
            },
                        sub:true,
                    },
                },
            },
			"Fe最强圆桌":{
                nobracket:true,
                audio:["Fe最强圆桌",2],
                trigger:{
                    player:["phaseBegin","phaseEnd"],
                },
                forced:true,
				filter:function (event,player){
return player.storage.FeNP>=40;
},
                content:function (){
              player.changeHujia(2);
    },
            },
			  "Fe骑士宣言":{
                nobracket:true,
                skillAnimation:true,
                audio:["Fe骑士宣言",1],
                unique:true,
                priority:-10,
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                filter:function (event,player){
        if(player.storage.Fe骑士宣言) return false;
        return player.num('h')==0;
    },
                content:function (){
        player.loseMaxHp(2);
        player.storage.Fe骑士宣言=true;
        player.addSkill('Fe谦卑');
        player.addSkill('Fe正直');
        player.addSkill('Fe怜悯');
        player.addSkill('Fe英勇');
        player.addSkill('Fe公正');
        player.addSkill('Fe忠诚');
        player.addSkill('Fe荣誉');
        player.addSkill('Fe牺牲');
    },
            },
			  "Fe缚锁全断・过重湖光":{
                trigger:{
                    player:"dying",
                },
                nobracket:true,
                audio:["Fe缚锁全断・过重湖光",2],
                priority:7,
                unique:true,
                forced:true,
                filter:function (event,player){
                 return player.hp<=0&&player.storage.FeNP>=100;
    },
                content:function (){
         'step 0'
		 player.storage.FeNP-=100;
        player.judge();
        'step 1'
            if (get.number(result.card)>player.maxHp)
               player.recover();
            if (get.number(result.card)<player.maxHp)
             player.recover(player.maxHp-player.hp);
             player.loseMaxHp();
    },
                ai:{
                    threaten:0.8,
                },
            },
			"Fe谦卑":{
                audio:["Fe谦卑",1],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.5;
},
                content:function (){
     player.recover();
},
            },
            "Fe正直":{
                audio:["Fe正直",1],
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.5;
},
                content:function (){
      player.gainMaxHp();
},
                mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='shunshou'||card.name=='lebu'||card.name=='guohe'||card.name=='bingliang') return false;
        },
                },
            },
            "Fe怜悯":{
                audio:["Fe怜悯",1],
                trigger:{
                    source:"damageBegin",
                },
                filter:function (event){
        if(event.card&&event.card.name=='sha'){
            if(event.player.get('h').length==0) return true;
        }
        return false;
    },
                forced:true,
                content:function (){
       trigger.untrigger();
       trigger.finish();
},
            },
            "Fe勇气":{
                audio:["Fe英勇",1],
                trigger:{
                    player:"useCard",
                },
                forced:true,
                priority:10,
                filter:function (event){
        return event.card.name=='sha';
    },
                content:function (){
        player.addTempSkill('unequip','useCardAfter');
    },
            },
            "Fe公正":{
                audio:["Fe公正",1],
                trigger:{
                    global:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
     return player!=event.player&&Math.random()<=0.5;
},
                content:function (){
        player.damage();
},
            },
            "Fe忠诚":{
                audio:["Fe忠诚",1],
                trigger:{
                    player:"turnOverAfter",
                },
                filterTarget:true,
                selectTarget:[1,2],
                content:function (){
      target.draw();
      target.recover();
    },
            },
            "Fe荣誉":{
                audio:["Fe荣誉",1],
                trigger:{
                    global:"dieAfter",
                },
                logTarget:"player",
                forced:true,
                content:function (){
        "step 0"
        var controls=[];    
        var skills=trigger.player.get('s',false,false);            
        for(i=0;i<skills.length;i++){
            var info=lib.skill[skills[i]];
            if(!info) continue;    
            if(!lib.translate[skills[i]]) continue;    
            if(!lib.translate[skills[i]+'_info']) continue;    
            if(player.hasSkill(skills[i])) continue;
            if(!controls.contains(skills[i])){
                controls.push(skills[i]);
            }
        }
        if(controls.length==1){
            player.popup(controls[0]);
            player.addAdditionalSkill('Fe荣誉',[controls[0]],true);
            game.log(player,'获得技能','【'+get.translation(controls[0])+'】');event.finish();                            
        }
        else{
            player.chooseControl(controls).set('ai',function(){
                return Math.floor(Math.random()*controls.length);
            }).set('prompt','荣誉：选择获得'+get.translation(trigger.player)+'的一项技能');                                
        }
        "step 1"
        if(result.control){
            player.popup(result.control);
            player.addAdditionalSkill('Fe荣誉',[result.control],true);
            game.log(player,'获得技能','【'+get.translation(result.control)+'】');
        }                        
    },
                ai:{
                    threaten:1.2,
                },
            },
            "Fe牺牲":{
                audio:["Fe牺牲",1],
                trigger:{
                    player:"dieBegin",
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('牺牲'),function(card,player,target){
                    return target.num('he')>0;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('牺牲',target);
            target.turnOver();
        }
    },
                ai:{
                    expose:0.5,
                },
            },	
			"Fe启示录":{
                nobracket:true,
                group:["Fe启示录_1"],
                audio:["Fe启示录",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                priority:-500,
                content:function (){
               if(trigger.num>1) trigger.num=1
},
                subSkill:{
                    "1":{
                        audio:["Fe启示录",2],
                        trigger:{
                            player:"loseHpBefore",
                        },
                        forced:true,
                        popup:false,
                        content:function (){
trigger.untrigger();
trigger.finish();  
},
                        mod:{
                            globalFrom:function (from,to,distance){
            return distance-Infinity;
        },
                        },
                        sub:true,
                    },
                },
            },
			"Fe红莲圣女":{
                nobracket:true,
                group:["Fe红莲圣女_1","Fe红莲圣女_2"],
                subSkill:{
                    "1":{
                        audio:["Fe红莲圣女",2],
                        trigger:{
                            global:"turnOverAfter",
                        },
                        forced:true,
                        filter:function (event,player){
                return player!=event.player&&player.storage.FeNP>=70;
            },
                        content:function (){
							player.storage.FeNP-=70;
                trigger.player.damage(1,'fire')._triggered=null;
            },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe红莲圣女",2],
                        trigger:{
                            player:"turnOverAfter",
                        },
                        forced:true,
						filter:function (event,player){
                return player.hp!=100;
            },
                        content:function (){
                      player.recover();
            },
                        sub:true,
                    },
                },
            },
			 "Fe神明裁决":{
                nobracket:true,
                audio:["Fe神明裁决",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
				filter:function (event,player){
return player.storage.FeNP>=100;
},
                content:function (){
					player.storage.FENP-=100;
    trigger.player.clearSkills(trigger.player.skills.randomGet());
    trigger.player.skip('phase');
    player.recover();
},
            },
			"Fe吾神在此":{
                nobracket:true,
                group:["Fe吾神在此_1"],
                trigger:{
                    player:"damageBegin",
                },
                audio:["Fe吾神在此",2],
                forced:true,
                filter:function (event,player){
       return Math.random()<=0.5&&player.storage.FeNP>=70;;
},
                content:function (){
					"step 0"
					player.storage.FeNP-=70;
					"step 1"
        trigger.player.out();
        trigger.goto(1);
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseEnd",
                        },
                        frequent:true,
                        filter:function (event,player){
        if(player.countCards('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                        content:function (){
        player.draw();
    },
                        ai:{
                            threaten:0.8,
                            efFect:{
                                target:function (card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                            },
                            noh:true,
                            skillTagFilter:function (player,tag){
            if(tag=='noh'){
                if(player.countCards('h')!=1) return false;
            }
        },
                        },
                        sub:true,
                    },
                },
            },
			"Fe自我改造":{
                nobracket:true,
                trigger:{
                    player:["phaseBegin"],
                },
                audio:["Fe自我改造",2],
                forced:true,
				filter:function (event,player){
       return player.storage.FeNP>=30;
},
                content:function (){
var list=["sha"];
player.gain(game.createCard(list.randomGet()));
player.$draw();
player.gain(game.createCard(list.randomGet()));      
player.$draw();
        player.loseHp();
    },
                mod:{
                    cardUsable:function (card,player,num){
            if(card.name=='sha') return Infinity;
        },
                },
            },
			 "Fe龙之魔女":{
                nobracket:true,
                group:["Fe龙之魔女_1","Fe龙之魔女_2"],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                audio:["Fe龙之魔女",2],
                forced:true,
				filter:function (event,player){
       return player.storage.FeNP>=50;
},
                content:function (){	
          player.storage.FeNP-=50;				
         player.recover(2);
         trigger.untrigger();
         trigger.finish();
},
                subSkill:{
                    "1":{
                        audio:["Fe龙之魔女",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                    var oo=player.num('h');
                   trigger.num+=oo;
},
                        sub:true,
                    },
                    "2":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                        },
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        sub:true,
                    },
                },
            },
			  "Fe泡沫般的梦幻":{
                nobracket:true,
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                derivation:["Fe龙之魔女"],
                audio:["Fe泡沫般的梦幻",2],
                filter:function (event,player){
return !player.storage.Fe泡沫般的梦幻;
    },
                forced:true,
                priority:100,
                content:function (){
"step 0"
player.storage.Fe泡沫般的梦幻=true;
"step 1"
player.recover(player.maxHp-player.hp)._triggered=null;
        player.loseMaxHp(3);
        player.addSkill('Fe龙之魔女');
    },
            },
			"Fe咆哮吧,吾之愤怒":{
                nobracket:true,
                group:["Fe咆哮吧,吾之愤怒_1"],
                trigger:{
                    player:"turnOverBefore",
                },
                audio:["Fe咆哮吧,吾之愤怒",2],
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                subSkill:{
                    "1":{
                        audio:["Fe咆哮吧,吾之愤怒",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=60;
},
                        forced:true,
                        priority:100,
                        content:function (){
							player.storage.FeNP-=60;
     trigger.source.damage(2,'fire')._triggered=null;
            },
                        sub:true,
                    },
                },
            },
			"Fe叛逆骑士":{
                nobracket:true,
                group:["Fe叛逆骑士_1","Fe叛逆骑士_2"],
                subSkill:{
                    "1":{
                        audio:["Fe叛逆骑士",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
var n=[1,2,4].randomGet();
if(n==1) player.recover(2);
if(n==2) player.gainMaxHp(2);
if(n==4) player.draw(2);
},
                        sub:true,
                    },
                    "2":{
                        audio:["Fe叛逆骑士",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=90;
},
                        content:function (){
							player.storage.FeNP-=90
var n=[1,2,4].randomGet();
if(n==1) trigger.source.loseMaxHp(2);
if(n==2) trigger.source.die();
if(n==4) trigger.source.damage()._triggered=null;
},
                        sub:true,
                    },
                },
            },
            "Fe向端丽的父王发起叛逆":{
                nobracket:true,
                audio:["Fe向端丽的父王发起叛逆",3],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
     return player!=target&&player.storage.FeNP>=200;
},
                content:function (){
         'step 0'
        event.num=0
         'step 1'
      if(Math.random()<=1){
       target.damage();
}
        event.num++
         'step 2'
      if(event.num<10) event.goto(1)
		  player.storage.FeNP-=200
      player.removeSkill('Fe向端丽的父王发起叛逆');
},
            },
            "Fe隐贞之盔":{
                nobracket:true,
                audio:["Fe隐贞之盔",2],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
				filter:function (event,player){
return player.storage.FeNP>=50;
},
                content:function (){
    player.draw(2);
    trigger.untrigger();
    trigger.finish();
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
            },
            "Fe灿然辉耀的王剑":{
                nobracket:true,
                audio:["Fe灿然辉耀的王剑",2],
                trigger:{
                    player:"phaseEnd",
                },
                filter:function (event,player){
        if(event.getParent().player.num('s','unequip')) return false;
        if(player.get('e','1')) return false;
        return true;
    },
                forced:true,
                content:function (){
        player.recover(2);
    },
            },
			 "Fe冲浪":{
                audio:["Fe冲浪",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                nobracket:true,
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].loseHp(2);
        };
    };
},
                mod:{
                    globalFrom:function (from,to,distance){
            return distance-2;
        },
                },
            },
            "Fe无尽的假日":{
                audio:["Fe无尽的假日",2],
                group:["Fe无尽的假日_1","Fe无尽的假日_2","Fe无尽的假日_3"],
                trigger:{
                    player:"recoverEnd",
                },
                nobracket:true,
                forced:true,
                filter:function (event,player){
     return Math.random()<=0.7;
},
                content:function (){
     player.recover();
},
                subSkill:{
                    "1":{
                        audio:["Fe无尽的假日",2],
                        trigger:{
                            player:["phaseBefore","changeHp"],
                        },
                        forced:true,
                        popup:false,
                        unique:true,
                        content:function (){
        if(!player.storage.Fe无尽的假日_1){
            player.storage.Fe无尽的假日_1=[];
            if(player.hasSkill('假日')){
                player.storage.Fe无尽的假日_1.push('Fe无尽的假日_3');
            }
        }
        if(player.storage.Fe无尽的假日_1.contains('Fe无尽的假日_3')==false){
            player.removeSkill('Fe无尽的假日_3');
        }
        if(player.hp>=3){
            player.addSkill('Fe无尽的假日_3');
        }

    },
                        ai:{
                            maixie:true,
                            effect:{
                                target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(!target.hasFriend()) return;
                    if(target.hp>=4) return [0,1];
                }
                if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe无尽的假日",2],
                        trigger:{
                            player:"loseEnd",
                        },
                        frequent:true,
                        filter:function (event,player){
        if(player.num('h')) return false;
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='h') return true;
        }
        return false;
    },
                        content:function (){
                player.draw(5);
    },
                        ai:{
                            threaten:0.8,
                            effect:{
                                target:function (card){
                if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
            },
                            },
                            noh:true,
                            skillTagFilter:function (player,tag){
            if(tag=='noh'){
                if(player.num('h')!=1) return false;
            }
        },
                        },
                        sub:true,
                    },
                    "3":{
                        mod:{
                            targetEnabled:function (card,player,target){
            if(card.name=='sha'){
                return false;
            }
        },
                        },
                        sub:true,
                    },
                },
            },
            "Fe竞技空翻":{
                audio:["Fe竞技空翻",2],
                group:"Fe竞技空翻_1",
                trigger:{
                    player:"damageEnd",
                },
                nobracket:true,
				filter:function (event,player){
return player.storage.FeNP>=40;
},
                content:function (){ 
        "step 0"
        if(!trigger.source.hasSkill('fengyin')){
            trigger.source.addTempSkill('fengyin','dieAfter');
        }
        "step 1"
		player.storage.FeNP-=40;
        player.draw();
        player.recover();
        player.gainMaxHp();
    },
                ai:{
                    maixie:true,
                    effect:{
                        target:function (card,player){
                if(player.hasSkill('jueqing')) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
                check:function (event,player){
        return !sgs.needKongcheng(player,true);
    },
                subSkill:{
                    "1":{
                        mod:{
                            globalFrom:function (from,to,distance){
            return distance-2;
        },
                        },
                        sub:true,
                    },
                },
            },
            "Fe制压汹涌波涛的王者心情":{
                nobracket:true,
                group:["Fe制压汹涌波涛的王者心情_1","Fe制压汹涌波涛的王者心情_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        audio:["FE制压汹涌波涛的王者心情",2],
                        forced:true,
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe制压汹涌波涛的王者心情",2],
                        trigger:{
                            global:"turnOverBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return player!=event.player&&player.storage.FeNP>=80;
},
                        content:function (){
					player.storage.FeNP-=80;
               trigger.player.damage()._triggered=null; 
trigger.player.out();
trigger.goto(1);
},
                        sub:true,
                    },
                },
            },
			"Fe支援炮击":{
                nobracket:true,
                audio:["Fe支援炮击",2],
                group:"Fe支援炮击_1",
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
				filter:function (event,player){
        return player!=event.player&&player.storage.FeNP>=130;
},
                content:function (){
					"step 0"
					player.storage.FeNP-=130;
					"step 1"
var n=[1,2,4].randomGet();
if(n==1) trigger.player.skip('phase');
if(n==2) trigger.player.die();
if(n==4) trigger.player.loseHp(2);
},
                subSkill:{
                    "1":{
                        audio:["Fe支援炮击",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
return player!=event.player&&event.player.group=='Saber';
},
                        frequent:true,
                        content:function (){
       trigger.player.damage(1)._triggered=null;
       trigger.player.loseHp(1);
    },
                        sub:true,
                    },
                },
            },
            "Fe银河流星剑":{
                nobracket:true,
                audio:["Fe银河流星剑",2],
                group:["Fe银河流星剑_1","Fe银河流星剑_2"],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&Math.random()<=0.5;
},
                content:function (){
     player.changeHujia(5);
trigger.untrigger();
trigger.finish();
},
                subSkill:{
                    "1":{
                        audio:["Fe银河流星剑",2],
                        trigger:{
                            player:"dieBefore",
                        },
                        forced:true,
                        unique:true,
                        filter:function (event,player){
       return player.hp>=1;

    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        player.hp==player.Maxhp;
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        priority:-500,
                        content:function (){
if(trigger.num>1) trigger.num=1
},
                        sub:true,
                    },
                },
            },
            "Fe无铭胜利剑":{
                nobracket:true,
                audio:["Fe无铭胜利剑",2],
                group:["Fe无铭胜利剑_1","Fe无铭胜利剑_2","Fe无铭胜利剑_3"],
                trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
                content:function (){
    trigger.untrigger();
    trigger.finish();
},
                subSkill:{
                    "1":{
                        trigger:{
                            player:["phaseBegin"],
                        },
                        direct:true,
						audio:["Fe无铭胜利剑",2],
                        content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('无铭胜利剑',[list.trick,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.countCards('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=game.filterPlayer(function(current){
                    return lib.filter.filterTarget(card,player,current);
                });
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }
    },
                        ai:{
                            threaten:1.5,
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe无铭胜利剑",2],
                        trigger:{
                            global:"phaseBegin",
                        },
                        frequent:true,
						audio:["Fe无铭胜利剑",2],
						filter:function (event,player){
        return player!=event.player&&player.storage.FeNP>=70;
},
                        content:function (){
							player.storage.FeNP-=70;
                               trigger.player.loseHp(2);
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"loseHpBefore",
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
return Math.random()<=1;
},
                        content:function (){
player.logSkill('Fe无名胜利剑_3')
trigger.untrigger();
trigger.finish();
player.recover();
},
                        sub:true,
                    },
                },
            },
			"FeSaber之星":{
				trigger:{
player:"phaseBegin",
},
forced:true,
nobracket:true,
audio:["FeSaber之星",2],
content:function (){
for(var i=0;i<game.players.length;i++){
if(game.players[i].group=='Saber') game.players[i].storge.FeNP-=20;
}
},
group:"FeSaber之星_1",
subSkill:{
	1:{
		audio:["FeSaber之星",2],
                trigger:{
                    global:"damageBegin",
                },
                filter:function (event,player){
      if(event.source!='Saber') return false;
        return true;
},
                content:function (){
     player.storge.FeNP+=25;
},
	},
},
			},
			  "Fe不可见的王之手":{
                nobracket:true,
                trigger:{
                    player:"damageBegin",
                },
                audio:["Fe不可见的王之手",2],
                forced:true,
                filter:function (event,player){
        if(event.source=='Saber') return false;
        return true;
    },
                content:function (){
        trigger.num++;
    },
                group:["Fe不可见的王之手_1","Fe不可见的王之手_2","Fe不可见的王之手_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        audio:["Fe不可见的王之手",2],
                        forced:true,
                        filter:function (event,player){
        if(event.source!='Saber') return false;
        return true;
    },
                        content:function (){
                        trigger.num+=2;
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            source:"damageBegin",
                        },
                        audio:["Fe不可见的王之手",2],
                        forced:true,
                        filter:function (event,player){
        if(event.source=='Saber') return false;
        return true;
    },
                        content:function (){
        trigger.num++;
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"damageBegin",
                        },
                        audio:["Fe不可见的王之手",2],
                        forced:true,
                        filter:function (event,player){
        if(event.source!='Saber') return false;
        return true;
    },
                        content:function (){
        trigger.num-=1;
    },
                        sub:true,
                    },
                },
            },
            "Fe∞黑豆沙":{
                nobracket:true,
                trigger:{
                    player:"phaseDiscardBefore",
                },
                audio:["Fe∞黑豆沙",2],
                forced:true,
				filter:function (event,player){
        return player.storage.FeNP>=40;
},
                content:function (){
trigger.untrigger();
trigger.finish();
    },
                mod:{
                    cardUsable:function (card){
            if(get.info(card)&&get.info(card).forceUsable) return;
            return Infinity;
        },
                },
                group:["Fe∞黑豆沙_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"recoverBefore",
                        },
                        audio:["Fe∞黑豆沙",2],
                        forced:true,
                        content:function (){
        var HUY=Math.min(game.countPlayer());
            trigger.num+=HUY;
    },
                        sub:true,
                    },
                },
            },
            "Fe黑龙双克胜利剑":{
                nobracket:true,
                audio:["Fe黑龙双克胜利剑",2],
                skillAnimation:"epic",
                animationColor:"fire",
                enable:"phaseUse",
                usable:1,
                filterCard:function (card){
        var type=get.type(card);
        for(var i=0;i<ui.selected.cards.length;i++){
            if(get.type(ui.selected.cards[i])!=type) return false;
        }
        return true;
    },
                line:"fire",
                selectCard:[1,Infinity],
                selectTarget:-1,
                position:"he",
                filterTarget:function (card,player,target){
        return player!=target&&player.storage.FeNP>=200;
    },
                check:function (card){
        if(_status.event.player.hp==_status.event.player.maxHp){
            return 8-ai.get.value(card);
        }
        return 6-ai.get.value(card);
    },
                content:function (){
        "step 0"
        var num=cards.length;
        var dialog=ui.create.dialog('弃置'+num+'张(为'+get.translation(player)+'弃置的张数)和'+get.translation(player)+'弃置的牌类别均相同的牌，或将武将牌翻面并弃置所有牌','hidden');
        dialog.classList.add('noselect');
        dialog.add(cards);
        var types=[];
        for(var i=0;i<cards.length;i++){
            types.add(get.type(cards[i],'trick'));
        }
        var res=ai.get.damageEfFect(target,player,target,'fire');
        target.chooseToDiscard(dialog,num,'he',function(card){
            return types.contains(get.type(card,'trick'));
        }).ai=function(card){
            if(res>=0) return -1;    
            if(num>2&&player.hp>1) return 1;
            if(num>1&&player.hp>2) return -1;
            return 9-ai.get.value(card);
        }
        "step 1"
        if(!result.bool){
			player.storage.FeNP-=200;
            target.turnOver();
            target.discard(target.get('he'));
            target.loseHp(2);
        }
    },
                ai:{
                    order:10,
                    result:{
                        target:function (player,target){
                return ai.get.attitude(player,target);
            },
                    },
                    expose:0.2,
                },
                group:["Fe黑龙双克胜利剑_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:["phaseEnd","phaseBegin"],
                        },
                        filter:function (event,player){
                var yue=player.num('e');
                return yue>player.num('h');
            },
                        forced:true,
                        audio:["Fe黑龙双克胜利剑",2],
                        content:function (){
                "step 0"
                player.recover();
                player.draw(3);
                'step 1'
                        var card=get.cardPile(function(card){
                            return get.type(card)=='equip';
                        });
                        event.card=card;
                        'step 2'
                        if(event.card){
                            player.equip(event.card);
                        }
},
                        sub:true,
                    },
                },
            },
			"Fe刹那无影剑":{
				 trigger:{
                    player:["useCard","respond","phaseAfter"],
                },
				nobracket:true,
                audio:["Fe刹那无影剑",2],
                direct:true,
                unique:true,
                filter:function (event,player,name){
        if(name=='phaseAfter') return true;
        return event.card&&get.color(event.card)=='red';    
    },
                content:function (){
       player.storage.FeNP+=8;
    },
                ai:{
                    threaten:0.8,
                    effect:{
                        player:function (card,player,target,effect){
                if(get.color(card)=='red') return [1,3];
            },
                    },
                },
			group:"Fe刹那无影剑_1",
			subSkill:{
				1:{
					 trigger:{
                            player:"judgeBefore",
                        },
                        forced:true,
                        unique:true,
                        audio:["Fe刹那无影剑",2],
                        popup:false,
                        priority:99,
						filter:function (event,player){
       return player.hp==player.MaxHp;
},
                        content:function (){
                trigger.untrigger();
                trigger.finish();
            },
				},
			},
			},
			"Fe誓约胜利之剑":{
                nobracket:true,
                audio:["Fe誓约胜利之剑",3],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
           return player!=target&&player.storage.FeNP>=200;
},
                content:function (){
         'step 0'
        event.num=0
         'step 1'
      if(Math.random()<=1){
       target.clearSkills();   
       target.damage();
       target.loseHp();
}
        event.num++
         'step 2'
      if(event.num<100) event.goto(1)
		  player.storage.FeNP>=200;
      player.removeSkill('Fe誓约胜利之剑');
},
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.num('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
            "Fe风王结界":{
                nobracket:true,
                audio:["Fe风王结界",2],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                content:function (){
         player.gainMaxHp();
},
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='trick'){
                return false;
            }
        },
                },
            },
            "Fe骑士王":{
                nobracket:true,
                audio:["Fe骑士王",2],
                group:"Fe骑士王_1",
                trigger:{
                    source:"damageBegin",
                },
                check:function (event,player){
        return ai.get.attitude(player,event.player)<=0;
    },
                forced:true,
                filter:function (event,player){
        return event.card&&event.card.name=='sha'&&get.distance(event.player,player,'attack')>1&&
            event.parent.name!='_lianhuan'&&event.parent.name!='_lianhuan2';
    },
                content:function (){
        trigger.num+=(trigger.player.hp);
    },
                subSkill:{
                    "1":{
                        audio:["Fe骑士王",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        priority:10,
                        forced:true,
                        content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
    },
                        sub:true,
                    },
                },
            },
            "Fe遥远的理想乡":{
                nobracket:true,
                audio:["Fe遥远的理想乡",2],
                group:["Fe遥远的理想乡_1","Fe遥远的理想乡_2"],
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                filter:function (event,player){
        return Math.random()<=0.8&&player.storage.FeNP>=80;
},
                content:function (){
					player.storage.FeNP-=80;
        player.recover();
        player.draw();
},
                subSkill:{
                    "1":{
                        audio:["Fe遥远的理想乡",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{subtype:'equip3'})&&get.subtype(event.card)== 'equip3';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.subtype(card)=='equip3') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe遥远的理想乡",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{subtype:'equip4'})&&get.subtype(event.card)== 'equip4';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.subtype(card)=='equip4') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
			"Fe黑化":{
                nobracket:true,
                audio:["Fe黑化",2],
                group:"Fe黑化_1",
                trigger:{
                    global:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&player.storage.FeNP>=20;
},
                content:function (){
					player.storage.FeNP-=20;
                      player.recover();
},
                subSkill:{
                    "1":{
                        audio:["Fe黑化",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        frequent:true,
                        content:function (){
    'step 1'
player.loseHp(player.maxHp/2);
},
                        sub:true,
                    },
                },
            },
            "Fe侵蚀":{
                nobracket:true,
                audio:["Fe侵蚀",2],
                group:"Fe侵蚀_1",
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                content:function (){
          var num=player.maxHp-player.hp;
        if(num>0){
            player.gainMaxHp(num);
        }
},
                subSkill:{
                    "1":{
                        audio:["Fe侵蚀",2],
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
   return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=50;
},
                        content:function (){
         var num=player.maxHp-player.hp;
        if(num>0){
			player.storage.FeNP-=50;
            trigger.source.damage(num);
        }
},
                        sub:true,
                    },
                },
            },
            "Fe黑·誓约胜利之剑":{
                nobracket:true,
                audio:["Fe黑·誓约胜利之剑",2],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
return player!=target&&player.storage.FeNP>=140;
},
                content:function (){
         'step 0'
        event.num=0
         'step 1'
      if(Math.random()<=1){
       target.clearSkills();   
       target.loseMaxHp();
       target.loseHp();
       player.recover();
}
        event.num++
         'step 2'
      if(event.num<100) event.goto(1)
		  player.storage.FeNP-=140;
      player.removeSkill('Fe黑·誓约胜利之剑');
},
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.num('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
			"Fe晚钟":{
                nobracket:true,
                trigger:{
                    player:"changeHp",
                },
                audio:["Fe晚钟",2],
                direct:true,
                forced:true,
                content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('晚钟',[list.basic,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.num('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=[];
                for(var i=0;i<game.players.length;i++){
                    if(lib.filter.filterTarget(card,player,game.players[i])){
                        targets.push(game.players[i]);
                    }
                }
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=ai.get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }     
    },
                ai:{
                    threaten:1.5,
                },
                group:["Fe晚钟_1","Fe晚钟_2","Fe晚钟_3","Fe晚钟_4"],
                subSkill:{
                    "1":{
                        audio:["Fe晚钟",2],
                        trigger:{
                            global:"useCard",
                        },
                        forced:true,
                        direct:true,
                        filter:function (event, player) {
        return event.player!=player&&event.card.name =='tao';
    },
                        check:function (event, player) {
        return (ai.get.attitude(player, event.player)<=0);
    },
                        content:function () {
       trigger.player.loseHp(1);
    },
                        ai:{
                            threaten:1.5,
                            expose:0.3,
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        audio:["Fe晚钟",2],
                        forced:true,
                        direct:true,
                        content:function (){
        "step 0"
        player.chooseTarget(get.prompt('Fe晚钟_2'),function(card,player,target){
            return lib.filter.targetEnabled({name:'sha'},player,target);
        }).set('ai',function(target){
            return ai.get.efFect(target,{name:'sha'},_status.event.player);
        });
        "step 1"
        if(result.bool){
            player.logSkill('Fe晚钟_2');
            player.useCard({name:'sha'},result.targets,false);
        }
    },
                        ai:{
                            threaten:function (player,target){
            return 1.6;
        },
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"loseHpBefore",
                        },
                        audio:["Fe晚钟",2],
                        forced:true,
                        popup:false,
                        filter:function (event,player){
return Math.random()<=1;
},
                        content:function (){
trigger.untrigger();
trigger.finish();    
},
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        priority:-500,
                        content:function (){
if(trigger.num>2) trigger.num=2
},
                        sub:true,
                    },
                },
            },
            "Fe信仰加护":{
                nobracket:true,
                trigger:{
                    player:"useCardAfter",
                },
                audio:["Fe信仰加护",2],
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;       
},
                group:["Fe信仰加护_1","Fe信仰加护_2"],
                subSkill:{
                    "1":{
                        audio:["Fe信仰加护",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
return player!=event.player&&Math.random()<=0.6&&player.storage.FeNP>=70;
},
                        content:function (){
							player.storage.FeNP-=70;
       trigger.player.die()._triggered=null;
},
                        sub:true,
                    },
                    "2":{
                        audio:["Fe信仰加护",2],
                        trigger:{
                            player:"dieBefore",
                        },
                        forced:true,
                        unique:true,
                        filter:function (event,player){
       return player.hp>=1;

    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        player.hp==player.hp;
    },
                        sub:true,
                    },
                },
            },
            "Fe战斗续行":{
                nobracket:true,
                audio:["Fe战斗续行",2],
                group:["Fe战斗续行_2"],
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
                filter:function (event,player){
return Math.random()<=0.5&&player.storage.FeNP>=80;
},
                content:function (){
					player.storage.FeNP-=80;
player.gainMaxHp();
player.recover();
},
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseBefore",
                        },
                        content:function (){
        var list=["Fe_youguzhiyuan"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe战斗续行",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip5'})&&get.type(event.card)== 'equip5';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip5') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "Fe死告天使":{
                nobracket:true,
                audio:["Fe死告天使",2],
                trigger:{
                    global:"dieAfter",
                },
                usable:1,
				filter:function (event,player){
              return player.storage.FeNP>=160;
},
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt('死告天使'),function(card,player,target){
                    return target.num('he')>0;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('Fe死告天使',target);
			player.storage.FeNP>=160;
            target.die()._triggered=null;
        }        
    },
                ai:{
                    threaten:1.4,
                },
            },
			 "Fe外科手术":{
                nobracket:true,
                trigger:{
                    player:"damageEnd",
                },
                audio:["Fe外科手术",2],
                forced:true,
                filter:function (event,player){
        return player.countCards('e')>0&&player.hp<player.maxHp&&trigger.num>=1;
    },
                content:function (){
                       'step 0'
                    var next=player.chooseToDiscard('e',get.prompt('Fe外科手术'));
                    next.ai=function(card){
                        if(get.recoverEfFect(player,player,player)<=0) return 0;
                        return 8-get.value(card);
                    };
                    next.logSkill='Fe外科手术'
                    'step 1'
                    if(result.bool){
                        player.recover();
                    }
},
                group:["Fe外科手术_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"recoverBefore",
                        },
                        forced:true,
                        audio:["Fe外科手术",2],
                        filter:function (event,player){
return player!=event.player&&Math.random()<=0.5;
},
                        content:function (){
'step 0'
                        var card=get.cardPile(function(card){
                            return get.type(card)=='equip';
                        });
                        event.card=card;
                        'step 1'
                        if(event.card){
                            player.equip(event.card);
                        }
},
                        sub:true,
                    },
                },
            },
            "Fe情报抹除":{
                nobracket:true,
                trigger:{
                    player:"damageEnd",
                },
                audio:["Fe情报抹除",2],
                forced:true,
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player&&event.source.num('e')>0)&&player.storage.FeNP>=40;
},
                content:function (){
					player.storage.FeNP-=40;
        trigger.source.discard(player.getCards('e'));
        trigger.source.out();
        trigger.goto(1);
    },
                mod:{
                    globalTo:function (from,to,distance){
            return distance+2;
        },
                },
            },
            "Fe雾夜杀人":{
                nobracket:true,
                trigger:{
                    source:"damageBefore",
                },
                forced:true,
                audio:["Fe雾夜杀人",2],
                filter:function (event,player){
  return event.player.sex=='Female'&&event.player!=player;
    },
                content:function (){
             trigger.num+=2;
    },
                group:["Fe雾夜杀人_1","Fe雾夜杀人_2"],
                subSkill:{
                    "1":{
                        audio:["Fe雾夜杀人",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
						filter:function (event,player){
              return player.storage.FeNP>=50;
},
                        content:function (){
							player.storage.FeNP-=50;
         player.addTempSkill('qianxing',{player:'phaseBegin'});
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBegin",
                        },
                        forced:true,
                        audio:["Fe雾夜杀人",2],
                        content:function (){
             trigger.num-=1;
    },
                        sub:true,
                    },
                },
            },
            "Fe解体圣母":{
                nobracket:true,
                audio:["Fe解体圣母",2],
                enable:"phaseUse",
                usable:1,
				 filter:function (event,player){
                return player.storage.FeNP>=180;;
},
                filterTarget:function (card,player,target){
     return player!=target&&target.sex=='Female';
},
                content:function (){
					player.storage.FeNP-=180;
target.die();
},
                group:["Fe解体圣母_1","Fe解体圣母_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseHpBefore",
                        },
                        audio:["Fe解体圣母",2],
                        forced:true,
                        popup:false,
                        filter:function (event,player){
                return Math.random()<=1;
},
                        content:function (){
trigger.untrigger();
trigger.finish();
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"damageBefore",
                        },
                        audio:["Fe解体圣母",2],
                        forced:true,
                        popup:false,
                        filter:function (event,player){
                    return event.player.getEquip(1)>0;
},
                        content:function (){
trigger.untrigger();
trigger.finish();
                player.draw();
            },
                        sub:true,
                    },
                },
            },
		"Fe日轮甲胄":{
                nobracket:true,
                audio:["Fe日轮呀,化作甲胄",2],
                group:"Fe日轮甲胄_1",
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
				filter:function (event,player){
              return player.storage.FeNP>=80;
},
                content:function (){
         var num=player.maxHp+player.hp;
		 player.storage.FeNP-=80;
         player.changeHujia(num);
    },
                subSkill:{
                    "1":{
                        audio:["Fe日轮呀,化作甲胄",2],
                        trigger:{
                            player:"damageBefore",
                        },
                        forced:true,
                        unique:true,
                        filter:function (event){
        return event.nature=='fire';
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        player.recover(2);
        player.draw(2);
    },
                        ai:{
                            efFect:{
                                target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "Fe梵天覆盖大地":{
                nobracket:true,
                audio:["Fe梵天呀,覆盖大地",2],
                group:"Fe梵天覆盖大地_1",
                enable:"phaseUse",
                usable:1,
				filter:function (event,player){
              return player.storage.FeNP>=100;
},
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
			player.storage.FeNP-=100;
            game.players[i].damage(2,'fire');
        };
    };
},
                subSkill:{
                    "1":{
                        audio:["Fe梵天呀,覆盖大地",2],
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return event.nature=='fire';
},
                        content:function (){
trigger.num+=2
},
                        sub:true,
                    },
                },
            },
            "Fe梵天诅咒我身":{
                nobracket:true,
                audio:["Fe梵天呀,诅咒我身",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
        return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0])=='d'&&player.storage.FeNP>=20;
    },
                content:function (){
					player.storage.FeNP-=20;
        trigger.source.damage(2,'fire');
        trigger.source.addTempSkill('Fe日炎','phaseAfter');
    },
                ai:{
                    maixie:true,
                    efFect:{
                        target:function (card,player){
                if(player.hasSkill('jueqing')) return [1,-1];
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
                check:function (event,player){
        return !sgs.needKongcheng(player,true);
    },
            },
            "Fe日炎":{
                trigger:{
                    player:"loseEnd",
                },
                forced:true,
                content:function (){
					player.storage.FeNP-=3;
        player.damage(1,'fire');
    },
            },
            "Fe贫者的见识":{
                nobracket:true,
                audio:["Fe贫者的见识",2],
                group:"Fe贫者的见识_1",
                trigger:{
                    source:"damageBefore",
                },
                forced:true,
                filter:function (event,player){
return !event.nature;
},
                content:function (){
trigger._triggered=null;
},
                subSkill:{
                    "1":{
                        audio:["Fe贫者的见识",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        direct:true,
                        content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('贫者的见识',[list.trick,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.num('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=[];
                for(var i=0;i<game.players.length;i++){
                    if(lib.filter.filterTarget(card,player,game.players[i])){
                        targets.push(game.players[i]);
                    }
                }
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=ai.get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }
     

    },
                        ai:{
                            threaten:1.5,
                        },
                        sub:true,
                    },
                },
            },
            "Fe日轮顺从死亡":{
                nobracket:true,
                audio:["Fe日轮啊,顺从死亡",4],
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
return player.storage.FeNP>=300;
},
                filterTarget:function (card,player,target){
return player!=target;
},
                content:function (){
'step 0'
player.storage.FeNP-=300;
target.clearSkills();
target.damage(20);
target.die();
},
                ai:{
                    basic:{
                        order:10,
                    },
                    result:{
                        target:-2,
                    },
                },
            },
            "Fe无冠武艺":{
                nobracket:true,
                audio:["Fe无冠武艺",2],
                trigger:{
                    player:"equipBegin",
                },
                frequent:true,
                filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    efFect:{
                        player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                    },
                },
            },
            "Fe炎神的咆哮":{
                nobracket:true,
                audio:["Fe炎神的咆哮",2],
                trigger:{
                    player:"damageBefore",
                },
                forced:true,
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
        trigger.source.loseHp();
    },
                ai:{
                    efFect:{
                        target:function (card){
                if(get.tag(card,'fireDamage')){
                    return [0,2];
                }
            },
                    },
                },
                group:["Fe炎神的咆哮_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseBegin",
                        },
                        audio:["Fe炎神的咆哮",2],
                        forced:true,
						filter:function (event,player){
        return player.storage.FeNP>=30;
    },
                        content:function (){
							player.storage.FeNP-=30;
        player.recover();
    },
                        sub:true,
                    },
                },
            },
            "Fe千里眼":{
                nobracket:true,
                audio:["Fe千里眼",2],
                trigger:{
                    player:"equipBegin",
                },
                filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    efFect:{
                        player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                    },
                },
                mod:{
                    cardUsable:function (card,player,num){
          if(card.name=='sha') return Infinity;
    },
                },
                group:["Fe千里眼_1"],
                subSkill:{
                    "1":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                        },
                        trigger:{
                            player:"shaBegin",
                        },
                        audio:["Fe千里眼",2],
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        sub:true,
                    },
                },
            },
            "Fe天授的英雄":{
                nobracket:true,
                marktext:"天授",
                intro:{
                    content:"cards",
                },
                init:function (player){
        player.storage.Fe天授的英雄=[];
    },
                unique:true,
                audio:["Fe天授的英雄",2],
                skillAnimation:"legend",
                trigger:{
                    global:"gameDrawBegin",
                },
                forced:true,
                content:function (){
'step 0'
event.num=0;
'step 1'
event.card=get.cardPile(function(card){
return get.type(card)=='equip';
});                                    
'step 2'            
if(event.card){
player.gain(event.card,'gain2');
player.storage.Fe天授的英雄.push(event.card);  
player.lose(event.card,ui.special)
    player.syncStorage('Fe天授的英雄');

player.markSkill('Fe天授的英雄');
  
game.log(player,'从牌堆获得了',event.card);
event.num++;
event.goto(1);
}                        
else event.finish();
    },
                group:["Fe天授的英雄_1","Fe天授的英雄_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"changeHp",
                        },
                        forced:true,
                        audio:["Fe天授的英雄",2],
                        filter:function (event,player){
                return player.storage.Fe天授的英雄.length>0;
            },
                        content:function (){
                'step 0'
                player.chooseCardButton('将一张天授牌置入弃牌堆',true,player.storage.Fe天授的英雄);
                player.recover();
                'step 1'
                var card=result.links[0];
                player.storage.Fe天授的英雄.remove(card);
                ui.discardPile.appendChild(card);
    
                player.$throw(card);
                game.log(player,'将',card,'置入弃牌堆');
                player.syncStorage('Fe天授的英雄');
                if(player.storage.Fe天授的英雄.length==0){
                    player.unmarkSkill('Fe天授的英雄');
                }
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"loseEnd",
                        },
                        audio:["Fe天授的英雄",2],
                        forced:true,
                        frequent:true,
                        filter:function (event,player){
                for(var i=0;i<event.cards.length;i++){
                    if(event.cards[i].original=='e') return true;
                }
                return false;
            },
                        content:function (){
'step 0'
event.card=get.cardPile(function(card){
return get.type(card)=='equip';
});                                    
'step 1'            
if(event.card){
player.gain(event.card,'gain2');
player.storage.Fe天授的英雄.push(event.card);  
player.lose(event.card,ui.special)
player.syncStorage('Fe天授的英雄');
player.markSkill('Fe天授的英雄');
game.log(player,'从牌堆获得了',event.card);

}                        
else event.finish();
            },
                        sub:true,
                    },
                },
            },
            "Fe破环神的手影":{
                nobracket:true,
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                audio:["Fe破坏神的手影",2],
                filter:function (event,player){
        return Math.random()<=0.4;
},
                content:function (){
          trigger.player.die();
},
                group:["Fe破坏神的手影2"],
            },
            "Fe破坏神的手影2":{
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                audio:["Fe破坏神的手影",2],
                filter:function (event,player,target){
return player!=event.player&&event.player.hujia&&event.player.hujia>=1&&player.storage.FeNP>=60;
},
                content:function (){
    trigger.player.loseMaxHp(2);
},
            },
			"Fe最遥远的加护":{
                nobracket:true,
                audio:["Fe最遥远的加护",2],
                group:"Fe最遥远的加护_1",
                trigger:{
                    player:"respond",
                },
                filter:function (event,player){
        return event.card.name=='shan'&&player.hasSha();
    },
                direct:true,
                content:function (){
        player.chooseToUse({name:'juedou'},'最遥远的加护：是否使用一决斗？').logSkill='Fe最遥远的加护';
    },
                subSkill:{
                    "1":{
                        audio:["Fe最遥远的加护",2],
                        trigger:{
                            player:"damageEnd",
                        },
						forced:true,
						filter:function (event){
        return player.storage.FeNP>=30&&(event.source&&event.source.countCards('he')&&event.source!=player);
    },
                        content:function (){
        var list=["juedou"];
        player.gain(game.createCard(list.randomGet()));
        player.$draw();
    },
                        sub:true,
                    },
                },
            },
            "Fe光辉信仰":{
                nobracket:true,
                audio:["Fe光辉信仰",2],
                group:"Fe光辉信仰_1",
                trigger:{
                    source:"damageBegin",
                },
                forced:true,
				filter:function (event,player){
        return player.storage.FeNP>=90;
    },
                content:function (){
        var mk=Math.ceil(player.hp/2);
		player.storage.FeNP-=90;
      trigger.num+=mk;
    },
                subSkill:{
                    "1":{
                        audio:["Fe光辉信仰",2],
                        enable:["chooseToRespond"],
                        filterCard:function (card){
        return get.color(card)=='red';
    },
                        viewAs:{
                            name:"shan",
                            suit:"diamond",
                            number:1,
                        },
                        viewAsFilter:function (player){
        if(!player.num('he',{color:'red'})) return false;
    },
                        prompt:"将一张红色牌当闪打出",
                        check:function (){return 1},
                        ai:{
                            respondShan:true,
                            skillTagFilter:function (player){
            if(!player.num('h',{color:'black'})) return false;
        },
                            efFect:{
                                target:function (card,player,target,current){
                if(get.tag(card,'respondShan')&&current<0) return 0.6
            },
                            },
                            useful:{
                                spade:4.1,
                                club:4.2,
                            },
                            basic:{
                                useful:[7,2],
                                value:[7,2],
                            },
                        },
                        sub:true,
                    },
                },
            },
            "Fe王者骑士":{
                nobracket:true,
                audio:["Fe王者骑士",2],
                group:"Fe王者骑士_1",
                trigger:{
                    player:"phaseUseBefore",
                },
                forced:true,
				filter:function (event,player){
        return player.storage.FeNP>=100;
    },
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
        game.players[i].damage(2)._triggered=null;
    };
}
},
                subSkill:{
                    "1":{
                        audio:["Fe王者骑士",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        content:function (){
        var num=player.MaxHp/5;
          player.recover(num);
},
                        sub:true,
                    },
                },
            },
            "Fe耀于致远之枪":{
                nobracket:true,
                audio:["Fe耀于至远之枪",2],
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                group:"Fe耀枪",
				filter:function (event,player){
        return player.storage.FeNP>=50;
    },
                content:function (){
					player.storage.FeNP-=50;
        event.target=game.filterPlayer().randomGet(player);
        event.target.damage()._triggered=null;
        event.target.loseHp();
    },
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
                subSkill:{
                    "1":{
                        audio:["Fe耀与至远之枪",2],
                        trigger:{
                            player:"turnOverBefore",
                        },
                        forced:true,
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                },
            },
            "Fe终焉骑士":{
                nobracket:true,
                audio:["Fe终焉骑士",2],
                trigger:{
                    global:"recoverBefore",
                },
                forced:true,
                filter:function (event,player){
return Math.random()<=1;
},
                content:function (){
trigger.untrigger();
trigger.finish();
player.draw(2);
},
                group:"Fe终焉骑士_1",
                subSkill:{
                    "1":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                            globalFrom:function (from,to,distance){
            return distance-4;
        },
                        },
                        trigger:{
                            player:"shaBegin",
                        },
                        audio:["Fe终焉骑士",2],
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        sub:true,
                    },
                },
            },
            "Fe尽界的加护":{
                nobracket:true,
                audio:["Fe尽界的加护",2],
                group:"Fe尽界的加护_1",
                trigger:{
                    player:"damageEnd",
                },
                forced:true,
				filter:function (event,player){
        return player.storage.FeNP>=60;
    },
                content:function (){
					player.storage.FeNP-=60;
      trigger.source.loseMaxHp(),
      trigger.source.loseHp();
},
                subSkill:{
                    "1":{
                        audio:["Fe尽界的加护",2],
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
         trigger.num=player.maxHp;
},
                        sub:true,
                    },
                },
            },
            "Fe光耀尽界之枪":{
                nobracket:true,
                audio:["Fe光耀尽界之枪",2],
                trigger:{
                    source:"damageEnd",
                },
				filter:function (event,player){
        return player.storage.FeNP>=110;
    },
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
			player.storage.FeNP-=110;
            game.players[i].loseHp(2);
        };
    };
},
                group:"Fe光耀尽界之枪_1",
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        audio:["Fe光耀尽界之枪",2],
                        content:function (){
                player.loseMaxHp();
            },
                        sub:true,
                    },
                },
            },
			  "Fe耀枪":{
                audio:["Fe耀与至远之枪",2],
                trigger:{
                    player:"turnOverBefore",
                },
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
			  },
	"Fe王之霸道锦囊":{
                trigger:{
                    source:"damageEnd",
                },
                audio:["Fe王之霸道",2],
                priority:10,
                forced:true,
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='trick';
        });
        event.card=card;
        'step 1'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        };
            },
            },
            "Fe王之霸道基本":{
                trigger:{
                    source:"damageEnd",
                },
                audio:["Fe王之霸道",2],
                priority:11,
                forced:true,
                content:function (){
'step 0'
var card=get.cardPile(function(card){
    return get.type(card)=='basic';
});
event.card=card;
'step 1'
if(event.card){
     player.gain(game.createCard(event.card),'gain2');
}
    },
            },
			"Fe鉴识眼":{
                nobracket:true,
                audio:["Fe鉴识眼",2],
                enable:"phaseUse",
                usable:2,
				filter:function (event,player){
        return player.storage.FeNP>=20;
    },
                filterTarget:function (card,player,target){
         return player!=target;
},
                content:function (){
        'step 0'
		player.storage.FeNP-=20;
        player.addTempSkill('Fe鉴识眼_1','phaseAfter');
        if(target.num('hej')){
            var next=player.discardPlayerCard('hej',target,true);
            next.visible=true;
            next.delay=false;
        }
        else{
            event.goto(2);
        }
        'step 1'
        if(result.bool){
            game.delay(0.5);
        }
    },
                ai:{
                    threaten:1.5,
                    result:{
                        target:function (player,target){
                return -target.num('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
                subSkill:{
                    "1":{
                        audio:["Fe鉴识眼",2],
                        trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        content:function (){
     trigger._triggered=null
},
                        sub:true,
                    },
                },
            },
            "Fe阴阳无极":{
                nobracket:true,
                audio:["Fe阴阳无极",2],
                group:["Fe阴阳无极_1"],
                trigger:{
                    player:"damageBefore",
                },
                filter:function (event){
      return event.nature;
},
                content:function (){
      player.gainMaxHp();
},
                subSkill:{
                    "1":{
                        trigger:{
                            gloabl:"damageBefore",
                        },
                        audio:["Fe阴阳无极",2],
                        filter:function (event,player){
      return event.nature&&player.storage.FeNP>=40;
},
                        content:function (){
      trigger.num+1;
},
                        sub:true,
                    },
                },
            },
            "Fe军师的忠言":{
                nobracket:true,
                audio:["Fe军师的忠言",2],
                group:"Fe军师的忠言_1",
                trigger:{
                    player:["damageEnd","loseHpEnd"],
                },
                direct:true,
                content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('军师的忠言',[list.trick,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.num('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=[];
                for(var i=0;i<game.players.length;i++){
                    if(lib.filter.filterTarget(card,player,game.players[i])){
                        targets.push(game.players[i]);
                    }
                }
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=ai.get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }
     

    },
                ai:{
                    maixie:true,
                    threaten:1.5,
                    efFect:{
                        target:function (card,player){
                if(get.tag(card,'damage')) return [1,0.5];
            },
                    },
                },
                subSkill:{
                    "1":{
                        audio:["Fe军师的忠言",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        direct:true,
						filter:function (event,player){
      return player.storage.FeNP>=50;
},
                        content:function (){
        "step 0"
        player.chooseTarget(get.prompt('Fe军师的忠言_1'),function(card,player,target){
                    return target.num('he')>0;
                });
        "step 1"
        if(result.bool){
            var target=result.targets[0];
            player.logSkill('Fe军师的忠言_1',target);
            target.recover(2);
            target.gain(trigger.cards,'gain2');
    }
    },
                        ai:{
                            expose:0.5,
                        },
                        sub:true,
                    },
                },
            },
            "Fe军师的指挥":{
                nobracket:true,
                audio:["Fe军师的指挥",2],
                group:"Fe军师的指挥_1",
                trigger:{
                    global:"loseEnd",
                },
                filter:function (event,player){
        if(event.player==player) return false;
        if(event.parent.name!='trick') return false;
        for(var i=0;i<event.cards.length;i++){
            if(get.type(event.cards[i])=='trick'&&get.position(event.cards[i])=='d'){
                return true;
            }
        }
    },
                frequent:true,
                content:function (){
        "step 0"
        if(trigger.delay==false) game.delay();
        "step 1"
        var cards=[];
        for(var i=0;i<trigger.cards.length;i++){
            if(get.type(trigger.cards[i])=='trick'&&get.position(trigger.cards[i])=='d'){
                cards.push(trigger.cards[i]);
            }
        }
        if(cards.length){
            player.gain(cards,'gain2','log');
        }
    },
                subSkill:{
                    "1":{
                        audio:["Fe军师的指挥",2],
                        trigger:{
                            global:"useCard",
                        },
                        filter:function (event,player){
        if(!event.targets||!event.targets.contains(player)) return false;
        var info=get.info(event.card);
        if(info.type!='trick') return false;
        if(info.multitarget) return false;
        return game.hasPlayer(function(current){
            return !event.targets.contains(current)&&lib.filter.targetEnabled2(event.card,event.player,current);
        });
    },
                        direct:true,
                        content:function (){
        'step 0'
        player.chooseTarget(get.prompt('Fe军师的指挥_1'),function(card,player,target){
            return !trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,trigger.player,target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            return ai.get.efFect(target,trigger.card,trigger.player,player);
        });
        'step 1'
        if(result.bool){
            if(!event.isMine()) game.delay(0.5);
            event.target=result.targets[0];
        }
        else{
            event.finish();
        }
        'step 2'
        player.logSkill('Fe军师的指挥_1',event.target);
        trigger.targets.push(event.target);
    },
                        ai:{
                            expose:0.2,
                        },
                        sub:true,
                    },
                },
            },
            "Fe奇门八阵":{
                nobracket:true,
                audio:["Fe奇门八阵",2],
                group:["Fe奇门八阵_1","Fe奇门八阵_2"],
                enable:"phaseUse",
                usable:1,
				filter:function (event,player){
      return player.storage.FeNP>=70;
},
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
			player.storage.FeNP-=70;
            game.players[i].link();
			game.players[i].turnOver();
        };
    };
},
                subSkill:{
                    "1":{
                        audio:["Fe奇门八阵",2],
                        trigger:{
                            player:"phaseAfter",
                        },
                        forced:true,
                        filter:function (event,player){
return Math.random()<=0.5;
},
                        content:function (){
player.phase();
},
                        sub:true,
                    },
                    "2":{
                        audio:["Fe奇门八阵",2],
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        content:function (){
  trigger.player.skip('phase');
  trigger.player.goMad({player:'phaseAfter'});
},
                        sub:true,
                    },
                },
            },
            "Fe军略":{
                nobracket:true,
                audio:["Fe军略",2],
                group:"Fe军略_1",
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
        if(event.responded) return false;
        return _status.currentPhase!==player;
    },
                content:function (){
        "step 0"
        var cards=[];
        var njk=player.hp;
        if(ui.cardPile.childNodes.length<njk){
            var discardcards=get.cards(njk);
            for(var i=0;i<discardcards.length;i++){
                ui.discardPile.appendChild(discardcards[i]);
            }
        }
        for(var i=0;i<njk;i++){
            cards.push(ui.cardPile.childNodes[i]);
        }
        player.chooseCardButton('军略：选择一张卡牌打出',cards).set('filterButton',function(button){
            return get.type(button.link)=='basic'&&_status.event.getTrigger().filterCard(button.link);
        });
        "step 1"
        if(result.bool){
            game.log(player,'军略发动成功');
            trigger.untrigger();
            trigger.responded=true;
            result.links[0].remove();
            trigger.result={bool:true,card:result.links[0]}
        }
    },
                ai:{
                    efFect:{
                        target:function (card,player,target,efFect){
                if(get.tag(card,'respondShan')) return 0.7;
                if(get.tag(card,'respondSha')) return 0.7;
            },
                    },
                },
                subSkill:{
                    "1":{
                        audio:["Fe军略",2],
                        trigger:{
                            player:"loseHpBefore",
                        },
                        forced:true,
                        popup:false,
                        filter:function (event,player){
return Math.random()<=1;
},
                        content:function (){
trigger.untrigger();
trigger.finish();    
},
                        sub:true,
                    },
                },
            },
            "Fe王之霸道":{
                nobracket:true,
                group:["Fe王之霸道锦囊","Fe王之霸道基本","Fe王之霸道_1","Fe王之霸道_2"],
                audio:["Fe王之霸道",2],
                trigger:{
                    source:"damageEnd",
                },
                priority:9,
                forced:true,
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
             player.gain(game.createCard(event.card),'gain2');
        }
    },
                subSkill:{
                    "1":{
                        audio:["Fe王之霸道",2],
                        trigger:{
                            player:"loseMaxHpBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return player!=event.player;
},
                        content:function (){
trigger.untrigger();
trigger.finish();
},
                        sub:true,
                    },
                    "2":{
                        audio:["Fe王之霸道",2],
                        trigger:{
                            player:"turnOverBefore",
                        },
                        forced:true,
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        sub:true,
                    },
                },
            },
            "Fe王之军势":{
                nobracket:true,
                audio:["Fe王之军势"],
                trigger:{
                    source:"damageEnd",
                },
				filter:function (event,player){
      return player.storage.FeNP>=300;
},
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
			player.storage.FeNP-=300;
            game.players[i].die();
        };
    };
        player.removeSkill('Fe王之军势');
},
            },
            "Fe雷之征服者":{
                nobracket:true,
                audio:["Fe雷之征服者",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=50;
},
                content:function (){
"step 1"
player.storage.FeNP-=50;
trigger.source.damage(2,'thunder');
"step 2"
if(Math.random()>1/2){
trigger.source.damage(2,'thunder')};
"step 3"
if(Math.random()>1/2){
trigger.source.damage(2,'thunder')}; 
"step 4"
if(Math.random()>1/2){
trigger.source.damage(2,'thunder')};  
"step 5"
if(Math.random()>1/2){
trigger.source.damage(2,'thunder')};  
    },
            },
			"Fe变容":{
                nobracket:true,
                group:["Fe变容2","Fe变容_1"],
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                audio:["Fe变容",2],
                filter:function (event,player){
  return event.player.sex=='male'&&event.player!=player;
    },
                content:function (){
        player.addSkill(trigger.player.skills,'phaseEnd');
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        audio:["Fe变容",2],
                        forced:true,
                        content:function (){
trigger.untrigger();
trigger.finish();
},
                        sub:true,
                    },
                },
            },
            "Fe变容2":{
                trigger:{
                    global:"phaseBefore",
                },
                forced:true,
                audio:["Fe变容",2],
                filter:function (event,player){
  return event.player.sex=='Female'&&event.player!=player;
    },
                content:function (){
        player.gain(trigger.player.get('he'),target);
        trigger.player.$give(player.num('he'),player);
    },
            },
            "Fe神兵":{
                nobracket:true,
                trigger:{
                    global:"gameDrawAfter",
                },
                group:["Fe神兵_1"],
                forced:true,
                unique:true,
                content:function (){
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player){
                game.players[i].forcemin=true;
            }
        }
    },
                mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'&&player!=target){
                return false;
            }
        },
                },
                subSkill:{
                    "1":{
                        audio:["Fe神兵",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "Fe完全形态":{
                nobracket:true,
                audio:["Fe完全形态",2],
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player)&&player.storage.FeNP>=70;
},
                forced:true,
                content:function (){
        trigger.source.link();
        trigger.source.damage(2,"thunder");
    },
            },
            "Fe人子啊，紧系神明吧":{
                nobracket:true,
                audio:["Fe人子啊，紧系神明吧",2],
                group:["Fe人子啊，紧系神明吧_2","Fe人子啊，紧系神明吧_1"],
                trigger:{
                    player:"phaseDrawBegin",
                },
                forced:true,
				filter:function (event,player){
      return player.storage.FeNP>=50;
},
                content:function (){
        player.gainMaxHp(2);
    },
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageBefore",
                        },
                        audio:["Fe人子啊，紧系神明吧",2],
                        forced:true,
                        unique:true,
                        filter:function (event){
        return event.nature=='thunder';
    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        player.recover(2);
    },
                        ai:{
                            efFect:{
                                target:function (card){
                if(get.tag(card,'thunderDamage')){
                    return [0,2];
                }
            },
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe人子啊，紧系神明吧",2],
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        filter:function (event,player){
        if(player.isLinked()) return true;
        return game.hasPlayer(function(current){
            return current!=player&&!current.isLinked();
        });
    },
                        content:function (){
        "step 0"
        event.targets=game.filterPlayer();
        event.targets.remove(player);
        event.targets.sort(lib.sort.seat);
        if(player.isLinked()) player.link();
        "step 1"
        if(event.targets.length){
            var target=event.targets.shift();
            if(!target.isLinked()){
                target.link();
                player.line(target,'green');
            }
            event.redo();
        }
    },
                        sub:true,
                    },
                },
            },
            "Fe巴比伦的宝藏":{
                nobracket:true,
                skillAnimation:true,
                trigger:{
                    player:"dying",
                },
                filter:function (event,player){
return !player.storage.Fe巴比伦的宝藏&&player.storage.FeNP>=100;
    },
                derivation:["Fe维摩那","Fe王之财宝"],
                audio:["Fe巴比伦的宝藏",2],
                forced:true,
                priority:100,
                content:function (){
"step 0"
        player.storage.Fe巴比伦的宝藏=true;
       "step 1"
       player.recover(player.maxHp-player.hp)._triggered=null;
        player.addSkill('Fe王之财宝');
        player.addSkill('Fe维摩那');
    },
            },
            "Fe天之锁":{
                nobracket:true,
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:["Fe天之锁",2],
                content:function (){
    for(var i=0;i<game.players.length;i++){
        if(game.players[i]!=player){
            game.players[i].addTempSkill("Fe天之锁_2");
            game.players[i].addTempSkill('fengyin','phaseAfter');          
        };
    };
},
                subSkill:{
                    "2":{
                        mark:true,
                        mod:{
                            cardEnabled:function (){
                    return false;
                },
                            cardUsable:function (){
                    return false;
                },
                            cardRespondable:function (){
                    return false;
                },
                            cardSavable:function (){
                    return false;
                },
                        },
                        intro:{
                            content:"不能使用或打出卡牌",
                        },
                        sub:true,
                    },
                },
            },
            "Fe维摩那":{
                nobracket:true,
                trigger:{
                    player:"phaseEnd",
                },
                filter:function (event,player){
        return player.countUsed()>=player.hp;
    },
                forced:true,
                content:function (){
        var jk=Math.ceil(player.hp/2);
        for(var i=0;i<game.players.length;i++){
if(game.players[i]!=player){
game.players[i].damage(jk)._triggered=null;
};
};
    },
                audio:["Fe维摩那",2],
                init:function (player){player.storage.Fe维摩那=true},
                intro:{
                    content:function (storage,player){
            if(_status.currentPhase==player) return '已使用'+player.countUsed()+'张牌';
        },
                },
                mod:{
                    globalTo:function (from,to,distance){
            return distance+3;
        },
                },
                group:["Fe维摩那_1"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        audio:["Fe维摩那",2],
                        forced:true,
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
                        mod:{
                            globalFrom:function (fiom,to,distance){
                    return distance-4;
                },
                        },
                        sub:true,
                    },
                },
            },
            "Fe黄金律":{
                nobracket:true,
                audio:["Fe黄金律",2],
                trigger:{
                    player:"phaseDrawBegin",
                },
                forced:true,
                content:function (){
        trigger.num+=2;
    },
                ai:{
                    threaten:1.5,
                },
                group:["Fe黄金律_1","Fe黄金律_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"loseHpBegin",
                        },
                        audio:["Fe黄金律",2],
                        forced:true,
                        popup:false,
                        filter:function (event,player){
return Math.random()<=1;
},
                        content:function (){
trigger.untrigger();
trigger.finish();   
},
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        forced:true,
                        audio:["Fe黄金律",2],
                        content:function (){
trigger.untrigger();
trigger.finish();   
},
                        sub:true,
                    },
                },
            },
            "Fe王之财宝":{
                nobracket:true,
                enable:"phaseUse",
                usable:3,
                audio:["Fe王之财宝",2],
                filter:function (card,player,target){
    return player.num('he',{subtype:'equip1'})>0;
    },
                filterTarget:function (card,player,target){
    return player!=target;
    },
                filterCard:function (card){
    return get.subtype(card)=='equip1';
    },
                selectCard:1,
                position:"he",
                check:function (){
    return -1
    },
                selectTarget:[1,3],
                content:function (){
var hk=[1,2,3,4].randomGet();
                        "step 0"
                        target.judge();
                        "step 1"
                        var suit=get.suit(cards[0]);
                        if(result.suit!=suit){
                            target.damage(hk,'thunder');
                            };
    },
                group:["Fe王之财宝_1","Fe王之财宝_2","Fe王之财宝_3","Fe王之财宝_4"],
                subSkill:{
                    "1":{
                        audio:["Fe王之财宝",2],
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        unique:true,
                        forceunique:true,
                        filter:function (event,player){
        var type=get.type(event.card,'equip');
        return type=='equip';
    },
                        content:function (){
        player.draw();
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"loseEnd",
                        },
                        audio:["Fe王之财宝",2],
                        frequent:true,
                        filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e') return true;
        }
        return false;
    },
                        content:function (){
        player.recover();
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"equipBegin",
                        },
                        audio:["Fe王之财宝",2],
                        frequent:true,
                        filter:function (event,player){
                return player.num('e',{subtype:'equip1'})&&get.subtype(event.card)== 'equip1';
            },
                        content:function (){
                "step 0"
                trigger.untrigger();
                trigger.finish();
                player.$equip(trigger.card);
                game.addVideo('equip',player,get.cardInfo(trigger.card));
                game.log(player,'装备了',trigger.card);
                "step 1"
                var info=get.info(trigger.card);
                if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
                    var next=game.createEvent('equip_'+trigger.card.name);
                    next.setContent(info.onEquip);
                    next.player=player;
                    next.trigger.card=trigger.card;
                    game.delayx();
                }
                delete player.equiping;
            },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                        if(get.subtype(card)=='equip1') return[1,10];
                    },
                            },
                        },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            player:"equipBegin",
                        },
                        audio:["Fe王之财宝",2],
                        frequent:true,
                        filter:function (event,player){
                return player.num('e',{subtype:'equip5'})&&get.subtype(event.card)== 'equip5';
            },
                        content:function (){
                "step 0"
                trigger.untrigger();
                trigger.finish();
                player.$equip(trigger.card);
                game.addVideo('equip',player,get.cardInfo(trigger.card));
                game.log(player,'装备了',trigger.card);
                "step 1"
                var info=get.info(trigger.card);
                if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
                    var next=game.createEvent('equip_'+trigger.card.name);
                    next.setContent(info.onEquip);
                    next.player=player;
                    next.trigger.card=trigger.card;
                    game.delayx();
                }
                delete player.equiping;
            },
                        ai:{
                            efFect:{
                                player:function (card,player,target){
                        if(get.subtype(card)=='equip5') return[1,10];
                    },
                            },
                        },
                        sub:true,
                    },
                },
            },
            "Fe天地乖离开辟之星":{
                nobracket:true,
                trigger:{
                    player:["phaseBegin","phaseEnd","changeHp"],
                },
                forced:true,
                audio:["Fe天地乖离开辟之星",3],
                content:function (){
                player.getBuff();     
    },
                group:["Fe天地乖离开辟之星_1","Fe天地乖离开辟之星2","Fe天地乖离开辟之星_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"dieBefore",
                        },
                        audio:["Fe天地乖离开辟之星",3],
                        forced:true,
                        unique:true,
                        filter:function (event,player){
       return player.hp>=1;

    },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        player.hp==player.Maxhp;
    },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
                        audio:["Fe天地乖离开辟之星",3],
                        filter:function (event,player){
return player!=event.player&&Math.random()<=0.6;
},
                        content:function (){
                trigger.player.damage();   
    },
                        sub:true,
                    },
                },
            },
            "Fe天地乖离开辟之星2":{
                trigger:{
                    global:"phaseBegin",
                },
                forced:true,
                filter:function (event,player){
return player!=event.player&&player.storage.FeNP>=50;
},
                audio:["Fe天地乖离开辟之星",2],
                content:function (){
					player.storage.FeNP-=50;
          trigger.player.getDebuff(); 
          trigger.player.getDebuff(); 
    },
            },
			"Fe巴顿术":{
                trigger:{
                    player:"phaseDrawBegin",
                },
                check:function (event,player){
        var num=player.storage.Fe巴顿术.length;
        if(num>2) return 1;
                        return 0;
    },
                nobracket:true,
                forced:true,
                init:function (player){
        player.storage.Fe巴顿术=[];
        player.markSkill('Fe巴顿术');
    },
                intro:{
                    content:function (storage,player){
            var num=player.storage.Fe巴顿术.length;
            return '共有'+num+'个角色已对你造成伤害';
        },
                },
                filter:function (event,player,name){
        return player.isDamaged()&&player.storage.FeNP>=40;
    },
                audio:["Fe巴顿术",2],
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
        'step 2'
        var kl=player.storage.Fe巴顿术.length;
        trigger.num+=kl;
    },
                ai:{
                    threaten:1.4,
                },
                group:["Fe巴顿术_1","Fe巴顿术_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        popup:false,
                        silent:true,
                        audio:["Fe巴顿术",2],
                        filter:function (event,player,name){
                return event.source&&!player.storage.Fe巴顿术.contains(event.source);
            },
                        content:function (){
if(!player.storage.Fe巴顿术.contains(trigger.source)) player.storage.Fe巴顿术.add(trigger.source);
            },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        audio:["Fe巴顿术",2],
                        content:function (){
                var num=player.storage.Fe巴顿术.length;
               player.recover(num);
            },
                        sub:true,
                    },
                },
            },
            "Fe假说推论":{
                nobracket:true,
                trigger:{
                    player:["turnOverBefore","loseMaxHpBefore","loseHpBefore"],
                },
                forced:true,
                audio:["Fe假说推论",2],
                content:function (){
        trigger.cancel();
    },
                group:["Fe假说推论_1","Fe假说推论_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageEnd",
                        },
                        forced:true,
                        audio:["Fe假说推论",2],
                        filter:function (event,player){
        return player!=event.player;
    },
                        content:function (){
       player.phase();
    },
                        mod:{
                            targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseDiscardBefore",
                        },
                        forced:true,
                        audio:["Fe假说理论",2],
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "Fe这是基本的推测，我的朋友":{
                nobracket:true,
                enable:"phaseUse",
                usable:1,
                audio:["Fe这是基本的推测，我的朋友",3],
				filter:function (event,player,name){
        return player.storage.FeNP>=200;
    },
                content:function (){
        "step 0"
        for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(game.players[i],player)<=0){
game.players[i].turnOver();
player.storage.FeNP-=200;
}
}
        "step 1"
        for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(player,game.players[i])>0){
game.players[i].addSkill("Fe这是基本的推测，我的朋友_1");
    game.players[i].addSkill("Fe这是基本的推测，我的朋友_2");
    game.players[i].addSkill("Fe这是基本的推测，我的朋友_3");
}
}
                
    },
                group:["Fe这是基本的推测，我的朋友_1","Fe这是基本的推测，我的朋友_2","Fe这是基本的推测，我的朋友_3"],
                subSkill:{
                    "1":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                        },
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
                 player.removeSkill("Fe这是基本的推测，我的朋友_1");
    },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseEnd",
                        },
                        forced:true,
                        content:function (){
                player.removeSkill("Fe这是基本的推测，我的朋友_2");
    },
                        ai:{
                            unequip:true,
                            skillTagFilter:function (player,tag,arg){
                    if(arg&&arg.name=='sha') return true;
                    return false;
                },
                        },
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){               
                trigger.num+=2;
                 player.removeSkill("Fe这是基本的推测，我的朋友_3");
            },
                        sub:true,
                    },
                },
            },
			"Fe魔弹射手":{
                nobracket:true,
                trigger:{
                    source:"damageEnd",
                },
                audio:["Fe魔弹射手",2],
                filter:function (event,player){                   
        return event.num>0&&player.storage.FeNP>=10;
    },
                mark:true,
                unique:true,
                forced:true,
                init:function (player){
        player.storage.Fe魔弹射手=0;
        game.addVideo('storage',player,['Fe魔弹射手',player.storage.Fe魔弹射手]);
    },
                content:function (){
        player.storage.Fe魔弹射手++;
        game.addVideo('storage',player,['Fe魔弹射手',player.storage.Fe魔弹射手]);
    },
                intro:{
                    content:"mark",
                },
                group:["Fe魔弹射手_1","Fe魔弹射手_2","Fe魔弹射手_3","Fe魔弹射手_4"],
                subSkill:{
                    "1":{
                        trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return event.card.name=='sha'||event.card.name=='wanjian'&&event.player!=player;
    },
                        content:function (){
                    var xx=player.storage.Fe魔弹射手;
                          trigger.num+=xx;
    },
                        mod:{
                            maxHandcard:function (player,num){
            return num+=(player.storage.Fe魔弹射手);
        },
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"recoverBegin",
                        },
                        forced:true,
                        audio:["Fe魔弹射手",2],
                        content:function (){
                    var ks=player.storage.Fe魔弹射手;
                     trigger.num+=ks;
},
                        sub:true,
                    },
                    "3":{
                        mod:{
                            targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                        },
                        audio:["Fe魔弹射手",2],
                        trigger:{
                            player:"shaBegin",
                        },
                        forced:true,
                        filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                        content:function (){
     trigger.directHit=true;
    },
                        sub:true,
                    },
                    "4":{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        audio:["Fe魔弹射手",2],
                        forced:true,
                        content:function (){
                       var ke=player.storage.Fe魔弹射手;
                     trigger.num+=ke;
},
                        sub:true,
                    },
                },
            },
            "Fe蜘蛛丝的终点":{
                nobracket:true,
                trigger:{
                    source:"damageEnd",
                },
                forced:true,
                audio:["Fe蜘蛛网的终点",2],
                filter:function (event,player){
        return event.player!=player&&player.storage.FeNP>=90;
    },
                content:function (){
					player.storage.FeNP-=90;
    trigger.player.addTempSkill('Fe蜘蛛丝的终点_1');
        trigger.player.skip('phaseUse');
    },
                group:["Fe蜘蛛丝的终点_2","Fe蜘蛛丝的终点_3"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"recoverBefore",
                        },
                        forced:true,
                        content:function (){
    trigger.cancel();
    },
                        sub:true,
                    },
                    "2":{
                        audio:["Fe蜘蛛网的终点",2],
                        trigger:{
                            player:"loseMaxHpBefore",
                        },
                        forced:true,
                        filter:function (event,player){
return player!=event.player;
},
                        content:function (){
trigger.cancel();
},
                        sub:true,
                    },
                    "3":{
                        trigger:{
                            player:"turnOverBefore",
                        },
                        audio:["Fe蜘蛛网的终点",2],
                        forced:true,
                        content:function (){
        trigger.cancel();
    },
                        sub:true,
                    },
                },
            },
            "Fe终局的犯罪":{
                nobracket:true,
                audio:["Fe终局的犯罪",4],
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player!=target&&player.storage.Fe魔弹射手>0&&!player.getEnemies().contains(event.player);
    },
                content:function (){
                    var JKL=player.storage.Fe魔弹射手;
                    var lo=target.maxHp;
              target.goMad({player:'phaseAfter'});
                  player.changeHujia(lo);
        target.damage(JKL)._triggered=null;
    },
                check:function (card){return 8-ai.get.value(card)},
                ai:{
                    threaten:1.5,
                },
            },
			"Fe光壳溢目的虚树":{
							 trigger:{
                            source:"damageBegin",
                        },
						nobracket:true,
						audio:["Fe光壳溢目的虚树",4],
                        forced:true,
                        filter:function (event,player){
                  return player!=event.player&&Math.floor(player.storage.FeNP/10)>0;                        
},
                        content:function (){
							var kl=Math.floor(player.storage.FeNP/10);
                     trigger.num+=kl;
},
                         group:"Fe光壳溢目的虚树_1",
						 subSkill:{
							 1:{
								 trigger:{
                            player:"phaseBegin",
                        },
						nobracket:true,
						audio:["Fe光壳溢目的虚树",4],
                        forced:true,
                        filter:function (event,player){
                  return player.storage.FeNP>=100;                        
},
                        content:function (){
					       'step 0'
						   player.storage.FeNP-=100;
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.damage(2);
                                event.redo();
                            }
},
							 },
						 },
						},
						"Fe正气丧失":{
							 trigger:{
                            global:"damageBegin",
                        },
						nobracket:true,
						audio:["Fe正气丧失",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player);                        
},
                        content:function (){
                     trigger.num++;
},
                      group:["Fe正气丧失_1","Fe正气丧失_2"],
					  subSkill:{
						  1:{
							   trigger:{
                            source:"damageEnd",
                        },
                        forced:true,
						audio:["Fe正气丧失",2],
                        content:function (){
                     'step 0'
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP-=10;
                                event.redo();
                            }
},
						  },
						  2:{
							   trigger:{
                            global:"phaseUseBegin",
                        },
						audio:["Fe正气丧失",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player)&&Math.random()<=0.3;;                        
},
                        content:function (){
                     trigger.cancel();
},
						  },
					  },						
					  },
						"Fe魔女审判":{
							nobracket:true,
                audio:["Fe魔女审判",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                content:function (){
              trigger.source.damage(1)._triggered=null;
			  trigger.source.turnOver();
				},
				mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)=='delay'){
                return false;
            }
        },
                },
				group:"Fe魔女审判_1",
				subSkill:{
					1:{
						trigger:{
            global:"dieAfter",
},
forced:true,
audio:["Fe魔女审判",2],
content:function (){
player.storage.FeNP+=trigger.player.storage.FeNP;
player.syncStorage('FeNP');
},
					},
				},
						},
						"Fe信仰的祈祷":{
							 trigger:{
                           global:"phaseBefore",
                        }, 
						nobracket:true,
						audio:["Fe信仰的祈祷",2],
                        forced:true,
						filter:function (event,player){
                return player.getFriends().contains(event.player)&&event.player!=player;
            },
                        content:function (){
                     'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP+=20;
                                event.redo();
                            }
        },
						group:["Fe信仰的祈祷_1","Fe信仰的祈祷_2"],
						subSkill:{
							2:{
								init2:function (player){
player.storage.Fe信仰的祈祷_2=[]
},
intro:{
content:function (storage){
if(storage==undefined) return '当前技能：无'
else return '当前技能：'+get.translation(storage)
}
},
trigger:{
player:"phaseDrawBegin",
},
forced:true,
content:function(){
event.skills=[];
 						for(var i in lib.card){
 							if(!lib.translate[i+'_info']) continue;
 							if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
 							if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
 							if(lib.card[i].subtype=='equip1'){
 								var skill=lib.card[{name:i}.name].skills;
 								if(skill) event.skills=event.skills.concat(skill);
 							}
 						}
var skill=event.skills.randomGet()
player.addTempSkill(skill,{player:'phaseBefore'});
player.storage.Fe信仰的祈祷_2=skill;
}
							},
							1:{
								trigger:{
                            player:"phaseBegin",
                        },
                        forced:true,
						audio:["Fe信仰的祈祷",2],
                        content:function (){
                     'step 0'
					 player.recover();
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover();
                                event.redo();
                            }
},
							},
						},
						},
			"Fe森罗万象":{
				nobracket:true,
				trigger:{
                    target:"shaBegin",
                },
				audio:["Fe森罗万象",2],
				forced:true,
                content:function (){
              trigger.untrigger();
              trigger.finish();
    },
                ai:{
                    effect:{
                        target:function (card,player,target,current){
                if(card.name=='sha') return [1,0.5];
            },
                    },
                },
				group:["Fe森罗万象_1","Fe森罗万象_2","Fe森罗万象_3"],
				subSkill:{
					1:{
						audio:["Fe森罗万象",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        frequent:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip2'})&&get.type(event.card)== 'equip2';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            effect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip2') return[1,10];
            },
                            },
                        },
                        sub:true,
                },
					2:{
						audio:["Fe森罗万象",2],
                trigger:{
                    player:"useCardAfter",
                },
                forced:true,
                filter:function (event,player){
return get.type(event.card)=='equip';
},
                content:function (){
                      player.storage.FeNP+=20;
},
					},
					3:{
						trigger:{global:['useCard','respondEnd']},
					priority:15,
					filter:function(event,player){
						if(_status.currentPhase!=event.player) return false;
						if(event.player==player) return false;
						return get.suit(event.card)!=undefined;
					},
					direct:true,
					content:function(){		
						"step 0"
						if(!player.storage.Fe森罗万象_3) player.storage.Fe森罗万象_3=[];
						"step 1"
						if(!player.storage.Fe森罗万象_3.contains(get.suit(trigger.card))){
							player.storage.Fe森罗万象_3.add(get.suit(trigger.card));
						}
					},				
					group:['Fe森罗万象_clear','Fe森罗万象_launch'],					
					},
				clear:{		
							trigger:{global:'phaseBegin'},
							unique:true,
							direct:true,
							content:function(){
								player.storage.Fe森罗万象_3=[];
							},						
						},		
				launch:{		
							trigger:{global:'phaseDiscardBegin'},
							unique:true,
							audio:["Fe森罗万象",2],
							logTarget:'player',
							check:function(event,player){
								return ai.get.attitude(player,event.player)<0;
							},							
							filter:function(event,player){
								return player.storage.Fe森罗万象_3&&player.storage.Fe森罗万象_3.length>=3;
							},								
							content:function(){
								var cards=trigger.player.get('h');
								var suits=player.storage.Fe森罗万象_3;
								var cardsx=[];
								for(var i=0;i<cards.length;i++){
									if(suits.contains(get.suit(cards[i]))) cardsx.push(cards[i]);
								}
								if(cardsx.length) trigger.player.discard(cardsx);
								trigger.player.loseHp();
							},
							ai:{
								expose:0.2,
							},								
						},
				},
			},
		    "Fe父女羁绊":{
				 nobracket:true,
				 trigger:{
                    player:"damgeEnd",
                },
                forced:true,
                audio:["Fe父女羁绊",3],
                content:function (){
          player.getBuff();     
    },
	group:["Fe父女羁绊_1","Fe父女羁绊_2"],
	subSkill:{
		1:{
			trigger:{
player:"phaseDrawBegin",
},
forced:true,
audio:["Fe父女羁绊",2],
content:function(){
trigger.num+=game.players.length
}
		},
		2:{
			trigger:{player:'loseEnd'},
			forced:true,
			audio:["Fe父女羁绊",2],
			filter:function(event,player){
				return player.num('h')<2;
			},
			content:function(){
				player.draw(2-player.num('h'));		
		},
	},
			},
			},
		    "Fe雅号异星章鱼":{
				nobracket:true,
				trigger:{global:['useCardAfter','respondAfter']},
					forced:true,
					audio:["Fe雅号异星章鱼",2],
					filter:function(event,player){
						if(event.player==player) return false;
						if(event.cards){
							for(var i=0;i<event.cards.length;i++){
								if(get.suit(event.cards[i])=='black') 
								return true;
							}
						}
						return false;
					},
					content:function(){
						player.gain(trigger.cards,'gain2');
						game.log(player,'获得了',trigger.cards);
					},
                     group:"Fe雅号异星章鱼_1",
                     subSkill:{						 
						 1:{
							trigger:{player:'useCardAfter',global:'phaseEnd'},
					direct:true,	
					init:function(player){
						player.storage.Fe雅号异星章鱼_1=0;
					},		
					filter:function(event,player,name){
						if(name=='phaseEnd') return true;
						return get.type(event.card)=='trick'&&get.position(event.card)=='d'&&get.itemtype(event.card)=='card';
					},						
					content:function(){
						"step 0"
						if(event.triggername=='phaseEnd'){
							player.storage.Fe雅号异星章鱼_1=0;
							event.finish();
						}
						"step 1"
						player.storage.Fe雅号异星章鱼_1++;
						"step 2"
						var num=player.storage.Fe雅号异星章鱼_1;
						var val=ai.get.value(trigger.card);
						var next=player.chooseToDiscard('是否弃置'+num+'张牌将'+get.translation(trigger.card)+'收回？','he',num);
						next.set('numx',num);
						next.set('ai',function(card){
							if(_status.event.numx>2) return 0;
							if(trigger.cards.length>1) return 1;
							return val-ai.get.value(card);
						});
						next.set('logSkill',['Fe雅号异星章鱼_1']);
						"step 3"
						if(result.bool){
							player.gain(trigger.card,'gain2');
						}
						else{
							event.finish();
						}
					}
						 },
					 },
			},
		    "Fe富岳三十六景":{
				nobracket:true,
				enable:"phaseUse",
                      usable:1,
                      audio:["Fe富岳三十六景",4],
                    filter:function (event,player){
                return player.storage.FeNP>=150;
                 },
                           content:function (){
                                   'step 0'
						   player.storage.FeNP-=150;
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
								var kj=target.storage.FeNP;
                                player.line(target,'green');
                                target.storage.FeNP-=kj;
								target.loseMaxHp(2);
								player.recover(player.maxHp-player.hp);
								player.draw(3);
                                event.redo();
                            }
                     },
			},
		    "Fe三千世界":{
				trigger:{
                            player:"dieBegin",
                        },
						nobracket:true,
						audio:["Fe三千世界",2],
                        forced:true,
                        priority:10,
                        content:function (){
                "step 0"
                trigger.untrigger();
                trigger.finish();
                player.hp=0;
                "step 1"
        event.target=game.filterPlayer().randomGet(player);
        if(!event.target){
            event.finish();
            return;
        }
        player.line(event.target);
        game.delayx();
                "step 2"
        player.addSkill(event.target.skills);
        player.gain(event.target.get('h'),event.target);
        player.gainMaxHp(event.target.maxHp);
        player.recover(event.target.hp);
        event.target.$give(event.target.num('h'),player);
        event.target.clearSkills();
        event.target.loseMaxHp(event.target.maxHp);
    },
	group:"Fe三千世界_1",
	subSkill:{
		1:{
			trigger:{
                            player:"dying",
                        },
                        forced:true,
                        priority:10,
                        filter:function (event,player){
                return player.hp<=0&&player.storage.FeNP>=120;
            },
                        content:function (){
							var KJ=player.storage.FeNP;
							player.storage.FeNp(KJ);
                player.recover(player.maxHp-player.hp);
                player.draw(5);
            },
		},
	},
			},
		    "Fe天下布武":{
				trigger:{
                    player:"shaBegin",
                },
				nobracket:true,
				audio:["Fe天下布武",2],
                forced:true,
                unique:true,
                check:function (event,player){
        return ai.get.attitude(player,event.target)<=0;
    },
                filter:function (event,player){
          return event.card;
    },
                content:function (){
             trigger.directHit=true;
    },
                mod:{
                    targetInRange:function (){
            return true;
        },
                },
				group:["Fe天下布武_1","Fe天下布武_2","Fe天下布武_3"],
				subSkill:{
					1:{						
                trigger:{
                    player:"useCardAfter",
                },
                audio:["Fe天下布武",2],
                forced:true,
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
},
                content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;       
},
					},
					2:{
						trigger:{
                            player:"turnOverBefore",
                        },
                        audio:["Fe天下布武",2],
                        forced:true,
                        content:function (){
        trigger.untrigger();
        trigger.finish();
    },
					},
					3:{
						 audio:["Fe天下布武",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                filter:function (event,player){
return (event.source&&event.source.countCards('he')&&event.source!=player);
},
                content:function (){
              trigger.source.storage.FeNP-=20;
			  trigger.source.skip('phase');
              trigger.source.goMad({player:'phaseAfter'});
				},
					},
				},
			},
		    "Fe魔王":{
				nobracket:true,
				trigger:{
                    player:["phaseDiscardBefore","phaseDrawBegin"],
                },
				audio:["Fe魔王",2],
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    },
	group:["Fe魔王_1","Fe魔王_2","Fe魔王_3"],
	      subSkill:{
			  1:{
				 trigger:{
                    player:"recoverBefore"
                },
				audio:["Fe魔王",2],
                forced:true,
                content:function (){
        trigger.untrigger();
        trigger.finish();
    }, 
			  },
			  2:{
				 trigger:{player:'loseEnd'},
			forced:true,
			audio:["Fe魔王",2],
			filter:function(event,player){
				return player.num('h')<Math.ceil(player.maxHp/2);
			},
			content:function(){
				var hjk=Math.ceil(player.maxHp/2);
				player.draw(hjk-player.num('h'));		
		}, 
			  },
			  3:{
				   trigger:{
                            source:"damageBegin",
                        },
						audio:["Fe魔王",2],
                        forced:true,
                        filter:function (event,player){
                  return player!=event.player&&Math.ceil(player.maxHp/2)>0;                        
},
                        content:function (){
							var kl=Math.ceil(player.maxHp/2);
                          trigger.num+=kl;
},
			  },
		  },
			},
			"Fe战略":{
				nobracket:true,
				audio:["Fe战略",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip1'})&&get.type(event.card)== 'equip1';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            effect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip1') return[1,10];
            },
                            },
                        },
						group:["Fe战略_1","Fe战略_2"],
						subSkill:{
							1:{
								audio:["Fe战略",2],	
			trigger:{player:'loseAfter'},
			priority:-55,
			direct:true,
			filter:function(event,player){
				if(event.player.classList.contains('dead')==false&&
				event.cards&&event.cards.length){
					if(player.equiping) return false;
					for(var i=0;i<event.cards.length;i++){
						if(get.position(event.cards[i])=='d'){
							return true;
						}
					}
					return false;
				}
			},
			content:function(){
				"step 0"
				player.chooseTarget('选择1名目标对其造成x（x为你使用或弃置的手牌数)点伤害',function(card,player,target){
					return player!=target
				}).ai=function(target){
					return ai.get.damageEffect(target,player,player);
				};
				"step 1"
				if(result.bool){
					player.logSkill('Fe战略_1',result.targets,'white');
					result.targets[0].damage(trigger.num);
				}
				else{
					event.finish();
				}
			},
							},
							2:{
								audio:["Fe战略",2],
                        trigger:{
                            player:"equipBegin",
                        },
                        forced:true,
                        filter:function (event,player){
        return player.num('e',{type:'equip3'})&&get.type(event.card)== 'equip3';
    },
                        content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                        ai:{
                            effect:{
                                player:function (card,player,target){
                if(get.type(card)=='equip3') return[1,10];
            },
                            },
                        },
							},
						},
			},
			"Fe傻瓜杀法":{
				nobracket:true,
				 mod:{
                    targetEnabled:function (card,player,target){
            if(get.type(card)&&player!=target){
                return false;
            }
        },
                },
			    group:["Fe傻瓜杀法_1","Fe傻瓜杀法_2","Fe傻瓜杀法_3"],
				subSkill:{
					1:{
						trigger:{
                    player:"turnOverBefore",
                },
                forced:true,
                audio:["Fe傻瓜杀法",2],
                content:function (){
                   trigger.cancel();
    },
					},
					2:{
						 trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        audio:["Fe傻瓜杀法",2],
                        priority:16,
                        check:function (){return false;},
						filter:function (event,player){
                           return Math.random()<=0.5;
                               },
                        content:function (){
        trigger.untrigger();
        trigger.finish();
        trigger.player.damage(trigger.num)._triggered=null;
    },
					},
				    3:{
						audio:["Fe傻瓜杀法",2],
                trigger:{
                    player:"recoverBefore",
                },
                forced:true,
                content:function (){
               var ju=player.maxHp-player.hp;
                 trigger.num+=ju;			   
},
					},
				},
			},
		    "Fe敦盛节拍":{
				 enable:"phaseUse",
				 nobracket:true,
				 audio:["Fe敦盛节拍",4],
				 usable:1,
                chooseButton:{
                    dialog:function (){
            var list1=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hsdusu') list1.push(['hsdusu','',i]);
            }
            var list2=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hslingjian') list2.push(['hslingjian','',i]);
            }
            var list3=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hsshenqi') list3.push(['hsshenqi','',i]);
            }
            var list4=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='jiqi') list2.push(['jiqi','',i]);
            }
            var list5=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='jiguan') list2.push(['jiguan','',i]);
            }
            var list6=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hsbaowu') list2.push(['hsbaowu','',i]);
            }
            var list7=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='food') list2.push(['food','',i]);
            }
            var list8=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='zhenfa') list2.push(['zhenfa','',i]);
            }
            var list9=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hsqingyu') list2.push(['hsqingyu','',i]);
            }
            var list10=[];
            for(var i in lib.card){
                if(!lib.translate[i+'_info']) continue;
                if(lib.card[i].mode&&lib.card[i].mode.contains(lib.config.mode)==false) continue;
                if(lib.config.hiddenCardPack.indexOf(i)==0) continue;
                if(lib.card[i].type=='hsmengjing') list2.push(['hsmengjing','',i]);
            }
            var dialog=ui.create.dialog();
            dialog.add('敦盛节拍');
            dialog.add([list1,'vcard']);
            dialog.add([list2,'vcard']);
            dialog.add([list3,'vcard']);
            dialog.add([list4,'vcard']);
            dialog.add([list5,'vcard']);
            dialog.add([list6,'vcard']);
            dialog.add([list7,'vcard']);
            dialog.add([list8,'vcard']);
            dialog.add([list9,'vcard']);
            dialog.add([list10,'vcard']);
            return dialog;
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button,player){
            var player=_status.event.player;
            var recover=0,lose=1;
            for(var i=0;i<game.players.length;i++){
                if(!game.players[i].isOut()){
                    if(game.players[i].hp<game.players[i].maxHp){
                        if(ai.get.attitude(player,game.players[i])>0){
                            if(game.players[i].hp<2){
                                lose--;
                                recover+=0.5;
                            }
                            lose--;
                            recover++;
                        }
                        else if(ai.get.attitude(player,game.players[i])<0){
                            if(game.players[i].hp<2){
                                lose++;
                                recover-=0.5;
                            }
                            lose++;
                            recover--;
                        }
                    }
                    else{
                        if(ai.get.attitude(player,game.players[i])>0){
                            lose--;
                        }
                        else if(ai.get.attitude(player,game.players[i])<0){
                            lose++;
                        }
                    }
                }
            }
            if(player.storage.pd=='basic'&&player.isDamaged()) return (button.link[2]=='tao')?1:-1;
            if(player.storage.pd=='basic'&&player.num('h','sha')) return (button.link[2]=='jiu')?1:-1;
            if(player.storage.pd=='basic'&&!player.num('h','sha')) return (button.link[2]=='sha')?1:-1;
        },
                    backup:function (links,player){
            return {
                filterCard:function(){return false},
                selectCard:-1,
                popname:true,
                viewAs:{name:links[0][2]},
                
            }
        },
                },
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                if(player.storage.pd!=undefined) return 1;
                if(player.hp<=1&&player.storage.pd==undefined) return -10;
                if(Math.random()<0.67) return 0.5;
                return -1;
            },
                    },
                    threaten:4,
                },
				group:["Fe敦盛节拍_1","Fe敦盛节拍_2"],
				subSkill:{
					1:{
						trigger:{
                            global:"phaseBegin",
                        },
                        forced:true,
						audio:["Fe敦盛节拍",4],
						filter:function (event,player){
                return event.player!=player;
            },
                        content:function (){
                     'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP+=10;
                                event.redo();
                            }
},
					},
					2:{
						trigger:{
                            global:"recoverBegin",
                        },
                        forced:true,
						audio:["Fe敦盛节拍",4],
						filter:function (event,player){
                return event.player!=player;
            },
                        content:function (){
                     'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP+=10;
								target.draw();
                                event.redo();
                            }
},
					},
				},
			},
			"Fe沙滩的第六天魔王":{
				trigger:{player:['damageBegin','loseHpBegin']},
			forced:true,
			 nobracket:true,
			audio:["Fe沙滩的第六天魔王",2],
			filter:function(event,player){
				return event.num>0;
			},
			content:function(){
				trigger.num++;
			},		
            group:"Fe沙滩的第六天魔王_1",	
               subSkill:{
				   1:{
			audio:["Fe沙滩的第六天魔王",2],
			trigger:{player:'useCard'},
			forced:true,
			content:function(){
				'step 0'
				player.judge(function(card){
					return get.suit(card)=='spade'?-1:4;
				});
				'step 1'
				if(result.bool){	
				player.recover();
					if(trigger.cards&&trigger.cards.length){
						trigger.player.gain(trigger.cards);
						trigger.player.$gain2(trigger.cards);
						game.log(trigger.player,'收回了',trigger.cards);
					}
				}
				else{
					player.draw();
					player.loseHp();
					event.finish();
				}
			}			
				   },
				   },			
			},
			 "Fe第六天魔王波旬夏盛":{
				trigger:{
                            global:"damageBegin",
                        },
						nobracket:true,
						audio:["Fe第六天魔王波旬夏盛",4],
                        forced:true,
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player)&&player.storage.FeNP>=50;                        
},
                        content:function (){
							player.storage.FeNP-=50;
                            trigger.player.damage(2,'fire')._triggered=null;
},
                      group:"Fe第六天魔王波旬夏盛_1",
					  subSkill:{
						  1:{
						audio:["Fe第六天魔王波旬夏盛",4],
			trigger:{global:'dying'},
			priority:55,
			filter:function(event,player){
				return event.player.hp<=0&&player.getEnemies().contains(event.player);
			},
			unique:true,
			content:function(){
				"step 0"
				trigger.player.judge(function(card){
					if(get.color(card)=='black') return -10;
					if(get.color(card)=='red') return 5;
				});
				"step 1"
				if(result.color=='black'){
					trigger.player.die()._triggered=null;
				}
				else{
					if(result.color=='red'){
						var jh=player.num('h');
						trigger.player.loseMaxHp(jh);	
					}
				}
				"step 2"
				if(!trigger.player.isAlive()){
					trigger.untrigger(true);
					trigger.finish();
				}
			}			
						 },
					  },
			},
			"Fe恸哭外装":{
				nobracket:true,
				forced:true,
				audio:["Fe恸哭外装",4],
				trigger:{
                            player:"phaseEnd",
                        },
				filter:function(event,player){
					return player.storage.FeNP>=50;
				},
				derivation:['Fe无辜的怪物'],
				content:function(){
					player.setAvatar('Fe_andongniao','Fe_mozhate');
					player.addSkill('Fe无辜的怪物');
					player.removeSkill('Fe恸哭外装');
				},
				group:["Fe恸哭外装_1","Fe恸哭外装_2"],
				subSkill:{
					1:{
                audio:["Fe恸哭外装",2],
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                content:function (){
				player.storage.FeNP+=20;	
         trigger.num++;
},
					},
					2:{
						trigger:{player:'phaseDrawBegin'},
				forced:true,
				audio:["Fe恸哭外装",2],
				content:function(){
					trigger.num+=2;
				},
					},
				},
			ai:{
					order:function(){
						if(_status.event.player.hp==1) return 9;
						return 0.5;
					},
					result:{
						player:function(player){
							if(player.hp<player.maxHp) return 1;
							return 0;
						}
					}
				}
			},
			"Fe无辜的怪物":{
				nobracket:true,
				forced:true,
				audio:["Fe无辜的怪物",4],
				trigger:{
                            player:"phaseBegin",
                        },
				filter:function(event,player){
					return player.storage.FeNP>=40;
				},
				derivation:['Fe恸哭外装'],
				content:function(){
					player.storage.FeNP-=40;
					player.setAvatar('Fe_andongniao','Fe_andongniao');
					player.addSkill('Fe恸哭外装');
					player.removeSkill('Fe无辜的怪物');
				},
				group:["Fe无辜的怪物_1","Fe无辜的怪物_2","Fe无辜的怪物_3","Fe无辜的怪物_4"],
				subSkill:{
					1:{
						trigger:{player:"damageBegin",},
			priority:-2,
        forced:true,
		audio:["Fe无辜的怪物",4],
			content:function(){
				 trigger.untrigger();
           trigger.finish();
			},
					},
					2:{
						trigger:{player:"loseHpBefore",},
			priority:-2,
        forced:true,
		audio:["Fe无辜的怪物",4],
			content:function(){
				 trigger.untrigger();
           trigger.finish();
			},
					},
			        3:{
						trigger:{player:"loseMaxHpBefore",},
			priority:-2,
        forced:true,
		audio:["Fe无辜的怪物",4],
			content:function(){
				 trigger.untrigger();
           trigger.finish();
			},
					},
					4:{
						trigger:{player:"phaseUseBegin",},
			priority:-2,
			audio:["Fe无辜的怪物",4],
        forced:true,
			content:function(){
				 trigger.untrigger();
           trigger.finish();
			},
					},
				},
				
			},
			"Fe燎原之火":{
						nobracket:true,
                     trigger:{
                    source:"damageBegin",
                },
				audio:["Fe燎原之火",4],
                forced:true,
                filter:function (event){
        return event.nature=='fire';
    },
                content:function (){
					trigger.num++;
    },
                       group:["Fe燎原之火1","Fe燎原之火2"],
			},
			"Fe燎原之火2":{
				trigger:{
                    player:"damageBegin",
                },
                forced:true,
				audio:["Fe燎原之火",4],
                filter:function (event,player){
        return event.nature=='fire'&&player.storage.FeNP>=30;
    },
                content:function (){
        trigger.untrigger();
        trigger.finish();
		player.draw();
		player.recover();
    },
			},
			"Fe燎原之火1":{
				 trigger:{
                            global:"damageBegin",
                        },
						audio:["Fe燎原之火",4],
                        forced:true,
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player);                        
},
                        content:function (){
                     trigger.num++;
},
			},
			"Fe至高的神啊请赐予我怜悯":{
			       trigger:{
                            player:"damageEnd",
                        },
						nobracket:true,
						audio:["Fe至高的神啊请赐予我怜悯",4],
                        forced:true,
                        filter:function (event,player){
                  return player.storage.FeNP>=100;                        
},
                        content:function (){
							"step 0"
							player.storage.FeNP-=100;
						  "step 1"
						  for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(game.players[i],player)<=0){
game.players[i].damage(3)._triggered=null;
}
}
						  "step 2"
						  for(var i=0;i<game.players.length;i++){
if(ai.get.attitude(player,game.players[i])>0){
game.players[i].loseHp();
}
}
							 },
			},
			"Fe音乐神的加护":{
				audio:["Fe音乐神的加护",2],
                trigger:{
                    global:["damageEnd","loseHpEnd"],
                },
				nobracket:true,
                filter:function (event,player){
        return (player.getEnemies().contains(event.player)&&event.card&&event.source&&event.player.classList.contains('dead')==false&&player.num('he'));
    },
                direct:true,
                check:function (event,player){
        var att1=ai.get.attitude(player,event.player);
        var att2=ai.get.attitude(player,event.source);
        return att1>att2&&att1>=0;
    },
                content:function (){
        "step 0"
        player.draw(1);
        var next=player.chooseToDiscard('he',get.prompt('Fe音乐神的加护'));
        next.set('ai',ai.get.unuseful2);
        next.set('logSkill','Fe音乐神的加护');
        "step 1"
        if(result.bool){
            trigger.player.judge();
        }
        else{
            event.finish();
        }
        "step 2"
        switch(get.suit(result.card)){
            case 'heart':trigger.player.damage();break;
            case 'diamond':player.draw(2);break;
            case 'club':player.storage.FeNP+=20;break;
            case 'spade':trigger.player.storage.FeNP-=20;break;
        }
    },
                ai:{
                    expose:0.3,
                },
				group:"Fe音乐神的加护2",				
			},
			"Fe音乐神的加护2":{
				audio:["Fe音乐神的加护",2],
                trigger:{
                    global:["recoverEnd","gainEnd"],
                },
                filter:function (event,player){
        return (player.getFriends().contains(event.player)&&event.card&&event.source&&event.player.classList.contains('dead')==false&&player.num('he'));
    },
                direct:true,
                check:function (event,player){
        var att1=ai.get.attitude(player,event.player);
        var att2=ai.get.attitude(player,event.source);
        return att1>att2&&att1>=0;
    },
                content:function (){
        "step 0"
        player.draw(1);
        var next=player.chooseToDiscard('he',get.prompt('Fe音乐神的加护2'));
        next.set('ai',ai.get.unuseful2);
        next.set('logSkill','Fe音乐神的加护2');
        "step 1"
        if(result.bool){
            trigger.player.judge();
        }
        else{
            event.finish();
        }
        "step 2"
        switch(get.suit(result.card)){
            case 'heart':trigger.player.recover();break;
            case 'diamond':trigger.player.draw();break;
            case 'club':player.draw(2);break;
            case 'spade':trigger.player.storage.FeNP+=20;break;
        }
    },
                ai:{
                    expose:0.3,
                },
			},
			"Fe为死神奏响的葬送曲":{
				nobracket:true,
				enable:"phaseUse",
                      usable:1,
                      audio:["Fe为死神奏响的葬送曲",4],
                    filter:function (event,player){
                return player.storage.FeNP>=300;
                 },
                           content:function (){
                                   'step 0'
						   player.storage.FeNP-=300;
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
								target.addSkill('Fe虚弱');
								target.turnOver();
								target.loseHp(2);
                                event.redo();
                            }
                     },
			},
			"Fe虚弱":{
				trigger:{
player:"changeHp",
},
forced:true,
filter:function (event,player){
return player.hp>=2;
},
content:function (){
        player.removeSkill('Fe虚弱');
},
             group:["Fe虚弱_1","Fe虚弱_2","Fe虚弱_3","Fe虚弱_4"],
			 subSkill:{
				 1:{
					 trigger:{
source:"damageBegin",
},
forced:true,
content:function (){
      trigger.num-=1;
},
				 },
				 2:{
					 trigger:{
player:"damageBegin",
},
forced:true,
content:function (){
       trigger.num++;
},
				 },
			     3:{
					 trigger:{
player:"recoverBegin",
},
forced:true,
content:function (){
        trigger.untrigger();
        trigger.finish();
},
				 },
				 4:{					 
					 trigger:{
						 player:"phaseBegin",
},
forced:true,
content:function (){
        player.damage(2)._triggered=null;
},
				 },
			 },
			},
			"Fe小小的夜之曲":{
				trigger:{player:['chooseToRespondBegin','chooseToUseBegin']},
				forced:true,
				audio:["Fe小小的夜之曲",4],
				nobracket:true,
				max:2,
				filter:function(event,player){
					return _status.currentPhase!=player;
				},
				priority:101,
				content:function(){
					var cards=[];
					var max=Math.min(ui.cardPile.childNodes.length,lib.skill.Fe小小的夜之曲.max);
					for(var i=0;i<max;i++){
						var card=ui.cardPile.childNodes[i];
						if(trigger.filterCard(card,player)){
							cards.push(card);
						}
					}
					if(cards.length){
						player.gain(cards,'draw');
						player.logSkill('Fe小小的夜之曲');
						game.log(player,'获得了'+get.cnNumber(cards.length)+'张牌');
					}
				},
				ai:{
					effect:{
						target:function(card,player,target,effect){
							if(get.tag(card,'respondShan')) return 0.7;
							if(get.tag(card,'respondSha')) return 0.7;
						}
					}
			},
			hiddenCard:function(player,name){
					if(_status.currentPhase==player) return false;
					var max=Math.min(ui.cardPile.childNodes.length,lib.skill.Fe小小的夜之曲.max);
					for(var i=0;i<max;i++){
						var card=ui.cardPile.childNodes[i];
						if(card.name==name) return true;
					}
					return false;
				},
				group:"Fe小小的夜之曲_1",
				subSkill:{
				1:{
					trigger:{player:'gainEnd'},
					filter:function(event,player,name){
						if(event.cards){
							for(var i=0;i<event.cards.length;i++){
								if(get.number(event.cards[i])<=player.hp&&player.isDamaged()) return true;
							}
							return false;
						}
						return false;
					},		
					forced:true,		
                   audio:["Fe小小的夜之曲",4],					
					content:function(){
								player.storage.FeNP+=10;
								player.recover();
					}						
				},
				},
			},
			"Fe艺术审美":{
				  trigger:{
                            player:"recoverBegin",
                        },
                        forced:true,
						nobracket:true,
						audio:["Fe艺术审美",2],
						filter:function(event,player){
								return player.storage.FeNP>=30;
							},	
                        content:function (){
                     'step 0'
                     player.storage.FeNP-=30;
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.recover(target.MaxHp-target.hp);
                                event.redo();
                            }
        },
		     group:["Fe艺术审美_1","Fe艺术审美_2"],
			 subSkill:{
				 1:{
					  trigger:{
                            global:"gameStart",
                        },
                        forced:true,
                        content:function (){
                       'step 0'
                            event.list=player.getFriends().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.addSkill("Fe艺术审美_3");
                                event.redo();
                            }
},
				 },
				 2:{
					 trigger:{
                            global:"phaseBefore",
                        },
						audio:["Fe艺术审美",2],
                        forced:true,
                        filter:function (event,player){
                  return player.getFriends().contains(event.player);                        
},
                        content:function (){
                     trigger.player.storage.FeNP+=20;
},
				 },
			     3:{
					trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
                        content:function (){
                   trigger.num++;
}, 
				 },
			 },
			},
			"Fe翱翔天际宛如龙":{
				nobracket:true,
				trigger:{
                    player:"damageEnd",
                },
                forced:true,
				check:function(event,player){
					var num=game.countPlayer(function(current){
						return current.getEquip();
					});
					return num>1;
				},
				audio:["Fe翱翔天际宛如龙",3],
                filter:function (event,player){
        return player.storage.FeNP>=50&&(event.source&&event.source!=player);
    },
                content:function (){
					"step 0"
        player.loseMaxHp();
        trigger.source.loseMaxHp(2);
		trigger.source.storage.FeNP-=40;
                    "step 1"
					if (player.maxHp<=2){
						var num=game.countPlayer(function(current){
						return current.getEquip();
					});
					player.gianMaxHp(num);
					}
},
			},
			"Fe船中八策":{
				nobracket:true,
				trigger:{
                       player:'useCard',
                        },
						audio:["Fe船中八策",4],
						forced:true,
						mark:true,
						filter:function (event,player){
                        return player.hp>1;
},
                        init:function (player){
                            player.storage.Fe船中八策=0;
                            game.addVideo('storage',player,['Fe船中八策',player.storage.Fe船中八策]);
                        },
                        content:function (){
							"step 0"
                            player.storage.Fe船中八策++;
						  game.addVideo('storage',player,['Fe船中八策',player.storage.Fe船中八策]);
							},
                        intro:{
                            content:'mark',
                        },
						group:["Fe船中八策_1","Fe船中八策_2"],
						subSkill:{
							2:{
								trigger:{
									player:"phaseEnd",
								},
								forced:true,
								filter:function (event,player){
									return player.storage.Fe船中八策>=8;
								},
								content:function (){
									"step 0"
									event.list=player.getFriends().sortBySeat();
							    var nk=player.num('hej');		
								var KL=player.storage.FeNP;
								player.storage.FeNP-=KL;
								player.draw(nk);
								player.recover(nk);
								player.storage.Fe船中八策-=8;
								"step 1"
							  if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP+=100;
                                event.redo();
                            }
								}
							},
							1:{
						trigger:{
                            global:["loseMaxHpBegin","gainMaxHpBegin"],
                        },
                        forced:true,
						nobracket:true,
						audio:["Fe船中八策",4],
						filter:function(event,player){
								return player.storage.FeNP>=40&&player.getFriends().contains(event.player);
							},	
							 content:function (){
        'step 0'
        var list={basic:[],equip:[],trick:[],delay:[]};
        for(var i=0;i<lib.inpile.length;i++){
            var name=lib.inpile[i];
            var info=lib.card[name];
            if(info.autoViewAs||name=='yuansuhuimie') continue;
            if(lib.filter.cardEnabled({name:name},player)){
                if(!list[info.type]){
                    list[info.type]=[];
                }
                list[info.type].push([get.translation(lib.card[name].type),'',name]);
            }
        }
        list.trick.sort(lib.sort.name);
        var dialog=ui.create.dialog('船中八策',[list.trick,'vcard']);
        // for(var i in list){
        //     dialog.addText(get.translation(i)+'牌');
        //     dialog.add([list[i],'vcard']);
        // }
        var rand1=Math.random()<1/3;
        var rand2=Math.random()<0.5;
        var rand3=Math.random()<1/3;
        var rand4=Math.random()<1/3;
        player.chooseButton(dialog).ai=function(button){
            var name=button.link[2];
            if(player.hp<=1){
                switch(name){
                    case 'zhiliaobo':return 1;
                    case 'dunpaigedang':return 0.8;
                    case 'nanman':return 0.5;
                    default:return 0;
                }
            }
            if(rand4&&player.num('h')<=1){
                switch(name){
                    case 'zengbin':return 1;
                    case 'wuzhong':return 0.8;
                    default:return 0;
                }
            }
            if(player.hasSkill('qinglonglingzhu')){
                if(rand2) return name=='chiyuxi'?0.8:0;
                return name=='jingleishan'?0.8:0;
            }
            if(rand2) return name=='wanjian'?0.8:0;
            return name=='nanman'?0.8:0;
        }
        'step 1'
        if(result.bool){
            var name=result.links[0][2];
            var info=lib.card[name];
            var card=game.createCard(name);
            if(info.selectTarget==-1){
                var targets=[];
                for(var i=0;i<game.players.length;i++){
                    if(lib.filter.filterTarget(card,player,game.players[i])){
                        targets.push(game.players[i]);
                    }
                }
                if(targets.length){
                    targets.sort(lib.sort.seat);
                    // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                    player.useCard(card,targets);
                }
                event.finish();
            }
            else if(info.notarget){
                // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
                player.useCard(card);
            }
            else{
                var next=player.chooseTarget('选择'+get.translation(name)+'的目标');
                next._get_card=card;
                next.filterTarget=lib.filter.filterTarget;
                next.ai=ai.get.efFect;
                if(typeof info.selectTarget=='function'){
                    next.selectTarget=info.selectTarget;
                }
                else{
                    next.selectTarget=get.select(info.selectTarget);
                }
                event.card=card;
            }
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            // player.addTempSkill('Fengqi2',{player:'useCardAfter'});
            player.useCard(event.card,result.targets);
        }
							 }
							}
						},
			},
			"Fe维新的英雄":{
				trigger:{
                    player:"damageBegin",
                },
				audio:["Fe维新的英雄",4],
                forced:true,
			    nobracket:true,
				filter:function (event,player){
        return player!=event.source;
    },
	 content:function (){
		 var kj=6-player.hp;
		 trigger.num-=kj;
	 },
				mod:{
                    targetEnabled:function (card,player,target,now){
            if(card.name=='bingliang'||card.name=='lebu'||card.name=='shandian') return false;
        },
		           maxHandcard:function (player,num){
                                return num+=(6-player.hp);
                            }
                },
			},
			"Fe见恋不为,无爱也":{
				nobracket:true,
				trigger:{
                            global:"phaseBegin",
                        },
                        audio:["Fe见恋不为,无爱也",3],
                        forced:true,
						filter:function (event,player){
        return player.storage.FeNP>=60&&player.storage.FeNP>event.player.storage.FeNP&&player.getEnemies().contains(event.player);
    },
                        content:function (){
							var er=player.hujia;
							trigger.player.goMad();
							trigger.player.damage(er)._triggered=null;
    },
				},
			"Fe迦摩之灰":{
				nobracket:true,
				trigger:{
                           player:"phaseBegin",
                        },
                        audio:["Fe迦摩之灰",4],
                        forced:true,
                        content:function (){
							var ex=Math.floor(player.hp/2);
							player.draw(ex);
							player.changeHujia(ex);
    },
	                      mod:{
                            cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+2;
                },
                        },
				},
			"Fe女神的恩惠":{
				nobracket:true,
				trigger:{
                    player:["drawBefore","recoverBefore"],
                },
                forced:true,
                audio:["Fe女神的恩惠",4],
                priority:10000,
                filter:function (event,player){
return player.storage.FeNP>=100&&event.num>0;    
                },
                content:function (){
					"step 0"
		event.list=player.getFriends().sortBySeat();
          player.storage.FeNP-=100;
		  "step 1"
		  if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
                                target.storage.FeNP+=50;
								target.recover(3);
                                event.redo();
                            }
               },
				},
			"Fe女神的神核":{
				nobracket:true,
				trigger:{
                    source:"damageBegin",
                },
                forced:true,
				audio:["Fe女神的神核",3],
                filter:function (event,player){
return player.storage.FeNP>event.player.storage.FeNP&&event.num>0;    
                },
                content:function (){
          trigger.num+=2;
               },
			   mod:{
									maxHandcard:function(player,num){
										return num==player.MaxHp;
									}
								},
				group:"Fe女神的神核_1",
				subSkill:{
					1:{
						trigger:{
                    player:"damageBegin",
                },
                forced:true,
				audio:["Fe女神的神核",3],
                filter:function (event,player,source){
return player.storage.FeNP>event.source.storage.FeNP&&event.num>0;    
                },
                content:function (){
          trigger.num-=2;
               },
					},
				},
				},
				"Fe无明三段突刺":{
					   nobracket:true,
					   trigger:{
                            global:"damageEnd",
                        },
                        forced:true,
						audio:["Fe无明三段突刺",2],
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player)&&player.storage.FeNP>=70;                        
},
					 content:function (){
                                var target=player.getEnemies().randomGet();
								var kl=trigger.player.hp;
                                target.damage(kl)._triggered=null;
								target.damage(kl)._triggered=null;
								target.damage(kl)._triggered=null;
								target.addSkill("Fe无明三段突刺_1");
					 },
					 subSkill:{
						 1:{
							 trigger:{player:"damageBegin"},
							 forced:true,
							  content:function (){
								  var Bh=trigger.player.hp;
								  trigger.num+=Bh;
								  player.removeSkill("Fe无明三段突刺_1");
							  },
						 }
					 },
					},
				"Fe缩地":{
					mod:{
					globalTo:function(from,to,distance){
						return distance+2;
					}
				},
					nobracket:true,
					trigger:{
                    player:"loseHpBegin",
                },
                forced:true,
				audio:["Fe缩地",3],
                content:function (){
					trigger.cancel();
               },
			   group:["Fe缩地_1","Fe缩地_2"],
			   subSkill:{
				   1:{
					    trigger:{
                            player:"linkBefore",
                        },
                        nopop:true,
                        forced:true,
                        audio:["Fe缩地",3],
                        content:function (){
                         trigger.cancel();
                 },
				   },
				   2:{
					   trigger:{
                    player:"turnOverBegin",
                },
                forced:true,
				audio:["Fe缩地",3],
                content:function (){
					trigger.cancel();
               },
				   },
			   },
					},
				"Fe病弱":{
					nobracket:true,
					trigger:{
                            player:["loseMaxHpBegin","gainMaxHpBegin"],
                        },
                        forced:true,
						audio:["Fe病弱",4],
                        filter:function (event,player){
              return player.hp>0;
			  },
                        content:function (){
							trigger.cancel();
               player.maxHp==3;
             },
					group:"Fe病弱_1",
					subSkill:{
						1:{
				audio:["Fe病弱",4],
                trigger:{
player:"useCardAfter",
},
forced:true,
filter:function (event,player){
return get.type(event.card)=='basic';
},
content:function (){
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
                                          mod:{
									maxHandcard:function(player,num){
										return num-1;
									}
								},
						},
					},
					},
					"Fe极地":{
						nobracket:true,
						trigger:{
player:"phaseBegin",
},
forced:true,
audio:["Fe极地",3],
filter:function (event,player){
return player.storage.FeNp>40;
},
content:function (){
player.addTempSkill("Fe极地_1","phaseEnd");
},
subSkill:{
	2:{
		trigger:{player:'respond'},
				filter:function(event,player){
					return event.card.name=='shan'&&player.hasSha();
				},
				audio:["Fe极地",3],
				forced:true,
				content:function(){
					player.draw();
					player.recover();
				},
	},
	1:{
		trigger:{source:'damageBegin'},
								forced:true,
								audio:["Fe极地",3],
								filter:function(event,player){
									return event.card&&event.card.name=='sha'&&event.notLink();
								},
								content:function(){
									var klo=player.storage.FeNP;
									player.storage.FeNP-player.storage.FeNP;
									trigger.num+=2;
									player.draw();
								}
	},
},
						},
					"Fe不断":{
						nobracket:true,
						trigger:{player:'phaseJudgeBegin'},
                        forced:true,
						audio:["Fe不断",2],
                content:function (){
					trigger.cancel();
					player.storage.FeNP+=20;
               },
			   group:"Fe不断_1",
			   subSkill:{
				   1:{
					 trigger:{player:'phaseEnd'},
                        forced:true,
						audio:["Fe不断",2],
                content:function (){
					var kio=player.num('h');
					player.draw(kio);
					player.loseHp(2);
					player.gainMaxHp(kio);
               },  
				   },
			   },
					},
					"Fe无边":{
						mod:{
                    globalFrom:function (from,to,distance){
            return distance-4;
        },
                },
						nobracket:true,
						trigger:{player:'recoverBegin'},
                        forced:true,
						audio:["Fe无边",2],
						filter:function (event,player){
                  return player.storage.FeNP>=50&&Math.random()<=0.7;                        
},
                content:function (){
					player.recover();
               },
			   group:"Fe无边_1",
			   subSkill:{
				   1:{
					   trigger:{player:'damageBegin'},
			forced:true,
			filter:function(event,player){
				return event.card.name=='sha'&&Math.random()<=0.3;
			},
			content:function(){
				trigger.cancel();
			},
			
				   },
			   },
					},
					"Fe绝剑·无穹三段":{
						nobracket:true,
						enable:"phaseUse",
                        usable:1,
                        forced:true,
						audio:["Fe绝剑·无穹三段",3],
						filter:function(event,player){
				return player.storage.FeNP>=200;
			},
                        content:function (){
                     'step 0'
                         if(player.isLinked()) player.link();
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
								var KJ=player.hp;
                                target.damage(KJ);
                                event.redo();
                            }
},
                   subSkill:{
					   1:{
						   mod:{
					maxHandcard:function(player,num){
						return num-1;
					}
				},
						  trigger:{player:"phaseEnd"},
							 forced:true,
							  content:function (){
								  player.removeSkill("Fe绝剑·无穹三段_1");
							  },  
							  
					   },
					   2:{
						   trigger:{player:"phaseDrawBegin"},
							 forced:true,
							  content:function (){
								  trigger.num-=1;
								  player.removeSkill("Fe绝剑·无穹三段_2");
							  },
					   },
					   3:{
						   trigger:{player:"damageBegin"},
							 forced:true,
							  content:function (){
								  trigger.num++;
								  player.removeSkill("Fe绝剑·无穹三段_3");
							  },
					   },
				   },
						},
						"Fe鹰之瞳":{
							nobracket:true,
							 trigger:{
                            source:"damageBefore",
                        },
						audio:["Fe鹰之瞳",3],
                        forced:true,
						filter:function (event,player){
return player.storage.FeNp>20;
},
                        content:function (){
							var OI=[1,2,3].randomGet();
                   trigger.player.damage(OI)._triggered=null;
    },
	mod:{
                    globalFrom:function (fiom,to,distance){
                    return distance-4;
                },
	}
							},
						"Fe心眼":{
							nobracket:true,
							mod:{
                    targetInRange:function (card,player,target,now){
            if(card.name=='sha') return true;
        },
                },
							trigger:{
                    player:"shaBegin",
                },
                forced:true,
				audio:["Fe心眼",2],
                filter:function (event,player){
    return event.card&&event.card.name=='sha';
    },
                content:function (){
     trigger.directHit=true;
	 player.changeHujia();
    },
	group:"Fe心眼_1",
	subSkill:{
		1:{
			trigger:{
                    player:"damageBegin",
                },
                forced:true,
				audio:["Fe心眼",2],
                filter:function (event,player){
       return Math.random()<=0.4;
},
                content:function (){
					trigger.cancel();
    },
		},
	},
							},
						"Fe投影魔术":{
							nobracket:true,
							mod:{
                            maxHandcard:function (player,num){
                    return num+=3;
                },
                        },
							trigger:{
                    player:"damageEnd",
                },
                priority:10,
				audio:["Fe投影魔术",4],
                forced:true,
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
		'step 2'
		if(event.card&&player.FeNP>=70){
			player.equip(event.card);
		}
    },
	group:"Fe投影魔术_1",
	subSkill:{
		1:{
			trigger:{
                    player:"equipBegin",
                },
                frequent:true,
                filter:function (event,player){
        return player.num('e',{type:'equip'})&&get.type(event.card)== 'equip';
    },
	audio:["Fe投影魔术",4],
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    efFect:{
                        player:function (card,player,target){
                if(get.type(card)=='equip') return[1,10];
            },
                    },
                },
		},
	},
							},
						"Fe无限剑制":{
							nobracket:true,
							enable:"phaseUse",
                      usable:1,
					  audio:["Fe无限剑制",3],
                    filter:function (event,player){
                return player.storage.FeNP>=200;
                 },
                           content:function (){
                                   'step 0'
						   player.storage.FeNP-=150;
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
								target.damage(3)._triggered=null;
								target.damage(3)._triggered=null;
								target.addSkill("Fe无限剑制_2");
                                event.redo();
                            }
							 'step 2'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip';
        });
        event.card=card;
        'step 3'
        if(event.card){
            player.equip(event.card);
			player.equip(event.card);
			player.equip(event.card);
        }
							
                     },
					 group:"Fe无限剑制_1",
					 subSkill:{
						 1:{
							trigger:{
                            global:"damageEnd",
                        },
                        forced:true,
                        filter:function (event,player){
                  return player.storage.FeNP>=100&&event.card.name=='sha'&&event.card.name=='wanjian';                        
},
					 content:function (){
                                'step 0'
                            event.list=player.getEnemies().sortBySeat();
                            'step 1'
                            if(event.list.length){
                                var target=event.list.shift();
                                player.line(target,'green');
								target.damage(1)._triggered=null;
								target.damage(1)._triggered=null;
								target.damage(1)._triggered=null;
								target.addSkill("Fe无限剑制_3");
                                event.redo();
                            }
					 }, 
						 },
						 2:{
							 trigger:{
player:"recoverBegin",
},
forced:true,
content:function (){
        trigger.num-=2;
		player.removeSkill('Fe无限剑制_2');
},
						 },
					     3:{
							 trigger:{
source:"damageBegin",
},
forced:true,
content:function (){
        trigger.num-=1;
		player.removeSkill('Fe无限剑制_3');
},
						 },
					 },
						},
						"Fe防弹加工":{
							nobracket:true,
							trigger:{
                            player:"damageBgein",
                        },
                        forced:true,
						audio:["Fe防弹加工",4],
                        filter:function (event,player){
                  return player.storage.FeNP>=20&&event.card.name=='sha'&&event.card.name=='wanjian';                        
},
					 content:function (){
						 player.storage.FeNP-=10;
						 player.changeHujia(2);
                                player.draw();
					 }, 
							},
						"Fe狂剑魔术":{
							nobracket:true,
							trigger:{
player:"useCardAfter",
},
forced:true,
audio:["Fe狂剑魔术",3],
filter:function (event,player){
return event.card.name=='sha'&&event.card.name=='wanjian'&&Math.random()==0.5;
},
content:function (){
	player.storage.FeNP+=10;
player.useCard(trigger.card,trigger.targets,false)._triggered=null;
},
                   group:["Fe狂剑魔术_1","Fe狂剑魔术_2"],
				   subSkill:{
					   1:{
						   trigger:{
                    gloabl:"damageEnd",
                },
                priority:10,
                forced:true,
				audio:["Fe狂剑魔术",3],
                content:function (){
        'step 0'
        var card=get.cardPile(function(card){
            return get.type(card)=='equip1';
        });
        event.card=card;
        'step 1'
        if(event.card){
            player.equip(event.card);
        }
					   }
					   },
					   2:{
						   trigger:{
                    player:"equipBegin",
                },
                frequent:true,
				audio:["Fe狂剑魔术",3],
                filter:function (event,player){
        return player.num('e',{type:'equip1'})&&get.type(event.card)== 'equip1';
    },
                content:function (){
        "step 0"
        trigger.untrigger();
        trigger.finish();
        player.$equip(trigger.card);
        game.addVideo('equip1',player,get.cardInfo(trigger.card));
        game.log(player,'装备了',trigger.card);
        "step 1"
        var info=get.info(trigger.card);
        if(info.onEquip&&(!info.filterEquip||info.filterEquip(trigger.card,player))){
            var next=game.createEvent('equip_'+trigger.card.name);
            next.setContent(info.onEquip);
            next.player=player;
            next.trigger.card=trigger.card;
            game.delayx();
        }
        delete player.equiping;
    },
                ai:{
                    efFect:{
                        player:function (card,player,target){
                if(get.type(card)=='equip1') return[1,10];
            },
                    },
                },
					   },
				   },
							},
						"Fe嗤笑的铁心":{
							nobracket:true,
							trigger:{
                            source:"damageBegin",
                        },
                        forced:true,
						audio:["Fe嗤笑的铁心",3],
                        content:function (){
							trigger.num+=2;
    },
							group:["Fe嗤笑的铁心_2","Fe嗤笑的铁心_3"],
							subSkill:{
								2:{
									trigger:{
                            source:"damageEnd",
                        },
						audio:["Fe嗤笑的铁心",3],
                        forced:true,
                        content:function (){
							trigger.player.goMad({player:'phaseEnd'});   
    },
								},
								3:{
							     trigger:{
                    player:"phaseDiscardBefore",
                },
                forced:true,
			    audio:["Fe嗤笑的铁心",3],
				filter:function (event,player){
       return player.storage.FeNP>=30;
},
                content:function (){	
          player.addSkill("Fe嗤笑的铁心_4");
         trigger.untrigger();
         trigger.finish();
},
								},
								4:{
									trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
						audio:["Fe嗤笑的铁心",3],
                        content:function (){
							trigger.num++;
							player.removeSkill("Fe嗤笑的铁心_4");
    },
								},
							},
							},
						"Fe魔戮罪恶剑制":{
							nobracket:true,
							trigger:{
                           source:"damageEnd",
                        },
                        forced:true,
						audio:["Fe魔戮罪恶剑制",3],
                        filter:function (event,player){
                  return player.getEnemies().contains(event.player)&&player.storage.FeNP>=200;                        
},
					 content:function (){
						 player.storage.FeNP-=200;
						        var kj=game.countPlayer(function(current){
						return current.getEquip(1);
					});
                                trigger.player.damage(ki)._triggered=null;
								player.addSkill("Fe魔戮罪恶剑制_1");
					 },
					 subSkill:{
						 1:{
							 trigger:{
                            source:"damageBefore",
                        },
                        forced:true,
                        content:function (){
							var kj=game.countPlayer(function(current){
						return current.getEquip(1);
					});
							trigger.num+=ki;
							player.removeSkill("Fe魔戮罪恶剑制_1");
    },
						 },
					 },
							}
			},
			translate:{
				Fe_lansiluote:"兰斯洛特",
				Fe_lansiluote2:"兰斯洛特",
				Fe_zhende:"贞德",
				Fe_zhende2:"贞德",
				Fe_modeleide:"莫德雷德",
				   Fe_modeleide2:"莫德雷德",
				Fe_mizhinvzhu:"迷之女主x",
				   Fe_mizhinvzhu2:"迷之女主x",
				Fe_aertuoliya:"阿尔托莉雅",
				   Fe_aertuoliya2:"阿尔托利雅",
				Fe_shanzhiweng:"山之翁",
				   Fe_kaitangshoujieke:"开膛手杰克",
				Fe_jiaerna:"迦尔纳",
				   Fe_azhouna:"阿周那",
				Fe_aertuoliya3:"阿尔托莉雅",
				   Fe_aertuoliya4:"阿尔托利雅",
				Fe_zhugekongming:"诸葛孔明",
				   Fe_yisikandaer:"伊斯坎达尔",
				Fe_enqidu:"恩奇都",
				   Fe_jinshanshan:"吉尔伽美什",
				Fe_fuermosi:"福尔摩斯",
				Fe_moliyadi:"莫里亚蒂",
				Fe_geshibeizhai:"葛饰北斋",
				Fe_abigaier:"阿比盖尔",
				Fe_zhitianxinchang:"织田信长",
				Fe_zhitianxinchang2:"织田信长",
				Fe_andongniao:"萨列里",
				Fe_mozhate:"莫扎特",
				Fe_banbenlongma:"阪本龙马",
				Fe_paerwadi:"帕尔瓦蒂",
				Fe_chongtianzongsi:"冲田总司",
				Fe_chongtianzongsi2:"冲田总司",
				Fe_weigong:"卫宫",
				Fe_weigong2:"卫宫",
				"Fe骑士不死于徒手":"骑士不死于徒手",
                "Fe骑士不死于徒手_info":"你在濒死状态时,若你的NP不小于300则你可以消耗300NP令2名其他角色死亡",
                "Fe无穷之武炼":"无穷之武炼",
                "Fe无穷之武炼_info":"你可以额外装备任意数量的武器,当你受到伤害后若你的NP不小于20则你消耗20NP反馈目标2点体力流失伤害",
                "Fe圆桌信仰":"圆桌信仰",
                "Fe圆桌信仰_info":"当你受到体力流失伤害时50%取消",
                "Fe狂化":"狂化",
                "Fe狂化_info":"当你失去牌后，若你的手牌数小于5，你将手牌补至5张，延迟类锦囊不能选你为目标",
                "Fe无毁的湖光":"无毁的湖光",
                "Fe无毁的湖光_info":"你可以将红桃牌当桃使用，方片牌当无懈可击使用，黑桃牌当惊雷闪使用，梅花牌当杀使用",
                "Fe湖之骑士":"湖之骑士",
                "Fe湖之骑士_info":"每当你受到伤害后，随机将一张装备牌从牌堆置入你的装备区，当你受到体力流失伤害后，你随机将牌堆中的一张机关牌置入手牌。当你回复1点体力时，你随机获得一张锦囊牌，当你造成伤害时随机获得一张基本牌",
                "Fe最强圆桌":"最强圆桌",
                "Fe最强圆桌_info":"回合开始和回合结束阶段若你的NP不小于40则你增加2点护甲",
                "Fe骑士宣言":"骑士宣言",
                "Fe骑士宣言_info":"觉醒技，回合结束阶段，若你的手牌=0.则你失去2点体力上限，获得技能【谦卑、正直、怜悯、英勇、公正、忠诚、荣誉、牺牲】",
                "Fe缚锁全断・过重湖光":"缚锁全断・过重湖光",
                "Fe缚锁全断・过重湖光_info":"当你濒死时若你的NP不小于100，你可以消耗100NP判定,若点数不大于你的体力上限,则你减少1点体力上限回复全部体力,若点数大于你的体力上限则你回复1点体力",
                "Fe谦卑":"谦卑",
                "Fe谦卑_info":"每当你造成伤害时，50%回复1点体力",
                "Fe正直":"正直",
                "Fe正直_info":"你不能成为[顺手牵羊],[乐不思蜀],[兵粮寸断],[过河拆桥]的目标，每当其他角色回复体力时，50%你增加1点体力上限",
                "Fe怜悯":"怜悯",
                "Fe怜悯_info":"当你使用杀对其造成伤害时，若其没有手牌则本次伤害取消之",
                "Fe勇气":"勇气",
                "Fe勇气_info":"你无视其防具",
                "Fe公正":"公正",
                "Fe公正_info":"当一名其他角色受到伤害时，50%你受到1点伤害",
                "Fe忠诚":"忠诚",
                "Fe忠诚_info":"当你翻面时，你可以选择1,2名目标摸一张牌回复1点体力",
                "Fe荣誉":"荣耀",
                "Fe荣誉_info":"每当有一名角色死亡,你获得这名角色的一个技能",
                "Fe牺牲":"牺牲",
                "Fe牺牲_info":"你的濒死阶段,你可以选择一名角色令其翻面",
				"Fe启示录":"启示录",
                "Fe启示录_info":"你受到的伤害至多为1,你与其他角色计算距离始终为1,你免疫体力流失伤害,你的进攻距离无限",
                "Fe红莲圣女":"红莲圣女",
                "Fe红莲圣女_info":"你翻面后,回复1点体力，其他角色翻面时若你的NP不小于70则你消耗70NP对其造成1点神圣火焰伤害",
                "Fe神明裁决":"神明裁决",
                "Fe神明裁决_info":"你造成伤害后若你的NP不小于100你消耗100NP并令受伤角色随机失去1项技能，且失去下个回合，然后你回复1点体力",
                "Fe吾神在此":"吾神在此",
                "Fe吾神在此_info":"当你即将受到伤害时若你的NP不小于70则你50%消耗70NP离开游戏1回合,每当你失去最后一张手牌回复1点体力",
                "Fe自我改造":"自我改造",
                "Fe自我改造_info":"摸牌阶段若你的NP不小于30你额外摸2张杀然后流失1点体力,出牌阶段你使用或打出杀无次数限制",
                "Fe龙之魔女":"龙之魔女",
                "Fe龙之魔女_info":"弃牌阶段若你的NP不小于50则你消耗50NP跳过弃牌阶段并回复2点体力,你造成的伤害+x(x=你当前的手牌数),你使用杀无法被闪抵消",
                "Fe泡沫般的梦幻":"泡沫般的梦幻",
                "Fe泡沫般的梦幻_info":"限定技，当你首次进入濒死状态时，你将体力恢复至上限并减少3点体力上限,然后你获得技能'龙之魔女'",
                "Fe咆哮吧,吾之愤怒":"咆哮吧,吾之愤怒",
                "Fe咆哮吧,吾之愤怒_info":"你免疫翻面效果,你受到伤害后若你NP不小于60则你消耗60NP反弹目标2点神圣火焰伤害",
				"Fe叛逆骑士":"叛逆骑士",
                "Fe叛逆骑士_info":"你造成伤害后随机执行一项1.增加2点体力上限. 2.回复2点体力.3.摸2张牌;你受到伤害后若你的NP不小于90则消耗90NP对伤害来源随机执行一项1.失去2点体力上限. 2.死亡.3.受到1点神圣伤害",
                "Fe向端丽的父王发起叛逆":"向端丽的父王发起叛逆",
                "Fe向端丽的父王发起叛逆_info":"限定技.出牌阶段若你的NP不小于200则你消耗200NP对一名角色造成固定为1的10次伤害，然后你失去此技能",
                "Fe隐贞之盔":"隐贞之盔",
                "Fe隐贞之盔_info":"延迟类锦囊无法选择你为目标，弃牌阶段开始时若你的NP不小于50则你跳过之并且摸2张牌",
                "Fe灿然辉耀的王剑":"灿然辉耀的王剑",
                "Fe灿然辉耀的王剑_info":"结束阶段若你没有装备武器牌则你可以回复2点体力",
                "Fe冲浪":"冲浪",
                "Fe冲浪_info":"你造成伤害时对全场造成2点体力流失伤害，你的手牌上限+2",
                "Fe无尽的假日":"无尽的假日",
                "Fe无尽的假日_info":"锁定技,你回复体力后，70%概率回复1点体力，若你的体力值大于或等于3则你不能被杀选做目标，当你失去最后一张手牌时你摸5张牌.",
                "Fe竞技空翻":"竞技空翻",
                "Fe竞技空翻_info":"你受到伤害后若你NP不小于60则你消耗60NP令伤害来源封印技能，然后你摸一张牌牌,并增加1点体力上限回复1点体力，你与其他角色计算距离始终-2",
                "Fe制压汹涌波涛的王者心情":"制压汹涌波涛的王者心情",
                "Fe制压汹涌波涛的王者心情_info":"你免疫翻面状态，当一名角色翻面后若你的NP不小于80则你消耗80NP令其移出游戏1回合并受到1点神圣伤害",
				"Fe支援炮击":"支援炮击",
                "Fe支援炮击_info":"你造成伤害后若你的NP不小于130则你消耗130NP令其随机执行下列一项1死亡.2失去下一个回合.3流失2点体力;目标若为'Saber'势力会造成额外1点神圣伤害和体力流失",
                "Fe银河流星剑":"银河流星剑",
                "Fe银河流星剑_info":"当你受到伤害时，50%取消该次伤害并增加你5点护甲，你免疫直接性死亡，你受到的伤害最多为1",
                "Fe无铭胜利剑":"无铭胜利剑",
                "Fe无铭胜利剑_info":"你始终跳过弃牌阶段，出牌阶段开始时，你可以视为使用任意一张通常锦囊牌，其他角色摸牌阶段若你的NP不小于70则你消耗70NP对其造成2体力流失伤害，你受到体力流失伤害时改为回复1点体力",
                "FeSaber之星":"Saber之星",
				"FeSaber之星_info":"你的回合开始时全场'Saber'势力角色失去20NP,当'Saber'势力角色受到伤害后你增加25NP",
				"Fe不可见的王之手":"不可见的王之手",
                "Fe不可见的王之手_info":"势力非\"Saber\"的武将对你造成的伤害+1,你对非'Saber’势力的武将造成的伤害+1,对\"Saber\"势力的武将造成的伤害+2,'Saber'势力的武将对你造成伤害始终-1",
                "Fe∞黑豆沙":"∞黑豆沙",
                "Fe∞黑豆沙_info":"你的弃牌阶段若你的NP不小于40则你跳过弃牌,你使用的牌无距离和次数限制,你回复体力额外回复X点体力(X=当前场上存活人数)",
                "Fe黑龙双克胜利剑":"黑龙双克胜利剑",
                "Fe黑龙双克胜利剑_info":"出牌阶段(限1次)若你的NP不小于200则你消耗200NP弃置任意张同类别的卡牌，然后让其他角色依次选择1、弃置和你同种类、等量的卡牌；2、将武将牌翻面并弃置所有装备牌和手牌并流失2点体力,回合开始和结束阶段,若你的装备牌大于你的手牌,则你可以回复1点体力摸3张牌",
				"Fe刹那无影剑":"刹那无影剑",
				"Fe刹那无影剑_info":"每当你使用一张黑色牌你获得8NP,判定阶段开始前若你未受伤你跳过判定阶段",
				"Fe誓约胜利之剑":"誓约胜利之剑",
                "Fe誓约胜利之剑_info":"出牌阶段若你的NP不小于200则你消耗200NP对一名角色令其失去全部技能然后100次固定为1的伤害附加为数值1的体力流失伤害，然后你失去此技能",
                "Fe风王结界":"风王结界",
                "Fe风王结界_info":"你受到伤害后可以增加1点体力上限，基本锦囊不能对你产生效果",
                "Fe骑士王":"骑士王",
                "Fe骑士王_info":"当你使用的杀对目标角色造成伤害时，若你不在其攻击范围内，则此杀伤害+X(X=其当前的体力值)；每当你造成伤害后，你可以随机获得1张装备牌",
                "Fe遥远的理想乡":"遥远的理想乡",
                "Fe遥远的理想乡_info":"当一名其他角色回复体力时若你的NP不小于80则你80%消耗80NP你回复1点体力摸一张牌。你可以无限装备防御马和攻击马",
                "Fe黑化":"黑化",
                "Fe黑化_info":"当一名其他角色造成伤害时若你的NP不小于20则你消耗20NP回复一点体力，回合结束你流失最大体力50%的体力",
                "Fe侵蚀":"侵蚀",
                "Fe侵蚀_info":"回合开始时，你增加X点体力上限(X=你损失的体力)；受到伤害时若你的NP不小于50则你消耗50NP反弹目标X点神圣伤害",
                "Fe黑·誓约胜利之剑":"黑·誓约胜利之剑",
                "Fe黑·誓约胜利之剑_info":"出牌阶段若你的NP不小于140则你消耗140NP指定一名角色令其失去全部技能然后100次固定为1的体力流失伤害附加为数值1的上限减少伤害，同时回复体力,然后你失去此技能",
				"Fe晚钟":"晚钟",
                "Fe晚钟_info":"每当你的体力值变化时,你可以视为使用一张基本牌,当一名角色使用桃时,你令其使用1张桃,你免疫体力流失伤害,你受到伤害时,若此伤害大于或等于2则此伤害等于2,回合结束你可以使用一张无视距离的杀",
                "Fe信仰加护":"信仰加护",
                "Fe信仰加护_info":"你使用或打出的杀额外执行1次效果,你造成伤害后若你的NP不小于70则你60%消耗70NP令其直接死亡(无视抵抗技能),你免疫普通致死",
                "Fe战斗续行":"战斗续行",
                "Fe战斗续行_info":"你受到伤害后若你的NP不小于80则你50%消耗80NP增加1点体力上限回复1点体力,你可以无限装备宝物牌",
                "Fe死告天使":"死告天使",
                "Fe死告天使_info":"当一名角色普通死亡后若你的NP不小于160则你消耗160NP令一名角色死亡,每回合限1次",
				"Fe外科手术":"外科手术",
                "Fe外科手术_info":"当你受到伤害后,你可以弃置1张装备牌视为回复1点体力,每当一名角色回复体力后50%你随机将一件装备置于你的装备区",
                "Fe情报抹除":"情报抹除",
                "Fe情报抹除_info":"当你受伤后若你的NP不小于40则你消耗40NP令伤害来源移出游戏1回合并弃置其装备区里的所有牌,你的防御距离+2",
                "Fe雾夜杀人":"雾夜杀人",
                "Fe雾夜杀人_info":"你对女性角色造成的伤害+2;你的回合结束时若你的NP不小于50则你消耗50NP获得技能'潜行'直到下回合开始;你受到的伤害始终-1",
                "Fe解体圣母":"解体圣母",
                "Fe解体圣母_info":"出牌阶段若你的NP不小于180则你消耗180NP令一名女性直接死亡,当你受到伤害时若伤害来源为女性且你装备区里有武器牌则此此伤害改为你摸一张牌,你免疫体力流失伤害",			
				"Fe日轮甲胄":"日轮呀,化作甲胄",
                "Fe日轮甲胄_info":"回合开始阶段若你的NP不小于80则你消耗80NP你获得x点护甲(x=你当前的体力值上限加上你当前的体力)，你免疫受到的火焰伤害改为回复2点体力摸2张牌",
                "Fe梵天覆盖大地":"梵天呀，覆盖大地",
                "Fe梵天覆盖大地_info":"出牌阶段若你的NP不小于100则你消耗100NP对全场造成2点火焰伤害,你造成的火焰伤害+2",
                "Fe梵天诅咒我身":"梵天呀,诅咒我身",
                "Fe梵天诅咒我身_info":"你受到伤害后若你的NP不小于20则你消耗20NP反弹目标2点的火焰伤害，并令其灼烧1回合",
                "Fe日炎":"日炎",
                "Fe日炎_info":"你使用,打出或失去一张牌。你受到1点火焰伤害并流失3NP",
                "Fe贫者的见识":"贫者的见识",
                "Fe贫者的见识_info":"锁定技，你即将造成的普通伤害均视为神圣伤害。你造成伤害后可以视为使用任意一张锦囊牌",
                "Fe日轮顺从死亡":"日轮啊,顺从死亡",
                "Fe日轮顺从死亡_info":"牌阶段限一次若你的NP不小于300则你消耗300NP指定一名角色令其移除技能然后受到20点伤害后死亡",
                "Fe无冠武艺":"无冠武艺",
                "Fe无冠武艺_info":"你可以无限装备装备牌",
                "Fe炎神的咆哮":"炎神的咆哮",
                "Fe炎神的咆哮_info":"你免疫受到的火焰伤害改为伤害来源流失1点体力,每名角色回合开始阶段若你的NP不小于30则你消耗30NP你回复1点体力",
                "Fe千里眼":"千里眼",
                "Fe千里眼_info":"你可以无限装备装备牌,你使用杀无次数限制且必定命中",
                "Fe天授的英雄":"天授的英雄",
                "Fe天授的英雄_info":"游戏开始时，你将牌堆中的所有装备牌全部获得,每获得1张,视为'天授',每当你体力发生变化后,你将一张'天授'弃置然后回复1点体力,每当你失去1张装备牌,你从牌堆中获得一张'天授'牌",
                "Fe破环神的手影":"破环神的手影",
                "Fe破环神的手影_info":"每当一名其他角色回合结束时若其有护甲且你的NP不小于60则你令其失去2点体力上限,你造成的伤害附带40%死亡的效果",
                "Fe破坏神的手影2":"破坏神的手影",
                "Fe破坏神的手影2_info":"",
				"Fe最遥远的加护":"最遥远的加护",
                "Fe最遥远的加护_info":"每当你使用或打出一张闪，你可以使用一张决斗，你受到伤害后若你的NP不小于30则你获得一张决斗",
                "Fe光辉信仰":"光辉信仰",
                "Fe光辉信仰_info":"你造成伤害时若你的NP不小于90则你消耗90NP伤害令伤害额外增加该你当前体力值的50%，你可以将一张红色牌当闪使用或打出",
                "Fe王者骑士":"王者骑士",
                "Fe王者骑士_info":"出牌阶段之前若你的NP不小于100则你对全场造成2点神圣伤害，回合结束你回复最大体力值的20%体力",
                "Fe耀于致远之枪":"耀于致远之枪",
                "Fe耀于致远之枪_info":"每当你造成一次伤害后若你的NP不小于50则你消耗50NP令随机一名角色受到1点神圣伤害和1点体力流失伤害，你不会被翻面，延迟类锦囊无法选定你为目标",
                "Fe终焉骑士":"终焉骑士",
                "Fe终焉骑士_info":"在场所有角色都无法回复体力改为你摸2张牌，你使用杀不可被闪抵消，你计算与其他角色距离始终-4",
                "Fe尽界的加护":"尽界的加护",
                "Fe尽界的加护_info":"你受到伤害后若你的NP不小于60则你消耗60NP令对你造成伤害的目标失去1点体力上限流失1点体力,你造成的伤害=你当前的体力上限",
                "Fe光耀尽界之枪":"光耀尽界之枪",
                "Fe光耀尽界之枪_info":"你造成伤害后若你的NP不小于110则你消耗110NP可以对全场造成2点体力流失伤害,你受到伤害后失去1点体力上限",
				"Fe耀枪":"耀与至远之枪",
                "Fe耀枪_info":"",
				"Fe鉴识眼":"鉴识眼",
                "Fe鉴识眼_info":"出牌阶段若你的NP不小于20则你消耗20NP指定一名角色观看其手牌弃置一张，然后你本回合造成的伤害改为神圣伤害。每回合限2次",
                "Fe阴阳无极":"阴阳无极",
                "Fe阴阳无极_info":"你受到属性伤害时可以增加1点体力上限，当其他角色受到属性伤害时若你的NP不小于40则你令该伤害+1",
                "Fe军师的忠言":"军师的忠言",
                "Fe军师的忠言_info":"你每次受到伤害或体力流失可以视为使用一张锦囊牌，你造成伤害后若你的NP不小于50则可以指定一名角色获得本次造成伤害牌并回复2点体力",
                "Fe军师的指挥":"军师的指挥",
                "Fe军师的指挥_info":"每当一张其他角色的锦囊牌进入弃牌堆，你可以获得之，当你成为一张普通锦囊牌的目标时（带有指向目标的锦囊除外），你可以令1名其他角色也成为此牌的目标",
                "Fe奇门八阵":"奇门八阵",
                "Fe奇门八阵_info":"出牌阶段若你的NP不小于70则你消耗70NP令全场横置并翻面，回合结束50%再次进行一个回合，你造成伤害后令其混乱并失去下一个回合",
                "Fe军略":"军略",
                "Fe军略_info":"当你于回合外需要使用或打出一张基本牌时，你可以观看牌堆顶的10张牌。若你观看的牌中有此牌，你可以使用打出之。你免疫体力流失伤害",
                "Fe王之霸道":"王之霸道",
                "Fe王之霸道_info":"你造成伤害时可以随机获得装备，锦囊，基本牌各一张，你不会被翻面，你免疫体力上限减少，你不能被延迟类锦囊选中",
                "Fe王之军势":"王之军势",
                "Fe王之军势_info":"你造成伤害后若你的NP不小于300则你消耗300NP令全场致死1次，然后你失去此技能",
                "Fe雷之征服者":"雷之征服者",
                "Fe雷之征服者_info":"你受到伤害时若你的NP不小于50则你消耗50NP反弹目标1~5次2点雷电伤害",
		        "Fe王之霸道锦囊":"王之霸道",
                "Fe王之霸道锦囊_info":"",
                "Fe王之霸道基本":"王之霸道",
                "Fe王之霸道基本_info":"",
				"Fe变容":"变容",
                "Fe变容_info":"其他角色回合开始时，若其性别为女则你获得其全部手牌；若其性别为男则获得其全部技能;你始终跳过弃牌阶段",
                "Fe变容2":"变容",
                "Fe变容2_info":"",
                "Fe神兵":"神兵",
                "Fe神兵_info":"锁定技，除你之外的角色没有装备区；你不能成为其他角色的的延时锦囊目标,你装备区里的牌无数量限制",
                "Fe完全形态":"完全形态",
                "Fe完全形态_info":"你受到伤害后若你的NP不小于70则你消耗70NP则你令伤害来源进入连环状态并受到2点雷电伤害",
                "Fe人子啊，紧系神明吧":"人子啊，紧系神明吧",
                "Fe人子啊，紧系神明吧_info":"摸牌阶段若你的NP不小于50则你可以增加2点体力上限，你受到雷电伤害时回复2点体力，回合结束时横置全场角色并解除自身横置状态",
                "Fe巴比伦的宝藏":"巴比伦的宝藏",
                "Fe巴比伦的宝藏_info":"当你首次进入濒死阶段时若你的NP不小于100则你回复全部体力,获得技能:[王之财宝],[维摩那]",
                "Fe天之锁":"天之锁",
                "Fe天之锁_info":"你的回合开始时,除你外的所有角色无法打出或使用任何手牌,并失去全部非锁定技能直到回合结束",
                "Fe维摩那":"维摩那",
                "Fe维摩那_info":"你的防御距离+3,进攻距离+4;你无法被翻面,回合结束时若你本回合使用的牌不小于你的体力值则你对全场造成你体力50%(向上取整)的神圣伤害",
                "Fe黄金律":"黄金律",
                "Fe黄金律_info":"你的摸牌阶段多摸2张牌,你始终跳过弃牌阶段,你免疫受到体力流失伤害",
                "Fe王之财宝":"王之财宝",
                "Fe王之财宝_info":"你可以无限装备武器牌和宝物牌,你每使用一张装备牌你可以摸一张牌,当你失去装备牌时你可以回复1点体力;出牌阶段你可以弃置1张装备牌,对1~3名武将造成1~4点随机雷电伤害(每回合限3次)",
                "Fe天地乖离开辟之星":"天地乖离·开辟之星",
                "Fe天地乖离开辟之星_info":"当你回合开始,结束,体力值发生变化时,你随机获得1项正面效果,其他角色回合开始之前若你的NP不小于50则你消耗50NP令其随机获得2项负面效果,你造成伤害后40%再次对其进行追加伤害,你免疫致死效果",
                "Fe天地乖离开辟之星2":"天地乖离·开辟之星",
                "Fe天地乖离开辟之星2_info":"",
				"Fe巴顿术":"巴顿术",
                "Fe巴顿术_info":"摸牌阶段开始时若你已受伤且若你的NP不小于40则随机将一张装备牌置于你的装备区,你的摸牌数+x,回合结束阶段,你回复x点体力(x=对你造成伤害的角色数)",
                "Fe假说推论":"假说推论",
                "Fe假说推论_info":"你免疫翻面,体力上限减少,流失体力等效果,你始终跳过弃牌阶段,每当你受到伤害后你进行一个额外回合,你不能被延迟类锦囊选为目标",
                "Fe这是基本的推测，我的朋友":"这是基本的推测，我的朋友",
                "Fe这是基本的推测，我的朋友_info":"(每回合限一次)出牌阶段若你的NP不小于200则你消耗200NP令所有敌方武将翻面并封印其所有非锁定技一回合,令友方全体获得以下效果(每种效果只能触发一次):<li>无视目标防具<li>造成的伤害+2<li>使用杀指定的目标不能被闪抵消",			
				"Fe魔弹射手":"魔弹射手",
                "Fe魔弹射手_info":"你每造成伤害后若你的NP不小于10则你获得一个'魔'标记,你使用杀或万箭齐发造成的伤害+x,你的摸牌阶段+x,你的手牌上限+x,你回复体力时+x(x=‘魔’标记的数量)你使用杀不可被闪抵消",
                "Fe蜘蛛丝的终点":"蜘蛛丝的终点",
                "Fe蜘蛛丝的终点_info":"每当你造成伤害后若你的NP不小于90则你消耗90NP令受伤的目标角色无法回复体力并失去下一个出牌阶段,你免疫翻面状态,你的体力上限无法被减少",
                "Fe终局的犯罪":"终局的犯罪",
                "Fe终局的犯罪_info":"出牌阶段限一次,若你的\"魔\"标记大于0,则你可以选择一名敌方武将令其受到x点真实伤害然后你增加S点护甲(x='魔'标记的数量 S=目标的体力上限)",
				"FeNP":"NP",
                "FeNP_info":"",
                "_FeNP1":"NP",
                "_FeNP1_info":"",
                "_FeNP2":"NP",
                "_FeNP2_info":"",
                "_FeNP3":"NP",
                "_FeNP3_info":"",
				"_FeNP4":"NP",
                "_FeNP4_info":"",
				"FeNP5":"NP",
				"FeNP5_info":"",
                "_FeNP9":"NP",
                "_FeNP9_info":"",
                "_FeNP10":"NP",
                "_FeNP10_info":"",
				"Fe信仰的祈祷":"信仰的祈祷",
				"Fe信仰的祈祷_info":"每当其他友方武将的回合开始时,全场除你外的友方增加20NP,你的回合开始时全场友方回复1点体力,你的摸牌阶段你随机获得一个武器牌上的技能直到你的下回合开始",
				"Fe魔女审判":"魔女审判",
				"Fe魔女审判_info":"当你即将受到伤害时,若来源不为你则你令伤害来源翻面受到1点神圣伤害，当一名其他角色死亡后,获得其剩余的NP,你无法成为延迟类锦囊的目标",
				"Fe正气丧失":"正气丧失",
				"Fe正气丧失_info":"敌方武将受到的伤害+1,敌方武将每回合开始时30%失去出牌阶段,你每次造成伤害后敌方武将失去10NP",
				"Fe光壳溢目的虚树":"光壳溢目的虚树",
				"Fe光壳溢目的虚树_info":"你造成的伤害+X(X=你当前1/10的NP(向下取整)),你的出牌阶段开始时,若你的NP不小于100则你消耗100NP对敌方全体造成2点伤害",
				"Fe森罗万象":"森罗万象",
				"Fe森罗万象_info":"当你成为杀的目标时取消之,每当你使用一张装备牌你增加20NP,你可以无限装备防御牌,其他角色弃牌阶段开始时，若其于此回合内使用或打出了至少三种花色的牌，其将与之对应花色的手牌全部弃置并失去一点体力。",
				"Fe富岳三十六景":"富岳三十六景",
				"Fe富岳三十六景_info":"出牌阶段限一次,若你的NP不小于150则你消耗全部NP清空敌方NP并失去2点体力上限,你回复全部体力并摸3张牌",
				"Fe父女羁绊":"父女羁绊",
				"Fe父女羁绊_info":"当你受到伤害后你随机获得一种增益效果,你的摸牌数量+x(x为场上角色存活数),当你的手牌小于2时你将手牌补至2",
				"Fe雅号异星章鱼":"雅号·异星章鱼",
				"Fe雅号异星章鱼_info":"你获得其他角色使用或打出的黑桃牌,每当你于一名角色回合使用的第X张非延时锦囊牌结算完进入弃牌堆后，你可弃置X张牌，然后将此牌置回你的手牌",
				"Fe三千世界":"三千世界",
				"Fe三千世界_info":"你免疫致死状态,当你进入濒死状态时若你的NP不小于120,则你消耗全部NP回复全部体力摸5张牌",
				"Fe天下布武":"天下布武",
				"Fe天下布武_info":"你使用杀不可被闪抵消并可额外结算1次效果,你使用牌无距离限制,你免疫翻面状态，当你受到伤害后对你造成伤害的目标失去20NP并进入混乱状态且失去下一个回合",
				"Fe魔王":"魔王",
				"Fe魔王_info":"你造成的伤害+x,你始终跳过弃牌和摸牌阶段,你无法回复体力,当你的手牌小于x时你将手牌补至x(x=你当前体力上限50%(向上取整))",
				"Fe战略":"战略",
				"Fe战略_info":"你可以无限装备武器牌和进攻马,每当你使用或弃置牌时，你指定1名不为你的玩家对其造成x点伤害（x为你使用或弃置的卡牌数量}",
				"Fe傻瓜杀法":"傻瓜杀法",
				"Fe傻瓜杀法_info":"你无法成为其他角色的卡牌目标,你无法被翻面,你造成的伤害50%改为真实伤害,你回复体力时额外回复X点体力(x=你损失的体力)",
				"Fe敦盛节拍":"敦盛节拍",
				"Fe敦盛节拍_info":"每当一名其他角色回合开始时,全场友方增加10NP;每当一名其他角色回复体力时,全体友方摸一张牌增加10NP,出牌阶段限一次，你视为使用了一张合理的特殊类卡牌",
				"Fe沙滩的第六天魔王":"沙滩的第六天魔王",
				"Fe沙滩的第六天魔王_info":"当你使用一张牌时，你可以进行1次判定，若结果不为黑桃则你回复1点体力并收回此牌，若结果为黑桃，你可以摸1张牌流失1点体力,你受到的伤害和体力流失+1",
				"Fe第六天魔王波旬夏盛":"第六天魔王波旬~夏盛~",
				"Fe第六天魔王波旬夏盛_info":"当一名敌方武将受到的伤害时,若你的NP不小于50,则你消耗50NP令目标额外受到2点神圣火焰伤害,每当有敌方角色进入濒死状态时，你可以令其进行1次判定，若结果为红色，其失去x点体力上限(X=你当前的手牌数)，若为黑色令其立即死亡",
				"Fe无辜的怪物":"无辜的怪物",
				"Fe无辜的怪物_info":"你的回合开始阶段若你的NP不小于40则你消耗40NP变回萨列里,在伪装状态下你免疫除真实伤害外的一切伤害且没有出牌阶段",
				"Fe恸哭外装":"恸哭外装",
				"Fe恸哭外装_info":"你的回合结束阶段若你的NP不小于50则你伪装为莫扎特,在自身状态下你的摸牌数+2,你受到的伤害+1并额外获得20NP",
				"Fe燎原之火":"燎原之火",
				"Fe燎原之火_info":"敌方全体受到的伤害+1,你造成的火焰伤害+1,当你受到火焰伤害时若你的NP不小于30则你将本次伤害改为摸一张牌回复一点体力",
				"Fe燎原之火1":"燎原之火",
				"Fe燎原之火1_info":"",
				"Fe燎原之火2":"燎原之火",
				"Fe燎原之火2_info":"",
				"Fe至高的神啊请赐予我怜悯":"至高的神啊，请赐予我怜悯",
				"Fe至高的神啊请赐予我怜悯_info":"你受到伤害后若你的NP不小于100则你消耗100NP对敌方全体造成3点真实伤害且全体友方流失1点体力",
				"Fe音乐神的加护":"音乐神的加护",
				"Fe音乐神的加护_info":"当一名友方角色回复体力或获得牌后你摸一张牌并弃置一张牌然后进行一次判定[♥其回复1点体力；♦︎其摸一张牌；♣你摸2张牌；♠其增加20NP];当一名敌方角色受到伤害或流失体力后摸一张牌并弃置一张牌然后进行一次判定[♥其受到1点伤害；♦︎你摸2张牌；♣你增加20NP；♠其减少20NP]",
				"Fe音乐神的加护2":"音乐神的加护",
				"Fe音乐神的加护2_info":"",
				"Fe为死神奏响的葬送曲":"为死神奏响的葬送曲",
				"Fe为死神奏响的葬送曲_info":"出牌阶段限一次,若你的NP不小于300则你消耗300NP令敌方全体翻面流失2点体力并获得技能'虚弱'",
				"Fe虚弱":"虚弱",
				"Fe虚弱_info":"你无法回复体力,你造成的伤害始终-1,你受到的伤害+1,你的回合开始时你受到2点真实伤害,当你的体力小于或等于2时你失去技能'虚弱'",
				"Fe小小的夜之曲":"小小的夜之曲",
				"Fe小小的夜之曲_info":"在回合外每当你需要使用或打出一张卡牌时，若牌堆顶的前两张中有可使用或打出的牌你立即获得之;每当你获得一张点数不大于你体力值的牌,你可以回复1点体力并增加10NP",
				"Fe艺术审美":"艺术审美",
				"Fe艺术审美_info":"友方全体造成的伤害+1,当友方角色的回合开始时其增加20NP,当你回复体力时若你的NP不小于30则你消耗30NP令全场友方回复体力至体力上限",
				"Fe翱翔天际宛如龙":"翱翔天际宛如龙",
				"Fe翱翔天际宛如龙_info":"当你受到伤害后若你的NP不小于50则你失去1点体力上限令伤害来源失去2点体力上限减少40NP,若你此时的体力上限等于小于2则你增加全场装备数量的体力上限",
				"Fe船中八策":"船中八策",
				"Fe船中八策_info":"每当你累计使用或打出8张牌后,你回合结束时你摸x张牌回复x点体力并令消耗当前全部NP令全体友方增加100NP(x=你当前所拥有的牌[包括装备牌,手牌,判定牌]),每当友方角色增加/流失体力上限时若你的NP不小于40则你可以视为使用一张任意基本锦囊牌",
				"Fe维新的英雄":"维新的英雄",
				"Fe维新的英雄_info":"你无法成为乐不思蜀,闪电,兵粮寸断的目标,你的手牌上限+e受到的伤害-e(e=你的初始体力上限-你当前的体力)",
				"Fe见恋不为,无爱也":"见恋不为,无爱也",
				"Fe见恋不为,无爱也_info":"当敌方角色回合开始时,若你的NP大于其NP且大于60,则你可以对其造成X点真实伤害并令其混乱(X=你当前的护甲)",
				"Fe迦摩之灰":"迦摩之灰",
				"Fe迦摩之灰_info":"你的回合开始时,你增加Y点护甲,额外摸Y张牌,并且你与出牌阶段可以额外打出2张杀(Y=你当前的体力上限/2[向下取整])",
				"Fe女神的恩惠":"女神的恩惠",
				"Fe女神的恩惠_info":"当你回复体力或摸牌后,若你的NP不小于100,则你消耗100NP使友方全体增加50NP回复3点体力",
				"Fe女神的神核":"女神的神核",
				"Fe女神的神核_info":"当你即将造成/受到伤害时,若你的NP大于其则本次伤害+2/-2,你的手牌上限=你的体力上限",
				"Fe无明三段突刺":"无明三段突刺",
				"Fe无明三段突刺_info":"当敌方角色受到伤害后,若你的NP不小于70,则你对随机敌方造成3次X点固定真实伤害,并令其下次受到的伤害+X(X=受伤目标当前的体力)",
				"Fe病弱":"病弱",
				"Fe病弱_info":"你的体力上限固定为3,你的手牌上限始终-1,你每使用或打出基本牌都会额外执行一次效果",
				"Fe缩地":"缩地",
				"Fe缩地_info":"你的防御距离+2,你免疫体力流失,翻面,横置等状态",
				"Fe极地":"极地",
				"Fe极地_info":"在出牌阶段若你的NP不小于40,则你使用杀造成的伤害+2,且使用杀造成伤害失去全部NP并摸一张牌,你每使用或打出一张闪都可以摸一张牌回复1点体力",
				"Fe不断":"不断",
				"Fe不断_info":"你始终跳过判定阶段,出牌阶段开始前增加自身20NP,你的回合结束时你摸X张牌流失2点体力增加X点体力上限(X=你当前的手牌)",
				"Fe无边":"无边",
				"Fe无边_info":"你的进攻距离+3,当你即将受到杀伤害时30%免疫本次伤害,每当你回复体力后若你的NP不小于50则你70%再次回复1点体力",
				"Fe绝剑·无穹三段":"绝剑·无穹三段",
				"Fe绝剑·无穹三段_info":"出牌阶段,若你的NP不小于200,则你可以令全场敌方武将受到K点伤害,并令其下回合摸牌-1,手牌上限-1,受到的伤害+1(K=你当前的体力)",
				"Fe鹰之瞳":"鹰之瞳",
				"Fe鹰之瞳_info":"每当你即将造成伤害前,若你的NP不小于20,则本次伤害随机附加1~3点真实伤害,你的进攻距离+5",
				"Fe心眼":"心眼",
				"Fe心眼_info":"每当你将受到伤害前有40%几率免疫本次伤害,你使用或打出的杀不可被闪抵消且会增加你1点护甲",
				"Fe投影魔术":"投影魔术",
				"Fe投影魔术_info":"你的回合开始时,你随即装备一张装备牌(若NP不小于70则额外装备一张),你的手牌上限+3,你装备区里的牌无数量限制",
				"Fe无限剑制":"无限剑制",
				"Fe无限剑制_info":"每当一名其他角色受到万箭齐发的伤害后,若你的NP不小于100,则你令全场敌方受到3次固定伤害为1的神圣伤害并降低其下次造成的伤害1点;出牌阶段,若你的NP不小于200则你消耗150NP对敌方全体造成2次数值固定为3的神圣伤害并降低其回复量2点,同时自身随机装备3张装备牌",
				"Fe防弹加工":"防弹加工",
				"Fe防弹加工_info":"每当你即将受到杀或万箭齐发的伤害时,若你的NP不小于20则你消耗10NP增加2点护甲并摸一张牌",
				"Fe嗤笑的铁心":"嗤笑的铁心",
				"Fe嗤笑的铁心_info":"你造成的伤害+2,你造成伤害后令受伤目标混乱1回合,弃牌阶段,若你的NP不小于30则你跳过弃牌阶段并使自身下次造成的伤害+1",
				"Fe狂剑魔术":"狂剑魔术",
				"Fe狂剑魔术_info":"你使用或打出的杀或万箭齐发50%额外执行一次效果且增加10NP,每当一名角色受到伤害后你随即装备一张武器牌,你可以无限装备武器牌",
				"Fe魔戮罪恶剑制":"魔戮罪恶剑制",
				"Fe魔戮罪恶剑制_info":"当你对一名敌方角色造成伤害后,若你的NP不小于200,则你消耗200NP令其受到X点真实伤害,并使自身下次造成的伤害+X(X=全场武器牌的数量)",
			},
		},'<span style="font-size:20px">Fate.Eternity</span>');
		lib.group.push('Saber');
		lib.translate.Saber='<img src='+lib.assetURL+"extension/扩展ol/Saber.png"+' width="30" height="30">';
		lib.group.push('Rider');
		lib.translate.Rider='<img src='+lib.assetURL+"extension/扩展ol/Rider.png"+' width="30" height="30">';
		lib.group.push('Ruler');
		lib.translate.Ruler='<img src='+lib.assetURL+"extension/扩展ol/Ruler.png"+' width="30" height="30">';
		lib.group.push('Shielder');
		lib.translate.Shielder='<img src='+lib.assetURL+"extension/扩展ol/Shielder.png"+' width="30" height="30">';
		lib.group.push('Lancer');
		lib.translate.Lancer='<img src='+lib.assetURL+"extension/扩展ol/Lancer.png"+' width="30" height="30">';
		lib.group.push('Caster');
		lib.translate.Caster='<img src='+lib.assetURL+"extension/扩展ol/Caster.png"+' width="30" height="30">';
		lib.group.push('Berserker');
		lib.translate.Berserker='<img src='+lib.assetURL+"extension/扩展ol/Berserker.png"+' width="30" height="30">';
		lib.group.push('Avenger');
		lib.translate.Avenger='<img src='+lib.assetURL+"extension/扩展ol/Avenger.png"+' width="30" height="30">';
		lib.group.push('Assassin');
		lib.translate.Assassin='<img src='+lib.assetURL+"extension/扩展ol/Assassin.png"+' width="30" height="30">';
		lib.group.push('Archer');
		lib.translate.Archer='<img src='+lib.assetURL+"extension/扩展ol/Archer.png"+' width="30" height="30">';
		lib.group.push('Foreigner');
		lib.translate.Foreigner='<img src='+lib.assetURL+"extension/扩展ol/Foreigner.png"+' width="30" height="30">';
		lib.group.push('AlterEgo');
		lib.translate.AlterEgo='<img src='+lib.assetURL+"extension/扩展ol/AlterEgo.png"+' width="30" height="30">';
		lib.group.push('MoonCancer');
		lib.translate.MoonCancer='<img src='+lib.assetURL+"extension/扩展ol/MoonCancer.png"+' width="30" height="30">';
		lib.group.push('Beast');
		lib.translate.Beast='<img src='+lib.assetURL+"extension/扩展ol/Beast.png"+' width="30" height="30">';
	};
	});
	if(lib.config['extension_扩展ol_mode_hide_wangzhezhizhan']==true) return ;
	game.addMode('wangzhezhizhan',{
		start:function(){
			'step 0'
			ui.handCards_dy=ui.create.system('手牌',null,true);
			lib.setPopped(ui.handCards_dy,function(){
				var uiintro=ui.create.dialog('hidden');
				var players=game.players.concat(game.dead);
				for(var i=0;i<players.length;i++){
					if(players[i]!=game.me&&players[i]!=game.boss){
						uiintro.add(get.translation(players[i]));
						var cards=players[i].getCards('h');
						if(cards.length){
							uiintro.addSmall(cards,true);
						}else{
							uiintro.add('（无）');
						};
					};
				};
				return uiintro;
			},220);
			ui.handCards_dy.style.display='none';
			if(lib.config.mode_config.wangzhezhizhan.drkz==true){
				lib.skill['_wangzhezhizhan_autoswap']={
					firstDo:true,
					trigger:{player:['playercontrol','chooseToUseBegin','chooseToRespondBegin','chooseToDiscardBegin','chooseToCompareBegin',
					'chooseButtonBegin','chooseCardBegin','chooseTargetBegin','chooseCardTargetBegin','chooseControlBegin',
					'chooseBoolBegin','choosePlayerCardBegin','discardPlayerCardBegin','gainPlayerCardBegin']},
					forced:true,
					priority:100,
					popup:false,
					filter:function(event,player){
						//if(lib.config.mode_config.wangzhezhizhan.drkz!=true) return false;
						if(event.autochoose&&event.autochoose()) return false;
						if(lib.filter.wuxieSwap(event)) return false;
						if(_status.auto) return false;
						return game.me!=game.boss&&player!=game.boss&&player!=game.me;
					},
					content:function(){
						//game.me.node.avatar.style['box-shadow']='';
						game.me.setNickname('');
						game.swapControl(player);
						//game.me.node.avatar.style['box-shadow']='rgba(0, 0, 0, 0.2) 0px 0px 0px 1px, rgba(75, 255, 0, 0.4) 0px 0px 5px, rgba(75, 255, 0, 0.4) 0px 0px 12px, rgba(75, 255, 0, 0.8) 0px 0px 15px';
						game.me.setNickname('控制中');
						game.delay();
					},
				};
			};
			if(lib.config.mode_config.wangzhezhizhan.zdgbcpms==true){
				lib.config.phonelayout=false;
				ui.css.phone.href='';
				ui.arena.classList.remove('phone');
			};
			_status.mode=get.config('mode');
			lib.translate.kzol_wzzz_fr=' ';
			lib.translate.kzol_wzzz_wz='王者';
			game.prepareArena(5);
			game.boss=game.players.randomGet();
			for(var i=0;i<game.players.length;i++){
				var pl=game.players[i];
				pl.getId();
				pl.identity='kzol_wzzz_fr';
				pl.side=true;
				pl.setIdentity(' ');
				pl.node.identity.dataset.color='zhong';
				if(game.boss==pl){
					pl.identity='kzol_wzzz_wz';
					pl.side=false;
					pl.setIdentity('王者');
					pl.node.identity.dataset.color='zhu';
				};
			};
			ui.arena.delete();
			ui.window.classList.remove('leftbar');
			ui.window.classList.remove('rightbar');
			var style=document.createElement('style');
			style.innerHTML='@keyframes wzzz_span {0%{transform:rotate(0deg);} 100%{transform:rotate(360deg);}}';
			style.innerHTML+='@keyframes wzzz_span1 {0%{transform:rotate(0deg);} 100%{transform:rotate(-360deg);}}';
			style.innerHTML+='@keyframes wzzz_show {0%{transform:scale(2) translate(-50px,-50px)} 100%{transform:scale(1) translate(0px,0px)}}';
			style.innerHTML+='@keyframes wzzz_show1 {0%{transform:scale(2) translate(50px,50px)} 100%{transform:scale(1) translate(0px,0px)}}';
			style.innerHTML+='@keyframes wzzz_show2 {0%{transform:scale(1.5)} 100%{transform:scale(1)}}';
			document.head.appendChild(style);
			lib.init.css(lib.assetURL+'layout/mode','boss');
			var first_show=lib.config.mode_config.wangzhezhizhan.first_show;
			var bosslist=game.kzol_createBossList('wzzz',first_show=='wzzz'?false:true);
			var bosslist1=game.kzol_createBossList('qqwz',first_show=='qqwz'?false:true);
			var bosslist2=game.kzol_createBossList('Fe',first_show=='Fe'?false:true);
			var style1={
				'font-size':'35px',
				'line-height':'40px',
				'font-family':"'STXinwei','xinwei'",
				'text-align':'center',
				'height':'40px',
				'width':'110px',
				'bottom':'20px',
				'borderRadius':'5px',
			};
			var clickFK=function(div){
				div.style.transition='opacity 0.5s';
				div.addEventListener(lib.config.touchscreen?'touchstart':'mousedown',function(){
					this.style.transform='scale(0.95)';
				});
				div.addEventListener(lib.config.touchscreen?'touchend':'mouseup',function(){
					this.style.transform='';
				});
				div.onmouseout=function(){
					this.style.transform='';
				};
			};
			var button_swith=ui.create.div('.menu','<span style="cursor:pointer;">切换</span>');
			for(var i in style1){
				button_swith.style[i]=style1[i];
			};
			button_swith.style.bottom='5px';
			button_swith.style.left='5px';
			button_swith.style.animation='fadelogIn .4s';
			button_swith.style['-webkit-animation']='fadelogIn .4s';
			ui.window.appendChild(button_swith);
			clickFK(button_swith);
			var choose1=ui.create.div('.menu','<span style="cursor:pointer;">挑战</span>');
			for(var i in style1){
				choose1.style[i]=style1[i];
			};
			choose1.style.left='calc(50% + 10px)';
			ui.window.appendChild(choose1);
			clickFK(choose1);
			var choose2=ui.create.div('.menu','<span style="cursor:pointer;">应战</span>');
			for(var i in style1){
				choose2.style[i]=style1[i];
			};
			choose2.style.left='calc(50% - 130px)';
			ui.window.appendChild(choose2);
			clickFK(choose2);
			button_swith.kzol_mode=first_show;
			button_swith.onclick=function(){
				var bool=false;
				if(this.kzol_mode=='wzzz'){
					this.kzol_mode='qqwz';
					bosslist.hide();
					button_swith.hide();
					choose1.hide();
					choose2.hide();
					game.kzol_playSwithAnimation();
					for(var i=0;i<bosslist1.childNodes.length;i++){
						var pl=bosslist1.childNodes[i];
						if(pl.classList.contains('highlight')){
							game.boss_name=pl.name;
							bool=true;
						};
					};
					if(bool==false) delete game.boss_name;
					setTimeout(function(){
						bosslist1.show();
						button_swith.show();
						choose1.show();
						choose2.show();
					},1600);
				}else if(this.kzol_mode=='qqwz'){
					this.kzol_mode='Fe';
					bosslist1.hide();
					button_swith.hide();
					choose1.hide();
					choose2.hide();
					game.kzol_playSwithAnimation('Fe');
					for(var i=0;i<bosslist2.childNodes.length;i++){
						var pl=bosslist2.childNodes[i];
						if(pl.classList.contains('highlight')){
							game.boss_name=pl.name;
							bool=true;
						};
					};
					if(bool==false) delete game.boss_name;
					setTimeout(function(){
						bosslist2.show();
						button_swith.show();
						choose1.show();
						choose2.show();
					},1600);
				}else{
					this.kzol_mode='wzzz';
					bosslist2.hide();
					button_swith.hide();
					choose1.hide();
					choose2.hide();
					game.kzol_playSwithAnimation('wzzz');
					for(var i=0;i<bosslist.childNodes.length;i++){
						var pl=bosslist.childNodes[i];
						if(pl.classList.contains('highlight')){
							game.boss_name=pl.name;
							bool=true;
						};
					};
					if(bool==false) delete game.boss_name;
					setTimeout(function(){
						bosslist.show();
						button_swith.show();
						choose1.show();
						choose2.show();
					},1600);
				};
			};
			choose1.onclick=function(){
				if(game.boss_name==undefined){
					game.say1('请先选择挑战的对象');
					return;
				};
				bosslist.delete();
				bosslist1.delete();
				bosslist2.delete();
				button_swith.delete();
				choose1.delete();
				choose2.delete();
				ui.window.appendChild(ui.arena);
				if(lib.config.show_history=='left'){
					ui.window.classList.add('leftbar');
					ui.window.classList.remove('rightbar');
				}else if(lib.config.show_history=='right'){
					ui.window.classList.remove('leftbar');
					ui.window.classList.add('rightbar');
				}else{
					ui.window.classList.remove('leftbar');
					ui.window.classList.remove('rightbar');
				};
				if(game.me==game.boss){
					game.me.identity='kzol_wzzz_fr';
					game.me.side=true;
					game.me.setIdentity(' ');
					game.me.node.identity.dataset.color='zhong';
					var list=[];
					for(var i=0;i<game.players.length;i++){
						if(game.players[i]!=game.me) list.push(game.players[i]);
					};
					game.boss=list.randomGet();
					game.boss.identity='kzol_wzzz_wz';
					game.boss.side=false;
					game.boss.setIdentity('王者');
					game.boss.node.identity.dataset.color='zhu';
				};
				game.resume();
			};
			choose2.onclick=function(){
				if(game.boss_name==undefined){
					game.say1('请先选择挑战的对象');
					return;
				};
				bosslist.delete();
				bosslist1.delete();
				bosslist2.delete();
				button_swith.delete();
				choose1.delete();
				choose2.delete();
				ui.window.appendChild(ui.arena);
				if(lib.config.show_history=='left'){
					ui.window.classList.add('leftbar');
					ui.window.classList.remove('rightbar');
				}else if(lib.config.show_history=='right'){
					ui.window.classList.remove('leftbar');
					ui.window.classList.add('rightbar');
				}else{
					ui.window.classList.remove('leftbar');
					ui.window.classList.remove('rightbar');
				};
				if(game.me!=game.boss){
					game.boss.identity='kzol_wzzz_fr';
					game.boss.side=true;
					game.boss.setIdentity(' ');
					game.boss.node.identity.dataset.color='zhong';
					game.boss=game.me;
					game.me.identity='kzol_wzzz_wz';
					game.me.side=false;
					game.me.setIdentity('王者');
					game.me.node.identity.dataset.color='zhu';
				};
				game.resume();
			};
			game.pause();
			'step 1'
			game.chooseCharacter();
			'step 2'
			event.trigger('gameStart');
			game.gameDraw();
			game.phaseLoop(game.boss);
		},
		game:{
			kzol_createBossList:function(name,bool){
				var bosslist=ui.create.div('#bosslist.hidden');
				bosslist.style.top='calc(50% - 130px)';
				lib.setScroll(bosslist);
				if(!lib.config.touchscreen&&lib.config.mousewheel){
					bosslist._scrollspeed=30;
					bosslist._scrollnum=10;
					bosslist.onmousewheel=ui.click.mousewheel;
				};
				ui.create.div(bosslist);
				event.current=null;
				var config_bool=false;
				var needToLoad=[];
				for(var j in lib.characterPack){
					for(var i in lib.characterPack[j]){
						var info=lib.characterPack[j][i];
						if(info[4]!=undefined&&info[4].contains(name)){
							if(lib.config.kzol_wzzz==undefined){
								lib.config.kzol_wzzz={};
								config_bool=true;
							};
							if(lib.config.kzol_wzzz[i]==undefined){
								lib.config.kzol_wzzz[i]={
									'wz':0,
									'fr':0,
								};
								config_bool=true;
							};
							needToLoad.push({
								name:i,
								info:info,
							});
						};
					};
				};
				var createChoice=function(choice){
					if(choice==undefined) return;
					var i=choice.name;
					var info=choice.info;
					var player=ui.create.player(bosslist,true);
					player.init(i);
					if(player.hp==0) player.node.hp.style.display='none';
					player.node.hp.classList.add('text');
					player.node.hp.dataset.condition='';
					player.node.hp.innerHTML=info[2];
					if(info[2]==Infinity) player.node.hp.innerHTML='∞';
					player.setIdentity(player.name);
					player.node.identity.dataset.color=info[5];
					player.classList.add('bossplayer');
					player.onclick=function(){
						if(this.parentNode!=undefined&&lib.config.mode_config.wangzhezhizhan.djzdjz==true){
							this.parentNode.scrollLeft=this.offsetLeft-(this.parentNode.offsetWidth-this.offsetWidth)/2;
						};
						game.boss_name=this.name;
						for(var i=0;i<bosslist.childNodes.length;i++){
							bosslist.childNodes[i].classList.remove('highlight');
						};
						this.classList.add('highlight');
					};
					var kzol_wzzz_zg=ui.create.div('.hp');
					kzol_wzzz_zg.style.width='calc(100%)';
					kzol_wzzz_zg.style.height='35px';
					kzol_wzzz_zg.style.left='0px';
					kzol_wzzz_zg.style.top='calc(100% - 32px)';
					kzol_wzzz_zg.style.display='';
					kzol_wzzz_zg.style['text-align']='center';
					kzol_wzzz_zg.style['font-size']='14px';
					kzol_wzzz_zg.style['font-family']="'STXinwei','xinwei'";
					kzol_wzzz_zg.style['background-image']='linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4))';
					kzol_wzzz_zg.style.borderRadius='5px';
					kzol_wzzz_zg.classList.add('text');
					kzol_wzzz_zg.innerHTML='应战胜利'+lib.config.kzol_wzzz[i].wz+'次'+'<br>挑战胜利'+lib.config.kzol_wzzz[i].fr+'次';
					player.node.avatar.appendChild(kzol_wzzz_zg);
					needToLoad.remove(choice);
				};
				createChoice(needToLoad[0]);
				var interval=setInterval(function(){
					var num=20;
					if(num>needToLoad.length) num=needToLoad.length;
					for(var a=0;a<num;a++){
						createChoice(needToLoad[0]);
						if(needToLoad.length==0){
							ui.create.div(bosslist);
							clearInterval(interval);
						};
					};
				},100);
				if(config_bool==true) game.saveConfig('kzol_wzzz',lib.config.kzol_wzzz);
				if(bosslist.childNodes[1]!=undefined){
					if(bool!=true) game.boss_name=bosslist.childNodes[1].name;
					var current=bosslist.childNodes[1];
					current.classList.add('highlight');
					ui.window.appendChild(bosslist);
					setTimeout(function(){
						var left=current.offsetLeft-(ui.window.offsetWidth-180)/2;
						if(bosslist.scrollLeft<left) bosslist.scrollLeft=left;
						if(bool!=true) bosslist.show();
					},200);
				}else{
					ui.window.appendChild(bosslist);
					setTimeout(function(){
						if(bool!=true) bosslist.show();
					},200);
				};
				return bosslist
			},
			kzol_playSwithAnimation:function(name){
				var arena=ui.create.div();
				arena.style.zIndex=998;
				arena.style.height='100%';
				arena.style.width='100%';
				arena.style.top='0px';
				arena.style.left='0px';
				arena.style.animation='fadeShow .3s';
				arena.style['-webkit-animation']='fadeShow .3s';
				ui.window.appendChild(arena);
				var round1=ui.create.div();
				round1.style.height='462px';
				round1.style.width='500px';
				round1.style.top='calc(50% - 231px)';
				round1.style.left='calc(50% - 250px)';
				round1.style.animation='wzzz_span1 8s linear infinite';
				round1.style['-webkit-animation']='wzzz_span1 8s linear infinite';
				round1.style.backgroundSize='100% 100%';
				round1.style.backgroundImage='url("'+lib.assetURL+'extension/扩展ol/水墨环.png"),'+
				'url("'+lib.assetURL+'extension/扩展ol/水墨环2.png"),'+
				'url("'+lib.assetURL+'extension/扩展ol/水墨环3.png")';
				if(name!='Fe') arena.appendChild(round1);
				if(name=='wzzz'){
					var title1=ui.create.div();
					title1.style.height='186px';
					title1.style.width='750px';
					title1.style.top='calc(50% - 93px)';
					title1.style.left='calc(50% - 335px)';
					title1.style.animation='wzzz_show2 .6s';
					title1.style['-webkit-animation']='wzzz_show2 .6s';
					title1.style.backgroundSize='100% 100%';
					title1.setBackgroundImage('extension/扩展ol/标题3.png');
					arena.appendChild(title1);
				}else if(name=='Fe'){
					var title1=ui.create.div();
					title1.style.height='248px';
					title1.style.width='556px';
					title1.style.top='calc(50% - 124px)';
					title1.style.left='calc(50% - 246px)';
					title1.style.animation='wzzz_show2 .6s';
					title1.style['-webkit-animation']='wzzz_show2 .6s';
					title1.style.backgroundSize='100% 100%';
					title1.setBackgroundImage('extension/扩展ol/fgo_logo.png');
					arena.appendChild(title1);
				}else{
					var title1=ui.create.div();
					title1.style.height='178px';
					title1.style.width='500px';
					title1.style.top='calc(50% - 188px)';
					title1.style.left='calc(50% - 375px)';
					title1.style.animation='wzzz_show .6s';
					title1.style['-webkit-animation']='wzzz_show .6s';
					title1.style.backgroundSize='100% 100%';
					title1.setBackgroundImage('extension/扩展ol/标题2.png');
					arena.appendChild(title1);
					var title2=ui.create.div();
					title2.style.height='178px';
					title2.style.width='500px';
					title2.style.top='calc(50% + 10px)';
					title2.style.left='calc(50% - 125px)';
					title2.style.animation='wzzz_show1 .6s';
					title2.style['-webkit-animation']='wzzz_show1 .6s';
					title2.style.backgroundSize='100% 100%';
					title2.setBackgroundImage('extension/扩展ol/标题1.png');
					arena.appendChild(title2);
				};
				setTimeout(function(){
					arena.delete();
				},1500);
			},
			chooseCharacter:function(){
				var next=game.createEvent('chooseCharacter',false);
				next.showConfig=true;
				next.setContent(function(){
					"step 0"
					for(var i=0;i<game.players.length;i++){
						var pl=game.players[i];
						if(pl!=game.me){
							if(pl==game.boss) pl.init(game.boss_name);
						};
					};
					var num=get.config('chooseCharacterNumber');
					event.list=[];
					for(var i in lib.character){
						if(lib.filter.characterDisabled(i)) continue;
						event.list.push(i);
					};
					if(lib.config.mode_config.wangzhezhizhan.tdyxj==true) num=num*4;
					var list=event.list.randomGets(num);
					var dialog=ui.create.dialog('选择角色','hidden',[list,'character']);
					dialog.setCaption('选择角色');
					if(game.me!=game.boss) game.me.chooseButton(dialog,true).set('onfree',true).selectButton=function(){
						if(lib.config.mode_config.wangzhezhizhan.tdyxj==true) return [1,4];
						return 1;
					};;
					if(lib.config.mode_config.wangzhezhizhan.change_choice==true){
						ui.create.cheat=function(){
							_status.createControl=ui.cheat2;
							ui.cheat=ui.create.control('更换',function(){
								if(ui.cheat2&&ui.cheat2.dialog==_status.event.dialog) return;
								var buttons=ui.create.div('.buttons');
								var node=_status.event.dialog.buttons[0].parentNode;
								list=event.list.randomGets(num);
								_status.event.dialog.buttons=ui.create.buttons(list,'character',buttons);
								_status.event.dialog.content.insertBefore(buttons,node);
								buttons.animate('start');
								node.remove();
								game.uncheck();
								game.check();
							});
							delete _status.createControl;
						};
						ui.create.cheat();
					};
					if(lib.config.mode_config.wangzhezhizhan.free_choose==true){
						event.dialogxx=ui.create.characterDialog('heightset');
						ui.create.cheat2=function(){
							ui.cheat2=ui.create.control('自由选将',function(){
								if(this.dialog==_status.event.dialog){
									this.dialog.close();
									_status.event.dialog=this.backup;
									this.backup.open();
									delete this.backup;
									game.uncheck();
									game.check();
								}
								else{
									this.backup=_status.event.dialog;
									_status.event.dialog.close();
									_status.event.dialog=_status.event.parent.dialogxx;
									this.dialog=_status.event.dialog;
									this.dialog.open();
									game.uncheck();
									game.check();
								}
							});
						};
						ui.create.cheat2();
					};
					"step 1"
					if(ui.cheat){
						ui.cheat.close();
						delete ui.cheat;
					};
					if(ui.cheat2){
						ui.cheat2.close();
						delete ui.cheat2;
					};
					if(game.me!=game.boss){
						var PL_character=result.buttons[0].link;
						game.me.init(PL_character);
						event.list.remove(PL_character);
					}else{
						game.me.init(game.boss_name);
					};
					if(game.me==game.boss){
						if(game.boss_name=='wang_diaochan'){
							var list_wdc=[];
							for(var i=0;i<event.list.length;i++){
								var c=lib.character[event.list[i]];
								if(c[0]!='female'){
									if(Math.random()<0.1) list_wdc.push(event.list[i]);
								}else{
									list_wdc.push(event.list[i]);
								};
							};
							event.list=list_wdc;
						};
						for(var i=0;i<game.players.length;i++){
							var pl=game.players[i];
							if(pl!=game.me){
								var character=event.list.randomGet();
								pl.init(character);
								event.list.remove(character);
							};
						};
					}else{
						if(result.buttons.length>=2){
							var list1=[];
							var pl1=game.me;
							var num=1;
							var func=function(){
								var bool=false;
								pl1=pl1.next;
								if(pl1!=game.boss){
									pl1.init(result.buttons[num].link);
									event.list.remove(PL_character);
									list1.push(pl1);
									bool=true;
								};
								if(pl1!=game.me&&(num+1)<result.buttons.length){
									if(bool==true) num++;
									func();
								};
							};
							func();
							for(var i=0;i<game.players.length;i++){
								var pl=game.players[i];
								if(pl!=game.me&&pl!=game.boss&&!list1.contains(pl)){
									var character=event.list.randomGet();
									pl.init(character);
									event.list.remove(character);
								};
							};
						}else{
							for(var i=0;i<game.players.length;i++){
								var pl=game.players[i];
								if(pl!=game.me&&pl!=game.boss){
									var character=event.list.randomGet();
									pl.init(character);
									event.list.remove(character);
								};
							};
						};
					};
					
					if(game.me!=game.boss&&lib.config.mode_config.wangzhezhizhan.drkz==true){
						ui.handCards_dy.style.display='';
					};
					setTimeout(function(){
						ui.arena.classList.remove('choose-character');
					},500);
				});
			},
		},
		element:{
			player:{
				dieAfter:function(source){
					if(game.me==game.boss){
						if(game.boss.isDead()) game.over(false);
						if(game.countPlayer(function(current){return current.identity=='kzol_wzzz_fr'})==0){
							game.over(true);
							if(lib.config.kzol_wzzz[game.boss.name]!=undefined){
								lib.config.kzol_wzzz[game.boss.name]['wz']++;
								game.saveConfig('kzol_wzzz',lib.config.kzol_wzzz);
							};
						};
					}else{
						if(game.boss.isDead()){
							game.over(true);
							if(lib.config.kzol_wzzz[game.boss.name]!=undefined){
								lib.config.kzol_wzzz[game.boss.name]['fr']++;
								game.saveConfig('kzol_wzzz',lib.config.kzol_wzzz);
							};
						};
						if(game.countPlayer(function(current){return current.identity=='kzol_wzzz_fr'})==0) game.over(false);
					};
					if(this.identity=='kzol_wzzz_fr'&&source) source.draw(3);
				},
			},
			content:{
				gameDraw:function(){
					"step 0"
					if(_status.brawl&&_status.brawl.noGameDraw){
						event.finish();
						return;
					}
					var end=player;
					var numx=num;
					do{
						if(typeof num=='function'){
							numx=num(player);
						}
						player.directgain(get.cards(numx));
						if(player.singleHp===true&&get.mode()!='guozhan'){
							player.doubleDraw();
						}
						player=player.next;
					}
					while(player!=end);
					event.changeCard=get.config('change_card');
					"step 1"
					if(event.changeCard!='disabled'&&!_status.auto){
						event.dialog=ui.create.dialog('是否使用手气卡？');
						ui.create.confirm('oc');
						event.custom.replace.confirm=function(bool){
							_status.event.bool=bool;
							game.resume();
						}
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.changeCard=='once'){
						event.changeCard='disabled';
					}
					else if(event.changeCard=='twice'){
						event.changeCard='once';
					}
					else if(event.changeCard=='disabled'){
						event.bool=false;
						return;
					}
					_status.imchoosing=true;
					event.switchToAuto=function(){
						_status.event.bool=false;
						game.resume();
					}
					game.pause();
					"step 3"
					_status.imchoosing=false;
					if(event.bool){
						if(game.changeCoin){
							game.changeCoin(-3);
						}
						var hs=game.me.getCards('h');
						game.addVideo('lose',game.me,[get.cardsInfo(hs),[],[]]);
						for(var i=0;i<hs.length;i++){
							hs[i].discard(false);
						}
						game.me.directgain(get.cards(hs.length));
						event.goto(2);
					}
					else{
						if(event.dialog) event.dialog.close();
						if(ui.confirm) ui.confirm.close();
						event.finish();
					}
				},
			},
		},
		ai:{
			get:{
				rawAttitude:function(from,to){
					if(from==undefined||to==undefined) return 0;
					if(from.identity==to.identity) return 5;
					return -5;
				},
			},
		},
		help:{
			'王者之战':'游戏人数：5<br><br>规则：<br>&nbsp&nbsp扮演BOSS的家选择一张【王者之战】系列的武将牌作为自己的角色.然后将若干张普通武将牌发给A、B、C、D四名玩家，A、B、C、D四名玩家从中选取一张作为自己的角色。游戏从BOSS玩家开始，其余规则不变。<br><br>获胜条件：<br>&nbsp&nbspA、B、C、D四名玩家全部阵亡（BOSS玩家）；角色阵亡（A、B、C、D四名玩家）<br><br>击杀奖励：<br>&nbsp&nbsp任意角色造成A、B、C、D中任意一名玩家阵亡时摸三张牌',
		},
	},{
		translate:'王者之战',
		extension:'扩展ol',
		config:{
			chooseCharacterNumber:{
				name:'候选武将数',
				init:4,
				item:{
					1:'1',
					2:'2',
					3:'3',
					4:'4',
					5:'5',
					6:'6',
					7:'7',
					8:'8',
					9:'9',
					10:'10',
				},
				frequent:true,
				restart:true,
			},
			first_show:{
				name:'首次加载显示界面',
				init:'wzzz',
				item:{
					'wzzz':'王者之战',
					'qqwz':'千秋万载',
					'Fe':'Fate.Eternity',
				},
				frequent:true,
				restart:true,
			},
			drkz:{
				name:'单人控制',
				init:false,
				frequent:true,
				restart:true,
			},
			tdyxj:{
				name:'替队友选择武将牌',
				init:false,
				frequent:true
			},
			djzdjz:{
				name:'点击选择BOSS自动居中',
				init:false,
			},
			free_choose:{
				name:'自由选将',
				init:true,
				//frequent:true,
				onclick:function(bool){
					game.saveConfig('free_choose',bool,'wangzhezhizhan');
				}
			},
			change_choice:{
				name:'开启换将卡',
				init:true,
				//frequent:true,
				onclick:function(bool){
					game.saveConfig('change_choice',bool,'wangzhezhizhan');
					if(!ui.cheat&&get.config('change_choice')) ui.create.cheat();
					else if(ui.cheat&&!get.config('change_choice')){
						ui.cheat.close();
						delete ui.cheat;
					}
				},
			},
			change_card:{
				name:'开启手气卡',
				init:'disabled',
				//frequent:true,
				item:{
					disabled:'禁用',
					once:'一次',
					twice:'两次',
					unlimited:'无限',
				},
			},
			zdgbcpms:{
				name:'自动关闭触屏布局',
				init:true,
				restart:true,
				//frequent:true,
			},
			kzol_weather:{
				name:'天气变化',
				init:false,
				restart:true,
				frequent:true,
			},
		},
	});
}